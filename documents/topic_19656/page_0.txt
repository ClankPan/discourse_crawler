ericswanson | 2023-04-27 18:04:03 UTC | #1

Please see:
- [release notes](https://github.com/dfinity/sdk/releases/tag/0.14.0)
- [migration guide](https://github.com/dfinity/sdk/blob/master/docs/migration/dfx-0.14.0-migration-guide.md) 

Highlights:
- updates default gateway to icp0.io
- new optimizer available
- asset canister supports v2 certification

-------------------------

benji | 2023-04-27 19:37:33 UTC | #2

Pinning this thread for 2 days since there has been multiple reports regarding ic0.app/icp0.io domains.

-------------------------

benji | 2023-04-27 19:38:24 UTC | #3



-------------------------

Severin | 2023-04-28 07:38:53 UTC | #4

Here's a list of forum posts that are likely relevant to a lot of people right now, especially because of the change from `ic0.app` to `icp0.io`:

https://forum.dfinity.org/t/react-front-end-not-connecting-to-motoko-backend-after-a-successful-deployement-on-icp-network/19644
https://forum.dfinity.org/t/404-not-found-error-when-trying-to-access-the-url-of-my-frontend-canister-after-successfully-deploying/19635
https://forum.dfinity.org/t/follow-up-on-item-new-canisters-will-only-be-accessible-through-the-icp0-io-domain-existing-canisters-will-be-accessible-both-through-ic0-app-and-icp0-io/18889/40

-------------------------

skilesare | 2023-04-28 12:41:37 UTC | #5

Where can we find more info on the following:

```
The options are "cycles", "size", "O4", "O3", "O2", "O1", "O0", "Oz", and "Os". The options starting with "O" are the optimization levels that wasm-opt provides. The "cycles" and "size" options are recommended defaults for optimizing for cycle usage and binary size respectively.
```
What should we be using in production?

-------------------------

kentosugama | 2023-04-28 17:44:53 UTC | #6

Hey @skilesare 

We recommend "cycles" as the default option. You can find specific numbers here:
https://github.com/dfinity/canister-profiling/pull/50

If you are very constrained by binary size, "size" let's you shave off another percent or two but you will take a performance hit relative to "cycles". Note that "cycles" is the same as  "O3" and "size" is the same as "Oz".

If you want to get into the weeds, this is where the optimizations come from: https://github.com/WebAssembly/binaryen

-------------------------

lastmjs | 2023-04-29 18:28:36 UTC | #7

It would be really nice if dfx also automatically gzipped the binary after optimization. Optimization will not always be enough, and if it isn't right now there seems to be no way to really gzip the binary before installation but after it's been optimized with the built-in wasm-opt.

A post_build script would also potentially solve the problem.

Discussion here: https://github.com/dfinity/sdk/discussions/3110

-------------------------

lastmjs | 2023-04-29 18:29:03 UTC | #8

Is the wasm-opt functionality available from the dfx executable somehow? For example, can I do something like `dfx wasm-opt [path-to-binary]`?

-------------------------

kentosugama | 2023-04-29 23:36:39 UTC | #9

No but you can find the CLI here: https://github.com/dfinity/ic-wasm

The optimizer is under the `shrink` command

-------------------------

lastmjs | 2023-04-30 03:10:05 UTC | #10

My use case is Azle and Kybra, CDKs. It would be nice to not have to install ic-wasm for our users, it adds to initial install times. dfx is a prerequisite, so it would be great to have that functionality through the dfx executable.

-------------------------

skilesare | 2023-05-08 21:59:28 UTC | #11

I'm on a Mac M1.  I cannot run dfx nns install:

```
Downloading /Users/afat/.cache/dfinity/versions/0.14.0/wasms/ic-icrc1-index.wasm
  from .gz: https://download.dfinity.systems/ic/21aa2ba29bf97115aa3cdedecf0655d0cfa64bf1/canisters/ic-icrc1-index.wasm.gz
ic-nns-init --pass-specified-id --url http://127.0.0.1:57527/ --wasm-dir /Users/afat/.cache/dfinity/versions/0.14.0/wasms --initialize-ledger-with-test-accounts 5b315d2f6702cb3a27d826161797d7b2c2e131cd312aece51d4d5574d1247087 --initialize-ledger-with-test-accounts 2b8fbde99de881f695f279d2a892b1137bfe81a42d7694e064b1be58701e1138 --sns-subnet utvl3-iivpa-pw4l7-hb4ex-2xwrd-hj735-emloh-2drcw-ne3ky-ty42r-7qe
dyld[25016]: Library not loaded: /usr/local/opt/openssl@3/lib/libssl.3.dylib
  Referenced from: <137E40DB-D0B9-3FFA-B736-2AF42D0C0F72> /Users/afat/.cache/dfinity/versions/0.14.0/ic-nns-init
  Reason: tried: '/usr/local/opt/openssl@3/lib/libssl.3.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/usr/local/opt/openssl@3/lib/libssl.3.dylib' (no such file), '/usr/local/opt/openssl@3/lib/libssl.3.dylib' (no such file), '/usr/local/lib/libssl.3.dylib' (no such file), '/usr/lib/libssl.3.dylib' (no such file, not in dyld cache)
Error: Failed to install NNS components.
Caused by: Failed to install NNS components.
  Failed to install NNS components.
    ic-nns-init call failed
```

Our team is reporting this and it seems to align with people using Macs.

-------------------------

NathanosDev | 2023-05-08 22:25:25 UTC | #12

I get the same issue on Ubuntu. You need to install openssl

-------------------------

skilesare | 2023-05-08 23:04:20 UTC | #13

I have v3.1.0 The directory it is looking for doesn't exist.  /opt/ isn't there.

-------------------------

levi | 2023-05-08 23:15:56 UTC | #14

https://github.com/dfinity/sdk/issues/2848

-------------------------

skilesare | 2023-05-25 15:45:53 UTC | #15

This is still a major issue for anyone on mac...we can't upgrade our projects test environments until we can get dfx nns install working.

I tried following the workaround that levi posted but ended up with:

```
ic-nns-init --pass-specified-id --url http://127.0.0.1:50489/ --wasm-dir /Users/afat/.cache/dfinity/versions/0.14.0/wasms --initialize-ledger-with-test-accounts 5b315d2f6702cb3a27d826161797d7b2c2e131cd312aece51d4d5574d1247087 --initialize-ledger-with-test-accounts 2b8fbde99de881f695f279d2a892b1137bfe81a42d7694e064b1be58701e1138 --sns-subnet w2hnf-4j6rg-opjqo-r7kgt-h7uhj-wgwsw-qizku-cc4xy-u55qw-xjgzs-cqe
dyld[15816]: Library not loaded: /usr/local/opt/openssl@3/lib/libssl.3.dylib
  Referenced from: <137E40DB-D0B9-3FFA-B736-2AF42D0C0F72> /Users/afat/.cache/dfinity/versions/0.14.0/ic-nns-init
  Reason: tried: '/usr/local/opt/openssl@3/lib/libssl.3.dylib' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')), '/System/Volumes/Preboot/Cryptexes/OS/usr/local/opt/openssl@3/lib/libssl.3.dylib' (no such file), '/usr/local/opt/openssl@3/lib/libssl.3.dylib' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')), '/usr/local/lib/libssl.3.dylib' (no such file), '/usr/lib/libssl.3.dylib' (no such file, not in dyld cache)
Error: Failed to install NNS components.
Caused by: Failed to install NNS components.
  Failed to install NNS components.
    ic-nns-init call failed
```

@ericswanson

-------------------------

ericswanson | 2023-05-26 06:29:36 UTC | #16

[quote="skilesare, post:15, topic:19656"]
`openssl@3`
[/quote]

dfx 0.14.1 should resolve these openssl3 issues, by static linking to openssl.  I expect to see dfx 0.14.1-beta.1 created in the next few days.

-------------------------

mnl | 2023-05-26 12:44:19 UTC | #17

could you give it a spin?
> dfx 0.14.1-beta.1 is now available for manual installation and testing.
>  ```
>  DFX_VERSION=0.14.1-beta.1 sh -ci "$(curl -fsSL  https://internetcomputer.org/install.sh)"
>  ```
> Release notes: https://github.com/dfinity/sdk/releases/tag/0.14.1-beta.1

-------------------------

skilesare | 2023-05-26 12:51:38 UTC | #18

[quote="mnl, post:17, topic:19656"]
`DFX_VERSION=0.14.1-beta.1 sh -ci "$(curl -fsSL  https://internetcomputer.org/install.sh)"`
[/quote]

It installed for me! Thanks.

-------------------------

skilesare | 2023-05-26 12:55:09 UTC | #19

This looks sexy:

### fix: motoko canisters can import other canisters with service constructor

After specific canister builder output wasm and candid file, `dfx` will do some post processing on the candid file.

The complete IDL will be copied into `.dfx` folder with name `constructor.did`.
It will be used for type checking during canister installation.

Then it is separated into two parts: `service.did` and `init_args.txt`, corresponding to canister metadata `candid:service` and `candid:args`.

`service.did` will be imported during dependent canisters building. And it will also be used by the Motoko LSP to provide IDE support.

What does this look like in practice? @claudio

-------------------------

