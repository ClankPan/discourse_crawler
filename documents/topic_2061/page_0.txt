blacktyger | 2021-02-28 13:49:14 UTC | #1

Hey, Iâ€™m new here (and newbie as programmer overall), so far Python and a little bit of front-end like css/js are my only languages. I did read most of topics here, but still feel a little bit lost, sorry if some of my questions are obvious, or answered before but I really did try.

Ok taking in to consideration I have zero knowledge about Rust or Motoko - but I'm more then happy to master it - this are my questions:


* Is Rust for whole IC programming consider as 'back-end' language? I saw people saying that you can do most things also in Motoko, but what's the goal - to use them in exchange, or those languages will complement? In other words, it's better jump to Motoko straight away, or get familiar with Rust first?

* There are tools to write Rust code in Python language - do you think it's something useful, or a good direction for future Dfinity python developers tools? Is there any official statement about python<->dfninity integrations or something?

Let's assume I want create a webapp that gathers cryptocurrency data from outside APIs, and save/store it on IC with simple front end charts and stats. I did read topic about deterministic canister state and why it's not straightforward, yet until IC have no data inside ecosystem, we have to interact somehow with outside.

**OUTSIDE API ENDPOINT <-----> LOCAL IC APP <-----> ONLINE FRONT-END** 

* How to call outside API end points
* How and where push that data to save it on IC network
* How serve it in form of charts and tables

* What tasks could be done in Python and just passed to IC infrastructure? Can I do all back-end in classic way and just feed IC that is locally on same server?

I know that some workarounds may look stupid and I should ask myself why I'm doing this in the first place, so let's treat it like proof of concept. Like this telegram handle someone in here created - I'm about to start from that code to crack the system ;). I believe it will be easier for me to learn new stuff based on concepts I already know, and step by step transfer it to IC ecosystem.

Even links to github, documentation will help, I can manage to learn on my own, just need some guidance where to start and what to expect :) 

Thanks, and take care!

-------------------------

