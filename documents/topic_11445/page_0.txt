Luis | 2022-03-11 14:10:01 UTC | #1

Dear IC Community,

we are happy to announce [a new replica version](https://gitlab.com/dfinity-lab/public/ic/-/commits/rc--2022-03-09_18-31) that will get proposed to be elected within the next 72 hours.
The release notes are as follows:

```
* Consensus: Canister Pool Rework
* Consensus: Support --subnet-features flags in ic-starter
* Consensus: handle ecdsa node membership change
* Crypto: CRP 1320: Add Threshold ECDSA interfaces for verifying signature shares and combined signatures
* Crypto: Implement iDKG verify_opening and verify_dealing_private for IDKM+CSP
* Crypto: Optimize how interpolation is performed in Threshold ECDSA
* Crypto: Public verification of Threshold ECDSA dealings (CSP/IDKM)
* Crypto: Split out the parts of group.rs which have external dependencies
* Crypto: Upgrade miracl_core_bls12381 to 4.1.2
* Execution: Add BitcoinState to the ReplicatedState
* Execution: Add Canister HTTP response type
* Execution: Add a --subnet-type command line argument to ic-starter
* Execution: Add internal bitcoin types
* Execution: Create public bitcoin types crate
* Execution: Enable sandboxing on MacOS
* Execution: Ensure that PageMaps of the tip state are based on read-only files
* Execution: Implement bitcoin payload builder
* Execution: Make execution owners of the BitcoinPayloadBuilder
* Execution: Populate ECDSA subnets and bitcoin testnet subnets in NetworkTopology
* Execution: Rate limit install_code messages based on instructions
* Execution: Remove dependency of ic-embedders on regex
* Execution: Rename raw_tx to transaction in SendTransactionRequest
* Execution: Support MacOS in the mmap-based page allocator
* Execution: Update system tests to use u128 cycles
* Execution: Use NetworkTopology in resolve_destination
* Execution: Use single entry point for sending requests to the Bitcoin Adapter
* Execution: Use the same build profile for the sandbox
* Message Routing: handle Wasm file serialization more efficiently
* Message Routing: lint: add a negative dependency checker
* Message Routing: reduce canister sizes
* Message Routing: remove canisters that are not in routing table
* Networking: Add adapters config to the replica config; add function that constructs the Bitcoin client based on the uds path.
* Networking: Add metrics for the flow workers
* Networking: Add separate btc adapter service grpc crate
* Networking: Add separate http adapter service grpc crate
* Networking: Add the orchestrator and the WG as negative deps for the replica
* Networking: High memory update nightly.
* Networking: Move fetch_gossip_config into the lib module. Rename P2PEventHandlerImpl into AsyncTransportEventHandlerImpl
* Networking: Simplify nightly performance test.
* Networking: Update the json5 crate and remove it where not needed
* Networking: Use seconds suffer for a prometheus metric
* Node: Don't need wg subnet
* Node: Fix ansible dependency + migrate to use pipenv instead of directly running Python
* Node: Fixed get_hostname occurrences missed by CI
```

-------------------------

Luis | 2022-03-15 14:42:03 UTC | #2

[The proposal for electing the new replica version](https://dashboard.internetcomputer.org/proposal/49653) is out since yesterday and should be adopted soon.

-------------------------

Luis | 2022-03-21 11:06:56 UTC | #3

The rollout was completed successfully [by updating the NSS subnet](https://dashboard.internetcomputer.org/proposal/50693). This release introduced more optimisation regarding the sandboxing which allowed us to run the feature on all subnets. 
[The next release was proposed last Friday.](https://forum.dfinity.org/t/release-notes-for-new-replica-version-b502c/11578) The rollout starts today.

-------------------------

