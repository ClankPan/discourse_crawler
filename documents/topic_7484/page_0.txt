webcoderz | 2021-09-22 21:50:14 UTC | #1

Serving a csv of varying size is resulting in inconsistent results. For small sets (10 rows) it serves the file(s) fine, however for anything larger it results in a http 500 error.

-------------------------

skilesare | 2021-09-23 02:53:26 UTC | #2

We will probably need more than that to help you.  Maybe it is a problem with the HTTP methods, but also maybe you're having to do a big search for those 10 records and blowing out the cycle limit?  Can you share some code?

-------------------------

webcoderz | 2021-09-23 15:52:14 UTC | #3

https://github.com/krpeacock/auth-client-demo -< ported this to react and am using d3.js to handle the csv, was able to deploy on local replica with large csv and everything worked fine as well. 

  
    async function load_data(filepath){  
      return Promise.all([d3.csv(filepath)])
      .then(async (data) => {
          return data[0];
      });
    }
   

would be the code that was handling the csv

-------------------------

kpeacock | 2021-09-23 15:57:27 UTC | #4

I forget whether Promise.all preserves the order of the arguments, or if latency could break things.

Maybe you could `fetch` the file first, and then load it into d3?

-------------------------

webcoderz | 2021-09-23 16:12:50 UTC | #5

I think it preserves the order, however, its not even able to access the csv , on the 10 line csv you can visit <canister_id>.ic0.app/csvfile.csv and it will download however with the larger sized csvs when visiting, the service worker will attempt to serve but then it fails with the 500 after attempting to fetch

-------------------------

kpeacock | 2021-09-23 16:25:12 UTC | #6

Try skipping the serviceworker and fetching from `raw.ic0.app`

-------------------------

webcoderz | 2021-09-23 16:21:07 UTC | #7

switching. to.raw.ic0.app works thanks!

-------------------------

