Persu | 2022-08-19 10:13:43 UTC | #1

I have copied the phonebook code from the motoko playground. The code is like,


```
import Map "mo:base/HashMap";
import Text "mo:base/Text";

actor {

  type Name = Text;
  type Phone = Text;

  type Entry = {
    desc: Text;
    phone: Text;
  };

  let phonebook = Map.HashMap<Name, Entry>(0, Text.equal, Text.hash);

  public func insert(name : Name, entry : Entry): async Text {
    phonebook.put(name, entry);
    return "Contact added successfull";
  };

  public query func lookup(name : Name) : async ?Entry {
    phonebook.get(name)
  };
};
```

How can I call the function insert, which have the arguments Name and Entry, where entry is defined as 
```
type Entry = {
    desc: Text;
    phone: Text;
  };
```

-------------------------

Severin | 2022-08-19 11:20:42 UTC | #2

I recommend you look at the [Candid reference](https://internetcomputer.org/docs/current/references/candid-ref) and maybe the [Candid intro](https://internetcomputer.org/docs/current/developer-docs/build/candid/candid-intro).

In your case, the function call would look like this:
``` bash
‚ùØ dfx canister call hello_backend insert '("name text", record {desc = "desc"; phone = "phone"})'
("Contact added successfull")
```

-------------------------

Persu | 2022-08-19 12:08:39 UTC | #3

Thanks for the solution Severin.
Can you also show me how can I call that function using js? (from my backend_js file, index.js)

```
const name = document.getElementById("name").value.toString();

  const desc = document.getElementById("desc").value.toString();

  const phone_number = document.getElementById("phone_number").value.toString();


  // Interact with actor, calling the insert method
  const result = await proj3_backend.insert(name, desc, phone_number);
```

I have the called function like the above, but the interface got stuck whenever I call the function from the frontend, with no activity in Network part....

-------------------------

Severin | 2022-08-19 12:55:03 UTC | #4

I'm no good at js, so don't take my word as gospel.

```
await proj3_backend.insert(name, desc, phone_number);
```
does not match the signature
```
public func insert(name : Name, entry : Entry)
```
The signature expects two arguments, one of which is an object with two elements, your function call tries to call a function with three arguments.

Using [this example](https://github.com/dfinity/examples/blob/master/rust/exchange_rate/src/frontend/src/components/Chart.svelte#L47-L51), I would guess that something like this should work:

```
let my_entry = {
    desc: "my text",
    phone: "my phone"
};
let result = await proj3_backend.insert("my_name", my_entry);
```

-------------------------

Persu | 2022-08-20 05:43:07 UTC | #5

Thank you Severin. That totally works for me. Thanks a lot.

-------------------------

