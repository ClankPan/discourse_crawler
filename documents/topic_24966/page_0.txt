dfisher | 2023-11-25 02:17:54 UTC | #1

Hi II team,

When I saw Dom’s tweet (posted below) about verifiable credentials, I got excited about the future of compliant wallets. Do you mind posting an update on where we stand? 

In my opinion, crypto needs wallets that are compliant with KYC / AML built in. In no world will we have crypto used in the real world for real transactions unless KYC / AML has been attested to by trusted and authorized parties. 

For crypto to succeed, it needs to be regulated, otherwise the government will shut it down. The recent Binance news with the hefty fine is one step towards legitimizing crypto (note the government didn’t shut down Binance). 

To my knowledge, only Helix which is launching soon is the only KYC / AML’d crypto wallet in ICP. What are we doing to help make this a reality? Will you dog food this with the foundation?


https://x.com/dominic_w/status/1727286480173945020?s=20

-------------------------

Ajki | 2023-11-25 08:37:03 UTC | #2

![image|453x499](upload://yYsVY1w9I1G5JUrqMeGa0pRVRD8.png)

-------------------------

dfisher | 2023-12-13 13:59:37 UTC | #3

Does someone mind tagging the relevant people from the II team? Clearly stuff is happening but nothing is being communicated… @dostro maybe you can answer?

https://dashboard.internetcomputer.org/proposal/126392

-------------------------

aned-dfinity1 | 2023-12-13 14:31:12 UTC | #4

Hi, yes indeed, the Verifiable Credentials feature has finally been merged and a proposal is out, https://nns.ic0.app/proposal/?u=qoctq-giaaa-aaaaa-aaaea-cai&proposal=126392, awaiting votes.

It is an MVP but we're doing a lot of work on the background to document it, market it, position it and promote it, so please stay tuned :)

-------------------------

lastmjs | 2023-12-13 19:25:33 UTC | #5

This is very interesting, I wonder how similar this will be to Gitcoin Passport and Coinbase Verifications.

What is this going to look like? Which verifiers and credentials will be supported? Will we also have sybil resistance scores/mechanisms available?

Ideally we would have kyc/aml/sanctions compliance capabilities combined with sybil resistance to prove one person one account.

-------------------------

aned-dfinity1 | 2023-12-14 13:29:58 UTC | #6

Thanks, we are very excited about its potential :slight_smile: 

II/VC is an interactive protocol (for now at least), which gives it some unique capabilities for cases where credentials represent revocable membership. It is general purpose protocol though, which was designed to be privacy preserving and so identity verification is a very typical use case for II/VC.

-------------------------

w3tester | 2024-01-11 11:19:50 UTC | #7

Very interesting to see verifiable credential related work in ICP forum. Would love to see the documentation and design details.

At [zCloak Network](https://zcloak.network), we have been working on ZKP-enabled W3C DID and VC for years. These are the products we have shipped: [Legit ID](https://legit3.id) lets you have reusable and privacy-preserving KYC credential. And [zkID Card](https://card.zkid.app) platform is a place for you to customize, issue, receive and verify credentials. 

We are in the process to see how we can integrate our DID protocol with II. Would love to chat more with you guys.

-------------------------

bender42 | 2024-01-15 09:10:37 UTC | #8

@dfisher 
Which Helix wallet with KYC/AML capabilities are you referring to?
Our wallet helix id has KYC/AML build in and we are heavily using verifiable credentials.

As part of our stack this identity part is a cornerstone of Jobgrader as well that we are integrating Bitfinity in the first place.
We can add ICP as well. Happy to discuss.

-------------------------

hokosugi | 2024-02-11 04:27:14 UTC | #9

In [Dom's post](https://x.com/dominic_w/status/1756311074033336357?s=20) Internet Identity seems to be integrating W3C. Other than W3C there are SD-JWT VC and mdoc/mDL for VC/VP format. what is the reason for choosing W3C? Has the latter been considered? it looks like W3C will validate credentialing with ZKP, but the OID4VCI model seems practical and easy to use, but those with the OID4VCI model, which allows SD-JWT, seem to be backward looking to W3C. I referred to [this article](https://darutk.medium.com/oid4vci-demo-87a232cfcc2a). I ask this question because I am not a specialist myself, but I hope that a practical usable environment for VC/VP will come soon.

-------------------------

bender42 | 2024-02-11 11:21:49 UTC | #10

@hokosugi Your questions are important to focus on global decision making regarding future standards like W3C, IEEE and eIDAS2. Nevertheless a lot of the technology is not an A or B decision but more an interaction in a reasonable way. You can combine mDL with the W3C definition of VC/VPs. I am not really getting your point how you classify W3C. It is not a technology as such, but more a standardizing body that in its own is a moving target based on a steering group within the DIF.
The VC/VP interaction is more of a game to enable universal resolvers with full interoperability and add an issuer repository for different schema and domains so that the identity world has a clear separation of those issuers that you can trust and those that just claim to be a trustful source but act as a garbage in - garbage out container.
We are within a grant by the ICP foundation to bring trustful verified workers into the domain of AI data training worldwide. The project is called Jobgrader (https://jobgrader.app) and we believe that it fits great into the idea of II and the interaction of Web2 and Web3 that you are referring to as well.
Happy to discuss further.
https://gitlab.com/jobgrader/jobgrader-app

-------------------------

hokosugi | 2024-02-12 22:52:05 UTC | #11

In this context, W3C refers to W3C VC; it seems that SD-JWT has not yet been adapted by W3C, and it is said that other formats will spread first. It is also said that the W3C VC document may not be so advantageous in such a situation because many other chains have also started up and are in disarray.

-------------------------

bender42 | 2024-02-22 15:55:05 UTC | #12

@hokosugi 
Have a look at https://www.w3.org/TR/vc-data-model-2.0/
and the DIF foundation https://identity.foundation/

-------------------------

lukapercic | 2024-02-23 00:33:53 UTC | #13

https://twitter.com/dominic_w/status/1756677136205672881

While credentials are cool, they are just a data structure in the end. Countless chains implement them but achieve no adoption. The issue with credentials is that you then need to convince the issuer to join your specific chain and implementation and later hope others will follow. They also offer no Sybil protection once/if more issuers offer independent attestations.
Instead of that, chains should think about how to onboard existing global PKI, and achieve instant adoption that way. Is it harder and more work? For sure, but we at [port.link](https://port.link/) can help.

Trust chain can be validated on ICP, and also passport signatures. We can also help design and write threshold chip authentication algorithm (this probably goes together with vetKeys), so all documents can be supported without off-chain oracles.

The question is who can we talk with to make this happen on ICP?

-------------------------

kairos | 2024-02-25 03:21:11 UTC | #14

Our team has chatted with your CMO in the past and are very impressed with your vision.  We, personally, are very excited to see what you guys bring to ICP on this front.  Will be in touch soon to discuss some things.

-------------------------

bender42 | 2024-03-07 10:35:28 UTC | #15

Hi @lukapercic 
Why do you think it is the one or the other?
The beauty of credentials is, that it is not tight to a single infrastructure or chain. 
Have a look at the technology around BBS+ for selective disclosure and the underlying encryption pattern.
Using a global centralized PKI that holds all certificates and onboard this to a chain seems a bit random to me, can you share code or a workflow diagram? 
Just to make a point, if you enable an interaction with every passport in an easy manner would be a great way and we would directly integrate it into our solution.

-------------------------

lukapercic | 2024-03-08 23:42:23 UTC | #17

I don’t see it as one or another, I see Verifiable Credentials as an ok data structure for both ideas.

I would say that I see a minimal use for identity that doesn’t offer Sybil protection. For instance, wallet addresses don’t need to be complex IDs themselves to fulfill their function, the same I believe is true with most anonymous identities that don’t offer Sybil, including anon chats and social network identities (that are not verified to be one per human).

BBS is very cool, the issue is how you get the issuer to adopt it. Putting middlemen in between document issuers and attestations is a problematic solution because that middleman then becomes susceptible to accept fake documents. They can’t fully authenticate + they (and their key-wielding personnel) can be bribed themselves.

ICAO standard isn’t really what I would call centralized- each country issuer might be, but certificates are then published on their sites + accumulated on ICAO directory + certain countries publish everybody’s certificates too.

I can share a [code for the server solution](https://github.com/ZeroPass/port-py-server), full on on-chain solution doesn’t exist yet (and this is what I am proposing to make on ICP).

Not many diagrams yet, but if you ask more specifically i can point you to it.

-------------------------

singularity | 2024-06-29 07:39:25 UTC | #18

https://x.com/dominic_w/status/1756677136205672881

Will there be toolkits for integrating to II, verifiable credential issuance, and relying party implementation in Motoko and other languages?

-------------------------

lmuntaner | 2024-07-01 09:47:27 UTC | #19

Yes!

We are working on a full SDK to support verifiable credentials in ICP.

You can find it in the public repo: https://github.com/dfinity/verifiable-credentials-sdk

Currently, we are working on Rust libraries because we expect Motoko to support them in the upcoming future.

-------------------------

rbole | 2024-07-01 10:33:19 UTC | #20

Yes, Motoko libraries would be very helpful.

-------------------------

lmuntaner | 2024-07-01 15:38:17 UTC | #21

There aren't Motoko libraries at the moment.

But we are working on a way to support Motoko canisters.

-------------------------

singularity | 2024-07-11 09:29:04 UTC | #22

Hello, is it possible to integrate a traditional mobile app with a credential issuance canister? How can it be done? I would like to use this information to advice a financial institution that is trying to use ICP for this.

-------------------------

lmuntaner | 2024-07-11 11:51:23 UTC | #23

Hi!

It is possible for a mobile app to integrate with issuer in the IC, but not directly.

The app should use a webpage as a proxy to get the credential and then redirect to the mobile app.

The webpage could or could not be hosted in IC. If it's not hosted the support is not yet as good as would like to, but still doable. We have a demo using web2 project in [a branch in the Internet Identity repository](https://github.com/dfinity/internet-identity/tree/lm-web2-auth/demos/web2-auth).

If it's a webpage hosted in a canister in IC, then it can use the [Verifiable Credentials SDK](https://github.com/dfinity/verifiable-credentials-sdk).

Let me know if this is helpful or you have any more questions.

-------------------------

singularity | 2024-07-11 13:28:16 UTC | #24

Which one of the following scenarios does your description apply to?

1. A mobile app issuing a verifiable credential to a user logged in with ii on a traditional mobile app 
2. A relying party connecting to an issuer canister to verify a verifiable credential that a user claimed to have (like is done by oc.app to check if a user has a mentioned credential)

I am interested in the first scenario for issuing a verifiable credential to a user logged in with ii on a traditional mobile app.

-------------------------

lmuntaner | 2024-07-11 14:07:48 UTC | #25

I meant number 2.

For scenario number 1, only a canister can issue credentials at the moment.

Could you describe better your use case? The feature has just started and we'd like to collect as many use cases as possible to prioritize what the work on next?

Thanks!

-------------------------

rbole | 2024-07-11 14:27:01 UTC | #26

Hey, maybe you can also prioritize VC for Motoko canister as well. We have a potential use case for online course certificates.

-------------------------

lmuntaner | 2024-07-11 15:03:35 UTC | #27

Thanks for sharing!

Supporting Motoko is on our roadmap as well.

We haven't finished our SDK yet. But our priorities have changed in the short term. As soon as we pick up work on the SDK we'll add the Motoko part.

I'm assuming you are interested in the SDK to become an issuer of credentials in Motoko, right?

-------------------------

rbole | 2024-07-11 15:20:30 UTC | #28

yes that’s true. We use VC already according the W3C standard, but in a traditional way and it would be great if we can reimplement VC with II on our platform.

-------------------------

singularity | 2024-07-11 15:49:58 UTC | #29

The customers use the financial institution's mobile app (Android and iOS app connecting to a core banking system in the data center), to access banking services. 

The financial institution would like to present the customers a screen on the mobile app where they can login using ii, then a screen where the customer can see a number of possible credentials to claim onto the ii (such as "I am a customer of bank x", "I am a platinum customer of bank x", "My date of birth is x"). The customer can then claim the credentials that they qualify for, hence why the financial institution needs this ability to issue verifiable credentials to users of the mobile app.

Then when the customer logs in using their ii at a relying party (such as on oc.app or a CRM supporting ii), the verifiable credentials that they hold on their ii can be recognized and the customer can be treated preferentially. E.g. if on oc.app, customer can be admitted to exclusive channels gated by the verifiable credentials issued by the financial institution,  and to be engaged and rewarded (such as airdropped red envelopes, announcements, etc).

-------------------------

lmuntaner | 2024-07-12 05:52:28 UTC | #30

At the moment, the only way to accomplish this is to move these credentials from the mobile app to a canister.

We were also thinking on supporting some common standards so that canisters could use credentials from web2, I believe this would be your case. However, this is still a bit long in our roadmap.

Thanks for sharing the use case!

-------------------------

lmuntaner | 2024-07-12 05:55:31 UTC | #31

Do you mean you implement the [verifiable credential W3C data model standard](https://www.w3.org/TR/vc-data-model-2.0/)? May I ask how relying parties connect to your issuer at the moment? Do you use [Open ID for VC](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html)?

Thanks!

-------------------------

singularity | 2024-07-12 06:15:33 UTC | #32

[quote="lmuntaner, post:30, topic:24966"]
move these credentials from the mobile app to a canister
[/quote]

Could you elaborate further on "move these credentials from the mobile app to a canister", in a way that the above use case can be achieved, and possibly provide a link to any demo that does this?

-------------------------

lmuntaner | 2024-07-12 07:21:35 UTC | #33

To issue credentials in Internet Computer, one needs to develop a canister that exposes a certain set of endpoints and performs a certain set of tasks.

From the mobile app, those credentials could be sent to the canister, who could then expose them through those endpoints. You can find more info about [calling ICP from a client here](https://internetcomputer.org/docs/current/tutorials/developer-journey/level-3/3.4-intro-to-agents/).

We have also provided the community with two demos that implement an issuer:
* [Attendance Issuer](https://github.com/dfinity/attendance-issuer).
* [VC Playground](https://github.com/dfinity/vc-playground). Which also includes a relying party.

I leave the documentation on how to [become an issuer here](https://internetcomputer.org/docs/current/developer-docs/identity/verifiable-credentials/issuer/).

I hope this is releavant and helpful for your project.

-------------------------

singularity | 2024-07-12 08:37:04 UTC | #34

Thanks for the information. I will review.

-------------------------

aned-dfinity1 | 2024-07-12 16:00:20 UTC | #35

Right now, II's VC protocol is interactive and wallet-less, i.e., presenting a credential means going through II to the issuer each and every time a credential is required (ofc we will optimise that in the future with caching, just stating how things stand right now). So it's not a traditional VC protocol that can operate offline and uses an identity wallet to present a credential from the wallet to the verifier - II's VC protocol currently requires issuers to be on smart contracts and be available to respond to credential requests.

So, it's possible to implement a credential-issuing process which requires a mobile app, but the mobile app will have to ultimately store credentials in a canister. There are some other considerations here as @lmuntaner wrote, but it's possible to make it work I believe.

Very interesting use case though, let us know if you have further questions.

-------------------------

kpeacock | 2024-07-12 16:18:55 UTC | #36

I anticipate the best way to do this will be to use the upcoming [Digital Credentials API](https://wicg.github.io/digital-credentials) that the Chrome and Safari teams have been collaborating on. 

I've seen it demoed at a conference, but it will allow browsers to request WC3 Verifiable Credentials from native mobile apps securely, both from the same device and across devices

-------------------------

singularity | 2024-07-13 13:56:17 UTC | #37

The other aspect of VCs that might be needed is ability promptly expire credentials that are no longer valid. For example, today the user might be a customer of the bank X, and tomorrow not. So the customer should not enjoy preferential treatment anymore based on a VC that no longer represents their true current status.

-------------------------

aned-dfinity1 | 2024-07-16 12:26:29 UTC | #38

Definitely, currently II's VC protocol is mostly an exchange protocol, we use signed JWT internally, but the VC representation is left to be decided between issuers and RPs. This is in turn means that things like expiration semantics are left to the dapps.

-------------------------

kristofer | 2024-07-16 14:11:25 UTC | #39

I would guess expiration of credentials is difficult. Part of the value proposition of a verifiable credential is that it can be *independently verified*, that is, the consumer of a VC can check its authenticity without communicating with the issuer. If the consumer would have to check with the issuer if credential is still valid then the whole concept of VCs is less appealing.

-------------------------

singularity | 2024-07-16 15:18:50 UTC | #40

This is the challenge that I see as well, and that requires a solution.

-------------------------

singularity | 2024-07-16 15:24:11 UTC | #41

[quote="lmuntaner, post:33, topic:24966"]
those credentials could be sent to the canister, who could then expose them through those endpoints
[/quote]

In this case where the credentials are in a canister, can the issuer come back later to expire them without the involvement of the subject/holder? For example, if the subject is no longer a customer of financial institution x, can the institution later go and expire the credential in the canister?

-------------------------

kristofer | 2024-07-16 17:29:02 UTC | #42

I believe the solution lies primarily in how you define the credentials. If you as an issuer need to be able to revoke the credential on short notice, then make the credential short lived.

You can also often define the credentials in such a way that they don't need to expire. Compare these two:

1. Credential saying user is 18 years old
2. Credential saying user is 18 at least years old

The first credential needs to expire or be revoked before the 19th birthday, the second never have to be revoked.

-------------------------

lmuntaner | 2024-07-16 18:42:47 UTC | #43

How credentials work at the moment they don't even need to live as credentials in the canister. The canister can just have the data about the user and when the credential is requested, the canister can decide to issue or not issue the credential.

For example, suppose Open Chat wants to issue credentials for group membership. They don't need to create the credentials now.

They can expose the endpoints of the Verifiable Credentials in Internet Computer. When a relying party wants to request a credential, the endpoints will be called. Then Open Chat could just read their internal data, check whether the user is member of a group and issue the credential.

Credentials have also an expiration field. Therefore, as @kristofer mentions, one could decide to set a short time so that the relying party needs to request it again.

-------------------------

kristofer | 2024-07-16 20:12:25 UTC | #44

[quote="lmuntaner, post:43, topic:24966"]
They can expose the endpoints of the Verifiable Credentials in Internet Computer. When a relying party wants to request a credential, the endpoints will be called. Then Open Chat could just read their internal data, check whether the user is member of a group and issue the credential.
[/quote]

To be fair to @singularity, the app consuming this information needs to trust it to be correct for a certain period of time. There is a real risk in the scenario you describe that OC for some reason removes the user from the group. The credential in the consuming app is still valid until expiry non the less.

One "solution" is that the consuming asks the user to prove their group membership on each login. But that would be perceived as really bad ux. 

I guess one takeaway is that VCs most likely is not the right tool if you need always up to date information about a user. 

Or is there any standard way to handle this? In the real world with physical credentials there often is a backdoor, a way to double check a credential is valid. You show your drivers license to a police officer. The drivers license expires in 5 years. But.. police officer radios in and checks the license and it turns out it was revoked because of .. some reason.

-------------------------

lmuntaner | 2024-07-17 08:11:09 UTC | #45

I believe that is an inherent problem of most digital credentials. That's probably why it makes sense to have credentials for things that don't change often.

This feature is still at the beginning for us, we hope to still improve it in the future. That's why feedback from the use cases is crucial for us.

Thanks for the discussion and don't hesitate to reach out again with suggestions or solutions!

-------------------------

