saikatdas0790 | 2022-01-20 10:43:49 UTC | #1

I'm looking for a data structure for Motoko that acts like this in behaviour

https://github.com/cb1kenobi/nanobuffer

Basically I can define up front the size of the buffer. Adding items keeps filling it up to the limit. Once at capacity I should be able to discard the oldest item and add the new item. But in a queue so that insertion order is preserved.

The closest data structure I found is a Deque and I was open to writing the max size logic myself. But the deque lacks a size property which I expected it to have. Considering the Deque is derived from a List.

Thoughts?

-------------------------

claudio | 2022-01-20 10:51:17 UTC | #2

Sounds like a circular buffer to me: https://en.wikipedia.org/wiki/Circular_buffer

-------------------------

saikatdas0790 | 2022-01-20 10:56:53 UTC | #3

Is there a data structure here that I could use that serves this purpose?

https://github.com/dfinity/motoko-base/tree/master/src

I'm okay to add some additional logic. I believe Deque would serve this purpose. Is there a way to get the size from a Deque? The methods listed here dont have one

https://smartcontracts.org/docs/base-libraries/Deque.html

If I have access to size, I can check when pushing items to the end. IF capacity is reached, i'll pop from the front and push to the end, else i'll just push to the end

-------------------------

claudio | 2022-01-20 11:23:18 UTC | #4

I think you can compute the size of the Deque just by summing the List.size(deque.0) + List.size(deque.1) of its two components. But that is an 0(N) operation and will be expensive.

Another option is wrap the deque and track its size as you push and an pop to the underlying deque.

An array based implementation  (as described in the wikipedia page), would be more efficient that either of those approaches, I expect.

-------------------------

claudio | 2022-01-20 11:31:03 UTC | #5

Curiously, https://github.com/aviate-labs/queue.mo seems to implement  a size function and circular variant, along the lines you are suggesting...

-------------------------

saikatdas0790 | 2022-01-20 11:32:07 UTC | #6

I'll check. Thank you

-------------------------

Ori | 2022-01-20 13:29:44 UTC | #7

Someone asked for size() in Queue.mo here a while back so it’s in this one too:
[https://github.com/o0x/motoko-queue](https://github.com/o0x/motoko-queue)

Edit: It looks like quint’s variation would handle the circular part for you. Again it uses size so note everything Claudio says above.

-------------------------

saikatdas0790 | 2022-01-21 06:54:31 UTC | #8

I was wondering about the "wrap the deque and track its size as you push and an pop to the underlying deque". 

Wouldn't it make sense to have this functionality as part of the Deque in the base library? 

Happy to send a pull request if you think this makes sense.

-------------------------

