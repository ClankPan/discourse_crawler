harish007 | 2021-07-07 16:44:23 UTC | #1

I want examples for the Result function. Can anyone help me?

-------------------------

3cL1p5e7 | 2021-07-08 12:36:04 UTC | #2

Rust? What is Result function do you mean?

-------------------------

rbolog | 2021-07-08 15:52:25 UTC | #3

Using Motoko:

1. declare Type (snippet):
`type Result<T,E> = Result.Result<T,E>;`

2.function (snippet):

```
public shared query ({caller}) func exportStore() : async Result<[(Id, Instruction)],Text> {
        let isAllowed : Bool = Principal.equal(canisterOwner,caller);
        if (isAllowed) {
            #ok(Iter.toArray(instructionsRegistry.entries())); 
        } else {
            #err("Caller isn't allowed to export the store. Caller is : " # Principal.toText(caller));
        }
    };
```

-------------------------

cyberowl | 2022-06-05 10:51:22 UTC | #4

Why do we need else for Result? I have noticed that it always needs to be provided even if it is followed by a switch statement.

-------------------------

paulyoung | 2022-06-05 18:02:49 UTC | #5

I donâ€™t think you should. If you can share some code where you think this is necessary I might be able to help.

-------------------------

cyberowl | 2022-06-06 01:09:05 UTC | #6

    public shared ({caller}) func create_username(username: Username) : async Result.Result<Username, UsernameError> {
        let tags = [ACTOR_NAME, "create_username"];
        let principal : UserPrincipal = Principal.toText(caller);

        let valid_username : Bool = Utils.is_valid_username(username);
        let username_available : Bool = check_username_is_available(username);
        let user_has_username: Bool = check_user_has_a_username(principal);
    
        if (valid_username == false) {
            #err(#UsernameInvalid);
        };

        if (username_available == false) {
            #err(#UsernameTaken);
        } else {
            if (user_has_username == true) {
                #err(#UserHasUsername);
            } else {
                usernames.put(principal, username);
                username_owners.put(username, principal);

                await Logger.log_event(tags, debug_show("created"));

                #ok(username);
            };
        };
    };

-------------------------

cyberowl | 2022-06-06 01:06:36 UTC | #7

type error [M0096], expression of type
  {#err : {#UsernameInvalid}}
cannot produce expected type
  ()

-------------------------

cyberowl | 2022-06-06 01:07:37 UTC | #8

I wanted to have linear execution vs nested if statements. Atleast that is the goal to make it easier to read

-------------------------

paulyoung | 2022-06-06 04:11:24 UTC | #9

You might need to explicitly `return`, e.g. `return #err(#UsernameInvalid);`

-------------------------

cyberowl | 2022-06-06 04:15:06 UTC | #10

That fixed it. Thanks :slight_smile:

-------------------------

