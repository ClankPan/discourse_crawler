spencer | 2021-11-15 16:03:30 UTC | #1

https://smartcontracts.org/docs/languages/motoko-at-a-glance.html#_function_declarations_and_use

The description of anonymous lambda functions shows the format: `func() : () = { â€¦ }`
`applyNTimes<Text>(10, "Hello!", func(x) = { Debug.print(x) } );`
However this results in a syntax error, like this example below:

```
  import Debug "mo:base/Debug";
  import Nat "mo:base/Nat";

  func foo(n:Nat, callback: Nat -> Nat):Nat {
    callback(n+1);
  };

  func bar() {
    let a:Nat = foo(3, func(n):Nat = {n});
    Debug.print(Nat.toText(a));
  };
```

But if I take away the equals sign in the lambda function, it compiles:
```
  import Debug "mo:base/Debug";
  import Nat "mo:base/Nat";

  func foo(n:Nat, callback: Nat -> Nat):Nat {
    callback(n+1);
  };

  func bar() {
    let a:Nat = foo(3, func(n):Nat {n});
    Debug.print(Nat.toText(a));
  };
```

Is there something I'm missing?

-------------------------

jzxchiang | 2021-11-16 07:45:59 UTC | #2

If you put an equals sign like `func(n):Nat = {n}`, then I think you need a name for the function like `func foo(n):Nat = {n}`. Probably not a lambda in that case then.

-------------------------

