ritvick | 2023-09-29 17:24:52 UTC | #1

Hello Everyone,
I was under the impression that transaction hash are unique. Also I understand its a hash, so there might be collisions. But the probability of those collisions should be very low ( correct me if I am wrong here ). 

I saw one of the hash which is same for three transactions. 
https://dashboard.internetcomputer.org/transaction/65325b9b91ddf667e49312376daa2176a46e68b66aba1bd8aaed81fbdafbc0a1

Another example:
https://dashboard.internetcomputer.org/transaction/4006d4c9f039d3c1df4e2d610c5ca0d3732f14db37f9e45f6a77eb2cbd4c2be8

Why are we seeing this collision very often or am I missing something here?

PS: Can someone also point to the algorithm which calculates this hash from github ?

-------------------------

bogwar | 2023-09-29 17:34:02 UTC | #2

Uniqueness of transaction hash is guaranteed for the transactions that have the created_at field set.
For these transactions the ledger ensures dedication. If created_at is not set then there may be duplicates

-------------------------

ritvick | 2023-09-29 17:48:07 UTC | #3

1. Can you please elaborate more on "For these transactions the ledger ensures dedication".
2. Who is responsible for setting created_at.
3. How does one refer to a particular transaction? Shouldn't there be a unique attribute to a transaction? I understand for now one block has one transaction, in this case block_number can be considered unique. 
Is there a possibility in the future that one block can process multiple transactions ?

-------------------------

bogwar | 2023-10-02 07:57:58 UTC | #4

1. That was a typo :(. I meant the ledger ensures deduplication: there will never be two identical transactions that have created_at set. 
2. It's the initiator of the transaction that should set it. There is no good reason not to set it - but unfortunately for historical reasons the created_at field is optional.
3. The guarantee that we will always have is that within the same block (even if there were more transactions) all transactions will have unique hashes. So the pair (block_id, tx_hash) should be a unique identifier. However, it is safe to say that in the ICP ledger will never have more than one transaction per block, so the block identifier would also be a unique identifier.

-------------------------

sea-snake | 2023-10-02 17:10:51 UTC | #6

Transaction indexes are incremental unique identifiers (also mentioned as blocks above), the hashes are unique for the transaction data, this makes it e.g. possible to find a transaction when you know it's details but not the index (create hash based on details and lookup hash). 

When you make a transaction, the index is returned as reference.

As far as I'm aware, every index contains a single transaction in the current ledger implementation.

TL;DR
The transaction hash is the unique representation of the transaction data (with or without created_at). It is not the unique identifier for the transaction within the ledger transaction history. This is not known until the transaction has been sent to the ledger and added to the history, it's position within the history is then returned as index.

-------------------------

icme | 2024-08-06 01:00:06 UTC | #7

If two distinct transactions occur in the same round of consensus between the same two parties, for the same amount, and at the same exact created_at time, does the memo field help ensure transaction uniqueness?

-------------------------

bogwar | 2024-08-09 08:49:19 UTC | #8

Yes, the memo field is part of the fields considered when determining duplicate transactions. 
So if created_at_time is set two otherwise identical transactions but with different memo fields will be considered distinct transactions.

-------------------------

