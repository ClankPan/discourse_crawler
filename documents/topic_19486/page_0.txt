Icdev2dev | 2023-04-17 18:53:51 UTC | #1

A group of interested community members (5) are attempting to rebuild ic-os for each  ICP NNS Replica Version Management proposal under the guidelines of https://www.codegov.org. We are doing so for the intent of serving as a part of independent validation of the claims of replica version; PRIOR to it being adopted. (the other part, not in scope for this post, is the sanity checks on the release notes).

As background "ic-os" is an umbrella term for all the operating systems within the IC, including SetupOS, HostOS, GuestOS, and Boundary-guestOS. Currently we are focused on SetupOs, HostOs and GuestOs. 

The method of validation at the high level is 
   (a) building on local machines
   (b) downloading corresponding artifacts from different OSs
   (c) comparing the sha256sums of the same artifact ; built on local machine and downloaded artifact


Our findings  (for the latest proposal : https://dscvr.one/post/1197961714254565886/nns-proposal-118023)
    1. ALL members have been successful in building guestos and the sha256sums are consistent with each other as well as the downloaded artifacts

    2. NONE of the members have the correct sha256sum as compared to the downloaded artifact for the  SetupOS:  disk-img.tar.gz
           2.1 The  sha256sum of downloaded disk-img.tar.gz :                                                         7d729...
            2.2 Two Team Members have a common sha256sum for the same disk-img.tar.gz:         21a60... (that does NOT match the sha256sum of the downloaded artifact)
            2.3 Three other Team Members have differing sha256sum matching neither within the three team members NOR 2.1 NOR 2.2
      3. The situation is similar for HostOS

We need immediate help in resolving this issue. **If we cannot trust the SetupOS  (or the HostOs), we cannot rely simply on the correctness of the GuestOs.**

-------------------------

diegop | 2023-04-17 19:13:34 UTC | #2

I think its very healthy that folks validate the proposals. Good service for the community. Let me ping some folks to see what may be going on.

-------------------------

diegop | 2023-04-17 19:16:14 UTC | #3

[quote="Icdev2dev, post:1, topic:19486"]
Our findings (for the latest proposal : [DSCVR](https://dscvr.one/post/1197961714254565886/nns-proposal-118023))
[/quote]

btw maybe its just me but this hyperlink liked to a blank page

-------------------------

Icdev2dev | 2023-04-17 19:25:05 UTC | #4

Definitely strange. @wpb would you know? This is what I get below.

@diegop can you log into dscvr and see if it resolves?

![codegov-issue|690x388](upload://3eAWxIM0RQrZ1967vzuepGmGXXN.jpeg)

-------------------------

Gekctek | 2023-04-17 19:32:13 UTC | #5

I believe it's a private dscvr portal. Anyone would need an invite first

-------------------------

diegop | 2023-04-17 19:34:59 UTC | #6

I assumed so, so i wanted to make sure @Icdev2dev knew in case they intended to link to a public URL

-------------------------

wpb | 2023-04-17 20:48:34 UTC | #7

You have to join the portal to view the contents.  This can be done without any admin support.

-------------------------

diegop | 2023-04-17 20:56:36 UTC | #8

@Icdev2dev 

I asked team. We have seen a problem with some folks who used [codegov](http://codegov.org) and codegov had outdated info. Site would recommend using their own copy of `build-ic.sh` file, not the one from the IC repo. And that file was just not up to date: it was not containing https://github.com/dfinity/ic/commit/254bf3d996d91a9747105733cb6c0bd9cf5a67b4

Can you see if it works with the file from the IC repo?

-------------------------

diegop | 2023-04-17 20:58:12 UTC | #9

@wpb do you know how we can update the codegov website?

-------------------------

diegop | 2023-04-17 21:00:06 UTC | #10

[quote="wpb, post:7, topic:19486, full:true"]
You have to join the portal to view the contents. This can be done without any admin support.
[/quote]

this worked! thank you very much

-------------------------

wpb | 2023-04-17 21:10:51 UTC | #11

I maintain the website, so I can fix whatever needs to be fixed.  I double checked the IC-OS Verification script that is posted [here](https://www.codegov.org/education/training) and it reads exactly the same as the latest proposal [118023](https://dashboard.internetcomputer.org/proposal/118023).  The codegov.sh file is not a script to build the replica…it is used for a different purpose.  The script to build the replica is intended to be the script in the proposal and I have simply copied it verbatim for convenience, but can certainly take it down if it’s creating confusion.  

@jwiegley initially had an issue with his build on this proposal too and reached out to Dfinity for clarification.  However, the problem wasn’t the codegov.sh file like was originally thought.  I don’t recall what was causing his issue, but can review messages when I get home later.

-------------------------

diegop | 2023-04-17 21:22:10 UTC | #12

makes sense. Thank you. Lets see what John says!

-------------------------

Icdev2dev | 2023-04-17 22:07:16 UTC | #13

To be clear, I am using https://github.com/dfinity/ic/tree/master/ic-os. 

In there, it maintains 

"As an alternative, the following script can be used to build the images in a container with the correct environment already configured:

./gitlab-ci/container/container-run.sh"

Since that script checks for a porcelain repository prior to build (and only git and podman are required to be configured), I presume that the instructions there are correct.

@jwiegley  will definitely comment. But, imo, his posted sha256sum also has the same issues with the hostos and setupos....i.e. it does NOT match up with sha256sum of the downloaded artifact in setupos (and therefore, I presume with hostos)

-------------------------

Manu | 2023-04-18 08:48:00 UTC | #14

To be clear, the problem is not with following the build instructions, and as the post says, **all codecov participants managed to successfully reproduce the guestos image**. 

The question that @Icdev2dev asks is why the hashes of the *other* artifacts that are being built differ (the hostos and setupos images). I don't have a full answer to that, but do note that the proposal we're voting on only elects a guest os image, as you can see in the payload of the proposal. So even though the script we run builds more artifacts, the only one relevant for checking the proposal is the guest os image, and the proposal only approves a guestos upgrade to the hash that is in the payload.

-------------------------

Icdev2dev | 2023-04-18 13:37:44 UTC | #15

Thanks, @Manu.

It is correct that the proposal only approves a guestos upgrade to the hash that is in the payload.

HOWEVER  it is my understanding  that the hostos that manifests that intent in a technical sense. 

"Hostos: Its main responsibility is to launch and run the GuestOS in a virtual machine"

Q1. Then, to the extent we are building the Hostos as a part of this process, shouldn't we be checking for the fidelity of the Hostos?

Q2. I suppose that the Hostos is not updated in a replica version management update. When is the Hostos updated ; if it is not a part of the proposal that we are checking?

Q3. A set of similar questions for SetupOs.

-------------------------

andrewbattat | 2023-04-18 15:34:05 UTC | #16

Hi @Icdev2dev!

Thanks again for you and the other community members who took the initiative to test the reproducibility of the builds! 

While having a reproducible GuestOS is the most crucial element, you are absolutely correct that ensuring the reproducibility of all the IC-OS builds is essential for the integrity and decentralization of the project, so thank you!

We have tests in place to try and ensure the reproducibility of all the IC-OS builds, but evidently, they are not perfect, and we are continuing to work on them.

1. You are right; the primary role of HostOS is to launch and run the GuestOS in a virtual machine. And this proposal to upgrade the GuestOS will have no impact on the HostOSes running on the IC. So for the sake of this proposal, it’s not crucial to check the fidelity of the HostOS (though always important!)

2. The HostOS has actually never been upgraded. However, we’re currently working on a proposal for the first ever HostOS upgrade, so thank you for bringing these reproducibility issues to our attention before we went ahead with the proposal. The HostOS is upgraded in a manner similar to the GuestOS. A HostOS upgrade proposal is sent out, and upon approval via the NNS, the upgrade is triggered.

3. SetupOS is the operating system installing the HostOS hypervisor and GuestOS virtual machine. SetupOS is a convenience wrapper for Node Operators, as it streamlines the process of installing HostOS and GuestOS. As it only exists for installing HostOS and GuestOS, SetupOS is never upgraded, and so, the are no NNS proposals to upgrade SetupOS. However, we still want SetupOS to be reproducible for the sake of decentralization, security, and determinism, and will be working hard to resolve these issues.

Once again, thank you for your work! If you have any more questions or concerns please share!

-------------------------

Icdev2dev | 2023-04-18 16:07:52 UTC | #17

Thanks for the kind words and update on hostos.

Since our local build infrastructure has been proven to work for guestos and we are building hostos as a part of that build, we would like to extend this to include hostos as well.

Can we (codegov & dfinity) work together on reproducibility of hostos ; PRIOR to the proposal to upgrade the hostos being present? In this manner,  we (codegov/others) don't struggle at the last moment to figure out build issues.

The fact that two of codegov members were able to build hostos (and setupos) with same sha256sum (but not matching with downloaded artifacts sha256sum) seems to indicate some version omission that subsequent codegov members presumably pulled in as inadvertent updates.

Additionally i wanted to understand how do you intend to test hostos update; which is likely trickier than guestos. This is because you would probably have nodes with different versions of hostos for a certain length of time.

-------------------------

andrewbattat | 2023-04-18 16:38:57 UTC | #18

Yes, we’d love to work together on the reproducibility of HostOS prior to the proposal to upgrade the HostOS. I will be in touch regarding this.

I think you might be right about the version omission. I will look into this and be in touch.

Yes, you’re correct that the HostOS upgrades are trickier than the GuestOS:

GuestOS upgrades are currently done at a subnet level. Once a proposal is accepted to upgrade GuestOS in a subnet, all the nodes in the subnet upgrade, and this upgrade process occurs very quickly causing a small window of subnet downtime. However, for HostOS upgrades to take effect, all services must shut down and the machine must reboot. This process takes a few minutes, which is too long of a time to bring down an entire subnet. As a result, we are planning to propose that HostOS upgrades happen on a per-node or a per-datacenter level. This means that a proposal will be sent out to upgrade an individual node or all the nodes in a particular datacenter. This means only a single node per subnet will upgrade the HostOS at a given time, and there will be no subnet downtime. So it’s actually not a problem if nodes in a subnet have different HostOS versions at a given time (unlike the GuestOS where all nodes in a subnet must be running the same version). 

I hope that helps!

Regarding the build reproducibility, I’m curious to learn more about your build environment so that we can track down the source of the indeterminism.

Were you using the gitlab-ci/container/container-run.sh script? Or did you build images directly through Bazel? Or did members do a mixture of the two? And I presume that all members were building production images?

Any information would be greatly appreciated!

Thank you!

-------------------------

wpb | 2023-04-18 16:46:12 UTC | #19

I have changed the portal role permissions so everyone can view the contents of the portal.  It no longer requires you to join the portal to view content.  I still have restrictions enabled for posting and commenting because I don’t want the portal to become cluttered with messages that are outside the scope or don’t benefit these proposal reviews.  That said, I have no issue with giving people a role that enables comments.  Just join the portal and let me know that you want a role that can comment.  We actually have many people in the portal that are able to provide reviews if they want, but their intention is just to be an advisor.  Those contributions are welcome.

-------------------------

Icdev2dev | 2023-04-18 16:53:06 UTC | #20

I am using gitlab-ci/container/container-run.sh. I imagine most others are using the same as well. 

Just fyi. I did try to run the build on WSL under limited (16gb) ram. The build failed with "not enough space" message. I modified to NOT mount tmpfs. That build successfully completed ; BUT with wrong sha256sums; even for guestos. Others have been able to complete on WSL withe expanded RAM with correct sha256sum.

I then reverted to a standalone 20.04 Ubuntu with 24gb ram; where the porcelain build built with correct sha256sums

-------------------------

wpb | 2023-04-18 17:13:36 UTC | #21

You can see the sha256 results for each build from each reviewer on the [codegov portal](https://dscvr.one/post/1197961714254565886/nns-proposal-118023).  Each reviewer is required to post a screen capture of their artifacts.

My environment is windows 11 running wsl2 and Ubuntu 22.04 LSR (not the desktop version) and podman.  I run the script that is posted in the proposal without modification.  I have also been able to run this script in Ubuntu 22.04 desktop in a virtualbox virtual machine on the same pc, but I usually prefer wsl2 instead.  I created the VM for these ic-os verifications back when docker was required.  Hence docker is installed on the VM and directly on my pc, but I don’t intentionally use it unless it is being used by the proposal script.

I can’t quote the stats from memory, but I do believe that people have struggled to build the replica due to either lack of hard drive space, lack of memory, or lack of sufficient cores.  If it were possible to reduce the hardware requirements then that may result in more people who can perform the work to build the replica.

Other codegov reviewers can provide info about their own environment.  I will tag them here.  @Icdev2dev @jwiegley @Gekctek @northman @NathanosDev @Zane 

I hope this helps.  Thank you so much for offering feedback and guidance that can help improve our understanding and contributions to these reviews.  I love seeing this type of collaboration.  DFINITY is doing a great job of engaging the community and enabling independent reviews and voting.  It’s very impressive and exciting.

-------------------------

Gekctek | 2023-04-18 17:15:02 UTC | #22

Same here. 
Windows 11
WSL2
Ubuntu 22.04
Podman

-------------------------

diegop | 2023-04-19 18:44:15 UTC | #23

I want to make sure I follow the TLDR of this thread so far, is this right?

*The main issue that folks computers ran out of memory... but for those that had enough memory, they were able to match the hashes?*

I want to make sure there is a happy path where hashes matched first, before expanding that path.

-------------------------

jwiegley | 2023-04-19 21:04:51 UTC | #24

My issue ended up being that I was running an out-of-date version of `build-ic.sh`. Once I switched to what is provided within the repo, my build completed fine.

-------------------------

Icdev2dev | 2023-04-19 21:36:16 UTC | #25

It's a little bit more nuanced.

There are three sets of hashes: setupos, hostos & guestos.

1. For guestos, a couple of reviewers had 16 GB RAM on which they attempted to build on WSL2. The build failed reporting "no enough space " or something similar.
    1.1 i had the same issue. I modified the config to NOT mount "tmpfs". Then the build itself succeeded; but produced incorrect hashs.
2. All reviewers with correctly configured machines were able to produced correct hashes for guestos.
3. None of the reviewers were able to produce correct hashes (and hashes were not consistent amongst reviewers) for setupos. For hostos , i verified that hashes were not consistent amongst reviewers (did not check for correctness)

-------------------------

northman | 2023-04-20 00:56:05 UTC | #26

I have moved my build to a different system with Ubuntu2004 16M on an I7 with 8 cores.  I wish it would run cleanly under WSL2.

-------------------------

andrewbattat | 2023-04-20 16:46:15 UTC | #27

Hello codegov!

Thank you again for all your work!

I’ve been trying to get to the bottom of the build indeterminism. First, some further background on the issue:

* If HostOS is not deterministic, SetupOS won’t be either because SetupOS contains a HostOS image inside of it. So the source of the indeterminism should be isolated to HostOS.
* @wpb and @Gekctek, you two were running very similar build environments and almost had the same builds. You had differing update-img-test images, and we’re looking into this, but this is a separate issue that we believe will be straightforward to resolve.
  * You both said the build environment you were running was:
    * Windows 11
    * WSL2
    * Ubuntu 22.04
    * Podman
  * I’m curious to know what Podman version you were running.

Anyone who ran the test, could you take a moment to upload your hostOS disk-img.tar.gz file to a shared folder:
**tinyurl .com/2p8wfuz9**
NOTE: You are unable to share link in these threads, so please just remove the space in the URL.

I've created folders with each of your account handles. Please place the file in your respective folders. This way, I can inspect the issue and identify the source of the indeterminism. And after uploading your images, can you also comment in this thread your OS, Podman version, and any other build environment information you think might be relevant.

Additionally, @wpb and @Gekctek, can you both upload your update-img-test.tar.gz files so that I can take a look at that issue.

Thanks again Codegov for all your work!

-------------------------

andrewbattat | 2023-04-20 16:47:41 UTC | #28

CC: @jwiegley @northman

-------------------------

andrewbattat | 2023-04-20 16:48:15 UTC | #29

 CC: @NathanosDev @Zane

-------------------------

diegop | 2023-04-20 17:09:37 UTC | #30

Thank you @andrewbattat for diving deep to understand the lack of determinism. Please let us know what you find!

-------------------------

Icdev2dev | 2023-04-20 17:16:31 UTC | #31

Uploaded disk-img.tar.gz from hostos in icdev2dev

OS         - Ubuntu 20.04.2 LTS
podman - 3.4.2

-------------------------

Gekctek | 2023-04-20 19:13:25 UTC | #32

[quote="andrewbattat, post:27, topic:19486"]
Additionally, @wpb and @Gekctek, can you both upload your update-img-test.tar.gz files so that I can take a look at that issue.
[/quote]

Done. Uploaded `update-img-test.tar.gz`

Podman 3.4.4

-------------------------

northman | 2023-04-20 21:46:19 UTC | #33

Uploaded disk-img.tar.gz from hostos in northman
OS baseline found in readme.txt

Thank you.

-------------------------

wpb | 2023-04-21 00:07:02 UTC | #34

My uploads are in progress.

12th Gen Intel(R) Core(TM) i7-12700T   1.40 GHz
32.0 GB (31.7 GB usable)
64-bit operating system, x64-based processor

Windows 11 Pro Version 22H2
Ubuntu 22.04.2 LTS
podman version 3.4.4

I hope this helps!  Thanks for taking a deeper look.

-------------------------

NathanosDev | 2023-04-22 14:18:25 UTC | #35

Thanks for investigating @andrewbattat. I've uploaded my HostOS img to the folder.
I'm using Windows 11, Ubuntu 22.10 on WSL2 and Podman 3.4.4.

-------------------------

andrewbattat | 2023-05-18 17:13:42 UTC | #36

Hi all! Update:

We believe we have found and resolved the source of the indeterminism! 

For those curious about the issue:
In the bootloader, microcode updates were being added to the initrd based on the detected CPU of the machine building the image. We solved the issue by disabling initramfs from including microcode updates.

Here’s the commit in question: https://github.com/dfinity/ic/commit/d8549e6ba7dcb5888fc45e7b10d69ab2e6551949
Hats off to Eero for tracking down the issue! 👏

Note: the reason our existing testing infrastructure did not discover the issue is that our machines were all using the same AMD processors, which meant they were getting the same microcode updates, causing them to create deterministic images.

I’m not sure if this change will be included in the next update proposal, but if not, it should definitely be included in the subsequent one!

-------------------------

wpb | 2023-05-18 22:15:43 UTC | #37

Wow, very interesting.  Thank you for the explanation.  Sounds like Eero did some amazing forensic work to get to the bottom of it.

-------------------------

Icdev2dev | 2023-05-19 21:27:52 UTC | #38

Indeed. This is great! I will resume testing. Just to be clear, this fix should resolve both hostos & setupos. Did i get that right?

-------------------------

andrewbattat | 2023-05-19 21:59:44 UTC | #39

It should, yes! Because a SetupOS image contains GuestOS and HostOS images, we believe the SetupOS indeterminism was a result of the HostOS indeterminism.

-------------------------

andrewbattat | 2023-05-22 15:19:49 UTC | #40

**aagh!**

From the looks of the builds in the [codegov review](https://dscvr.one/post/1197961714254565984/nns-proposal-122529) for the latest replica update proposal, we still have a HostOS indeterminism issue. Apologies for the pre-mature celebration. We’ve either overlooked something, or this is a new issue.

Like before, [NNS proposal 122529](https://nns.internetcomputer.org/proposal/?u=qoctq-giaaa-aaaaa-aaaea-cai&proposal=122529) is just a replica update proposal, and the indeterminism is just in HostOS and SetupOS—not GuestOS. So this proposal can still pass.

I am posting another [link to a shared drive](https://drive.google.com/drive/folders/1xiQdq-q0qaJv8rbL87zNmNn44r6uLa1t?usp=sharing), and requesting that people upload their **HostOS disk-img.tar.gz** file.


Thanks again for all your help and patience. We will get this resolved!

-------------------------

andrewbattat | 2023-09-25 20:19:34 UTC | #41

Hi all!

My apologies for the long delay. We have been hard at work on other features and are now getting very close to rolling out our first-ever HostOS upgrade. Unfortunately, we are still dealing with some determinism issues.

As before, **GuestOS and GuestOS update images are still deterministic**. It is **only** in HostOS that we are encountering determinism issues (and, by extension, SetupOS).

Since my last post, we have solved some of the nondeterminism, but we are still chasing down more sources of nondeterminism. And, like before, we are still unable to reproduce the issue in our local testing, meaning HostOS is still deterministic for our tests (which is great), but this means we again need your help collecting HostOS images.

I’m reaching out to all the community members who verified the build and posted in this thread: https://dscvr.one/post/1197961714254566244/nns-proposal-124795

@ZackDS, @wpb, @cyberowl, @massimoalbarello, @Gekctek, @tiago89, @ilbert, @Zane 

I would greatly appreciate if all who are available would take the time to upload your HostOS update image builds (update-img.tar.gz) for this [proposal](https://dashboard.internetcomputer.org/proposal/124795) to this [shared folder](https://drive.google.com/drive/folders/1SHxnqtmC5Q5enfPVkcGGiUc2zmqrdZ3J?usp=drive_link)

I have created a folder for each of you.

Please also include your build environment details (processor, memory size, operating system, anything else you think is applicable). You may post this information in this thread, message me directly, or include it as a text file in your folder.

Thank you all for helping to build and maintain the Internet Computer! I’m happy to answer any questions.

P.S.

@Zane and @cyberowl, you both produced the same images we did on our end, so we do not need your HostOS update images. I have just tagged you both for visibility.

@cyberowl, your **update-img-test.tar.gz** was nondeterministic, however. So if you could, we would greatly appreciate if you could upload that image.

-------------------------

wpb | 2023-09-26 02:30:31 UTC | #42

I have uploaded my update-img.tar.gz file from my `~\ic\artifacts\icos\hostos` directory as requested.  I also verified that all specs for my environment are the same as my previous posts quoted below.  Let me know if there is anything else you need to know about my build or my environment.

[quote="wpb, post:21, topic:19486"]
My environment is windows 11 running wsl2 and Ubuntu 22.04 LSR (not the desktop version) and podman. I run the script that is posted in the proposal without modification.
[/quote]

[quote="wpb, post:34, topic:19486"]
12th Gen Intel(R) Core™ i7-12700T 1.40 GHz
32.0 GB (31.7 GB usable)
64-bit operating system, x64-based processor

Windows 11 Pro Version 22H2
Ubuntu 22.04.2 LTS
podman version 3.4.4
[/quote]

-------------------------

cyberowl | 2023-09-26 06:41:03 UTC | #43

### Specs
![specs|603x500](upload://rjnKaMFxkzTvmeLnoElWwusRtM8.jpeg)

The disk that I am using is older disk drive and not NVMe

podman 3.4.4

### new verification from same proposal, since I deleted old one
![new_verification|690x392](upload://dtgrvE9VskhDATIh1X2scRtkw9Z.png)

### uploaded
update-img tar and test file

-------------------------

ZackDS | 2023-09-26 12:25:04 UTC | #44

Built it again and uploaded the image with the config specs. Not at home so used a different PC this time.

Ubuntu 22.04.3 LTS up to date on a i7-7700 with 32 GB ram and a SATA3 SSD, podman version 3.4.4

![Screenshot from 2023-09-26 15-07-03|593x500](upload://kgeTw8lGzYQidMYGdET7D9kxa6r.png)

-------------------------

Gekctek | 2023-09-26 17:57:26 UTC | #45

I cant quite figure out how to get the hostos with the new script `/gitlab-ci/tools/repro-check.sh`
It seems to create a tmp directory, which then gets deleted after the process. What am i missing?
```
##### HOSTOS SHA256SUMS #####
/tmp/tmp.QXmubIYVwL/ic/artifacts/icos/hostos /tmp/tmp.QXmubIYVwL/ic
ed25ccacb97bcfbceea5efe63566d133837dbc0b681778b1171f07e4b77bc48d *disk-img.tar.gz
a712183296a0ff2679d9cfe776113370afdb463ba1ab4de2d541f0e6405c2217 *disk-img.tar.zst
ccfc42662179a2a674296907f883b22c918aeacb562077de0c613303ff73523e *update-img-test.tar.gz
fc54fe5d9247d0ae039c3c06ce5e705e30f390847c852b8b2d1acaeedbbb4421 *update-img-test.tar.zst
93265614dd82b1ce24d83bcba88fe964237b9d6103c4d49cd4d70f1b02e3222a *update-img.tar.gz
3f4c53be9dbdbcfe7fd42d65462f309b7b9a8b2d6e051d48d81e90afb9fc7458 *update-img.tar.zst
```

-------------------------

andrewbattat | 2023-09-26 18:20:20 UTC | #46

You should find your images outputted in the artifacts folder of the IC repo you built your images in.

ic/artifacts/icos/hostos/

-------------------------

Gekctek | 2023-09-26 19:31:13 UTC | #47

Nah, nothing. I have searched my entire disk for the artifacts with no luck. Im currently trying to modify the script to not delete them

What script is everyone else running?
Im using `gitlab-ci/tools/repro-check.sh`

-------------------------

tiago89 | 2023-09-26 21:16:08 UTC | #48

@Gekctek I found it searching with "find" utility (ubuntu):
- `find . -iname update-img.tar.gz`

And it found it on bazel cache:
- ./.cache/bazel/_bazel_root/6d065581cce7ad9076e3b8db2b3afaf0/execroot/ic/bazel-out/k8-opt/bin/ic-os/hostos/envs/prod/update-img.tar.gz

Hope it helps.

-------------------------

tiago89 | 2023-09-26 21:24:23 UTC | #49

@andrewbattat have uploaded to shared folder my copy.

I am using an external (shared) server in a cloud:
OS: ubuntu 22.04
Disk: 160 GB
Memory: 16 GB
CPU: Intel Xeon Processor (Skylake, IBRS) - 64 bits - 4 core - 2GHz

Hope this helps,
Tiago

-------------------------

wpb | 2023-09-27 00:06:42 UTC | #50

I use the script that is in the proposal.  It’s just a copy paste because Dfinity fills in all the current proposal relevant information.  My artifacts folder doesn’t get deleted at the end of the build.

-------------------------

wpb | 2023-09-27 00:46:39 UTC | #51

Thank you @cyberowl @ZackDS @Gekctek and @tiago89 for following up on this request by @andrewbattat.

-------------------------

Gekctek | 2023-09-27 01:06:59 UTC | #52

[quote="tiago89, post:48, topic:19486"]
I found it searching with “find” utility (ubuntu):

* `find . -iname update-img.tar.gz`

And it found it on bazel cache:

* ./.cache/bazel/_bazel_root/6d065581cce7ad9076e3b8db2b3afaf0/execroot/ic/bazel-out/k8-opt/bin/ic-os/hostos/envs/prod/update-img.tar.gz

Hope it helps.
[/quote]

Thank you, that worked

@andrewbattat 
File is uploading to shared folder

12th Gen Intel(R) Core(TM) i7-12700KF (20 CPUs), ~3.6GHz
32 GB RAM
Latest Windows 11
WSL2 Ubuntu 22.04
podman 3.4.4

-------------------------

ilbert | 2023-09-27 12:22:38 UTC | #53

@andrewbattat I've uploaded the update image build to my folder. 

My build machine is an AWS EC2 instance, with these details:
- OS: Ubuntu 22.04.2 LTS (x86_64)
- CPU: 8 vCPUs
- Disk: 110 GiB (General purpose 3 type)
- Memory: 32 GiB
- Podman: 3.4.4

I've also uploaded the *SHA256SUMS* file in my folder.

-------------------------

Zane | 2023-09-27 13:42:18 UTC | #54

Not sure if It could help but this are the specs of the environment I build the replicas with:

![specs|406x500](upload://p6m155yEl0PGTOmx0mM8pxLwyYO.jpeg)

-------------------------

andrewbattat | 2023-11-13 16:03:40 UTC | #55

A quick update on IC-OS reproducibility:

We have solved most all of the HostOS/SetupOS nondeterminism issues. There are a few edge cases that we are aware of, but for the most part, all IC-OS images (GuestOS, HostOS, and SetupOS) should be deterministic.

The new repro-check script will check the reproducibility of all IC-OS images. The desired output should look like the following:

![lotvo0l6xq95g3fxlbh|620x500](upload://yXVmr4N9eVvCbkaIHA6Bp2K7COc.jpeg)


**Please keep in mind that a replica upgrade = a GuestOS upgrade, so for replica upgrades, the only requirement is for the GuestOS to be deterministic. Of course, we want all images to be deterministic all the time, but a nondeterministic HostOS/SetupOS should not disqualify a replica release.** 

We will continue identifying and resolving any nondeterminism that comes up. 

Thank you all for your work verifying IC releases!

-------------------------

