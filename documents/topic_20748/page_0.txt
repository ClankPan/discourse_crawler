domwoe | 2024-03-07 12:20:57 UTC | #1

## Overview

Status: Completed
Project Type: Traditional - One applicant is selected to work on the task.
Time Commitment: Weeks
Experience Level: Advanced
Size: USD 10'000 in ICP (at time of distribution)

## Description

A cross-platform native application that provides a graphical abstraction of key `dfx` capabilities.  

For example, the ability to call canisters with arguments is typically done through the command line using `dfx` - this process requires forming method arguments into a string, including escaping double quotes and ensuring brackets are properly closed. This is error-prone and cumbersome. Instead, a DFX Dashboard GUI would provide such a capability by exposing a form in the UI that would allow a user to compose canister arguments and call a canister with the click of a button.

In addition, a DFX Dashboard would provide better interoperability between the local `dfx` identity, and Internet Identity, helping us move towards our goal of a more seamless transition between the two. 

## Use Cases

- editing of dfx.json schema
- calling canisters with arguments; providing the ability to compose canister arguments through a form-based UI
- making dfx identity portable through an integration with Internet Identity
- provide better discoverability of dfx commands / capabilities
- improve  user experience by replacing the terminal for a number of use cases where using the terminal is awkward.

## Requirements

- ability to log-in with, and interoperate with Internet Identity
- ability to compose canister arguments through the UI; call canisters with arguments
- ability to edit JSON configurations used by `dfx` (e.g. `dfx.json`, `networks.json`, `ic-assets.json`)

## Acceptance Criteria

- Open Source license  (MIT)
- Running on Mac OSX, Linux and Windows

## Remarks

- This could be a starting point for a DFINITY Developer Grant to further improve the developer experience.

## How to apply?

Include links to previous relevant work.
Include a brief overview of how you will complete the task.
Post your application text in this thread.

Please be aware that [Terms and Conditions](https://support.dfinity.org/hc/en-us/articles/4401932915860-DFINITY-DEVELOPER-GRANT-PROGRAMS-TERMS-AND-CONDITIONS) of the DFINITY Developer Grants Program apply.

## References
https://forum.dfinity.org/t/concept-dfx-dashboard/20398

-------------------------

benji | 2023-06-16 15:50:30 UTC | #2

Isn't this already achieved by Mora Light?
https://mora.app/light/home

-------------------------

pphaolu | 2023-06-16 18:02:16 UTC | #3

Hi, I recommend Light. It seems to fit the bill. I use the tool based on Light to query the computing power and income of EMC projects every day. (https://mora.app/planet/n3hwc-4qaaa-aaaan-qddta-cai/7XV1ZY5GMEB29EAR22FWT0W0M3) 

Light is lightweight, cross-platform, easy to use, and does not require users to understand the motoko language. 

Light's introduction: https://mora.app/planet/qvsfp-6aaaa-aaaan-qdbua-cai/7SZBYNTENZKFWD4XEBM6T4NMCE 
![图片|541x500](upload://aIoCVvAzDtOW3GatrpGtgdg4ceI.png)


If you want to try it, please don't hesitate to contact me.

-------------------------

lixx | 2023-06-17 01:45:54 UTC | #4

Light already did this. mate

-------------------------

cyberowl | 2023-06-17 01:57:15 UTC | #5

So I am guessing light is a native app?

-------------------------

charm | 2023-06-17 01:57:53 UTC | #6

Light already did this. mate

-------------------------

lixx | 2023-06-17 01:58:17 UTC | #7

Everybody can use and make a tool by light on Mora. its a cool tool.

-------------------------

cyberowl | 2023-06-17 01:59:30 UTC | #8

Show me a video. I really don't want to try it. The UX looks complicated.

-------------------------

caolw | 2023-06-17 01:59:26 UTC | #9

@Mora   Light already did this. mate

-------------------------

lixx | 2023-06-17 01:59:52 UTC | #10

It already run on IC.

-------------------------

cyberowl | 2023-06-17 01:59:59 UTC | #11

Show me vid of this use case.

-------------------------

cyberowl | 2023-06-17 02:02:43 UTC | #12

Why not just use JSON. Why complicate the UI?

-------------------------

lixx | 2023-06-17 02:03:51 UTC | #13

Are you a dev? you also can ignore UI, just use programmer code. mate

-------------------------

slq016 | 2023-06-17 02:05:04 UTC | #14

It really used very easily and useful .

-------------------------

cyberowl | 2023-06-17 02:05:31 UTC | #15

show me. I don't want to create an account. Last time I tried it asked me to spam my twitter account.

-------------------------

Tod0532 | 2023-06-17 02:07:04 UTC | #16

Light already did this. mate

-------------------------

cyberowl | 2023-06-17 02:13:46 UTC | #17

Very helpful. I can see that from just reading text. Show me an example of how it works using a complicated scenario. I also think the description of this post needs more clarification as to what it wants. Like do you want it to be like Postman or like Scratch?

-------------------------

NeutronStarPRO | 2023-06-17 02:17:01 UTC | #18

Amazing! Light is a big project

-------------------------

pphaolu | 2023-06-17 02:17:13 UTC | #19

Not everyone knows how to use json. Light uses UI instead of json to reduce programming requirements. Even you don't know what is json or motoko. This is a miracle. Currently in the dapps of Dfinty, it is absolutely advanced and fantastic.

-------------------------

cyberowl | 2023-06-17 02:20:00 UTC | #20

Most programmers know how to use JSON. Most people can learn JSON in like a few days at most. UI just complicates things. I just want examples of how it is being used and how it can help with the proposal outline above.

-------------------------

Tod0532 | 2023-06-17 02:21:11 UTC | #21

Please pay more attention to MORA LIGHT from related officials. This is a very good application that solves many practical problems.
Also give real developers the corresponding respect.

-------------------------

cyberowl | 2023-06-17 02:22:08 UTC | #22

I am not disrespecting anyone. I am trying to understand if it fulfills this use case in the best design possible.

-------------------------

caolw | 2023-06-17 02:22:11 UTC | #23

Powerful and capable project foundations do not support, but often support garbage projects and related households. For example, hasn't the foundation seen such a good project as Mora?

-------------------------

cyberowl | 2023-06-17 02:23:03 UTC | #24

Why is this about Mora. We are talking about an application use case. Please stay on topic.

-------------------------

NeutronStarPRO | 2023-06-17 02:25:13 UTC | #25

Login and try
![image|690x342](upload://AdPhIVuNkVZMM5aFJINjDNOAf9l.png)

-------------------------

cyberowl | 2023-06-17 02:53:12 UTC | #26

![Screenshot 2023-06-16 at 7.39.19 PM|690x434](upload://u9sxjWDZ7ZZjpOcy0XxmRWbtxz5.jpeg)

I tried to get version from my canister and it doesn't work. 
Currently doesn't support local canisters. 

Attempted and failed to get any response but I get the design of it. However, I still think local and other aspects are important to this proposal.

Also when I delete an action and hard refresh those same actions render again.

-------------------------

WoW | 2023-06-17 03:03:22 UTC | #27

Hello Cyberowl,
I can see you have choose the method "Version" in your canister. Which is a query function.
You are just one-step away from finishing, which you should go to the "Return Agrs" and export the return value .
![image|690x437, 50%](upload://nMoYFUnJ8H6fFJd8x42rSOq06SX.png)

Then you could export the return value as a new variable

![image|690x299, 75%](upload://jBdHJM2ItZL8UrO8IIsigFgJc5l.png)

Finally, you just need to create an interface to bind the output variable and show it.

![image|690x395, 75%](upload://xkc0SN6Y1K9Dsk9fkvDmHld0OdV.png)
![image|668x500, 50%](upload://jStzUxZRnOcUa8CdHZW27by4KPE.png)
![image|643x186, 75%](upload://p3rqvDSTXV6lxQwtk68MAdzz3sT.png)

Then go to "Preview" in the top-right corner and try to run it. On my side it shows the version is "3".
![image|475x300](upload://zIU2Ty4gLcWBVmTkrQuO9FsLHns.png)

-------------------------

cyberowl | 2023-06-17 03:13:32 UTC | #28

These are way too many user clicks. I find it a bit frustrating to use. I don't know. I would like other people's opinions that have used it.

-------------------------

caolw | 2023-06-17 03:43:12 UTC | #29

But it is so powerful

-------------------------

pphaolu | 2023-06-17 03:51:17 UTC | #30

 Its vision is to be usable by anyone, not even programmers.

-------------------------

xij669 | 2023-06-17 16:15:57 UTC | #31

It already run on IC. By Light @Mora

-------------------------

ZackDS | 2023-06-17 17:15:02 UTC | #32

Is it just me or this is turning into shitposting with : 
Light already did this. mate

How many forum users does Mora have to spam with ?

-------------------------

jwarner | 2023-06-17 17:55:38 UTC | #33

[quote="ZackDS, post:32, topic:20748"]
Is it just me or this is turning into shitposting with :
Light already did this. mate
[/quote]

It's not just you. Looks like spam to me as well.

-------------------------

Zane | 2023-06-17 18:57:36 UTC | #34

They are completely missing the point too, while light is definitely an interesting project it doesn't cover the same use cases as the app proposed by this bounty.

-------------------------

domwoe | 2023-06-19 08:13:29 UTC | #35

Light is a great project and we are aware of it. However, with this bounty, we are looking for a *native* application as a GUI for dfx in order to enable an additional workflow to build, deploy, and manage canisters on the Internet Computer.

Please stay on topic in this thread, and open another thread to present and discuss Light. Thank you!

-------------------------

boyin0x | 2023-06-21 04:06:54 UTC | #36

Hi guys, I've been trying some UX/Design ideas for this on the weekend, this is the figma:
```
https://www.figma.com/file/tyLYDwIPFOTx2nu68f2tvg/Boyin_DFX_Dashboard?type=design&t=PgjkuIFcbNCwNlsQ-1
```
Regarding my application to the bounty please check my Gitcoin portfolio and especially the last bounty I made for the iExec team:
```
https://bounties.gitcoin.co/boyin0x/portfolio
https://github.com/boyin0x/iexec-task-manager
```
Sorry for the formatting, but it’s the only way I found to post links here.

-------------------------

cyberowl | 2023-06-21 05:08:36 UTC | #37

I like the command palette, but not a fan of everything else. Nested structure is always a bad idea. Reminds me of javascript callback hell. Also the main screen should focus on the projects (env) and have hierarchy around that.

-------------------------

v1ctor | 2023-06-22 21:20:45 UTC | #38

Hi @domwoe, I would like to apply to this bounty too.

Links to relevant previous work:
1. ICDevs.org bounties I completed: https://github.com/av1ctor/icdevs-wasmer and https://github.com/av1ctor/evm-txs.mo
2. A full IC app I implemented: https://github.com/av1ctor/metamob

Brief Overview:
1. the app will be implemented using Tauri + Vite + React, using Rust and Typescript
2. should allow users to choose which environment will be accessed (local replica or production)
3. should allow logging in with Internet Identity
4. should support loading dfx.json, so canisters could be referenced by name
5. should retrieve the canister's candid if that's supported (__get_candid_interface_tmp_hack), or allow uploading the candid file manually
6. should allow users to visually edit the IC JSON files that have a known schema (using json-editor)
7. should allow users to call canister methods, composing the arguments "visually" through a form, showing the call result

More features can be added later, with a developer grant, like saving and loading projects, undo-redo, logs etc

-------------------------

boyin0x | 2023-06-23 05:52:07 UTC | #39

Hi guys, thanks for the feedback, It was helpful and I'll take some points @cyberowl.

Also I want to make clear that this figma is just a bit of experimentation/learning and also a way to show my interest for the bounty but as I said in my application the first step is to get the UX approved by the Dfiniy team and with the approach you look for.

-------------------------

dfx-json | 2023-06-26 22:53:02 UTC | #40

[quote="cyberowl, post:37, topic:20748, full:true"]
I like the command palette, but not a fan of everything else. Nested structure is always a bad idea. Reminds me of javascript callback hell. Also the main screen should focus on the projects (env) and have hierarchy around that.
[/quote]

Agree with this. It would be nice perhaps to visualize the commands as a directed graph with arrows

-------------------------

dfx-json | 2023-06-26 22:54:41 UTC | #41

[quote="v1ctor, post:38, topic:20748"]
Brief Overview:

1. the app will be implemented using Tauri + Vite + React, using Rust and Typescript
2. should allow users to choose which environment will be accessed (local replica or production)
3. should allow logging in with Internet Identity
4. should support loading dfx.json, so canisters could be referenced by name
5. should retrieve the canister’s candid if that’s supported (__get_candid_interface_tmp_hack), or allow uploading the candid file manually
6. should allow users to visually edit the IC JSON files that have a known schema (using json-editor)
7. should allow users to call canister methods, composing the arguments “visually” through a form, showing the call result
[/quote]

This looks good from a high level. Would love to see some wireframes!! Does not need to be hi-res at this stage.

-------------------------

v1ctor | 2023-06-27 17:42:57 UTC | #42

Designing is not my thing, but here's some wireframes. They can be changed later if the bounty is assigned.

![Visual DFX - 4|635x500](upload://o9M4LGee85ojcoZDaNCiwBltjK.png)
![Visual DFX - 3|635x500](upload://mwrhtPE5ZDoW02QcCFcb1dvNNZp.png)
![Visual DFX - 2|635x500](upload://xpOGHfc364HZDWozL70we6yTVHx.png)
![Visual DFX - 1|635x500](upload://l4Q742QaEFJYD2e1uaFbLJ41s60.png)

-------------------------

dfx-json | 2023-06-28 17:34:47 UTC | #43

This looks good. I have one question that I provided in the below annotated screenshot.

![02bb14e42960a8c63226d572ca54e0b9e2bc2f64|635x500](upload://3IDUD0aDzspIYFRxmNRpjUDCeii.png)

-------------------------

v1ctor | 2023-06-28 19:47:17 UTC | #44

Yeap, it's a vscode-like sidebar. When clicked, the project explorer is hidden/shown. Other options could be added later, when more dfx commands are supported.

-------------------------

justmert | 2023-07-03 13:00:46 UTC | #45

## DFX Dashboard GUI - A Native App

### Introduction

The DFX Dashboard GUI is a native app that provides a graphical user interface for the DFX command-line tool. It is a desktop application that runs on Windows, macOS, and Linux. It is built using the [Electron](https://www.electronjs.org/) framework.

### Features

The DFX Dashboard GUI provides the following features:

- Login with Internet Identity

- Ability to compose canister arguments through the UI; call canisters with arguments

- Ability to edit JSON configurations used by dfx (e.g. dfx.json, networks.json, ic-assets.json)

- Native application for Windows, macOS, and Linux

- Ability to view logs generated by dfx

- Ability to define multiple identities and switch between them

- Local or procuction mode

### Design & UI

**Home Page**

- A welcome message and brief instructions on how to use the tool.

- Quick Start buttons to run common commands (e.g. `dfx start`, `dfx deploy`, `dfx canister call`).

![home|690x404](upload://7gJg30e70ZkIlG51smd5bIUmKMP.jpeg)

**Canisters Page**

- **Canister List Page**: A list of all canisters in the project.

- **Canister Detail Page**: A page for each canister that displays the canister's details (e.g. canister id, canister type, canister status, etc.)

- **Function (Method) Detail Page**: A page for each function (method) that displays the function's details (e.g. function name, function type, function parameters, etc.)

- **Create Canister Page**: A page to create a new canister.

![method|690x404](upload://rOtfNGZI4jpIw9sCWAnRplLzDuJ.jpeg)

**Identity Page**

- A form for users to input and save their identity.

- A button to apply the chosen identity to subsequent commands.

![identities|690x404](upload://4WY9melGBAiScdprNm6cSRkNstT.jpeg)

**Log Page**

- A log viewer to display the log files generated by dfx.

- Options to filter or search the logs.

![logs|690x404](upload://tis9d9E0HeydbvH3qAMvJHZEow8.jpeg)

**Settings Page**

- Options to set logging mode (stdout, or file), log file location, etc.

- An "Apply" button to save the settings.

![settings|690x404](upload://xW2i4iEgJ1kx4rGVuw8XSiBXY26.jpeg)

### Tech Stack & Structure

- Electron Js

- Next Js

- Node Js

- Tailwind CSS

- Typescript

### Deliverables (~5 Weeks)

Project can be delivered in 5 weeks after the bounty is approved.

![deliverables|690x498](upload://bC7jDDqgmxslYBIATpOmGgw4M7I.jpeg)

### Team

**Mert Köklü**

Acted as an ambassador of many organizations including ACM, Microsoft and NVIDIA as Certified Instructor. In the Web3 space, he co-manage the AAVE Turkey Community and advocate for The Graph. Was working with AI video pipelines at an NVIDIA distributor company in Turkey before getting involved with blockchain.

Develops ecosystem tools and applications with various tech stacks. AAVE, W3F, Flow and Filecoin grantee with an accepted multiple projects and now developing open-source, user-friendly applications that add value to the Web3 ecosystem.

```
LinkedIn: https://www.linkedin.com/in/mertkoklu/

GitHub: https://github.com/justmert
```

**Tolga Yaycı**

As a full-stack developer with 2+ years of experience, I have honed my skills in software development, with a focus on dApp development in the past year. I have a deep interest in the Web3 and NFT space and have put my skills to the test by creating a number of relevant applications. In addition to my experience, I have developed detailed React and Next.js projects, further enhancing my ability to build robust and scalable web applications.

In addition to my technical skills, I have also been actively involved in the wider tech community. I have served as a Chainlink Community Advocate, Aave Turkey Community Manager, and Founding Chair of Gazi University ACM Student Chapter. My previous role as a Microsoft Learn Student Ambassador has also given me the opportunity to share my knowledge and experience with others. I have set of experiences and skills and particularly in the areas of full stack software development and community management.

AAVE, W3F, Lens Protocol & Filecoin grantee with an accepted multiple projects and now developing open-source, user-friendly applications that add value to the Web3 ecosystem.


```
LinkedIn: https://www.linkedin.com/in/tolgayayci/

GitHub: https://github.com/tolgayayci
```

### Additional Information

If you have any questions, please feel free to contact us, we can set a call to discuss the project in detail and open to any feedback.

-------------------------

dfx-json | 2023-07-03 16:59:29 UTC | #46

Hi @justmert. Thanks for adding the wireframes! They look great, and I think the design covers most of the aspects we've called out. 

One question - I didn't find a way to switch between projects. For example, the settings screen shows a button to configure `dfx.json`, but which project is it being configured for? Is there some indication somewhere of what project is "active" or currently being edited?

-------------------------

justmert | 2023-07-03 18:03:59 UTC | #47

Thank you for your feedback, @dfx-json 

We agree that it would be beneficial to display the active project and probably display on the left-bottom sidebar, just above the local-mainnet button. 

Users will be able to change or activate projects directly from the homepage. We just forgot to include this section initially, and we appreciate your reminder.

If you have any suggestions regarding this feature, we would be happy to discuss and make the necessary modifications.

-------------------------

cyberowl | 2023-07-04 02:15:57 UTC | #48

Electron that weighs more than 52MB would weigh much less, around 3MB, when built with Tauri.

-------------------------

justmert | 2023-07-04 07:40:57 UTC | #49

Yes, electron applications are larger in size than tauri.

Tauri has nice features, but it has not yet reached such a wide developer base as electron. In the long run, we think that progress with electron will be more beneficial thanks to the community it provides.

If the application size is very critical for this application, we can also develop with tauri, but as a team, we think that electron creates a better experience in terms of development experience and sustainability. 

We are curious about your comments on this subject.

-------------------------

cyberowl | 2023-07-04 07:55:11 UTC | #50

It also needs to be secure and Tauri seems to be more secure than Electron. It is not a large application. It has all the functionality to be developed on. I don't see the problem. In the end it is reading .pem keys. I think developers/users using the application want to feel secure.

-------------------------

justmert | 2023-07-04 08:22:11 UTC | #51

Depends on what you expect from this security, the tauri document claims it's safer, but there are also countless "secure apps" built with electron.

[Electron Showcase](https://www.electronjs.org/apps): VsCode, Discord, GitHub Desktop, Figma, Notion

I think, we can say these are secure applications and users feel safe enough while using these electron based apps.

-------------------------

cyberowl | 2023-07-04 08:31:15 UTC | #52

I don't feel safe using those. It is out of necessity and no other option really. Chromium is a Google blackbox. At the end of the day why wouldn't you use something that has shown promise technically vs something that consumes more energy and storage. This is specially true for people that don't have the latest Mac.

-------------------------

justmert | 2023-07-04 08:49:55 UTC | #53

Well, I understand your concerns about security and resource consumption when it comes to Electron. However, we still believe that Electron still has several advantages over Tauri. 

While Tauri may claim to be more secure, as I said above, many secure applications are built with Electron, such as VSCode, Discord, GitHub Desktop, Figma, and Notion. These widely used applications have demonstrated that **Electron can provide a secure experience** for users.

Electron has a much larger developer community compared to Tauri, which means that it benefits from community-driven support, resources, and plugins. This developer base ensures that Electron receives ongoing updates, bug fixes, and feature enhancements, making it a more sustainable choice for **long-term development** especially for tooling. 

In terms of technical aspect, Electron has proven itself as a **reliable framework**. It allows developers to create cross-platform applications with ease, providing a consistent user experience across different operating systems. 

While it is true that Electron may consume more energy and storage compared to Tauri, it is essential to consider the overall benefits and trade-offs. Electron's extensive feature set and robust development experience outweigh the minor drawbacks in terms of resource consumption, especially considering the widespread availability of modern hardware.

It's important to note that frameworks alone do not guarantee safety. Ultimately, **it is the responsibility of the developers to ensure the safety and security** in their applications.

We are not just creating an application that only we can understand; on the contrary, we want to develop an application that other developers can also contribute and maintain. That's why we believe Electron is suitable for this purpose because of its wide-spread community. Thank you.

-------------------------

ZackDS | 2023-07-04 09:41:50 UTC | #54

I would also consider using Tauri over Electron just because of RUST when building on the IC. So the understanding and contribution to it would make more sense.

-------------------------

cyberowl | 2023-07-04 09:51:08 UTC | #55

[quote="justmert, post:53, topic:20748"]
widespread availability of modern hardware.
[/quote]

This is false. I know several developers that don't have the kind of hardware we have. 

[quote="justmert, post:53, topic:20748"]
Electron has a much larger developer community compared to Tauri
[/quote]
 Communities come and go. ICP is a small community right now does that mean everyone should use AWS or Ethereum?

[quote="justmert, post:53, topic:20748"]
**Electron can provide a secure experience** for users
[/quote]

Many people don't use Signal and Zuck swears Whatsapp is "secure", we don't spy he says.

[quote="justmert, post:53, topic:20748"]
**developers to ensure the safety and security** in their applications
[/quote]
Foundations matter, which is why we build on ICP.

Sometimes we aren't given a choice. Sometimes we are.

-------------------------

justmert | 2023-07-04 09:55:14 UTC | #56

Thanks for comments guys,

If foundation and community wants to build this application with Tauri, then we will build it with Tauri, no problem :tada:

-------------------------

domwoe | 2023-07-06 07:20:44 UTC | #57

Hey everybody,

we'll have a Developer Tooling Working Group session today at 7 pm CEST (UTC+2).
We don't have an agenda for today, hence this would be an ideal opportunity to talk about the DFX GUI with @dfx-json. 

[Meeting Link](https://dfinity.zoom.us/j/98865672859?pwd=UXorcDNQQzl3Tk5rVTVmRW5lYXdEQT09)

Hope to see you there!

-------------------------

RMCS | 2023-07-07 08:30:24 UTC | #58

Not sure if it fits the description but i already started something like this once, 
I stopped the development because somebody from Dfinity announched to develop this kind of tooling.

https://twitter.com/i/status/1605116288510328832

-------------------------

justmert | 2023-07-07 11:45:13 UTC | #59

Hey @dfx-json and @domwoe, 

As we talked at the meeting, we made a mock-up update on how projects can be displayed. You can quickly switch between projects with the purple sidebar on the left, and create new projects with the + button at the bottom. 

You will also be able to see all projects on the projects page, search through them, and quickly view core data about projects. We have placed it as a table for mock up, but maybe it can be implemented as a card view as well. Funcionality can be enhanced for this page.

![Revised|690x383](upload://nj9G5VFiQXuSqKXdKkR25usQoJw.jpeg)

-------------------------

dfx-json | 2023-07-07 14:28:05 UTC | #60

I would encourage you to apply for the bounty if you're still interested in the project!

-------------------------

RMCS | 2023-07-08 10:55:26 UTC | #61

After some consideration, I will apply for the bounty. When is the deadline for the submission? I don’t have time to do it in the next couple of days.

-------------------------

dfx-json | 2023-07-11 20:05:08 UTC | #62

the deadline is this Friday 7/14. please submit wireframes and a project plan!

-------------------------

RMCS | 2023-07-13 09:03:13 UTC | #63

Sorry, i'm not going to apply, putting everything side-by-side made me realize it's to much work for me at this time, best of luck to all participants!

I do want to share the repo for the project that i previously shared in the hopes it could help somebody;
https://github.com/rem-code-s/dfx-manager

The stack used is;
- React (typescript)
- Material-UI
- Tauri (Rust)

I made the decision to layer the GUI on top if the CLI instead of integrating it within the app, this means that the UI can trigger CLI calls through Rust instead of integrating DFX directly within the app thus making it more complex to update the App when a new DFX version is released.

I'm using the identities that are found on the filesystem, i was working on integrating Internet identity but at that time i couldn't figure out how make the redirect to the app work.

If you want any more information, feel free to reach out.

Best of luck!

-------------------------

icaten | 2023-07-17 02:08:30 UTC | #64

To anyone who may be working on this, I've had success with using `zx` for bash scripting with dfx, which combined with one of the node based desktop app builders could certainly be a way to make life easier.

-------------------------

ZackDS | 2023-07-17 07:04:26 UTC | #65

Not sure if using JS instead to do some bash scripting is better for dfx in particular.

-------------------------

domwoe | 2023-07-17 07:21:19 UTC | #66

Thank you all for your patience. We'd like to nominate @justmert to work on this bounty :tada:

-------------------------

justmert | 2023-07-17 07:36:57 UTC | #67

Hi @domwoe,

Thank you very much for being nominated us for this bounty, we will start working very soon with great excitement. 

Where can we contact for some technical questions and other issues?

-------------------------

domwoe | 2023-07-17 08:06:15 UTC | #68

I sent you a private message.

-------------------------

icaten | 2023-07-17 21:38:25 UTC | #69

Zx is a bash scripting library. For instance, 

```js
// Just returns the deployment CLI string. 
function getICRC1TokenCanisterDfxDeploymentCmd({ 
    mintersPrincipal,
    dfxJsonIcrc1CanisterName,
    tokenName, 
    tokenSymbol,
    fee = 10
  })
{
  return oneLine`dfx deploy ${dfxJsonIcrc1CanisterName} --argument '(variant { Init = 
    record { 
      token_symbol = "${tokenSymbol}";
      token_name =  "${tokenName}";
      minting_account = record { owner = principal"${mintersPrincipal}"; };
      transfer_fee = ${fee};
      metadata = vec { ${getBase64DataEncodedSVG()} };
      initial_balances = vec {}; 
      archive_options = record {
        num_blocks_to_archive = 2000;
        trigger_threshold = 1000;
        controller_id = principal"${mintersPrincipal}";
      };
    }
  })'`;
};
// Runs the actual cmd line

// Zx escapes automatically, so to run interpolated generated strings for dfx, easier to bypass the default escaper, though a specific dfx char escaper could be developed just for dfx. 
async function zxRaw(cmd) {
  const escaping = $.quote;
  $.quote = (...all) => all;
  const res = await $`${cmd}`;
  $.quote = escaping;
  return res;
};

// For comparison here's the regular way it is used, which can be done when there's not lots of string interpolation:
async function getCurrentDfxIdPrincipal() { 
  return `${await $`dfx identity get-principal`}`.trim(); 
}

const currentPrincipal = await getCurrentDfxIdPrincipal();
try {
  await zxRaw(getICRC1TokenCanisterDfxDeploymentCmd({
    mintersPrincipal: currentPrincipal,
    dfxJsonIcrc1CanisterName: "icrc1_token_canister",
    tokenName: "ICRC1 Mock Token", 
    tokenSymbol: "ICRC1MT_"
  }));
} catch (p) {
  throw new Error(`While deploying icrc1 token canister caught error ${p.toString()}`);
};
```

Is a javascript method that will deploy an icrc1 token canister via the dfx cmd line; it makes handling dynamic configuration simpler. Plus with declarations already generated in JS/TS, could make it much simpler to do the GUI's underlying functionality.

Here's the zx repo link: 
https://github.com/google/zx

Finally, if anyone does find it useful, here's the easiest way to restart dfx in the background:
```js
async function restartDfxBackgroundClean () {
  await $`dfx stop`;
  spawnSync('dfx', ['start', '--clean', '--background'], {
    detached: true,
    stdio: 'ignore',
  });
};
```
(Though you could pipe the stio if you wanted to listen to Debug.print()s)

-------------------------

cyberowl | 2023-08-11 02:19:12 UTC | #70

What repo is being used whereby we can follow progress?

-------------------------

cyberowl | 2023-09-10 14:16:52 UTC | #71

Is this still happening? @justmert . Repo to follow progress would be good.

-------------------------

justmert | 2023-09-12 05:34:40 UTC | #72

Hey @cyberowl, this is Tolga.

Since Mert has been in the military service for a while, I took over his account as his partner, but I was able to check here late, I apologize for not seeing it sooner. Things took a little longer because of this, but I will be announcing here soon for a test version with a few users (estimated 2 weeks).

There is no public repo at the moment, but when the testing process begins, I will take care to commit it in a way that you can actively follow the developments.

Thank you for your time and support, I look forward to your help for the first tests of app.

-------------------------

dfx-json | 2023-10-10 22:27:20 UTC | #73

Hi @tolga or @justmert - has there been some progress on this app? We would love to get an update as to how things are progressing. Thanks!

-------------------------

justmert | 2023-10-19 09:00:39 UTC | #74

Hi @dfx-json, Project and Identity logic completed, now users can add projects and open with their preferred editor and set their identity configs in all details, tomorrow I will share some screenshots here, handling with last fixes right now.

P.S: We can make a showcase about application in upcoming developer group meeting, would love to know the time, this would be completed until this meeting with all cli functionality.

-------------------------

dfx-json | 2023-10-19 22:25:11 UTC | #75

Great to hear. Looking forward to the screenshots! The next Developer Tooling Working Group meeting will be November 2 at 10AM Pacific

-------------------------

justmert | 2023-10-23 10:34:11 UTC | #76

Hey @dfx-json, here is some screenshots. You can expect similar user interface for other pages and components, also has white/dark mode options. Hope you liked that, we take care to create a simple interface.

I will show you a more detailed version live at the meeting and try it if would be possible.

**Create Project**

![Screenshot 2023-10-23 at 13.28.35|626x499, 100%](upload://kscRsPfR3GtNvlGv9fB7uPyot2Q.jpeg)

**Create Identity**

![Screenshot 2023-10-23 at 13.27.50|626x499, 100%](upload://cvqcdsrLH5NuZB7mqsL1XticaJp.jpeg)

**Identity (Fast settings like, change, edit)**

![Screenshot 2023-10-23 at 13.28.55|484x500, 50%](upload://wMEQQmv7QOZ1OJFfyFClGOGSN9b.png)

-------------------------

dfx-json | 2023-10-23 13:51:22 UTC | #77

Looking good so far!!

-------------------------

waldmatias | 2023-11-25 20:13:03 UTC | #78

Hi everyone! new ICP dev here!! :smile: Just getting up to date on some rather important (stand out) topics in the forum... is this dashboard app still in the works? any repo we can take a look at? (I'm a Rust dev, and I'm very interested in both Tauri and Leptos too.)

-------------------------

boyin0x | 2023-11-27 01:51:47 UTC | #79

Hi guys, I would love to take this one.
I created some work a few weeks ago when it was still in open state, thinking may I could be selected to work on it.
This is a screen recording of the Tauri app I made at the time. 
I'm sharing this just to show that my interest is real.
Here is the video:
```
https://github.com/boyin0x/dfx-ui
```

-------------------------

tolga | 2024-03-05 15:38:30 UTC | #80

📢 I am thrilled to announce the release of v0 of DFX GUI. This is just the beginning, and as such, please be aware that some features and aspects of the app **may change frequently** as I continue to develop for more stable version.

👍 Your feedback is incredibly important to me. I encourage you to try out the application and share your thoughts and experiences. If you encounter any bugs, please feel free to use [bug reports issue template](https://github.com/tolgayayci/dfinity-dfx-gui/issues/new?assignees=tolgayayci&labels=bug&projects=&template=bug-report.md&title=%5BBUG%5D) . Also, I am very open to any [feature requests](https://github.com/tolgayayci/dfinity-dfx-gui/issues/new?assignees=tolgayayci&labels=feature-request&projects=&template=feature-request.md&title=%5BFEAT%5D) you may have. Your insights and suggestions are crucial in shaping the future direction of the app.

🗣️ : Currently, the app is equipped with features mentioned below;

**Project Management:** This feature allows users to efficiently manage their projects. It includes capabilities to create new projects, import existing ones from other sources, and delete projects that are no longer needed.

**Identity Management:** This component focuses on managing user identities. Users can create new identities, import existing ones, delete unnecessary identities, and seamlessly switch between different identities.

**Canister Interactions:** This feature is centered around interactions with canisters. Users can create and delete canisters, manage their settings, and interact with them using a variety of commands, arguments, and flags through a user-friendly interface.

**Network Management:** Network management is facilitated through the ability to edit the global networks.json file. This feature enables users to customize and configure network settings to meet the specific needs of their projects.

**Environment Variables:** This aspect of the system allows users to edit existing environment variables.

> **P.S:** Review the [first release notes](https://github.com/tolgayayci/dfinity-dfx-gui/releases/tag/v0.1.0) for more information about the features and capabilities of the DFINITY DFX GUI application.

🥳 : Thank you for joining me on this journey. I am eagerly looking forward to your feedback and am excited to see how the app can be a valuable tool in your work.

Also big thanks to Kai Peacock, @dfx-json and @domwoe for their support and help to build this project.

:computer: Download Here: https://github.com/tolgayayci/dfinity-dfx-gui/releases/tag/v0.1.2

-------------------------

icaten | 2024-03-05 19:40:06 UTC | #81

Great work!

You could direct the local replica session runtime `stdout` and `stderr` to a file, that is then used to display it in a view to the user. This could be along side commands not specifically related to existing views, such as starting/stoping the local replica; or an interactive inline shell view for the curious user. 

May be a bit early, but extensibility is key feature of this entire space so whatever's needed for programmable plugins (that could provide for a Mops/CanisterGeek/Cyclops/SNS/etc integration) that could added as additional entries on the left panel. A point of departure for this kind of thing might be a "hello world" example of integrating an inline CandidUI view (or another option might be possible with the running Motoko in the browser package that exists). 

How about a view devoted to testing (if implemented in the code base, could even generate the suite using the Vyber? iirc library) showing coverage and other related stats with possible features like creating/exporting/importing snapshots. Testing is really so amenable to automation and would fit right in along the rest of this app's purpose and flow.

.did viewer/editor/translator to cli/or other language bindings?

Once again, really great work!

-------------------------

tolga | 2024-03-06 07:44:39 UTC | #82

Hey @icaten, thanks for your kind words and suggestions!

You touched good points and as you said there are so many points to build/improve. To continue more trackable, if I kindly request can you create a feature request ticket? By this way all of us look into requests, group and start to working asap!

I hope to start working soon for new version with new features to enhance usability. Waiting [first feature request](https://github.com/tolgayayci/dfinity-dfx-gui/issues/new?assignees=tolgayayci&labels=feature-request&projects=&template=feature-request.md&title=%5BFEAT%5D) from you :) 

Best!

-------------------------

domwoe | 2024-03-07 12:23:04 UTC | #83

Please join us for today's Developer Tooling Working Group at 7pm CET where @tolga will give a demo of the dfx dashboard GUI.

Zoom Link: https://dfinity.zoom.us/j/98865672859?pwd=UXorcDNQQzl3Tk5rVTVmRW5lYXdEQT09

-------------------------

