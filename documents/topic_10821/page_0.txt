link2020 | 2022-02-11 06:34:51 UTC | #1

It takes about 0.05 T cycles for 10 minutes.
Is this normal? Is this an issue?

-------------------------

cryptoschindler | 2022-02-12 16:05:32 UTC | #2

you have to pay for storage, this is why your canister constantly consumes cycles

-------------------------

ueyamamasashi | 2022-02-12 21:31:53 UTC | #3

Just to confirm, even if I upload a static front site that doesn't consume cycles without consensus, do I still have to pay 7.2T cycles (0.05T x 6 x 24) per day as storage fee?

-------------------------

ueyamamasashi | 2022-02-12 21:58:40 UTC | #4

I found table in document.
https://smartcontracts.org/docs/developers-guide/computation-and-storage-costs.html

-------------------------

GLdev | 2022-02-12 22:12:15 UTC | #5

[quote="ueyamamasashi, post:3, topic:10821"]
do I still have to pay 7.2T cycles (0.05T x 6 x 24) per day as storage fee?
[/quote]

7.2 T cycles per day is a lot. Are you sure you measured correctly? 

For reference, I installed a small canister on Jan 17, did some queries and updates on it, and it's been running since then and it only consumed ~100B cycles (0.1T) out of the 4T that the canister starts with...

-------------------------

ueyamamasashi | 2022-02-12 23:18:07 UTC | #6

This calculation is refer to:

> It takes about 0.05 T cycles for 10 minutes.
Is this normal? Is this an issue?

I thought figure is too much, too.So I asked.

-------------------------

PaulLiu | 2022-02-13 05:20:05 UTC | #7

My [Tip Jar Canister](https://forum.dfinity.org/t/worry-about-your-favorate-canister-running-low-on-cycles-you-got-it-covered/10307) consumes about 0.5 TC every day because it uses heartbeat. It is very hard for me to imagine anything that doesn't use heartbeat will be more expensive

-------------------------

nomeata | 2022-02-13 21:44:05 UTC | #8

Canister size matters, of course.

-------------------------

3cL1p5e7 | 2022-02-14 09:45:00 UTC | #9

It is very strange. How many assets do you upload to canister?
Is it possible to show your sourcecode?

-------------------------

ueyamamasashi | 2022-02-14 21:10:34 UTC | #10

Thank you for reply.But this is not my case.

> It takes about 0.05 T cycles for 10 minutes.

I felt strange, too.But I understood under reply though I don't know what heartbeat is.  

> about 0.5 TC every day because it uses heartbeat.

I am sorry if my English confuse you.

Thank you your kindness!

-------------------------

jzxchiang | 2022-02-15 07:44:11 UTC | #11

Huh interesting, is heartbeat supposed to be that expensive? Is that a Motoko thing, or do Rust heartbeat canisters incur the same cost?

-------------------------

PaulLiu | 2022-02-15 19:04:45 UTC | #12

I think it is because the function has to wake  up every second even when there is nothing to do. The invocation cost, however small, will add up. It'll be costly for every canister to rely on implementing heartbeat themselves. Rather there can be one cronjob service that accepts callback registration and more flexible invocation schedules, then other canisters can use the cronjob instead.

-------------------------

jzxchiang | 2022-02-16 22:03:19 UTC | #13

Hm... is there any way to optimize that? $0.70 every day in cycle costs is not trivialâ€”probably more expensive than most other things, including storage.

For example, could a canister "subscribe" to only get woken up every 1000 heartbeats instead of every 1 heartbeat (without handling that counter logic itself, which would require getting woken up every 1 heartbeat anyways)?

-------------------------

PaulLiu | 2022-02-16 23:41:18 UTC | #14

I tend to think encoding such schedules into system API is less flexible. Suppose there is a public canister called "cronjob", it is able to accept anyone's schedule and make callbacks. Will it not be enough for your need? It can even be upgraded as demand changes, e.g., schedules based on exponential backoff, etc.

-------------------------

PaulLiu | 2022-02-16 23:42:44 UTC | #15

Or better, it can call you back with some preset data (think a closure) without you having to remember it. Many benefits can be achieved.

-------------------------

jzxchiang | 2022-02-17 07:31:59 UTC | #16

Yeah, it would meet my need.

I think the hard part is figuring out the funding model. Maybe when a client wants to "register" a method to be called every X seconds, it also provides a down payment in cycles?

Basically, it seems like this public heartbeat canister would need to maintain an internal ledger mapping clients to cycles, and if and only if a client has enough cycles does the heartbeat canister call the client's registered canister+method.

Periodically, clients would need to top up the canister with cycles so that their registered method gets continually called, in addition to the down payment.

-------------------------

nomeata | 2022-02-17 10:17:50 UTC | #17

Right, that seems to be the hard part. But isn't it a core promise of the Internet Computer vision to enable such services? Then maybe a useful Cron job canister might be a good way to demonstrate that this vision is realistic :-)

-------------------------

PaulLiu | 2022-02-17 23:38:23 UTC | #18

Or just [count on public donation](https://forum.dfinity.org/t/worry-about-your-favorate-canister-running-low-on-cycles-you-got-it-covered/10307) to keep cronjob canister alive :slight_smile:

-------------------------

cryptoschindler | 2022-03-11 10:43:59 UTC | #19

is it really intended for heartbeat to be so expensive?

-------------------------

skilesare | 2022-03-11 14:53:06 UTC | #20

See https://forum.dfinity.org/t/is-there-any-way-to-set-up-recurring-payments-with-the-internet-computer/8572/12?u=skilesare for ideas here. It is unlikely that long term every cansister should implement heartbeat that needs scheduling.

-------------------------

