kpeacock | 2024-01-23 16:26:49 UTC | #1

The latest release for agent-js is here with a few new features to be aware of! 

We have a fix for the `disableIdle` flag, we've swapped `secp256k1` for `@noble/curves/secp256k1`, and there's a new `PartialIdentity` export in `@dfinity/identity` that you can use in `@dfinity/auth-client` to delegate to any public key without needing to have the full key pair available in the Agent.

## What's Changed

* fix: running audit fix by [@krpeacock](https://github.com/krpeacock) in [#826](https://github.com/dfinity/agent-js/pull/826)
* fix: honor disableIdle flag by [@ncpenke](https://github.com/ncpenke) in [#809](https://github.com/dfinity/agent-js/pull/809)
* fix: Limit the delegation depth of read_state certificates to 1 by [@oggy-dfin](https://github.com/oggy-dfin) in [#813](https://github.com/dfinity/agent-js/pull/813)
* chore(deps-dev): bump vite from 4.5.0 to 5.0.5 by [@dependabot](https://github.com/dependabot) in [#810](https://github.com/dfinity/agent-js/pull/810)
* feat: introduces partial identity by [@krpeacock](https://github.com/krpeacock) in [#812](https://github.com/dfinity/agent-js/pull/812)
* feat: replaces `secp256k1` npm package with `@noble/curves` by [@krpeacock](https://github.com/krpeacock) in [#814](https://github.com/dfinity/agent-js/pull/814)
* chore: GitHub actions warning cleanup by [@krpeacock](https://github.com/krpeacock) in [#819](https://github.com/dfinity/agent-js/pull/819)
* chore: cleaning up linting and stricter CI by [@krpeacock](https://github.com/krpeacock) in [#821](https://github.com/dfinity/agent-js/pull/821)
* feat: add `github.dev` and `gitpod.io` to known hosts by [@rvanasa](https://github.com/rvanasa) in [#822](https://github.com/dfinity/agent-js/pull/822)

https://github.com/dfinity/agent-js/releases/tag/v0.21.2

P.S. We're trying out a new publishing process, so apologies for the unnecessary patches while we get the process smoothed out!

-------------------------

cryptoschindler | 2024-01-23 17:25:23 UTC | #2

i see that @rvanasa added `gitpod.io` to the known hosts again, but something broke between `0.18.1` and and this release. using the default actor exported from the generated declarations, the request url changed between the versions. the new path doesn't work for gitpod.

`0.18.1` path on gitpod
![Screenshot 2024-01-23 at 18.20.48|690x82](upload://gltA7uZpKlBoVgXm7rXphxHlzRG.png)
`0.21.2` path on gitpod
![Screenshot 2024-01-23 at 18.23.56|690x137](upload://oGbiDenakQG7EATbJYsSTFRLOe6.png)

-------------------------

cryptoschindler | 2024-01-23 17:43:15 UTC | #3

[this](https://github.com/dfinity/agent-js/blob/cc489d9ad9b7c74e385c1fb308d692bebedc280f/packages/agent/src/agent/http/index.ts#L238) should probably be `hostname` instead of `knownHost`, at least for the gitpod usecase

-------------------------

rvanasa | 2024-01-23 18:13:01 UTC | #4

You're right; thanks for catching this. Follow-up PR: [#830](https://github.com/dfinity/agent-js/pull/830)

-------------------------

kpeacock | 2024-01-23 19:51:58 UTC | #5

@cryptoschindler I'll get a patch out for this soon!

-------------------------

cryptoschindler | 2024-01-29 11:13:19 UTC | #6

This has been [patched](https://github.com/dfinity/agent-js/releases/tag/v0.21.4)

-------------------------

cryptoschindler | 2024-01-29 11:33:46 UTC | #7

@kpeacock @rvanasa 
I was wondering, could there be a similar approach for `authClient.login`? That is I can omit the `identityProvider` key and the `authClient` will figure out the correct provider URL on my behalf. If not, how would you implement an `identityProvider` that works locally, on mainnet and in environments like github.dev and gitpod.io?

currently i'm just using this

```
			// start the login process and wait for it to finish
			await new Promise<void>((resolve, reject) => {
				authClient.login({
					identityProvider:
						process.env.DFX_NETWORK === 'ic'
							? 'https://identity.ic0.app'
							: `http://rdmx6-jaaaa-aaaaa-aaadq-cai.localhost:4943`,
					onSuccess: resolve,
					onError: reject,
					windowOpenerFeatures: `toolbar=0,location=0,menubar=0,width=400,height=600,left=${window.screen.width / 2 - 200},top=${window.screen.height / 2 - 300}`
				});
			});
```

-------------------------

kpeacock | 2024-01-29 17:40:51 UTC | #8

My view is that trying to make inferring `idpProvider` work isn't worth it. There are a dozen ways someone might want to pass the configuration - global variable, url parameter, environment variable, etc. `host` is special because you can point at `"/"`, but `idpProvider` will always be a separate domain.

-------------------------

