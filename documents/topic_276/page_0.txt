senior.joinu | 2019-12-10 18:20:29 UTC | #1

Let's say I have two canisters with actors A and B respectively. 
How can I call A.foo() from B.bar()?

How should I declare a foreign function from another actor to make it work?

-------------------------

Ori | 2019-12-10 20:18:14 UTC | #2

Hi joinu, There isn’t support for multiple actors yet. But you can create and import modules, see some of enzo’s examples: https://github.com/enzoh/mo-qr

-------------------------

senior.joinu | 2019-12-11 10:01:54 UTC | #3

Hi, Ori. This is not what I'm trying to achieve. 
Is there a way to say to the compiler: "I know that this function <canister_id>_A.foo() is gonna be there, when you'll be deployed, trust me. Here is its signature ..."?

-------------------------

Ori | 2019-12-11 10:15:36 UTC | #4

Thanks joinu. The support for multiple actors will broadly include messaging between them and [capabilities](https://en.m.wikipedia.org/wiki/Capability-based_security), this isn’t in the current release but should be coming up soon for you.

-------------------------

Ori | 2019-12-22 15:38:38 UTC | #5

@senior.joinu A good tutorial on the current state of this has been added here:
https://sdk.dfinity.org/developers-guide/tutorials/multiple-actors.html

-------------------------

Ori | 2020-01-22 08:50:26 UTC | #6

You can begin to explore this in v0.4.13: [https://forum.dfinity.org/t/release-notes-for-v0-4-13/377](https://forum.dfinity.org/t/release-notes-for-v0-4-13/377) but please note the documentation doesn’t reflect this just yet.

-------------------------

senior.joinu | 2020-01-23 09:35:30 UTC | #7

Thanks a lot, Ori! Great news.

-------------------------

Ori | 2020-02-21 15:15:49 UTC | #8

A simple example here for you, just for reference: https://forum.dfinity.org/t/calling-another-canisters-methods/473?u=ori

-------------------------

