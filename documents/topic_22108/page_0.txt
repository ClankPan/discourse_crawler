Mitch | 2023-08-13 15:22:50 UTC | #1

Hey all, I'm curious if there is an updated documentation on the [new sns.yml](https://github.com/dfinity/sns-testing/blob/main/example_sns_init.yaml). 

If not my questions so far:

1. What is the `Principals: []` field for.
2. How does this vesting schedule parameter work?
```
VestingSchedule: 
    events: 104
    interval: 7 d

  start_time: 12:00 UTC 
  duration: 7 days
```

3. Where do you define a developer neuron? or is this no longer required with the 1 proposal method?

-------------------------

DanielThurau | 2023-08-15 23:00:29 UTC | #2

Hi @Mitch

The NNS team plans to add documentation to the developer doc portal  on the day of proposal adoption to enable the 1-proposal feature. These docs will include a template sns.yml that contains some comments explaining each configuration field. Keep and eye on this [topic](https://forum.dfinity.org/t/enhancement-of-the-sns-launch-process-one-proposal/19548/8) to see when that documentation is going to go live. I plan to update it when the proposal is available and when its been adopted.

In the mean time, I'm happy to answer some questions :) 

 > 1. What is the `Principals: []` field for.

This is currently a placeholder field. We intend to support aliasing principals in the near future for easier configuration. It can be left empty for now.

> How does this vesting schedule parameter work?

`start_time` and `duration` are not part of the `VestingSchedule` structure. 

The `VestingSchedule` is equivalent to to the `NeuronBasketConstructionParameters` but made more generic. This specifies how many SNS Neurons will be created for each participant in the decentralization swap. You specify the number of events (e.g. the number of neurons) and the interval of their dissolve delay.

> 3. Where do you define a developer neuron? or is this no longer required with the 1 proposal method?

There is a new structure called the `Distribution` which contains a `Neurons` section. This is where you would specify the initial developer neurons.

-------------------------

Mitch | 2023-08-16 01:22:52 UTC | #3

That's great, that clears everything up. I'll be following for the official doc, thanks for your help!

-------------------------

Mitch | 2023-08-28 17:13:41 UTC | #4

Hey @DanielThurau I'm looking at the new [sns.yml example](https://github.com/dfinity/sns-testing/blob/main/example_sns_init.yaml)

Has the airdrop section been removed or is it just not in the example?

-------------------------

DanielThurau | 2023-08-28 18:41:16 UTC | #5

Hi @Mitch,

There is no airdrop section for 1-proposal initialization method.

-------------------------

Mitch | 2023-08-29 02:29:59 UTC | #6

Just to be sure I understand correctly, this means essentially any distribution neurons are considered developer allocated tokens? I've seen other projects distribute to seed investors in the airdrop field, but now it seems not possible, is this true?

```
Error: The sum of all developer allocated tokens must be less than or equal to swap_distribution.total_e8s
```

-------------------------

DanielThurau | 2023-08-29 22:40:25 UTC | #7

> Just to be sure I understand correctly, this means essentially any distribution neurons are considered developer allocated tokens?

That's correct.

>  Iâ€™ve seen other projects distribute to seed investors in the airdrop field

I'm not aware of projects that did this but perhaps they did. In any case, one of the design principles of the SNS and the decentralization swap is to provide a platform that achieves decentralization, which is why we have this specific validation rule. The goal is to make sure that the pre-decentralization team (including seed investors, dev team, etc) do not have more voting power than the participants who are pledging ICP or maturity as part of the swap. Otherwise, these pre-decentralization teams could perform rugpulls or violate other security aspects of the SNS.

-------------------------

Mitch | 2023-08-29 22:54:49 UTC | #8

Awesome, thanks for explaining :pray:

-------------------------

