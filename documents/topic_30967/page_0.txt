jamesbeadle | 2024-05-20 13:52:53 UTC | #1

We have been unable to setup a local test for our neuron_controller so we are going live with it testing as we go. 

We have successfully create the DAO controlled neuron, and it was claimed by the DAO. The function responsible for this was stake_nns_neuron:
https://github.com/jamesbeadle/OpenFPL/blob/master/src/neuron_controller/actor.mo

The next thing to do increase the dissolve delay to 8 years, we have a script to manage the neuronin the same file.

However, when running the script we receive the following error:
![image|690x465](upload://hZMU62glrqEkcMsX4eKlCTZs4pg.jpeg)

-------------------------

jasonzhu | 2024-05-20 17:18:22 UTC | #2

If I understood the logs correctly, the proposal was trying to execute a generic nervous system function added [here](https://dashboard.internetcomputer.org/sns/gyito-zyaaa-aaaaq-aacpq-cai/proposal/2) and it seems to have failed when **executing** the proposal because of payload parsing, after its **validation** passed while creating the proposal.

Is it possible that the payload format accepted by the validator is different than that accepted by the executor? Didn't look into your repo too much, but from searching "validateManageDAONeuron" I got those [2 methods](https://github.com/jamesbeadle/OpenFPL/blob/2307a5f51b41ff691585149349f26aa1a8a78d86/src/OpenFPL_backend/main.mo#L369-L396) and they do seem to take different arguments. Could it be the reason?

-------------------------

jamesbeadle | 2024-05-20 17:23:50 UTC | #3

Hello sir, 

Hamish from OpenChat came back to me about not long ago and has noticed the format of my payload is off.

I new proposal will be raised shortly to update the backend, then a new proposal will be made to test the manage neuron but hopefully this has been resolved... I will add the solution if it is.

-------------------------

jamesbeadle | 2024-05-20 17:24:29 UTC | #4

Also yes, you are correct, the payloads did not match on the validation and the execution, that is being fixed.

-------------------------

jamesbeadle | 2024-05-21 07:41:29 UTC | #5

Hi Jason,

The proposal executed:

https://nns.ic0.app/proposal/?u=gyito-zyaaa-aaaaq-aacpq-cai&proposal=45

unfortunately it didn't update to 8 years:

![image|690x152](upload://ikxWfDtFK1lJjw4Lvsls1UENZ3U.png)

-------------------------

jasonzhu | 2024-05-21 18:58:28 UTC | #6

If you grab the payload and feed it into `didc`:

```
$ didc decode 4449444c056b01c6b3bb9106016c01a78882820a026e036b0190f29afe07046c018dc3b2b3037c010000010080b8a6f800

(
  variant {
    1_647_237_574 = record {
      2_688_582_695 = opt variant {
        2_143_729_936 = record { 913_088_909 = 252_288_000 : int }
      };
    }
  },
)
```

We can see that `252_288_000` is an int. However, I believe `additional_dissolve_delay_seconds` [should be a nat32](https://sourcegraph.com/github.com/dfinity/ic@8176ea68ae82cb2ba3eec346259e00bf318a171d/-/blob/rs/nns/governance/canister/governance.did?L243). AFAIK, int is not a subtype of nat32 so something encoded as `int` cannot be decoded as `nat32`. (I'm not a candid expert, so @chenyan in case I'm wrong)

It might be worth looking into how you prepared the payload. And if that's indeed an issue, one way to prevent it in the future is for the validator to return something that's not just "Proposal is valid", since I believe the validator will see something like `operation = null` instead of `operation = opt variant { IncreaseDissolveDelay = record { additional_dissolve_delay_seconds = 252_288_000 }}`. Essentially, if the validator can turn the structured data into a text format, it can help the proposer as well as voters to examine the payload.

-------------------------

jamesbeadle | 2024-05-21 19:43:30 UTC | #7

Hi Jason,

Sorry for not updating you sooner. I did have the wrong payload, and it was missing from the validation function, and I was using the SECP256K1.ID.Test_Key when i tried to update it and not Key_1, the key the neuron was staked with.

A proposal to update the neuron controller has executed to fix all this just now and I will raise the proposal to try again. I will let you know.

-------------------------

jamesbeadle | 2024-05-22 12:30:44 UTC | #8

Hi Jason,

So I’m travelling to Zurich but the proposal executed to update the neuron to 8 years but it didn’t work. Here is what I executed:

![IMG_0351|292x500](upload://cmuq3jFXBCLmbyn6jmlHCxrceqh.jpeg)


And this is the stored response from the request:

![IMG_0350|230x500](upload://fIXCZ6gSE9tfgnTePUuplNR2K14.png)

Saying it didn’t have an operation when it did?

-------------------------

bjoern | 2024-05-22 12:39:28 UTC | #9

The Candid encoder seems to have encoded the `252_288_000` into an `int` but the function expects a `nat32`. (This is visible in [Jason's message](https://forum.dfinity.org/t/cant-manage-dao-neuron/30967/6?u=bjoern) above.) Can you maybe do a `252_288_000 : nat32` explicitly?

I hope you have a safe flight, looking forward to meeting you tomorrow!

-------------------------

jamesbeadle | 2024-05-22 13:23:31 UTC | #10

Sorry I’ve been fixing so many things trying to get it staked I missed that.

Let me try again.

I’m way too scared to fly but it’s only a 12 hour drive. Looking forward to meeting you too.

-------------------------

jamesbeadle | 2024-05-22 21:18:14 UTC | #11

Hey,

So I just had the wrong payload, the neuron has been configured to 8 years now using the correct payload:

`(variant { Configure = record { operation = opt variant { IncreaseDissolveDelay = record { additional_dissolve_delay_seconds = 252460800:nat32 } } } })`

Thanks 
James

-------------------------

