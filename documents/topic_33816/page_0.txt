peterparker | 2024-08-02 11:53:03 UTC | #1

Updating the IC types in TypeScript leads to having to resolve a breaking change given that `wasm_memory_persistence` is a mandatory optional types.

I found an entry about it in this [CHANGELOG](https://github.com/dfinity/interface-spec/blob/2b479115c064b82f551815aac000dfd33d2beb2d/spec/_attachments/interface-spec-changelog.md?plain=1#L9) and a brief examplenation in the [documentation](https://internetcomputer.org/docs/current/references/ic-interface-spec/#system-api-upgrades) but, nowhere it is explained how to migrate - i.e. what's the backwards compatibility value to use?

```
// Mode used to be typed as
mode: {reinstall: null} | {upgrade: [] | [{skip_pre_upgrade: [] | [boolean]}]} | {install: null};

// New type
mode: {reinstall: null}
  | {
      upgrade:
        | []
        | [
            {
              wasm_memory_persistence: [] | [{keep: null} | {replace: null}];
              skip_pre_upgrade: [] | [boolean];
            }
          ];
    }
  | {install: null};

// So given the following
mode: {upgrade: [{skip_pre_upgrade: [false]}]}

// What should be the backwards compatible parameter?
mode: {upgrade: [{skip_pre_upgrade: [false], wasm_memory_persistence: [????????????]}]}
```

Side note: `wasm_memory_persistence` relates to what is commonly referred as "heap" memory?

-------------------------

