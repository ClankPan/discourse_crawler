Jesse | 2021-12-28 02:29:44 UTC | #1

I'm curious to know if it is currently possible for IC apps to be featured in the apple app store? and if not currently, are there any plans for the future?

-------------------------

faraz.shaikh | 2021-12-28 02:35:54 UTC | #2

Elaborate a bit more.

The app has to adhere to iOS market place guide lines. The backend can be IC (like any other backend) 

Why do you need a native app ? A progressive web app with wallet integration for session info is easier.


multiple POCs have been built - for example cancan client  was a native app. you should be able to refer/reuse that code.

-------------------------

Jesse | 2021-12-28 02:50:17 UTC | #3

Both my front end and back end are to be hosted on the IC. I’d like to get my app in the apple store, but I’m not sure if there’s so restrictions that’d prevent that. Does hosting my front end on the IC prevent me from being able to get my app in the apple store?

-------------------------

peterparker | 2021-12-29 06:40:28 UTC | #4

Currently you cannot publish in the App Store an app that is hosted on a web server, IC or not **

What you can do is using your, or part of your, front end code to package an app that runs at least partially in a wkwebview. Common solution for such purpose are [Capacitor](https://capacitorjs.com/) or [Cordova](https://cordova.apache.org/).

On the contrary, in Google Play, you can publish apps that are hosted, on the IC or elsewhere. It has to be a Progressive Web Apps and it has to be converted to a TWA (Trusted Web App) first. The handy tool [PWA Builder](https://www.pwabuilder.com/) ease the conversion.

** "cannot" is maybe a bit too affirmative, see comment in [thread](https://forum.dfinity.org/t/is-it-possible-to-get-apps-hosted-on-the-ic-into-the-apple-app-store/9958/8?u=peterparker)

-------------------------

jzxchiang | 2021-12-28 22:20:21 UTC | #5

Actually, if you use React Native, you can push over-the-air updates to your app. Although the precondition for the iOS App Store is that they have to be bug fixes and not new features.

-------------------------

faraz.shaikh | 2021-12-28 22:36:26 UTC | #6

Two things here
1. Native/hybrid app that make rest api calls to fetch “contents” from the IC should not be a problem (what I described)

2. Like content the app can also fetch “code” at runtime. This is a grey area I.e. it’s upto Apple to determine if code is bug fix or a new feature or an entirely new Trojan app.  These apps were called shell/super apps and were popularized by wechat mini programs a few years back. 

I don’t think this is what the original question is about

https://developers.weixin.qq.com/miniprogram/en/dev/reference/





In general you have to adhere to the App Store review guidelines. This is a short read :) 

https://developer.apple.com/app-store/review/guidelines/

-------------------------

jzxchiang | 2021-12-28 23:45:27 UTC | #7

> In general you have to adhere to the App Store review guidelines.

This is the biggest non-technical barrier to ubiquitous web3 adoption IMO. You can decentralize web apps but not native apps, at least not yet.

-------------------------

peterparker | 2021-12-29 06:38:04 UTC | #8

[quote="jzxchiang, post:5, topic:9958"]
if you use React Native, you can push over-the-air updates to your app
[/quote]

Likewise with wkwebview based app i.e. [Ionic Appflow](https://ionic.io/appflow).

To comeback to OP's question:

[quote="Jesse, post:3, topic:9958"]
Both my front end and back end are to be hosted on the IC. I’d like to get my app in the apple store, but I’m not sure if there’s so restrictions that’d prevent that.
[/quote]

- Backend queries should be generally speaking no problem

- Fetching part or all the frontend code from the IC ("asset" canister) from an app might be accepted but it has to complies with the guidelines notably and it's to Apple to accept or not:

> **4.7 HTML5 Games, Bots, etc.**
>
> Apps may contain or run code that is not embedded in the binary (e.g. HTML5-based games, bots, > etc.), as long as code distribution isn’t the main purpose of the app, the code is not offered in a store or store-like interface, and provided that the software adheres to the additional rules that follow > in 4.7.1 and 4.7.2.
> ...

In addition, your app should do more that your website:

> **4.2 Minimum Functionality**
> 
> Your app should include features, content, and UI that elevate it beyond a repackaged website.

-------------------------

