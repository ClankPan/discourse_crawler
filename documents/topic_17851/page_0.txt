rbole | 2023-01-07 20:11:07 UTC | #1

Hi, 
Iâ€˜m looking for an example where I can learn how I can connect a web2 html/javascript application hosted on a tradition webserver with a motoko backend canister.

-------------------------

inviscidpixels | 2023-01-07 22:56:01 UTC | #2

There might be a more complete example someone can link, but you will likely have to have your Motoko backend canister at least answer HTTP requests. Here's an example of that: 

https://github.com/nomeata/motoko-certified-http/blob/master/main.mo

Hopefully this helps!

-------------------------

bytesun | 2023-01-08 04:16:40 UTC | #3

This is a good one which I started with.


Frontend uses nextjs which can be deployed on Vercel.
Backend is written with motoko running in canister

https://github.com/FloorLamp/drip-land

-------------------------

rvanasa | 2023-01-08 05:21:33 UTC | #4

Here is a brand new (soon to be official) [starter project for Vite + React + Motoko](https://github.com/rvanasa/vite-react-motoko) which includes live reloading for both the frontend and backend using the [Motoko Dev Server](https://www.npmjs.com/package/mo-dev). Although this template is a work in progress, it could be useful as a reference point for setting up a [Vite](https://vitejs.dev/) frontend with a Motoko canister backend. 

If you want to host the frontend on an external service such as Vercel or Netlify, you'll want to configure the IC HTTP agent to use `http://localhost:4943` for your local replica or `https://ic0.app` for the mainnet. Here's a [code example](https://github.com/FloorLamp/drip-land/blob/bf66130508fff41419a6a076dbff77a13a62fff1/src/ui/lib/canisters.ts) for reference, although it's using an outdated version of `dfx` (which originally used port 8000 instead of 4943). 

Hopefully these links will help get you started, and I'll let you know if I come across anything else that could be useful.

-------------------------

rbole | 2023-01-09 06:16:43 UTC | #5

Many thanks for all the answers. Iâ€˜ll give them a try.

-------------------------

cryptoschindler | 2023-01-24 20:42:50 UTC | #6

> which includes live reloading for both the frontend and backend using the [Motoko Dev Server](https://www.npmjs.com/package/mo-dev).

wow that sounds awesome! will it be possible to turn this into a general starter to provide other bundlers & frameworks to chose from a cli?

-------------------------

rvanasa | 2023-01-27 17:53:18 UTC | #7

That's the eventual plan (especially to include starting points for [Next.js](https://nextjs.org/) and [Create React App](https://create-react-app.dev/)).

-------------------------

Zane | 2023-03-26 18:42:07 UTC | #8

Is that template ready for production?

-------------------------

rvanasa | 2023-03-27 20:47:34 UTC | #9

We are currently merging parts of this starter project into the `dfx new` template. If you use this one, definitely let me know if you run into any issues and I'd be happy to help debug.

-------------------------

cryptoschindler | 2023-04-19 06:06:39 UTC | #10

is svelte on the table as well ðŸ‘€

-------------------------

rvanasa | 2023-04-19 17:13:14 UTC | #11

Yep! It's relatively simple to adjust the starter project to use any front-end framework supported by [Vite](https://vitejs.dev/). 

We could also start maintaining a Svelte template if there's enough interest.

-------------------------

Severin | 2023-04-20 07:12:17 UTC | #12

We do have some [Svelte examples](https://github.com/dfinity/examples/tree/master/svelte), but I'm not sure how well-tested they are right now

-------------------------

