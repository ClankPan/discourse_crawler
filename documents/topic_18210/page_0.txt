xrkuzd | 2023-01-27 05:08:17 UTC | #1

I'm really confused.  I am just trying to query a canister contract from my react app using rest API.

I'm following the docs here: https://internetcomputer.org/docs/current/references/ic-interface-spec#http-query

But it isn't clear how to structure my fetch request. I keep getting 400 code.

Here is how I am calling:

```
const fetchCanister = async () => {
    const url = 'https://nns.ic0.app/api/v2/canister/tkaa-syaaa-aaaab-aaafq-cai/query';
    const res = await fetch(url, {
        method: 'POST',
        body: {
            "request_type": "query",
            "sender": "<my principal id>",
            "ingress_expiry": 1000,
            "canister_id": "<canister principal id>",
            "method_name": "get_nervous_system_parameters",
            "arg": "()",
        }
    });

    const json = await res.json()
    const result = JSON.stringify(json)
    data.set(result);
}
```

To be fair I am a newbie over my head here and I am positive my principal Id is wrong because I the docs say to use a self-authenticated id I have no clue how to create such a thing or where I would go to get one.

Please help or advice because I have looked everywhere and there's no actual example of a simple fetch request query of a canister contract.

-------------------------

Severin | 2023-01-27 08:11:24 UTC | #2

[quote="xrkuzd, post:1, topic:18210"]
`tkaa-syaaa-aaaab-aaafq-cai`
[/quote]

This is not a valid canister principal. The first batch of letters is only four characters long but should be five.

-------------------------

peterparker | 2023-01-27 09:00:16 UTC | #3

[quote="xrkuzd, post:1, topic:18210"]
thereâ€™s no actual example of a simple fetch request query of a canister contract.
[/quote]

That's the thing, there is no "simple fetch" request query of a canister unless the particular canister exposes such a feature. Most of the time, frontend developers use a set of library called [agent-js](https://github.com/dfinity/agent-js/) to interact with canisters.

[quote="xrkuzd, post:1, topic:18210"]
`https://nns.ic0.app`
[/quote]

e.g. this isn't a valid endpoint. 

As you mention that you have not yet lots of experience on the IC, maybe I can recommend you to follow / have a look at this quick tutorial. It gives a good idea of how things work and are interconnected. Hope that helps get started.

https://internetcomputer.org/docs/current/developer-docs/quickstart/hello10mins

-------------------------

timo | 2023-01-27 11:28:08 UTC | #4

[quote="xrkuzd, post:1, topic:18210"]
Iâ€™m following the docs here: [Internet Computer Content Validation Bootstrap ](https://internetcomputer.org/docs/current/references/ic-interface-spec#http-query)
[/quote]

You are looking at low-level documentation with this link. Instead, you should be using this library: https://www.npmjs.com/package/@dfinity/agent

A couple of errors that can already be spotted in your code:
- invalid principal `tkaa-syaaa-aaaab-aaafq-cai`
- url should be `https://ic0.app/api/v2/canister/` not `https://nns.ic0.app/api/v2/canister/`
- missing CBOR encoding

In the docs that you linked to it says: "Request are POST requests with a CBOR-encoded request body, which consists of a authentication envelope (as per [Authentication](https://internetcomputer.org/docs/current/references/ic-interface-spec#authentication)) and request-specific content as described below."

Anyway, the `agent-js` library does all that for you, so don't worry about fixing those errors. Instead, use the library.

However, the documentation for agent-js tends to show more than you actually need. You don't need all the authentication part if you're just doing anonymous queries. I don't know the link to the simplest documentation for doing this (though I would like to know a link myself).

-------------------------

Severin | 2023-01-27 11:49:05 UTC | #5

[quote="timo, post:4, topic:18210"]
I donâ€™t know the link to the simplest documentation for doing this (though I would like to know a link myself).
[/quote]

Agent-js docs are here: https://erxue-5aaaa-aaaab-qaagq-cai.raw.ic0.app/

Otherwise, my first place to go if I don't know how to do something is the [examples repo](https://github.com/dfinity/examples/). Almost every feature is in there in some shape or form.

-------------------------

timo | 2023-01-27 13:04:19 UTC | #6

I still don't find a minimal example that makes a (anonymous) query call in those links.

-------------------------

Severin | 2023-01-27 12:36:53 UTC | #7

Yes, I agree discoverability is... ehm... let's say "not perfect"

The best place to make the first few calls using agent-js is probably [this intro page](https://internetcomputer.org/docs/current/developer-docs/build/agents/javascript/javascript-intro).

Also, I think I found an example how to use agent-js in the examples repo: Query function is defined [here](https://github.com/dfinity/examples/blob/master/motoko/cert-var/src/declarations/cert_var.did.js#L3-L12) (and produced through `dfx generate`. This file is not hand-written) and used like [this](https://github.com/dfinity/examples/blob/master/motoko/cert-var/src/cert_var_assets/src/index.js#L23).

@kpeacock do you know if we have anything better? Maybe a Coding with Kyle episode?

-------------------------

timo | 2023-01-27 13:06:59 UTC | #8

Thanks for the links. 

[quote="Severin, post:7, topic:18210"]
The best place to make the first few calls using agent-js is probably [this intro page ](https://internetcomputer.org/docs/current/developer-docs/build/agents/javascript/javascript-intro).
[/quote]

Curiously this page explains how to create the actor but stops short of actually making the call.

-------------------------

xrkuzd | 2023-01-27 17:10:18 UTC | #9

Apologies I just copy pasted a mock canister id.

-------------------------

xrkuzd | 2023-01-27 17:15:29 UTC | #10

I've looked at agent-js but it's even more confusing.  I am trying to build a dashboard that queries canisters for simple information.  The dashboard is not running on ICP and is just a basic react app.  When looking at agent-js I couldn't find a simple example in the docs for my use case.  

For instance, I know how to interact with a frontend that lives in a canister via DID but how to interact with a canister when the frontend is not connected to ICP in any way and lives on the regular web?

-------------------------

xrkuzd | 2023-01-27 17:17:52 UTC | #11

I have installed the package in my app but I'm still unclear on how exactly to make a POST request using it.

-------------------------

peterparker | 2023-01-27 17:28:52 UTC | #12

[quote="xrkuzd, post:10, topic:18210"]
I am trying to build a dashboard that queries canisters for simple information.
[/quote]

I have exactly build this in [cycles.watch](https://cycles.watch) which happen to be open source. Maybe you can have a look to its code and find exactly what you are looking for ?

https://github.com/papyrs/cycles.watch/

-------------------------

peterparker | 2023-01-27 17:30:08 UTC | #13

[quote="xrkuzd, post:10, topic:18210"]
canister when the frontend is not connected to ICP in any way and lives on the regular web?
[/quote]

I guess you mean when the frontend is not deployed on the IC? If so, you can pass `https://ic0.app` as `host` property of the `HttpAgent` of `agent-js`. Don't have that right here but there are few similar question on the forum I think.

-------------------------

xrkuzd | 2023-01-27 17:44:06 UTC | #14

Thanks you guys are super awesome.  I have some rabbit holes to go down now!

-------------------------

kpeacock | 2023-01-27 18:06:17 UTC | #15

Generally, I avoid encouraging people from hand-crafting calls using an agent because it's an awful experience, in my opinion. We're able to auto-generate an entire interface and pass it to an `actor`, which gives you the full interface, the arguments, and the return types, which is almost always preferable.

There are better tools for interacting with arbitrary canisters, like https://www.npmjs.com/package/ic0 or https://www.npmjs.com/package/@infu/icblast, which will fetch the interface for you.

-------------------------

skilesare | 2023-01-27 18:24:46 UTC | #16

We have a "hidden and unapproved" bounty called icSwagger that I think would be really great to have for more traditional web2 devs that want to consume IC services but that don't want to take the time to learn the agent:

https://github.com/icdevs/Icdevs_fleeksite/blob/main/_posts/2024-10-03-ICSwagger%20-%20Motoko.md

Feedback welcome as we love to get it approved and I think it could really help with onboarding devs who know they'll be able to get users by publishing a swagger file.

-------------------------

peterparker | 2023-01-27 18:27:18 UTC | #17

Keep us posted if you have more questions. Have fun ðŸ¤™

-------------------------

kpeacock | 2023-01-27 19:11:01 UTC | #18

@xrkuzd I'm happy to sit down with you and help you get set up. Would you mind explaining your experience trying to figure out what to do, and how you thought about it? This is really useful feedback for us in terms of our documentation!

-------------------------

timo | 2023-01-28 07:54:31 UTC | #19

What I could never find in terms of documentation is a good entry point. Depending on whether you have: browser/node, js/ts, framework/no framework, frontend web2/hosted on IC, local .did file available/not, make query calls/update calls, make anonymous calls/authenticated calls. What is the minimal example in each of those or combinations of those cases?

There is documentation on internetcomputer.org, in examples repo, in blog posts, in videos, but you kind of have to read them to end to figure out what situation they were made for. It would be nice to have a quick-entry matrix.

But maybe the ic0 npm package does it all. I just didn't know about it until now.

Btw, why would there be any difference between a frontend hosted on web2 vs hosted on IC?

[quote="kpeacock, post:15, topic:18210"]
Generally, I avoid encouraging people from hand-crafting calls using an agent because itâ€™s an awful experience, in my opinion. Weâ€™re able to auto-generate an entire interface and pass it to an `actor`, which gives you the full interface, the arguments, and the return types, which is almost always preferable.
[/quote]

Isn't it advisable to at least hand-craft a .did file and generate the bindings from it? Otherwise, don't you end up with generic names like `Result_1`? I mean for interaction with canisters that you didn't write yourself.

-------------------------

kpeacock | 2023-01-30 18:44:18 UTC | #20

The intro page, along with the node.js followup that Severin linked to was my best effort at writing a good entry point

As for hand-crafting a `.did` file, I'm of two minds on it. It can clean things up nicely, but it's also technically a new language to work in with limited tooling, so it can be a lot to ask of someone who's just getting started

https://internetcomputer.org/docs/current/developer-docs/build/agents/javascript/javascript-intro

-------------------------

