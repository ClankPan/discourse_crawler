bender42 | 2023-12-01 14:15:49 UTC | #1

We are in the process of porting over our project JOBGRADER onto Bitfinity. As we are using GraphQL on our other implementations and we believe that this is a de facto standard in WEB3, we are asking this forum regarding plans or implementations in Bitfinity so far regarding GraphQL.
A possible solution would be to set up a custom node from the community as described here: 
https://thegraph.com/docs/en/developing/supported-networks/
https://github.com/graphprotocol/graph-node
What are your thoughts about this?

-------------------------

lastmjs | 2023-12-01 18:01:04 UTC | #2

I would love to see Graph Protocol indexers built on the IC, it's something I've been wanting to see for a few years now. I have a lot of experience with GraphQL on the IC having built [Sudograph](https://github.com/sudograph/sudograph). I'm happy to answer questions.

-------------------------

bender42 | 2023-12-01 19:02:34 UTC | #3

Hi Jordan,
Great to hear from you.
I looked into Sudograph and it seems to be one part of the puzzle.
When it comes to Bitfinity there would be either the need to get in touch with the guys from GraphQL to ask them for indexing it, or Dfinity or the community set up a node for indexing. I am too new into Dfinity to tell if such an indexer could work inside a canister, but I would doubt it as the index can grow quite fast.
Have you seen this tutorial: https://medium.com/coinmonks/deploy-subgraphs-to-any-evm-aaaccc3559f
I guess if we use the RPC from the Bitfinity network, then we would be one step further.

-------------------------

lastmjs | 2023-12-01 23:18:19 UTC | #4

How much data is the indexer going to be holding?

-------------------------

bender42 | 2023-12-03 18:37:12 UTC | #5

## Graph Protocol Infrastructure Specs

||Minimum Specs|Recommended Specs|Maxed out Specs|
| --- | --- | --- | --- |
|CPU|16 vcore|64 vcore|128+ vcore|
|RAM|32 GB|128 GB|256/512+ GB|
|Storage|300 GB SATA SSD|2 TB NVME|8+ TB NVME RAID 10|

-------------------------

bender42 | 2023-12-04 16:13:28 UTC | #7

@lastmjs Important to understand is that this would be a globally usable service for the whole IC and Bitfinity ecosystem and not for a single application/project. I guess you are aware of the capabilities of GraphQL, so you sure know that this should be a top priority to get more devs into the space.

-------------------------

lastmjs | 2023-12-04 17:17:31 UTC | #8

Would be tough to just put into a single canister...probably a multi-canister approach would be necessary, which is also tough.

-------------------------

jennifertran | 2024-01-03 16:04:37 UTC | #9

Why would this be difficult to handle with both a single canister and multi-canisters?

-------------------------

lastmjs | 2024-01-03 19:24:33 UTC | #10

A single canister probably does not have enough storage capacity and might run into other computational resources limits, and multi-canister is incredibly complicated due to lack of atomicity across canisters when performing update calls, and the added complexity of having to shard the database essentially.

-------------------------

Maxfinity | 2024-01-03 21:08:41 UTC | #11

Cool project. 

[quote="bender42, post:5, topic:25194"]
TB
[/quote]

You could probably have graphQL indexers that index data from individual smart-contracts hosted on the IC. The whole EVM would be a challenge though. 100GB limit within a canister currently.

-------------------------

bender42 | 2024-01-05 11:38:37 UTC | #12

I see it the same way that it would be a challenge @Maxfinity. I am not deep enough into canisters to evaluate. Another way would be to attach a storage like S3. I do not know the capabilities of canisters in terms of storage.
As long as the network is not heavily used, the GraphQL will not need that amount of storage, but I do not know if the extension of storage is possible at a later stage.

-------------------------

