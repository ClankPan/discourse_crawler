icme | 2022-06-22 23:39:12 UTC | #1

It is with great joy that I bring you CanDB, the first flexible and truly horizontally scalable NoSQL database built for the Internet Computer.

:point_down: (Supernova Devpost submission link)

https://devpost.com/software/candb

<br/>

I built CanDB to enable the next generation of massively scalable applications on the Internet Computer. 

I built CanDB for teams that are currently pushing their application canister storage limits, and developers with ambitions to build out the next viral application and scale it to millions of users and hundreds of gigabytes of data.

<br/>

Here is a list of features that CanDB **currently** provides

1. **Performant and Rich CRUD + scan APIs** (not just scans like shown in the demo). [Here is the endpoint](https://github.com/canscale/supernova-candb-demo/blob/96f8127d73128e6d2a21d84c56c5a24d4ad3eccb/backend/src/comment/Comment.mo#L91) that was used to backfill millions of comments into the demo application via a CanDB data structure on the Comment Actor
2. **Canister cluster management features**:

    a. Support for rolling upgrades [Code from the demo application deployed to the main net](https://github.com/canscale/supernova-candb-demo/blob/96f8127d73128e6d2a21d84c56c5a24d4ad3eccb/backend/src/index/IndexCanister.mo#L135)

    b. Support for targeted canister deletion by partition key [Code from the demo application deployed to the main net](https://github.com/canscale/supernova-candb-demo/blob/96f8127d73128e6d2a21d84c56c5a24d4ad3eccb/backend/src/index/IndexCanister.mo#L159)
3. **Abstracted and easy to set-up auto-scaling**
    
    a. [Set user-defined auto-scaling limits](https://github.com/canscale/supernova-candb-demo/blob/96f8127d73128e6d2a21d84c56c5a24d4ad3eccb/backend/src/index/IndexCanister.mo#L94) for your canisters, but don't fear the responsibility, as CanDB will eventually auto-scale for you at a pre-defined internal threshold if you set your auto-scaling limits too high. 

    b. Use the [createAdditionalCanisterForPK() hook](https://github.com/canscale/supernova-candb-demo/blob/b2b209f6fc0015b403e881e19acd03ad5a97c3bf/backend/src/index/IndexCanister.mo#L48) in your canister responsible for auto-scaling in order  to scale out specific canister actors when they hit their scaling limits.
4. **Stable and persistent data through upgrades** - CanDB keeps you safe by providing a [flexible range of stable data types](https://www.candb.canscale.dev/Entity.html#type.AttributeMap) to store as attributes
5. **An easy-to-use TypeScript client sdk** - Set up client interactions with your [Index Canister](https://www.candb.canscale.dev/client-typescript/classes/IndexClient.IndexClient-1.html), your [Actor Canisters](https://www.candb.canscale.dev/client-typescript/classes/ActorClient.ActorClient-1.html), and then performing [query](https://www.candb.canscale.dev/client-typescript/classes/ActorClient.ActorClient-1.html#query) and targeted [update](https://www.candb.canscale.dev/client-typescript/classes/ActorClient.ActorClient-1.html#update) calls to the specific canister where the update should take place.


<br/>

My devpost video demo contains a **special announcement** at the end. For those who make it that far and feel you qualify, please reach out to me via DM here, or at any of my contact handles listed in Supernova submission.

-------------------------

JaMarco | 2022-06-22 20:54:10 UTC | #2

What was the reason to develop this in Motoko as opposed to Rust?

-------------------------

icme | 2022-06-22 22:44:04 UTC | #3

Great question. First, I want to say that there is no need for CanDB to be written explicitly in Motoko, and I do have plans to eventually either build or collaborate with the IC Rust community to build a Rust version of CanDB. 

Rust is an extremely powerful and mature language, but I decided to start writing CanDB in Motoko because it has the set of features that fits the IC exactly, whereas Rust has a super-set of language features to what the IC provides. This means that if I'm developing in Motoko I'm far less likely to run into unexpected errors or dead ends because the language won't let me make those mistakes.

This follows the philosophy that I'm trying to transfer to CanDB, in letting developers focus on building their application logic in a way that feels "cloud native" to the IC without worrying that something they're incorporating into their app will not be supported and result in "down-the-rabbit-hole" type of errors. 

For example, CanDB is able to guarantee data stability and persistence because the APIs it provides only allow you to insert stable data types, protecting all of us developers from our worst enemy when it comes to bugs, ourselves :sweat_smile:. 

Also, CanDB also sets fixed upper limits on how much data you can insert into a canister before it auto-scales, as well as before it tells you, "Hey you hit your canister data storage limit, did you not set up that auto-scaling hook thing I told you about? Well then I'm going to protect you from data loss and not going to let you turn your canister into a zombie by inserting more data into your canister until you set that up!"

Hopefully I'm not building CanDB and all of these abstractions in a silo, that would make for a very one-sided product that all of you could hate working with. 

That's why I'm aiming to work with 10-20 active and dedicated projects (in a closed alpha) over the next several months to refine these abstractions, as well as to further improve performance and gather both performance and cost metrics so that developers know what to expect when deciding to use CanDB in their applications.

-------------------------

apotheosis | 2022-06-23 00:21:42 UTC | #4

Hey! I am from ICME.io a no-code tool for the IC. It would be cool to get this as a module so that users can press to deploy a CanDB instance and manage it all from the ICME UI.

-------------------------

cyberowl | 2022-06-23 06:45:27 UTC | #5

I can't wait to try it out for my next project. I need to dig a bit more before I commit. But overall good work, this is something we need.

-------------------------

icme | 2022-06-23 20:49:14 UTC | #6

Hey @apotheosis, first off sorry I took this forum name (icme) - I originally just make it as a pun before I knew that ICME.io was a thing. You have no idea how many people have DM'ed me thinking that I ran or was affiliated with your site :laughing: .


[quote="apotheosis, post:4, topic:13984"]
It would be cool to get this as a module so that users can press to deploy a CanDB instance and manage it all from the ICME UI
[/quote]

To answer your question, the first step will be to build out CanDB as a full fledged open source library (not a managed service).

Because CanDB utilizes a client-centric architecture to optimize application performance, it consists of a TypeScript client library, and a Motoko backend library (I'd recommend going through my [Supernova demo video](https://www.youtube.com/watch?v=QSwwMRoPF0M) again where I go into the architecture around ~4:50 if you're curious). Both of these libraries are currently **private**, and will remain private until the end of the alpha-testing period and the beginning of the open beta (est. Q4 2022).

The Motoko backend library currently holds both the CanDB core data structure (used in your actor class canisters that will auto-scale), and the various functions and "hooks" that you use in your Indexing canister to index each of your actor class canisters that are spun up, as well as facilitate cluster management and auto-scaling.

Right now, you can almost think of CanDB as a framework and mindset you can use for designing your application with composable and scalable microservices. I'm sure there's an even higher level abstraction that I could pull out eventually into a "low-code" type of functionality, but I'm cautious about prematurely optimizing and creating any more abstractions without feedback from developers.

This is why the upcoming closed alpha period is so important to the future of CanDB - having a wide variety of teams/projects with different use cases take part in it will help stretch CanDB and keep it as flexible and generic as it needs to be - after which the right APIs/abstractions for managed services should become more obvious.

-------------------------

ArjaanBuijk | 2022-06-25 00:18:33 UTC | #7

@icme 
Do you have any plans to also create a python client library?

That is what I would need for my project, where I currently use a managed db at a traditional cloud provider, and I am exploring the options to move the db to the IC.

-------------------------

icme | 2022-06-25 23:12:53 UTC | #8

Hi @ArjaanBuijk 👋 

What libraries do you currently use to interact with the IC? The [ic-py](https://github.com/rocklabs-io/ic-py) Python client?

If so, I would love to work with you to bring Python client support for CanDB. In fact for my Supernova demo project I originally did some data wrangling in Python to properly format the Reddit comment data before uploading it with the candb TypeScript client to my CanDB application.

Ideally this Python client is something the community can help maintain in order to keep parity with different versions of the TypeScript client and compatibility with different versions of the CanDB backend library.

DM me if you’re interested.

-------------------------

AndraGeorgescu | 2022-08-13 11:59:29 UTC | #9

[quote="icme, post:3, topic:13984"]
That’s why I’m aiming to work with 10-20 active and dedicated projects (in a closed alpha) over the next several months to refine these abstractions, as well as to further improve performance and gather both performance and cost metrics so that developers know what to expect when deciding to use CanDB in their applications.
[/quote]

This is super interesting for us at distrikt, we should talk! @dymayday and I will reach out to you next week

-------------------------

haida | 2022-10-01 03:56:54 UTC | #10

Candb looks great, but it seems that the code base of candb is closed for open source sharing. “https://github.com/canscale/candb” As a dfinity ecological reward, shouldn't the project be closed at will, because the dfinity ecological reward is to support the development of dfinity ecology. If sharing is closed, it seems that there will be no contribution to dfinity ecology?

-------------------------

SapereAude | 2023-02-08 12:24:14 UTC | #11

Hi Byron, Thanks for this great job! Could you please give an update on the progress? When do you expect to have this released to the public for production use?

-------------------------

icme | 2023-02-08 22:20:35 UTC | #12

Hey @SapereAude,

I'm constantly getting requests and inviting new developers and teams to use CanDB via the CanDB alpha.

There are already a handful of projects on the IC that are using CanDB in production, and just last week, Bink migrated their application to CanDB.

https://twitter.com/Bink8_/status/1621539455172546561

The main reason why I'm keeping CanDB in alpha is because there's one major breaking change in the data structure that backs CanDB that I've scheduled for later this month (before public release). I'm going to provide a migration path for the alpha users, but in general once you release software publicly, it becomes much harder to make breaking changes without causing a lot of developer friction.

I'm more than happy to invite interested parties to the CanDB alpha if you're burning to try it out before the public release - just send me a DM.

-------------------------

SapereAude | 2023-02-09 08:22:29 UTC | #13

Thanks, great to hear -- all makes sense this way!

We are currently still in an early research phase of IC, so the only thing I can do for now, is to wish you good progress and best of luck!

CanDB seems to me a crucial part of the eco-system - very exciting, thank you!

-------------------------

icme | 2023-07-21 17:22:56 UTC | #14

Hey IC Devs, Wanted to update you all on some releases and DX improvements to CanDB

* Earlier this summer, the CanDB repository was publicly released by the ORIGYN foundation: https://github.com/ORIGYN-SA/CanDB :tada: 
* the CanDB documentation is now fully [on-chain](https://ykgs2-ziaaa-aaaak-qcfya-cai.icp0.io/docs/category/tutorial---basics) :partying_face: 
* CanDB can now be found on [Mops](https://mops.one/candb) :dog: 
* CanDB is a schemaless NoSQL data store, meaning you can dynamically change your data schema. ORIGYN recently added the candy library as a CanDB attribute value type, making your schemas even more flexible :muscle: https://github.com/icdevs/candy_library)

Huge kudos to @skilesare, Fernando, James, and the ORIGYN team for these releases and DX improvements to CanDB!

-------------------------

