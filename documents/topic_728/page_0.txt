Ori | 2020-06-08 11:08:09 UTC | #1

If anyone needs one, feel free to use it...

https://github.com/o0x/motoko-queue

-------------------------

Ori | 2020-06-09 11:06:35 UTC | #2

It might be worth having something like this in the standard library? (nudge nudge ; )

-------------------------

gladguy | 2021-09-19 05:25:01 UTC | #3

How to get the size of the queue ? How to setup the capacity for the queue

-------------------------

Ori | 2021-09-19 13:16:45 UTC | #4

The Queue is actually a tuple containing two functional Lists: `(List, List)`, so you can check the sizes for both of these lists and add them together:



```
import List "mo:base/List";
import Debug "mo:base/Debug";

import Queue "Queue";

var a: Queue.Queue<Nat> = Queue.nil();
a := Queue.enqueue(1, a);
a := Queue.enqueue(2, a);
a := Queue.enqueue(3, a);

// sum the size of both lists
let s = List.size(a.0) + List.size(a.1);

Debug.print(debug_show(s));
```



And they’ll grow as you enqueue values, you don’t need to set a capacity.

-------------------------

Ori | 2021-09-19 13:14:23 UTC | #5

I’ve added a size() method to the repo for you, you can call that if you prefer:

`let s = Queue.size(a);`

-------------------------

nomeata | 2021-09-19 15:14:49 UTC | #6

[quote="Ori, post:2, topic:728"]
It might be worth having something like this in the standard library?
[/quote]

The standard library can't contain everything. But if you add it to the vessel package set (https://dfinity.github.io/vessel-package-set/ with instructions at https://github.com/dfinity/vessel-package-set/blob/main/CONTRIBUTING.md) everyone can easily use it.

-------------------------

Ori | 2021-09-22 10:58:40 UTC | #7

Oh could do yes, thanks. Deque probably covers this now, that post was a long while ago (when the std lib was just a toddler!)

-------------------------

