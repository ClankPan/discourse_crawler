peterparker | 2022-03-04 14:39:32 UTC | #1

[My implementation](https://github.com/deckgo/deckdeckgo/blob/bde3592d387c4ba0c4464ac3d9953a2f0a732ae0/canisters/src/storage/storage.mo#L93) of the **http_request_streaming_callback**  does not work anymore - i.e. I only get the first chunk of data.

For example this [image](https://ugodr-tiaaa-aaaai-abuoa-cai.raw.ic0.app/images/capture-d%E2%80%99e%CC%81cran-2022-03-04-a%CC%80-13.09.37.png?token=BEkhIy-ni3DkF9iTW_xXR) gets truncated, the response length is 70000 instead of 1115313 (two chunks in memory, one of 70000 + 415313).

The [workaround](https://forum.dfinity.org/t/cryptic-error-from-icx-proxy/6944/14?u=peterparker) is still valid? or was the candid issue has been solved https://github.com/dfinity/candid/issues/273?

![Capture d‚ÄôeÃÅcran 2022-03-04 aÃÄ 14.52.40|608x500](upload://jRxftZiYbzXjrPYRbkMvupl0xyd.jpeg)

-------------------------

peterparker | 2022-03-04 14:23:22 UTC | #2

I tried with .jpg and .png files. Both does not get the correct `content-length` headers. I get only the first chunk length as value - i.e `content-length: 700000`.

As a result, the PNG files are displayed truncated by Chrome. However if I do the same test with a JPG file, the browser does display the all data.

Therefore does it means the http_request_streaming_callback still works out? The issue is related to **content-length**?

![Capture d‚ÄôeÃÅcran 2022-03-04 aÃÄ 15.19.44|690x431](upload://eZVIE747hCHAPkcNrjnfIrtp3oA.jpeg)

-------------------------

peterparker | 2022-03-04 14:45:49 UTC | #3

My motoko implementation is based on this [workaround](https://forum.dfinity.org/t/cryptic-error-from-icx-proxy/6944/14) which was linked with the usage of the streaming function in [agent-js proxy](https://github.com/dfinity/agent-rs/blob/f7de7670aa3870023fa45d5b5cee719b6eb7a012/icx-proxy/src/main.rs#L250).

```
 let is_streaming = http_response.streaming_strategy.is_some();
    let response = if let Some(streaming_strategy) = http_response.streaming_strategy {
```

However above piece of code and function does not exist anymore in main branch of agent-rs.

-------------------------

chenyan | 2022-03-04 16:32:48 UTC | #4

There is no change on the candid side. The `icx-proxy` has been moved to https://github.com/dfinity/icx-proxy, not sure if there were some changes there.

-------------------------

Daniel-Bloom | 2022-03-05 00:09:47 UTC | #5

Does it work through non-`raw`? Can you repro locally on dfx using the latest icx-proxy?

-------------------------

jzxchiang | 2022-03-05 07:00:52 UTC | #6

FWIW, even after upgrading to 0.9.2, I can still stream using the callback.

-------------------------

peterparker | 2022-03-05 09:21:29 UTC | #7

Yes I can reproduce the issue locally with the latest dfx.

I extracted the code to a sample repo: https://github.com/peterpeterparker/icstreaming

Also double checked that indeed the upload worked as expected - i.e. that two chunks are available in memory. Issue has definitely todo with streaming.

![Capture d‚ÄôeÃÅcran 2022-03-05 aÃÄ 10.20.14|621x500](upload://fQhF4dEuFKjeTV7rvHvHshXMGJX.jpeg)

-------------------------

heyuanxun | 2022-03-06 09:30:46 UTC | #8

i meet the same problem,did you sovle it?

-------------------------

Daniel-Bloom | 2022-03-07 07:09:49 UTC | #9

Ok, I've debugged the issue and it stems from a change to the `candid` rust library used in `icx-proxy`. The change fixed some issues but made it difficult to support generic `token`s. The workaround introduced only supported a very specific subset, based on the fields of the `token`. I've designed a [fix](https://github.com/dfinity/agent-rs/pull/318) in `ic-utils` which should resolve this issue.

-------------------------

peterparker | 2022-03-07 08:03:52 UTC | #10

Thanks Daniel! Looking forward to the fix.

-------------------------

heyuanxun | 2022-03-07 12:10:37 UTC | #11

But my [code](https://github.com/xiaoyuanxun/http_demo/blob/main/src/http/main.mo) still doesn't work.
It should show wwccyy
but it just show the ww
so the http_steaming did not work still
![1|690x157](upload://d4MTLjBxjKz8N2A5Gys5XA09ZpX.png)

-------------------------

peterparker | 2022-03-07 16:44:07 UTC | #12

Daniel has created a [fix](https://github.com/dfinity/agent-rs/pull/318) that first needs to be reviewed, then merged and finally be rolled out to ultimately solve the issue.

-------------------------

heyuanxun | 2022-03-08 11:38:48 UTC | #13

ok,i got it.
very thank u.

-------------------------

heyuanxun | 2022-03-15 07:06:56 UTC | #14

Is this be fixed?
i can not achieve the http streaming callback,still.
If you can achieve,can you show me a demo code?

-------------------------

Daniel-Bloom | 2022-03-17 07:27:45 UTC | #15

Some more issues were found during testing, but I have another [fix](https://github.com/dfinity/agent-rs/pull/323) which should resolve these further issues.

-------------------------

Daniel-Bloom | 2022-03-23 06:34:05 UTC | #16

Ok, I think I've finally resolved all the issues. I'm working on merging the fixes in. In the mean time, if you want to test locally, you can replace the icx-proxy that ships with dfx with my custom build [here](https://github.com/Daniel-Bloom-dfinity/icx-proxy/releases/tag/e92bf6d) and report any issues you run into.

-------------------------

bob11 | 2022-03-25 16:34:00 UTC | #17

What is timeline on release? Entrepot has thousands of images not loading correctly due to this chunk streaming issue and I'm wondering if we should try to implement a quick fix ourselves, or if we should just wait for the fix to go live on mainnet. What do you think?

-------------------------

AlliDoizCode | 2022-03-26 16:32:36 UTC | #18

We also have concerns with the launch of Canistore because of this issue

-------------------------

skilesare | 2022-03-29 19:27:45 UTC | #19

Ping again.  Any updates?

-------------------------

diegop | 2022-03-29 19:29:49 UTC | #20

I‚Äôll ping folks and ask around

-------------------------

Daniel-Bloom | 2022-03-30 06:47:02 UTC | #21

Merging the fixes takes a little time in order to make sure it doesn't cause other issues and break more things than it fixes. I would estimate there's about a week left of work (maybe a little more or less) before we can get a new icx-proxy out.

-------------------------

skilesare | 2022-03-30 15:49:00 UTC | #22

Does this only affect icxproxy? I streaming form standard canisters xxxxxxxx.ic0.app affected?

-------------------------

Daniel-Bloom | 2022-03-30 18:18:47 UTC | #23

This bug should only impact icx-proxy/the raw subdomain. That said, I'm not sure the service-worker/non-raw currently supports streaming.

-------------------------

Daniel-Bloom | 2022-04-04 20:08:42 UTC | #24

Running the fixed build through final QA to (hopefully :crossed_fingers:) deploy in the next couple days.

-------------------------

jzxchiang | 2022-04-06 00:49:28 UTC | #25

Just to be clear, this bug only affected users who used a custom `Token` type right?

Also, will dfx be updated with a new version to include this new icx-proxy? I believe they are now bundled together.

-------------------------

Daniel-Bloom | 2022-04-06 16:14:47 UTC | #26

A DFX update is also in the works. Note that advanced users can always replace the icx-proxy with the latest and greatest.

I think the current state of the bug impacts a wide variety of token/callback types, all of which should be resolved when this fix goes out. It more depends on what candid hacks the canister was using (now no hacks should be needed, but all hacks should be accepted).

-------------------------

Daniel-Bloom | 2022-04-06 16:20:52 UTC | #27

The QA test went well, but Atlassian decided to [blow up](https://status.atlassian.com/) completely unrelatedly. While both our status page and ticketing system remains down, we are hesitant to deploy this.

Hopefully Atlassian is able to resolve their issues quickly.

-------------------------

AlliDoizCode | 2022-04-09 13:03:10 UTC | #28

any update on when we should expect this to be live

-------------------------

Daniel-Bloom | 2022-04-12 15:23:58 UTC | #29

Based on Atlassian's [status updates](https://jira-software.status.atlassian.com/), their restoration is progressing at a rate of about 5% per day. Assuming that remains constant, the expected value for our ticketing system restoration time is 6 days. But it is random, it could get restored tomorrow, it could get restored in 12 days, just depends on how lucky we get.

After the restoration it should be just a couple days to deploy.

-------------------------

NS01 | 2022-04-12 16:49:45 UTC | #30

Ouch! Not what I wanted to hear :(

-------------------------

Daniel-Bloom | 2022-04-13 02:18:24 UTC | #31

Update! Though Jira remains down, we have been able to mitigate and successfully deploy the fix. It should now be live and available! If you run into any issues, please report them here.

-------------------------

peterparker | 2022-04-13 05:48:48 UTC | #32

Thanks @Daniel-Bloom ü•≥. Looks good, tested a 4mb jpg image with the same repo provided above locally and on mainnet (without any new deployment), the image was download and displayed entirely in both cases.

![Capture d‚ÄôeÃÅcran 2022-04-13 aÃÄ 07.42.52|451x500](upload://rH8rXd9IwrVMTxLbO5eJzoW8Uxh.jpeg)
![Capture d‚ÄôeÃÅcran 2022-04-13 aÃÄ 07.45.26|690x450](upload://jD2IGCrPea4bA4hD7mT5UYVgXj.jpeg)

-------------------------

skilesare | 2022-04-15 07:19:30 UTC | #33

If we want this fixed on the local replica(dfx) what do we need to do?

-------------------------

peterparker | 2022-04-15 07:47:38 UTC | #34

You are right I still have the issue locally to. I assumed it was alright because UI wise the image was alright but that was already the case with .jpg. To reproduce the issue I should have used .png ü§¶‚Äç‚ôÇÔ∏è.

@Daniel-Bloom what should we / I upgrade to test locally? dfx?

![Capture d‚ÄôeÃÅcran 2022-04-15 aÃÄ 09.45.36|633x500](upload://531hbc8THpqYCwIwOx3cXtg20XN.jpeg)

-------------------------

skilesare | 2022-04-15 20:14:06 UTC | #35

Hey @Daniel-Bloom I think this was deleted when the code was merged....where is it now? Is it easy to compile/replace on a local replica?

-------------------------

ericswanson | 2022-04-15 20:23:00 UTC | #36

To use an updated icx-proxy with dfx locally before we've released a dfx version that incorporates it, you can do this:
- download an icx-proxy release from https://github.com/dfinity/icx-proxy/releases (extract `icx-proxy` from either binaries-linux.tar.gz or binaries-macos.tar.gz)
- export DFX_ICX_PROXY_PATH=`<path to icx-proxy>`
- run `dfx start`

-------------------------

skilesare | 2022-04-15 20:33:25 UTC | #37

[quote="ericswanson, post:36, topic:11298"]
DFX_ICX_PROXY_PATH
[/quote]

What directory would the current one be in? Would it be advisable to just overwrite what is there now to make sure we get an update in the future?

Edit: /Users/[user]/.cache/dfinity/versions/0.9.3/?

-------------------------

skilesare | 2022-04-15 20:44:57 UTC | #38

Any idea how to deal with this:  
![image|450x500](upload://4jTPKqAEH84QIwyJnowrJouxta1.png)


Edit:  from the dir:

xattr -dr com.apple.quarantine icx-proxy

-------------------------

ericswanson | 2022-04-15 20:49:52 UTC | #39

The current one will be in `$(dfx cache show)/icx-proxy`.  Yes, you can overwrite the binary at that path instead, if you want.

-------------------------

ericswanson | 2022-04-15 23:00:02 UTC | #40

I think you can right-click "open", and it will ask you to verify once that it's ok.  Or maybe it's Option open.

-------------------------

tomijaga | 2022-05-21 01:49:56 UTC | #41

I replaced the icx-proxy binary with the latest release but now I'm getting an error. Does anyone know what I did wrong? 
```bash
/Users/dire.sol/.cache/dfinity/versions/0.9.3/icx-proxy: cannot execute binary file
```

-------------------------

tomijaga | 2022-05-21 01:58:29 UTC | #42


Fixed it by changing the dfx version in my dfx.json to "0.10.0" from "0.9.3"

-------------------------

