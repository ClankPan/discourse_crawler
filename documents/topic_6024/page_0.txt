quinto | 2021-07-21 14:26:12 UTC | #1

The Internet Computer offers unpredictable and tamper-proof secure randomness. But how do one prove that the randomness used in a computation actually comes from the system?

Introducing *Randomness Oracle* to address this problem!

https://github.com/quintolet/randomness-oracle

[ic.rocks link](https://ic.rocks/principal/ptodj-lqaaa-aaaah-qaeaq-cai)
[canlista link](https://k7gat-daaaa-aaaae-qaahq-cai.ic0.app/listing/randomness-oracle-10273)
[Most recent 100 randomness requests](https://ptodj-lqaaa-aaaah-qaeaq-cai.raw.ic0.app/)

Also, proud to be the [first user of the blackhole canister](https://ic.rocks/principal/e3mmv-5qaaa-aaaah-aadma-cai). Thanks @PaulLiu !

-------------------------

PaulLiu | 2021-07-21 14:32:46 UTC | #2

Bravo! This looks like a great service!

-------------------------

senior.joinu | 2021-07-24 23:58:42 UTC | #3

Hey there!

I don't actually understand, what this service exactly does, could you help me?
> But how do one prove that the randomness used in a computation actually comes from the system?

Where else can the randomness come from in the IC? Since it is a deterministic system, it has only one source of randomness - its own consensus.

-------------------------

quinto | 2021-07-25 15:13:05 UTC | #4

[quote="senior.joinu, post:3, topic:6024"]
Where else can the randomness come from in the IC? Since it is a deterministic system, it has only one source of randomness - its own consen
[/quote]

Consider the following scenarios:
1. pseudo randomness may be used instead of the system randomness. Anyone who figures out the seed could guess what is next.
2. use system secure randomness to seed a computation, but does some more tricks to bias the outcome of the computation. If the canister does not reveal its code, there is no way to know whether it is being honest about using the system randomness.

So the solution here is allow a canister to claim its source of randomness comes from the oracle. The public can easily verify this claim. The canister can also make its formula (on how the outcome is derived from this randomness) public without revealing all its source code. This is enough to convince the public that there was indeed no foul play.

There are still a couple minor issues such as when the randomness was requested (a canister can save up a couple seeds from the past and pick the favorable one), and whether the oracle is the only source of randomness being used (a canister can consult more than one oracles and pick a favorable one). But the overall thesis here is sound and defendable.

-------------------------

cryptoschindler | 2021-08-04 08:39:20 UTC | #5

Beautiful, this will be very useful!

-------------------------

