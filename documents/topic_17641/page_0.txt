free_will5 | 2022-12-25 03:37:10 UTC | #1

The community is interested in knowing where the proposal rejection fee 0.1 sns goes. At this stage, is it burned?, directed to treasury, ? ...?

-------------------------

plsak | 2022-12-25 17:26:41 UTC | #2

I believe, that same as ICP reject proposal fee, it's burned.

-------------------------

free_will5 | 2022-12-26 02:54:10 UTC | #3

Right. We all can only guess for now. A concrete response from dfnity devs clarify it all.

-------------------------

bjoernek | 2023-01-04 12:24:58 UTC | #4

Hi @free_will5, 
The approach is the same as for the NNS: the rejection fee amount is tracked within the neuron which made a proposal. Once the according neuron is disbursed, the fee amount is burned.

-------------------------

free_will5 | 2023-01-04 12:57:44 UTC | #5

This is starting to make sense. This means most fees haven't been burned yet since most neurons that made the proposal haven't been disbursed yet. This explains why total supply hasn't changed much even when more than 10 proposals were rejected? Did I get that correct?

-------------------------

bjoernek | 2023-01-04 13:11:31 UTC | #6

Yes, this is correct!

-------------------------

free_will5 | 2023-01-04 13:32:03 UTC | #7

And there is no way for the community to check these from dashboard, correct? For instance access to fees burned. Docs suggest that they go to minting account. This may be a lame question but when fees are burned, they don't disapear, correct? Meaning it could still be tracked but without reverse. Since SNS-1 is  a community project, the idea was if such a thing could be open to the community.

-------------------------

bjoernek | 2023-01-04 16:34:01 UTC | #8

Neuron data and ledger data are open and can be extracted. 

For example, in order to extract the neuron fee attribute, you can use the [dashboard](https://dashboard.internetcomputer.org/canister/zqfso-syaaa-aaaaq-aaafq-cai) of the SNS-1 governance canister to call "list_neurons" which exposes amongst other neuron attributes also "neuron_fees_e8s". 

Alternatively you can also use dfx to call "list_neurons" (and iterate through all neurons).
```
dfx canister --network ic call zqfso-syaaa-aaaaq-aaafq-cai list_neurons '(record { of_principal=null; limit=100: nat32; start_page_at=null  } )'
```
 For further instructions see [here](https://wiki.internetcomputer.org/wiki/How-to:_Interact_with_SNS_canisters).

-------------------------

free_will5 | 2023-01-05 02:49:03 UTC | #9

Understood. Thank you!

-------------------------

