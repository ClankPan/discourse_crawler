Mathias | 2022-12-19 19:52:52 UTC | #1

To call canisters from motoko that are not written in motoko.

-------------------------

GLdev | 2022-12-19 21:04:01 UTC | #2

There's a tool called [didc](https://forum.dfinity.org/t/didc-install-script/6140) that you can use.

```bash
$ cat first_project.did 
service : {
    "greet": (text) -> (text) query;
}

USAGE:
    didc bind <input> --target <target>

OPTIONS:
    -t, --target <target>    Specifies target language [possible values: js, ts, did, mo,
                             rs]

$ didc bind first_project.did --target mo
// This is a generated Motoko binding.
// Please use `import service "ic:canister_id"` instead to call canisters on the IC if possible.

module { public type Self = actor { greet : shared query Text -> async Text } }


$ didc bind first_project.did --target rs
// This is an experimental feature to generate Rust binding from Candid.
// You may want to manually adjust some of the types.
use ic_cdk::export::candid::{self, CandidType, Deserialize};
use ic_cdk::api::call::CallResult;

struct SERVICE(candid::Principal);
impl SERVICE{
  pub async fn greet(&self, arg0: String) -> CallResult<(String,)> {
    ic_cdk::call(self.0, "greet", (arg0,)).await
  }
}
```

-------------------------

paulyoung | 2022-12-19 21:20:11 UTC | #3

See [Importing from another canister](https://internetcomputer.org/docs/current/developer-docs/build/cdks/motoko-dfinity/modules-and-imports/#importing-from-another-canister-smart-contract)

This part is admittedly a bit vague:

> For the imported canister actor, types are derived from the Candid file — the *project-name*.did file — for the canister rather than from Motoko itself.

Perhaps someone more familiar with this feature of Motoko can help with that.

-------------------------

skilesare | 2022-12-19 21:59:43 UTC | #4

Define the service type you want to call and then declare an actor of that type. 

Here is the ledger declaration: https://github.com/ORIGYN-SA/origyn_nft/blob/main/src/origyn_nft_reference/dfxtypes.mo

Here it is used:

https://github.com/ORIGYN-SA/origyn_nft/blob/90b5522bcc660f3f3ee4f64e3a766dfd4d6e6481/src/origyn_nft_reference/ledger_interface.mo#L234

-------------------------

chenyan | 2022-12-19 22:04:48 UTC | #5

`import "canister:name"` imports the service type from the did file, even if the canister is written in Motoko. This ensures we can call canisters written in other languages.

-------------------------

Mathias | 2022-12-22 16:28:12 UTC | #6

Thank you all very much that is helpful.

@chenyan that does not work for a canister class correct?

-------------------------

chenyan | 2022-12-22 17:11:45 UTC | #7

You mean for `actor class`? Yes, for actor class, you will need to import the mo file directly. Because there is no counterpart in the Rust CDK to define an actor class.

-------------------------

