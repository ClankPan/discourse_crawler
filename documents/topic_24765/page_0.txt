sat | 2023-11-17 16:34:43 UTC | #1

Hello there!

We are happy to announce that voting is now open for [a new IC release ](https://github.com/dfinity/ic/commits/release-2023-11-15_23-00).
The NNS proposal is here: [IC NNS Proposal 126000 ](https://dashboard.internetcomputer.org/proposal/126000).

Here is a summary of the changes since the last release:
* [[cf3b7afb6](https://github.com/dfinity/ic/commit/cf3b7afb6)] Consensus: chore: small changes to the `CatchUpPackage` interface
* [[b5e09340e](https://github.com/dfinity/ic/commit/b5e09340e)] Consensus: fix: Remove share validation optimization
* [[8a60a3774](https://github.com/dfinity/ic/commit/8a60a3774)] Crypto: fix: Limit size of nonces in HTTP requests
* [[62c52f25a](https://github.com/dfinity/ic/commit/62c52f25a)] Crypto: perf: use rayon thread pool in the vault server worker
* [[fc1ba08bb](https://github.com/dfinity/ic/commit/fc1ba08bb)] Execution: chore: add execution_environment benchmarks
* [[7d40c09f4](https://github.com/dfinity/ic/commit/7d40c09f4)] Execution: chore: remove hardcoded sample-size in execution benchmarks
* [[624ae53f3](https://github.com/dfinity/ic/commit/624ae53f3)] Execution: perf: Subnet messages performance - define raw rand entry in SubnetCallContextManager
* [[3d2cded57](https://github.com/dfinity/ic/commit/3d2cded57)] Message Routing: feat: Add aggregated node metrics to state
* [[f25894bda](https://github.com/dfinity/ic/commit/f25894bda)] Message Routing: feat: Allow raising critical error metrics during checkpoint loading
* [[1ea660728](https://github.com/dfinity/ic/commit/1ea660728)] Message Routing: doc: Add guidelines for replicated state invariants
* [[2d057c3ce](https://github.com/dfinity/ic/commit/2d057c3ce)] Message Routing: feat: Use inode to account for unchanged files in incremental manifest computation
* [[bf9533b64](https://github.com/dfinity/ic/commit/bf9533b64)] Message Routing: fix: Fix BlockmakerMetricsTimeSeries pruning logic
* [[2b7e53ada](https://github.com/dfinity/ic/commit/2b7e53ada)] Networking: chore(p2p-consensus): Set refresh rate of priority function to every 3s
* [[6f30c9f7d](https://github.com/dfinity/ic/commit/6f30c9f7d)] Networking: chore(quic_transport): Add per handler bandwidth metrics
* [[9f70cc11e](https://github.com/dfinity/ic/commit/9f70cc11e)] Networking: chore(state_sync_manager): Add total size metrics to ongoing state sync metrics
* [[22ce7636d](https://github.com/dfinity/ic/commit/22ce7636d)] Networking: chore: Remove the TimeSource usage in the artifact_pool in favour of consensus suppling the full mutation
* [[abbc5528b](https://github.com/dfinity/ic/commit/abbc5528b)] Networking: feat: Enable QUIC state sync
* [[c7340d3b7](https://github.com/dfinity/ic/commit/c7340d3b7)] Networking: feat(p2p-consensus): Enable artifact pushing with a threshold of 1KB
* [[751b2a0cf](https://github.com/dfinity/ic/commit/751b2a0cf)] Networking: fix(consensus_manager): gracefully exit if peer sender is dropped
* [[a1daa7507](https://github.com/dfinity/ic/commit/a1daa7507)] Networking: fix(consenus_manager): remove deleted by peer download stop
* [[a00c10836](https://github.com/dfinity/ic/commit/a00c10836)] Networking: fix: replace panic with drop priority
* [[886ae3be8](https://github.com/dfinity/ic/commit/886ae3be8)] Node: Assorted `ic-admin` improvements (follow-ups to HostOS upgrades)
* [[4430e1965](https://github.com/dfinity/ic/commit/4430e1965)] Node: Fix: Strip var path from HostOS/GuestOS rootfs build and fix user account creation
* [[5cea7fc6c](https://github.com/dfinity/ic/commit/5cea7fc6c)] Node: feat: Load certs if missing for snp report verification
* [[259e38372](https://github.com/dfinity/ic/commit/259e38372)] Node: feat: Print config info in SetupOS installation
* [[13179166f](https://github.com/dfinity/ic/commit/13179166f)] Node: fix: Flexible Network Configuration Behavior
* [[96b1a8470](https://github.com/dfinity/ic/commit/96b1a8470)] Runtime: Charge for `upload_chunk`
* [[b0ec37fd8](https://github.com/dfinity/ic/commit/b0ec37fd8)] Runtime: Explicitly configure Wasm features of Wasmtime
* [[b7a7b22d8](https://github.com/dfinity/ic/commit/b7a7b22d8)] Runtime: Upgrade `wasmtime` to version 14.0.4
* [[ab116d1cd](https://github.com/dfinity/ic/commit/ab116d1cd)] Runtime: feat: Enable new instrumentation on system subnets
* Various tech-debt management: code refactoring, docs, bug fixes, test updates

# IC-OS Verification

To build and verify the IC-OS disk image, run:

```
# From https://github.com/dfinity/ic#verifying-releases
sudo apt-get install -y curl && curl --proto '=https' --tlsv1.2 -sSLO https://raw.githubusercontent.com/dfinity/ic/d73659a2baf78302b88e29e5c2bc891cde1e3e0b/gitlab-ci/tools/repro-check.sh && chmod +x repro-check.sh && ./repro-check.sh -c d73659a2baf78302b88e29e5c2bc891cde1e3e0b
```

The two SHA256 sums printed above from a) the downloaded CDN image and b) the locally built image, must be identical, and must match the SHA256 from the payload of the NNS proposal.

-------------------------

ilbert | 2023-11-18 17:49:14 UTC | #2

What's the reason why the *Enable QUIC state sync* commit ([abbc5528b](https://github.com/dfinity/ic/commit/abbc5528b) in this proposal) was previously done in a separate proposal while now it's included in the same proposal?

Also, why is this commit repeated every week?

-------------------------

Zane | 2023-11-18 18:14:14 UTC | #3

From my understanding the QUIC state sync was previously enabled only on some subnets, likely for testing purposes, hence the need to submit a separate proposal every week. I assume Dfinity now feels confident enough in the feature to use it as default for the entire network.

-------------------------

ilbert | 2023-11-18 18:16:31 UTC | #4

So we should expect no more *Enable QUIC state sync* commits from now on probably

-------------------------

Zane | 2023-11-18 19:49:41 UTC | #5

Yes that should be the case unless something unexpected comes up and the team decides to go back to the legacy state sync while they keep working on the new one. This is just me speculating though, so a confirmation from Dfinity would be nice.

-------------------------

wpb | 2023-11-20 03:40:05 UTC | #6

Reviewers for the CodeGov project have completed our review of these replica updates.

Proposal ID: **126000**
New IC Release
Vote: **ADOPT**
Full report: [CodeGov portal on DSCVR](https://dscvr.one/post/1197961714254566405/rvm-proposal-126000) 

At the time of this comment on the forum there are still 2 days left in the voting period, which means there is still plenty of time for others to review the proposal and vote independently.  

We had several very good reviews of the Release Notes on these proposals by @Zane, @cyberowl, @ZackDS, @massimoalbarello, and @ilbert.  The IC-OS Verification was also performed by @Gekctek, @tiago89, and @jwiegley.  I recommend folks talk a look and see the excellent work that was performed on these reviews by the entire CodeGov team.  Feel free to comment here if you have any questions or suggestions.

[[b5e09340e](https://github.com/dfinity/ic/commit/b5e09340e)] seemed like a big change and was perplexing to several reviewers.  This sparked questions [here](https://github.com/dfinity/ic/commit/b5e09340e#commitcomment-132902410) from @cyberowl and [here](https://github.com/dfinity/ic/commit/b5e09340e#r132969431) from @massimoalbarello in the commit on GitHub.

@ZackDS and @Zane also spent time reviewing the System Canister Management proposals as documented [here](https://dscvr.one/post/1197961714254566413/scm-nns-proposals-125997-126004-126006-126007-126008-126009).  Neither of them were able to build and verify proposals 126004 and 126006.

-------------------------

sat | 2023-11-20 10:13:38 UTC | #7

[quote="Zane, post:5, topic:24765, full:true"]
Yes that should be the case unless something unexpected comes up and the team decides to go back to the legacy state sync while they keep working on the new one. This is just me speculating though, so a confirmation from Dfinity would be nice.
[/quote]

Yes, indeed. Thanks @ilbert and @Zane . We've been running QUIC version on an ever-growing set of subnets, and now we've come to a point where we don't have any more concerns about it, so we'll propose to deploy it to all subnets in the next rollout.

-------------------------

ZackDS | 2023-11-20 10:46:26 UTC | #8

Actually if I am not mistaken it was already done before with https://dashboard.internetcomputer.org/release/80a6745673a28ee53d257b3fe19dcd6b7efa93d1?s=100
Glad to hear it works and opens up new possibilities for improvement.

-------------------------

