charm | 2023-06-15 01:57:47 UTC | #1

When participating in the SNS launch, I found that everyone transfers money to different accounts. I am curious what rules are used to do this. I can’t find it in the SNS code. Can anyone help me?

https://github.com/dfinity/ic/tree/master/rs/sns

-------------------------

Severin | 2023-06-15 07:36:20 UTC | #2

One of the hints I could find in the code is [here](https://github.com/dfinity/ic/blob/master/rs/sns/swap/src/swap.rs#L659-L663). It uses the (very common) pattern of using the participant's Principal as the subaccount. The account IDs are then calculated from the pair `(swap canister, participant)`

-------------------------

charm | 2023-06-15 09:58:17 UTC | #3

I didn't understand how he generated the account

-------------------------

charm | 2023-06-15 10:02:26 UTC | #4

```
  let account = Account {
            owner: this_canister.get().0,
            subaccount: Some(principal_to_subaccount(&buyer)),
        };
```
The specific generation method of this code is not understood

-------------------------

Severin | 2023-06-15 11:12:59 UTC | #5

That's just the convention. If you want the source code of that, have a look at the source of [`AccountIdentifier::new`](https://docs.rs/ic-ledger-types/latest/ic_ledger_types/struct.AccountIdentifier.html#method.new) and [`Subaccount::from::<Principal>`](https://docs.rs/ic-ledger-types/latest/ic_ledger_types/struct.Subaccount.html#method.from)

-------------------------

charm | 2023-06-15 13:16:04 UTC | #6

[quote="Severin, post:2, topic:20715"]
The account IDs are then calculated from the pair `(swap canister, participant)`
[/quote]

I don't understand it very well, because the code I am good at is Python

-------------------------

charm | 2023-07-06 03:44:49 UTC | #7

I didn’t understand how he generated the account

-------------------------

levi | 2023-07-05 17:43:55 UTC | #8

It is the swap canister id as the account owner and the buyer principal id as the subaccount using [this function](https://github.com/dfinity/ic/blob/b3db266d7ec0698c9399a09f9f29e945db6575cc/rs/sns/swap/src/swap.rs#L2685). 

[Here](https://github.com/dfinity/ic/blob/b3db266d7ec0698c9399a09f9f29e945db6575cc/rs/sns/swap/src/swap.rs#L762) is where the swap canister checks the balance of that account

Here is the specification for the account-identifier: https://internetcomputer.org/docs/current/references/ledger#_accounts. 

Here is an implementation in the Dart language, more similar to Python: https://github.com/levifeldman/ic_tools/blob/3c4187115015d7834911bf3fa5cb0c901bab304d/lib/src/common.dart#L78

-------------------------

charm | 2023-07-06 00:50:54 UTC | #9

I follow the method you said, the sending address is incorrect

```
def convert_wallet_address_to_bytes_array(wallet_address):
    final_text = []
    for x in range(int(len(wallet_address) / 2)):
        my_hexdata = wallet_address[x*2:x*2+2]
        final_text.append(int(my_hexdata,16))
    return final_text    

strs='a6fed7e5abefd943bc6fde46177dc1413eecfc6d00a28c7155751232b6a6d98b'
subaccount=convert_wallet_address_to_bytes_array(strs)
print(icrc1_transfer('6eexo-lqaaa-aaaaq-aaawa-cai',subaccount,100000))
```

-------------------------

levi | 2023-07-06 01:52:01 UTC | #10

[quote="levi, post:8, topic:20715"]
the buyer principal id as the subaccount using [this function](https://github.com/dfinity/ic/blob/b3db266d7ec0698c9399a09f9f29e945db6575cc/rs/sns/swap/src/swap.rs#L2685).
[/quote]



Convert the wallet **principal** to a subaccount byte array. 
https://github.com/levifeldman/ic_tools/blob/3c4187115015d7834911bf3fa5cb0c901bab304d/lib/src/common.dart#L102.

-------------------------

