borovan | 2020-08-08 09:10:23 UTC | #1

Hi, so I've started going through the tutorial, and on the my_counter example getting some strange behaviour.  I'm not exactly sure what to expect but...

    // Create a simple Counter actor.
    actor Counter {
    stable var currentValue : Nat = 0;

    // Increment the counter with the increment function.
    public func increment() : async () {
        currentValue += 1;
    };

    // Read the counter value with a get function.
    public query func get() : async Nat {
        currentValue
    };

the get() function returns instantly, but the increment function takes 5 seconds.  This is the same behaviour locally and --network tungsten.  The increment and get functions work fine, just the delay feels like something is wrong.

Thanks!

-------------------------

cryptoschindler | 2020-08-08 10:57:55 UTC | #2

The difference is that the get() function is a query function which doesn’t alternate state and thatfor returns very fast. The increment() function is modifying state and has to go trough consensus, which is why it takes longer than the get() function. Although 5 seconds really is a long time, usually it should be 1-2 seconds I’d guess.

-------------------------

borovan | 2020-08-08 11:10:02 UTC | #3

[quote="cryptoschindler, post:2, topic:1018"]
r
[/quote]

Right ok, I had a few other things running on my computer so that could explain the slowdown.  Is the 1-2 seconds something that we'd expect in the future or are there planned ways to reduce that?  

I know you can send an update and wait for the response asynchronously, just curious on what to expect.

-------------------------

cryptoschindler | 2020-08-08 12:15:11 UTC | #4

I think currently 1-2 seconds is realistic for the near future. The goal is to design the overall architecture of the canisters and programm in a way that state modifying calls either rarely appear or can be handled “efficently”. I can only recommend this article to get an idea
https://ninegua.github.io/reversi

-------------------------

borovan | 2020-08-08 12:27:55 UTC | #5

Ok cool, working my way through the simple examples then I'll have a look at Reversi.  Thanks!

-------------------------

Ori | 2020-08-08 12:47:37 UTC | #6

Also keep security in mind when using query calls, since you’re usually trusting the result from a single replica. Just be aware of that for critical data when designing.

-------------------------

