NikolasHai | 2024-03-28 09:15:51 UTC | #1

Hello,

The Financial-Integrations Team @ DFINITY is happy to share with you that the first version of Rosetta for ICRC-1 Ledgers is out.

**What does it do?**

ICRC-Rosetta implements the Rosetta-API [standard](https://docs.cloud.coinbase.com/) for ICRC-1 Ledgers. You can use it to store the respective blockchain inside an ICRC-1 Ledger, query blocks, transactions, balances and the status of the network. Furthermore, it allows you to post transactions to your ICRC-1 Ledger of choice. All the transactions are signed offline and your keys never make their way inside of Rosetta. ICRC-Rosetta stores the blocks that it fetched from the ICRC-1 Ledger inside a local SQLite database which is accessible to the user.

**Why would I use it?**

ICRC-Rosetta can be used for various tasks. Historically, exchanges, custodians and other Layer-3 entities prefer using a common standard to interact with blockchains.

Under the assumption that you run the instance within your own trust domain Rosetta makes sure that the blocks and thus the data you receive is verified and has not been tampered with. No need to worry about whether the blockchain you fetched is correct or not.

You can use the locally created database to run SQL queries e.g, to perform analytics tasks on it.

**How do I use it?**

We are still working on extensive documentation for ICRC-Rosetta. It was designed to be very similar to ICP Rosetta for which you can find Documentation [here](https://internetcomputer.org/docs/current/developer-docs/defi/rosetta/overview).

The docker image for ICRC-Rosetta is available on [Dockerhub](https://hub.docker.com/r/dfinity/ic-icrc-rosetta-api). You can run ICRC-Rosetta with this example command: `docker run -ti dfinity/ic-icrc-rosetta-api --network-type mainnet --ledger-id 2ouva-viaaa-aaaaq-aaamq-cai`

In this case we are connecting to mainnet with the ICRC-1 ledger with the canister id: `2ouva-viaaa-aaaaq-aaamq-cai`

Every ICRC-1 Ledger has its own canister id. Some noteworthy examples are the following: :

ckBTC: [mxzaz-hqaaa-aaaar-qaada-cai](https://dashboard.internetcomputer.org/canister/mxzaz-hqaaa-aaaar-qaada-cai)

ckETH: [ss2fx-dyaaa-aaaar-qacoq-cai](https://dashboard.internetcomputer.org/canister/ss2fx-dyaaa-aaaar-qacoq-cai)

[SNS](https://dashboard.internetcomputer.org/sns) Example OpenChat: [2ouva-viaaa-aaaaq-aaamq-cai](https://dashboard.internetcomputer.org/canister/2ouva-viaaa-aaaaq-aaamq-cai)

ckTestBTC:`mc6ru-gyaaa-aaaar-qaaaq-cai`

ckTestETH: `apia6-jaaaa-aaaar-qabma-cai`

Until we have detailed guides on how ICRC-Rosetta shows transactions, we recommend checking out some transactions or blocks using the /block/transaction or /block endpoints. The process for using the construction-api is very similar to ICP-Rosetta, but with a few small differences that you can easily spot by looking at how transactions are set up.

FAQ:

*Q: Does there exist an ICRC-1 Ledger on a testnet?*

A: No, currently there exists no ICRC-1 Ledger on any testnet

*Q: Can I use a single Rosetta instance for multiple ICRC-1 Ledgers?*

A: No, you need to setup a Rosetta instance per ICRC-1 Ledger. Rosetta is a lightweight server and this approach allows for different configurations with minimal effort.

*Q: How do I know the ICRC-1 Ledger id to connect to?*

A: You can find ckBTC, ckETH and all SNS tokens on the [dashboard](https://dashboard.internetcomputer.org/), there you will also find the canister ids. We do not keep track of other ICRC-1 Ledgers and thus do not know their canister ids.

*Q:How do I know whether my transaction was successful?*

A: ICRC-Rosetta has a Fire-and-Forget design which makes it non-blocking. To check whether your transaction was successful you can either query for the transaction hash you received from /construction/hash and search for it at /search/transactions or you query for blocks through /block/transaction or /block and check for the transaction hash inside the returned blocks/transactions.

-------------------------

daijianlin | 2024-03-28 09:26:19 UTC | #2

Wow, thanks for sharing such a great news with us timely. Very excited to see. Thanks for the team's hard work, you are the best team in my heart😺

-------------------------

gatsby_esp | 2024-03-28 10:28:12 UTC | #3

Amazing news! Let DEFI kickstart on ICP

-------------------------

Palanga25 | 2024-03-28 11:37:43 UTC | #5

Dang It's Time to List On CEX !!!!

-------------------------

ICdex | 2024-03-28 12:24:18 UTC | #6

That's very well. Nice,  good job my friends.

-------------------------

Futurium | 2024-03-28 12:29:03 UTC | #7

Awesome! Thanks for the work :slight_smile:

-------------------------

Palanga25 | 2024-03-29 06:32:41 UTC | #8

if we use rosetta API do we need to deploy it and pay and how much it cost?

-------------------------

ritvick | 2024-03-29 17:30:25 UTC | #10

Awesome. This is pretty cool. Has been waiting for Onchain Token integrations with Rosetta for a long time. 🚀

-------------------------

Robert_Hon | 2024-03-30 00:23:34 UTC | #11


Could you pls predict how long it will take for mainstream wallet applications like Metamask and Bitget to start supporting ICP's Rosetta? Only when widely-used wallet applications support SNS tokens will ICP's Dapps attract more users. Are there specific personnel working on advancing and coordinating with major wallet providers?

Thanks.

-------------------------

cyanvell | 2024-03-30 03:54:32 UTC | #12

看起来并不难用，希望能有开发者能基于此做出一款通用产品出来

-------------------------

NikolasHai | 2024-03-30 07:35:31 UTC | #13

There is no cost involved with using Rosetta.

-------------------------

NikolasHai | 2024-03-30 07:39:41 UTC | #14

I am not aware of any plans on working with Metamask or Bitget. The Internet Identity is what is commonly used to interact with Smart Contracts on the Internet Computer. Rosetta is a standard for blockchain integration, not for wallets.

-------------------------

paul.l | 2024-03-30 12:55:18 UTC | #15

Although Rosetta is free, but I think deploying its servers will incurs costs, and establishing a secure and highly available architecture can also result in high costs.

-------------------------

skilesare | 2024-03-30 15:59:30 UTC | #16

You rarely have to do this. Most exchanges will run their own version of the rostta image on a hardware spec with redundancy that meets their need.  They don't want to be dependent on your implementation.

If you need your own for a block explorer dapp or something like that then you get to choose how much redundancy you want, but unless you're running a token that has massive volume a solid digital ocean instance will get you a long way for non-critical applications.

-------------------------

champagnepapi | 2024-04-04 15:02:04 UTC | #17

Great! I just started my node with the OpenChat ledger. How do I now get the data for my analytical purposes?

So far I have fetched those for the ICP token via PHP using this payload:


```
$requestData = json_encode(array(
    "network_identifier" => array(
        "blockchain" => "Internet Computer",
        "network" => "00000000000000020101"
    )
));
```
And then using commands like this for example, to get the last block:

`    CURLOPT_URL => $rosettaUrl . "/network/status",`


How do these change for ICRC tokens? So far I have not been able to find anything in the documentation.

-------------------------

NikolasHai | 2024-04-04 15:25:35 UTC | #18

Hi, you can get the data for your analytical purposes by using the database that was created. Its default name is data.sqlite and it is stored in the root directory of the docker container. You can of course mount some directory to the docker container in order to also use the database when rosetta is not running. 

For the network_identifier you can call the `network/list` endpoint to acquire the correct network_identifier for the rosetta you are running.

-------------------------

champagnepapi | 2024-04-04 15:58:53 UTC | #19



Can I find network/list somewhere else like on dashboard.internetcomputer.org? Or only on my node (if so there is a way to it pull via console ssh)?

After that the rest will be the same as I do for ICP token ledger?

-------------------------

champagnepapi | 2024-04-05 08:44:40 UTC | #20

[quote="NikolasHai, post:1, topic:29015"]
We are still working on extensive documentation for ICRC-Rosetta.
[/quote]

When will be available?

-------------------------

champagnepapi | 2024-04-05 09:30:53 UTC | #21

Is it possible to start a new rosetta icrc node on the same server where a standard ICP ledger rosetta node is running?

I started an icrc-rosetta following your instructions, mapped it to a different port, as you can see, but I can't contact it as I do with the existing one (rosetta-node)

![Screenshot 2024-04-05 at 11.26.06|690x28](upload://kPKGZUSxnNbvSIF7V1BEtxwjsj8.png)

I don't have any firewall set up that could block the connection to the port, I have checked the ip address and container port of the new node (rosetta-node-icrc-openchat) more than once. The node is running and synchronized to the last block.

Where am I going wrong? Thanks for your help.

-------------------------

NikolasHai | 2024-04-08 07:11:07 UTC | #22

We are working on it. You can use the documentation for ICP rosetta in the meantime. Since ICRC Rosetta right now only supports transfers of tokens, the requests look very similar to ICP rosetta.

-------------------------

champagnepapi | 2024-04-08 07:15:50 UTC | #23

Thank you Nikolas, do you have ha chance to help me out [here](https://forum.dfinity.org/t/icrc-rosetta-1-0-0-release/29015/21?u=champagnepapi) please?

-------------------------

NikolasHai | 2024-04-08 07:33:52 UTC | #24

Can you show me the command you used to start icrc rosetta?

-------------------------

champagnepapi | 2024-04-08 08:03:57 UTC | #25

Sure! That's how I started the ICRC-Rosetta node from docker: 

`docker run -ti --detach --restart always --name rosetta-node-icrc-openchat -p 8082:8082 -v rosetta-data-icrc-openchat:/path/to/rosetta/data dfinity/ic-icrc-rosetta-api --network-type mainnet --ledger-id 2ouva-viaaa-aaaaq-aaamq-cai`

Instead, this is how I started the other node (the one for ICP):


`docker run --interactive --tty --publish 8081:8081 --detach --name rosetta-node -v rosetta-data:/path/to/rosetta/data --restart always dfinity/rosetta-api --mainnet 
--not-whitelisted`

As I mentioned above, the ICP node can be contacted correctly from port 8081, but the ICRC node does not respond on port 8082.

Thank you!

-------------------------

NikolasHai | 2024-04-08 08:28:47 UTC | #26

You need to specify the port for rosetta too. the command `-p 8082:8082` only specifies the port for docker not for rosetta. You can pass the port for rosetta by specifying it like so: `--port 8082`

-------------------------

champagnepapi | 2024-04-08 09:01:01 UTC | #27

Thank you! It works.

-------------------------

Dustin | 2024-04-08 11:12:05 UTC | #28

@NikolasHai this is amazing, thanks for releasing the Rosetta for ICRC tokens! Is it already considered production ready? Can we go into talks with CEXs about token listings using this rosetta version?

-------------------------

champagnepapi | 2024-04-09 13:09:48 UTC | #29

Fetching CHAT token transaction blocks, I noticed that we have two address identifiers: `account` and `sub_account`.  

As I understand it if the `sub_account` is empty (all zero values) it means the transaction was routed directly to the main account, otherwise if an address is present it means it was routed to the sub address. Am I correct?

Also, trying to get the account balance from the `/account/balance` endpoint in the case of `sub_account` address I cannot get a value, even if I combine `sub_account` with the main account. Instead with the main `account` address I can correctly get the balance from the endpoint.

**So, how do I get the sub_accounts balance?**

Thank you for your help.

-------------------------

champagnepapi | 2024-04-09 15:05:49 UTC | #30

I think I got it... it was necessary to add another parameter on request. As per Coinbase docs.

        "account_identifier" => array(
            "address" => $accountAddress,
            "sub_account" => array(
                "address" => $subAccountAddress


Thanks anyway... I would still like to have ha confirmation here: :)

[quote="champagnepapi, post:29, topic:29015"]
As I understand it if the `sub_account` is empty (all zero values) it means the transaction was routed directly to the main account, otherwise if an address is present it means it was routed to the sub address. Am I correct?
[/quote]

-------------------------

Robert_Hon | 2024-04-21 13:20:00 UTC | #31

I'm confused whether Dfinity should proactively contact centralized CEXs to change the transfer addresses for ICP from Account ID to Principal ID. This would minimize resistance for all SNS projects to the maximum extent. Otherwise, traders transferring ICP and SNS tokens on CEXs may be misled because our ICP transfer addresses look very confusing.

-------------------------

NikolasHai | 2024-05-07 08:32:44 UTC | #32

Please see the docs on the difference between Accountidentifiers and Accounts here: https://internetcomputer.org/docs/current/developer-docs/defi/overview#accounts-vs-accountidentifiers

It is not possible to change Accountidentifiers to Accounts since you would need to break the hash function to do that.

-------------------------

baolongt | 2024-05-22 04:52:16 UTC | #33

Does this support any non SNS token with ICRC-1 and ICRC-2 standard. If not, what is the solution for migrating some token to use Rosetta API?

-------------------------

skilesare | 2024-05-22 06:40:11 UTC | #34

Depending on what library you are using it may or may not. I need to add a get_transactions endpoint into the motoko libraries and I have concerns about phash calls on the Rosetta verifier, but hopefully I can get it in in the next couple of weeks.

-------------------------

