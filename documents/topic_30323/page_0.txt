KryL | 2024-05-05 08:23:06 UTC | #1

Hi this is my first post on this forum. 
It's probably a beginner's question, but I'm having a problem calling a Motoko function from JavaScript. I'm getting an error message and can't proceed further:
Loading module from “http://127.0.0.1:4943/declarations/pro_backend” was blocked because of a disallowed MIME type (“”)

This is the Error:
![vmplayer_X3UnQ3B2tF|690x278](upload://y3kuptWMgL3bmHjLlLQW14hNLMu.png)

-------------------------

KryL | 2024-05-05 08:54:19 UTC | #2

**index.html** 

<!DOCTYPE html>
<html lang="">

<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <meta http-equiv="X-Content-Type-Options" content="nosniff">
  <link rel="icon" href="/favicon.ico" />
  <title>IC Hello Starter</title>
</head>

<body>
  <noscript>
    <strong>We're sorry but this application doesn't work properly without
      JavaScript enabled. Please enable it to continue.</strong>
  </noscript>
  <div id="app"></div>
  <script type="module" src="script.js" ></script>

<div><center><button id="Btn">Click</button></center></div>
<h1 id="place">Noxx</h1>
</body>

</html>

**main.mo:** 

import Text "mo:base/Text";
actor {
  public query func greet(name : Text) : async Text {
    return "Hello, " # name # "!";
  };

  public func _dajdupy() : async Text
  {
    return "TEKST EXAMPLE !!!";
  };
};

**script.js:**
import { pro_backend } from "../declarations/pro_backend";


document.getElementById("Btn").addEventListener("click", async () =>
{
const name = document.getElementById("place");
const gr = await pro_backend._dajdupy();
document.getElementById("place").innerText = gr;
});

**in declaration folder I have this: **
**in pro_backend.did.js**

export const idlFactory = ({ IDL }) => {
  return IDL.Service({
    '_dajdupy' : IDL.Func([], [IDL.Text], []),
    'greet' : IDL.Func([IDL.Text], [IDL.Text], ['query']),
  });
};
export const init = ({ IDL }) => { return []; };

-------------------------

asjn3e | 2024-05-05 09:01:47 UTC | #3

everything seems to be correct but as it says have you enabled js? maybe check if javascript is enabled in your browser

-------------------------

KryL | 2024-05-05 09:11:24 UTC | #4

Everything is unlocked now, and when I run the project created with Vue frontend on the same browser, it works. Therefore, I'm wondering what I might have missed something. On html i got this: 
![vmplayer_YhidUWsKdV|690x399](upload://v7fc7MVGiVguMpz85s6KDnQ0mm4.png)
But I simply don't know what can cause this error

-------------------------

asjn3e | 2024-05-05 09:25:50 UTC | #5

have you tried the vanila js template created by dfx when you use the command dfx new?
if yes do you get the same error with that template as well?
if not can you try it to see if the same thing happens?
i might sound stupid but have you deployed both forntend and backend canisters?

-------------------------

KryL | 2024-05-05 09:31:46 UTC | #6

Hey thank U for answer I just ran `dfx deploy` moments ago, and now I have backend and frontend canisters available through the browser on the local replica

![Rj0c0NgdFG|690x433](upload://z2P9nDzZWPM1vSDJ6EEWD9aFZET.png)

-------------------------

KryL | 2024-05-05 09:32:55 UTC | #7

And after creating new project with frontend framework everything is fine so it's not browser settings

-------------------------

asjn3e | 2024-05-05 09:53:51 UTC | #8

In my view, it should work based on your configuration and code, however for an unknown reason there is an error. can you push your code in to a github repository and share the link of that here?

-------------------------

KryL | 2024-05-05 10:49:57 UTC | #9

Ok there is my whole project files https://github.com/Olirysolest/ICP_BaseNoFramework

-------------------------

asjn3e | 2024-05-05 20:27:59 UTC | #10

I checked your code and the problem is with your webpack config, because of that it can not import the Actor to call your backend canister. what you can do is try to make a new project with custom wbpack configuration and set the source in dfx.json for frontend to dist folder. The reason your code works with some frameworks or libraries is they have preset webpack config.

-------------------------

