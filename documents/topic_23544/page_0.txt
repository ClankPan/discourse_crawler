basvandijk | 2023-10-10 07:37:51 UTC | #1

The NNS Team will be submitting the following upgrade proposal on Monday, 2023-10-09.
DFINITY plans to vote on this proposal on Thursday, 2023-10-12.

## This Release

In addition to code refactoring, optimisations and maintenance, the following externally visible changes were implemented:

### Major Changes

* A bug fix that will enforce the minimum exchange rate of ICP to XDR when rewarding node providers. This check was previously enforced when submitting Exchange Rate proposals but was missed when implementing the exchange rate canister. There is no noticeable change in the current behavior.

* Disabling the submission of UpdateAllowedPrincipals proposal in NNS Governance. This disables the first step of the legacy SNS initialization method. All SNSes must now use the 1-proposal method via the CreateServiceNervousSystem proposal.

## Proposals to be submitted
### Registry
``````
## Proposal to Upgrade the Registry Canister
### Proposer: DFINITY Foundation
### Git Hash: 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
### New Wasm Hash: b6aa17e9c97b76059279ad3ec49feb95451ee7988f41b542e209800d72fb5bba
### Target canister: rwlgt-iiaaa-aaaaa-aaaaa-cai
---
## Features
* The API BN is represented in the registry.

## Release Notes
```
$ git log --format="%C(auto) %h %s" e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797..70f6510221fd2b7b47ae45bfe97963579e0e7f2f --  ./rs/registry/canister
 5be690effe feat(BOUN-742): The API BN is represented in the registry
 13d02270dc refactor: use the workspace for prost-build and bytes crate version
 78836a179a chore: use the global workspace for the version of the futures crate
 9371e6fbd8 chore: use the global workspace for deriving the prost version
```

## Wasm Verification
Verify that the hash of the gzipped WASM matches the proposed hash.
```
git fetch
git checkout 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
./gitlab-ci/container/build-ic.sh -c
sha256sum ./artifacts/canisters/registry-canister.wasm.gz
```
## Current Version
- Current Git Hash: e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797
- Current Wasm Hash: dead1db5d35f4395d9b950c980220af564306ccc428af299d05e95d61ce4ec0a
``````
### Governance
``````
## Proposal to Upgrade the Governance Canister
### Proposer: DFINITY Foundation
### Git Hash: 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
### New Wasm Hash: f4350f3633e7c2da59620b47c74957741ebde88ae0488d0581546569575cea47
### Target canister: rrkah-fqaaa-aaaaa-aaaaq-cai
---
## Features

Major Changes
* A bug fix that will enforce the minimum exchange rate of ICP to XDR when rewarding node providers. This check was previously enforced when submitting Exchange Rate proposals but was missed when implementing the exchange rate canister. There is no noticeable change in the current behavior.

* Disabling the submission of UpdateAllowedPrincipals proposal in NNS Governance. This disables the first step of the legacy SNS initialization method. All SNSes must now use the 1-proposal method via the CreateServiceNervousSystem proposal.

## Release Notes
```
$ git log --format="%C(auto) %h %s" e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797..70f6510221fd2b7b47ae45bfe97963579e0e7f2f --  ./rs/nns/governance
 a290a6dc6e Merge branch 'jason/NNS1-2413-4' into 'master'
 eb39eefd3f feat: NNS1-2413 Call NeuronDataValidator::maybe_validate within heartbeat
 74f035b9d6 refactor: NNS1-2616: NeuronStore can take HeapNeuronFollowingIndex as optional parameter
 c7664b4829 Merge branch 'arshavir/NNS1-2633-3' into 'master'
 47ad2b3f4e test(NNS1-2633): Matched Funding / Add fixtures tests for `settle_neurons_fund_participation`
 42ada5a4bc test(NNS1-2633): Matched Funding / Add `settle_neurons_fund_participation_request_tests`
 ea817ff9fe Merge branch 'arshavir/NNS1-2633' into 'master'
 32623e34e8 test(NNS1-2633): Matched Funding / Add `test_cant_interleave_calls_to_settle_neurons_fund`
 81464aed12 feat(NNS1-2555): Matched Funding / Begin implementing changes in NNS Governance
 94f88cd5d4 Merge branch 'arshavir/NNS1-2596-5' into 'master'
 097af6cd2d feat(NNS1-2596): Matched Funding / Implementation of `settle_neurons_fund_participation` in NNS Governance
 6c70619e20 feat(nns/sns)!: Disable UpdateAllowedPrincipals NNS Function in mainnet code
 d7e1d12bdf feat(NNS1-2620): Matched Funding / Use `rust_decimal::Decimal` in rs/nns/governance/src/neurons_fund.rs
 e3c50528de feat(NNS1-2625): Matched Funding / Add new field `neurons_fund_participation` to `ProposalData`
 2ba6dbea7a chore(NNS1-2555): Matched Funding / Refactor `MatchedParticipationFunction`
 17dbaaca6e Merge branch 'or/BOUN-216' into 'master'
 5be690effe feat(BOUN-742): The API BN is represented in the registry
 b3f5d4d6b4 feat(NNS1-2596): Matched Funding / add new NNS Governance function `settle_neurons_fund_participation` [override-didc-check]
 b9bc6c6766 feat: NNS1-2578: minor optimization for cast_vote_and_cascade_follow
 892af36a43 feat: NNS1-2413 Implement validation logic for neuron indexes
 34abd6be1b Merge branch 'rename-neuron-indexes-validation' into 'master'
 f6451a2245 refactor: rename neuron_indexes_validation to neuron_data_validation
 201dace54e feat(NNS1-2555): Matched Funding / add new type `MatchedParticipationFunction`
 05a81701d4 feat: NNS1-2520 Apply neuron mutations based on migration progress
 13d02270dc refactor: use the workspace for prost-build and bytes crate version
 78836a179a chore: use the global workspace for the version of the futures crate
 64ca887ddd Merge branch 'rumenov/prostdde' into 'master'
 9371e6fbd8 chore: use the global workspace for deriving the prost version
 2a253b6258 fix(nns): Correctly enforce the minimum_icp_xdr_rate when rewarding node providers
 20bbdc57bc feat: NNS1-2520 Internalize index migration status into neuron store so that neuron store can use it for deciding whether to apply neuron mutations
 be81e23265 feat: NNS1-2599 Run neuron indexes migration in a state machine test and observe effect
```

## Wasm Verification
Verify that the hash of the gzipped WASM matches the proposed hash.
```
git fetch
git checkout 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
./gitlab-ci/container/build-ic.sh -c
sha256sum ./artifacts/canisters/governance-canister.wasm.gz
```
## Current Version
- Current Git Hash: e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797
- Current Wasm Hash: e57bbbc109fed9c010f57a1f88edd3a016551efc906b7b6099aca65a40785b4a
``````
### Root
``````
## Proposal to Upgrade the Root Canister
### Proposer: DFINITY Foundation
### Git Hash: 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
### New Wasm Hash: 602380b53d05bab5a906bc8c70ae224443a1c7f408a802f2aa97e349b7d56c89
### Target canister: r7inp-6aaaa-aaaaa-aaabq-cai
---
## Release Notes
```
$ git log --format="%C(auto) %h %s" e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797..70f6510221fd2b7b47ae45bfe97963579e0e7f2f --  ./rs/nns/handlers/root/impl
 13d02270dc refactor: use the workspace for prost-build and bytes crate version
 9371e6fbd8 chore: use the global workspace for deriving the prost version
```

## Wasm Verification
Verify that the hash of the gzipped WASM matches the proposed hash.
```
git fetch
git checkout 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
./gitlab-ci/container/build-ic.sh -c
sha256sum ./artifacts/canisters/root-canister.wasm.gz
```
## Current Version
- Current Git Hash: e63cc8e68d591dd0ca3e68ec46ed1d9c2c1d7797
- Current Wasm Hash: 22ef5448ba21acae44412c85e298bb3e773e08f5124f929eca5c5c7019fac7c8
``````
### Genesis Token
``````
## Proposal to Upgrade the Genesis-token Canister
### Proposer: DFINITY Foundation
### Git Hash: 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
### New Wasm Hash: caecb96f7ff04836fb641c37a331b5d8f5de7ee416d52063dc13282e368d6c96
### Target canister: renrk-eyaaa-aaaaa-aaada-cai
---
## Release Notes
```
$ git log --format="%C(auto) %h %s" b029bf49b688b757be2df46b2b72465726c225fd..70f6510221fd2b7b47ae45bfe97963579e0e7f2f --  ./rs/nns/gtc
 9ea236c3d0 [IC-1490] Update and synchronise hex-literal version.
 13d02270dc refactor: use the workspace for prost-build and bytes crate version
 9371e6fbd8 chore: use the global workspace for deriving the prost version
 1fa41bdfce chore: upgrade the prost, tonic and pprof versions
 68c57d1242 Update gazelle, go and buildifier toolchains.
```

## Wasm Verification
Verify that the hash of the gzipped WASM matches the proposed hash.
```
git fetch
git checkout 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
./gitlab-ci/container/build-ic.sh -c
sha256sum ./artifacts/canisters/genesis-token-canister.wasm.gz
```
## Current Version
- Current Git Hash: b029bf49b688b757be2df46b2b72465726c225fd
- Current Wasm Hash: 59596e47783001d3f1867b854f917d7f15597ec4fbeb7cbfc109486b9b688de8
``````

-------------------------

DanielThurau | 2023-10-09 18:43:24 UTC | #2

Proposals have been submitted:

Registry: https://dashboard.internetcomputer.org/proposal/125013

NNS Governance: https://dashboard.internetcomputer.org/proposal/125014

NNS Root: https://dashboard.internetcomputer.org/proposal/125015

Genesis-Token-Canister: https://dashboard.internetcomputer.org/proposal/125016

-------------------------

ZackDS | 2023-10-11 09:25:50 UTC | #3

Can't seem to shake this error, any ideas as why ? Never had it before ... 
![Screenshot from 2023-10-11 11-16-58|690x233](upload://2w6icXT4Ap17hjyAhhLg4HdgKPK.png)

-------------------------

DanielThurau | 2023-10-11 15:53:30 UTC | #4

Hi @ZackDS, 

Can you paste the command you ran?

-------------------------

ZackDS | 2023-10-11 16:07:12 UTC | #5

Yes the ``
./gitlab-ci/container/build-ic.sh -c
``  from the proposal, same on Ubuntu server/desktop and Wsl2 on  Win11 . Even tried with different Basel version and Baselisk still got the same error. System up to date, podman is latest ver.
Should have been the ./scripts/docker-build one instead ?

-------------------------

DanielThurau | 2023-10-11 16:40:56 UTC | #6

I was not able to reproduce:

```
git fetch
git checkout 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
./gitlab-ci/container/build-ic.sh -c
The authenticity of host 'gitlab.com (172.65.251.78)' can't be established.
ED25519 key fingerprint is SHA256:eUXGGm1YGsMAS7vkcx6JOJdOGHPem5gQp4taiCfCLB8.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'gitlab.com' (ED25519) to the list of known hosts.
git: 'branchless' is not a git command. See 'git --help'.
branchless: Failed to process reference transaction!
branchless: Some events (e.g. branch updates) may have been lost.
branchless: This is a bug. Please report it.
git: 'branchless' is not a git command. See 'git --help'.
branchless: Failed to process reference transaction!
branchless: Some events (e.g. branch updates) may have been lost.
branchless: This is a bug. Please report it.
HEAD is now at 70f6510221 Merge branch 'kb/test-snp' into 'master'
git: 'branchless' is not a git command. See 'git --help'.

Building release revision (master or rc--*)! Use '--no-release' for non-release revision!

Validating build environment
Purging artifact directories
Building selected IC artifacts
Building by using a new DFINITY container
+ sudo podman run --pids-limit=-1 -it --rm --privileged --network=host --cgroupns=host -w /ic -u 1000:1002 -e HOSTUSER=thurau -e VERSION=70f6510221fd2b7b47ae45bfe97963579e0e7f2f --hostname=devenv-container --add-host devenv-container:127.0.0.1 --entrypoint= --init --hostuser=thurau --mount type=bind,source=/home/thurau/code/ic,target=/ic --mount type=bind,source=/home/thurau,target=/home/thurau --mount type=bind,source=/home/thurau/.cache,target=/home/ubuntu/.cache --mount type=bind,source=/home/thurau/.ssh,target=/home/ubuntu/.ssh --mount type=bind,source=/home/thurau/.aws,target=/home/ubuntu/.aws --mount type=bind,source=/var/lib/containers,target=/var/lib/containers --mount type=tmpfs,destination=/var/sysimage --mount type=bind,source=/home/thurau/.bash_history,target=/home/ubuntu/.bash_history --mount type=bind,source=/home/thurau/.local/share/fish,target=/home/ubuntu/.local/share/fish --mount type=bind,source=/home/thurau/.zsh_history,target=/home/ubuntu/.zsh_history -v /tmp/ssh-XXXXzhdZ5e/agent.453665:/ssh-agent -e SSH_AUTH_SOCK=/ssh-agent -w /ic docker.io/dfinity/ic-build:bc65a3306900bed76f8126a866e957ae89473e66ec55efe86edb4fcc8a6a5a0a bash -c '    # build canisters
    mkdir -p "artifacts/canisters"
    bazel build --config=local --ic_version='\''70f6510221fd2b7b47ae45bfe97963579e0e7f2f'\'' --ic_version_rc_only='\''70f6510221fd2b7b47ae45bfe97963579e0e7f2f'\'' //publish/canisters
    bazel cquery --config=local --output=files //publish/canisters | xargs -I {} cp {} "artifacts/canisters"'
Starting local Bazel server and connecting to it...
INFO: Analyzed target //publish/canisters:canisters (619 packages loaded, 15332 targets configured).
INFO: Found 1 target...
Target //publish/canisters:canisters up-to-date:
  bazel-bin/publish/canisters/candid-test-canister.wasm.gz
  bazel-bin/publish/canisters/canister-creator-canister.wasm.gz
  bazel-bin/publish/canisters/cycles-minting-canister.wasm.gz
  bazel-bin/publish/canisters/genesis-token-canister.wasm.gz
  bazel-bin/publish/canisters/governance-canister.wasm.gz
  bazel-bin/publish/canisters/governance-canister_test.wasm.gz
  bazel-bin/publish/canisters/governance-mem-test-canister.wasm.gz
  bazel-bin/publish/canisters/http_counter.wasm.gz
  bazel-bin/publish/canisters/ic-ckbtc-minter.wasm.gz
  bazel-bin/publish/canisters/ic-ckbtc-minter_debug.wasm.gz
  bazel-bin/publish/canisters/ic-ckbtc-kyt.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-index.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-index-ng.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-index-ng-u256.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-ledger.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-ledger-u256.wasm.gz
  bazel-bin/publish/canisters/ic-nervous-system-common-test-canister.wasm.gz
  bazel-bin/publish/canisters/ic-icp-index-canister.wasm.gz
  bazel-bin/publish/canisters/identity-canister.wasm.gz
  bazel-bin/publish/canisters/inter_canister_error_handling.wasm.gz
  bazel-bin/publish/canisters/kv_store.wasm.gz
  bazel-bin/publish/canisters/json.wasm.gz
  bazel-bin/publish/canisters/ledger-canister.wasm.gz
  bazel-bin/publish/canisters/ledger-canister_notify-method.wasm.gz
  bazel-bin/publish/canisters/lifeline_canister.wasm.gz
  bazel-bin/publish/canisters/mem-utils-test-canister.wasm.gz
  bazel-bin/publish/canisters/memory-test-canister.wasm.gz
  bazel-bin/publish/canisters/nan_canonicalized.wasm.gz
  bazel-bin/publish/canisters/nns-ui-canister.wasm.gz
  bazel-bin/publish/canisters/panics.wasm.gz
  bazel-bin/publish/canisters/pmap_canister.wasm.gz
  bazel-bin/publish/canisters/proxy_canister.wasm.gz
  bazel-bin/publish/canisters/registry-canister.wasm.gz
  bazel-bin/publish/canisters/response-payload-test-canister.wasm.gz
  bazel-bin/publish/canisters/root-canister.wasm.gz
  bazel-bin/publish/canisters/sns-governance-canister.wasm.gz
  bazel-bin/publish/canisters/sns-governance-canister_test.wasm.gz
  bazel-bin/publish/canisters/sns-governance-mem-test-canister.wasm.gz
  bazel-bin/publish/canisters/sns-root-canister.wasm.gz
  bazel-bin/publish/canisters/sns-swap-canister.wasm.gz
  bazel-bin/publish/canisters/sns-test-dapp-canister.wasm.gz
  bazel-bin/publish/canisters/sns-wasm-canister.wasm.gz
  bazel-bin/publish/canisters/stable.wasm.gz
  bazel-bin/publish/canisters/statesync-test-canister.wasm.gz
  bazel-bin/publish/canisters/test-notified.wasm.gz
  bazel-bin/publish/canisters/time.wasm.gz
  bazel-bin/publish/canisters/upgrade-test-canister.wasm.gz
  bazel-bin/publish/canisters/wasm.wasm.gz
  bazel-bin/publish/canisters/xnet-test-canister.wasm.gz
  bazel-bin/publish/canisters/cow_safety.wasm.gz
  bazel-bin/publish/canisters/counter.wat.gz
  bazel-bin/publish/canisters/xrc-mock-canister.wasm.gz
  bazel-bin/publish/canisters/bitcoin-mock-canister.wasm.gz
  bazel-bin/publish/canisters/ic-btc-canister.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-archive.wasm.gz
  bazel-bin/publish/canisters/ic-icrc1-archive-u256.wasm.gz
  bazel-bin/publish/canisters/ledger-archive-node-canister.wasm.gz
INFO: Elapsed time: 164.542s, Critical Path: 130.66s
INFO: 411 processes: 9 internal, 402 linux-sandbox.
INFO: Build completed successfully, 411 total actions
Gathering metadata for bazel cquery...
+ set +x
##### Canisters SHA256SUMS #####
~/code/ic/artifacts/canisters ~/code/ic
2b3fa0420e6ae624170e4cc87fe70e8fdaa7d2e57435291496cf9b157bd1ecb4 *bitcoin-mock-canister.wasm.gz
faba86594ad9914b1153d8b2919aa518767729edc6d2184494f1a6f04cc5c7cb *candid-test-canister.wasm.gz
f9a9ade35c95f21e5cc1ef955c88f07bb133f5c7fc8ca8c714c73425ad117549 *canister-creator-canister.wasm.gz
86edf01bbfe320b5947d31a8fd8ef040feda88f11ef42640f4a72466c93439c9 *counter.wat.gz
69fb135b112349cd03fb0d593eceac4011ee848a739d0c41787bd6dc277b0d0a *cow_safety.wasm.gz
806d9b244e058da8cdb99a52a2855aa51e30828956480e3c172d5f38443957ed *cycles-minting-canister.wasm.gz
caecb96f7ff04836fb641c37a331b5d8f5de7ee416d52063dc13282e368d6c96 *genesis-token-canister.wasm.gz
f4350f3633e7c2da59620b47c74957741ebde88ae0488d0581546569575cea47 *governance-canister.wasm.gz
e862246cda94fd6f47a9587609eb40f5d6e95a19e2d863d4b3aac647f3fc557f *governance-canister_test.wasm.gz
3ab67060ebe1e7fe7ec87991542bda5ef9d7ef042c82d22078b1d97caa408b79 *governance-mem-test-canister.wasm.gz
a120c50b93594cac50e7251a6a575166d97a00aca54083a9e8a050264b7a715b *http_counter.wasm.gz
8cc43d3f40bb734a0c87f42ae19eee70c360f2d66a0c88c631f0f0e785505133 *ic-btc-canister.wasm.gz
5a9562aaf6e3acc66c093979971cc68f201e7cc9ec817805f4f38c49f2efa443 *ic-ckbtc-kyt.wasm.gz
57448b55b4dba6d3ad7123dca4f8103989c265f7538076dad9e60421aeca3ef6 *ic-ckbtc-minter.wasm.gz
0bfc0131746e2867d5f7849755dd8f3d7241fa93043a099d1008c5948b7d065b *ic-ckbtc-minter_debug.wasm.gz
d2de7090e1dc0148798152ba7968f6388538b234c32956db962e4b98a72993f8 *ic-icp-index-canister.wasm.gz
b7c49c511d0f777fecdac90650a6d442723682ae4eee2a6985e0be839ea2aa3c *ic-icrc1-archive-u256.wasm.gz
0d1ffe2d320871f1812c16de18b037ed80ec0d429bad6b4f123cdbd941913327 *ic-icrc1-archive.wasm.gz
44abfe9d15cc5e6ad60f6dc1576430fdacababaf004d0900020382a050967c69 *ic-icrc1-index-ng-u256.wasm.gz
e6776e296636297a2666412256035d78f539bdf6037e10668eaa7980d5c159d3 *ic-icrc1-index-ng.wasm.gz
87d865128aab50125bca362a436c2017af6fdfd3ffce64d4556d79c4453b6120 *ic-icrc1-index.wasm.gz
a5d9a0a4650029db1de2b060be47f787867ce553988fa8e26a537ac055950c2b *ic-icrc1-ledger-u256.wasm.gz
43be76489f65c648bbd671823b54f4bc46b98cdf1e923a3842bfe58ff4e5bc08 *ic-icrc1-ledger.wasm.gz
59badf0910c5de6935ec89e53c362ea063740bd793759dbfab8be3ebd7566593 *ic-nervous-system-common-test-canister.wasm.gz
03e9f73ceb6b689bd1da873b2930357ff748a8414705af61b99aef81c73de199 *identity-canister.wasm.gz
da8b78484207aa26f00e3eb32628088b6a40a53318b9ee38b4c9ffeee9634379 *inter_canister_error_handling.wasm.gz
8c7b721351befbc462570c563ea828b6e1b7cbaf30b12b3ddcfb0243bac3c0c8 *json.wasm.gz
44485be10d0331654cf6fb54efa792995c64c1e65b4baaf30277a43f157ee483 *kv_store.wasm.gz
4442af728ffed322c0d7959da1083e62a6b372196e92826901fa28f29dbaf439 *ledger-archive-node-canister.wasm.gz
5520f274ae2e3e44cedff6f06e6849bccfb2d0e22c1b37bdc3094fb757a94eec *ledger-canister.wasm.gz
f9ac70cc7b9a5111bdfd3eee5a054aff870294263b529e3a5ebaefcf399b32bc *ledger-canister_notify-method.wasm.gz
8e84fe5f0fda1761a1288b9b850b849241f3dac006b54fd44b9d46c493a33b16 *lifeline_canister.wasm.gz
4bcb63416cdc499e1bfe609c0840fc80949a278cc7706d02c026135bcafb1928 *mem-utils-test-canister.wasm.gz
299d482651509597228e862947a3d602c23f024ea54a83cc282d6eb2744b5cd2 *memory-test-canister.wasm.gz
9f4f1b8d48f79fed4d299ec34f88b32d62561497d6f719125703c9dd2886963b *nan_canonicalized.wasm.gz
03e9f73ceb6b689bd1da873b2930357ff748a8414705af61b99aef81c73de199 *nns-ui-canister.wasm.gz
90ca0916f1408d16d42667263c6990bf995a4bc953e2272dd15469098634dc1d *panics.wasm.gz
748d673d8cad3836cfd24f21e77c81509a781b692cded3c3a2a5c9beb5a02b05 *pmap_canister.wasm.gz
f285b62fde3c94448c99def80396bdc632f27173159d3df40d82212931173d80 *proxy_canister.wasm.gz
b6aa17e9c97b76059279ad3ec49feb95451ee7988f41b542e209800d72fb5bba *registry-canister.wasm.gz
1c9c1e28beb74ed9f877342ecc569b35855e84a100bbbe107f0b4a63da3c23d5 *response-payload-test-canister.wasm.gz
602380b53d05bab5a906bc8c70ae224443a1c7f408a802f2aa97e349b7d56c89 *root-canister.wasm.gz
0b0d35a4c053a85fccdb4499e4b41f05750440fcd653278a5ca2097560a3b6da *sns-governance-canister.wasm.gz
a2fc7b6a5777e32bd1e4a800bdfd8bde7cc631f6a590bd86d038d4306d3a58b0 *sns-governance-canister_test.wasm.gz
555fdc985d8bdabc18909be53266fa334912ec686c3d0de5a13628c69d84475b *sns-governance-mem-test-canister.wasm.gz
e96a395b45ae2c64af8d4b4e62624a9827f16c525a5c33e8e31bed20ebba6806 *sns-root-canister.wasm.gz
03ae883fb0e307c7c0a14b8130ca564a38d1980e37e4ee4b1af109954f620f23 *sns-swap-canister.wasm.gz
90c82f46617dddf7f7ea12da45b82dfc83969a502a81ad0f7d5cc8084a294dde *sns-test-dapp-canister.wasm.gz
11a4f01bc21c6d4bf98ad728d4d21022d116d19541cabbe1bb0a9e81640b32a3 *sns-wasm-canister.wasm.gz
0b8368864fea2e1dbfd71d2dc351748aef02ba0407d04393fca7b74504bfa83c *stable.wasm.gz
4d548d3419983948ace40c8a0608b1685cf60fb780dd1a3d96f52c2fd65cc0de *statesync-test-canister.wasm.gz
e9894e282c06ce85b20c4cf4d63645ab265911a3f6dfc4047062fe55483f42c3 *test-notified.wasm.gz
64d2f606b8810337b5ba8f2664c3effeb09a1f15a2ab4bb4403d9c4e02c0328f *time.wasm.gz
0b8be5ddb0528e59892e0256a679bd955708e6dcfa89be0e1d259367bd46158a *upgrade-test-canister.wasm.gz
c0cf8c98a2c268002c47152d4b7a2f609cb034f1d9b2cec866c5b291691d954f *wasm.wasm.gz
d8bbbc856bbc7326edae7b086c20535632f3b9663117111cb5a9746fe8cdce09 *xnet-test-canister.wasm.gz
99495efc1f10b6f1538a9a717ea43737b3dca60fccb7308b20c21ea91dd2465f *xrc-mock-canister.wasm.gz
7ea4b5a1c275128c07df1e46f472320be34c51cfbdbd753e477cd1b267a1b82c  bitcoin-mock-canister.wasm
e5ea3e22c64a167ee04edeec0b10f76f232d5a92608088053846e99d9caab67b  candid-test-canister.wasm
1f7c4f9b7f324830fb612324bbfbd546aec4183ee6fe4ac7c4fac52d9a46acb2  canister-creator-canister.wasm
3bdc4ed2f886f41cd21d21dc497cc01c131e777b351a932436e80a6c405dcedf  counter.wat
fbe150f222495f3bf8f4f8a677eec49efac5de2a7d08ba00228969d08a55d0e6  cow_safety.wasm
dce22c5be6cce90badf798d890945b9575a12d90c184998f1c0cc88c86cf63d2  cycles-minting-canister.wasm
30e48b710dabee42b72aa54b1fd998785ede14afa740b7f2880c732e91af2be3  genesis-token-canister.wasm
401bebab1b7f73f34b03fea832894012783d21881c778577e801f936a67ef46e  governance-canister.wasm
5cbbfe1b7510f2c42181826dc56dde725ce90388bb24f7bdbaa36b721c6e7bd1  governance-canister_test.wasm
44b2b82a098fbf3f5e21ecedfedef48e09f97e8b41da4b42fe227ef3662ec90f  governance-mem-test-canister.wasm
be274aa56069388065e29396544ccd35bec4a63add72998c7fd29140f55de209  http_counter.wasm
bd222e052dd38feda3dec7dad01c961df4384d3dd652978aad4ecb7e0c4eb36a  ic-btc-canister.wasm
d941c03740cc3f17336be11a4b83abcb4ad4ab611714faffa9c4909fe79e9c15  ic-ckbtc-kyt.wasm
964e32c415dc91ffa6ad5db82657c9224126125f70aedf3be842d898ba3c0fb0  ic-ckbtc-minter.wasm
dbae99aaf29010ef63a9c33fb421eb20983e6a23c3dbbc4bec453bcf199d06f1  ic-ckbtc-minter_debug.wasm
779a418a66cbf8627e27ed91c43791e65593ca4e6c2cba346b4dd0c4cc9f061b  ic-icp-index-canister.wasm
7da6a7057b52e85d0b1d0221243daa76266b0a583c5bdd1bf3cf3938b38d965b  ic-icrc1-archive-u256.wasm
2e2a34f272c340db1e9b60001db5b6f874cf850a37240a3f5fd6f89814c0e3c7  ic-icrc1-archive.wasm
8ab559b30718f4afa7e3bbd7c581cfd9d708db80f93381bb6fb5cedfc319cf31  ic-icrc1-index-ng-u256.wasm
b14131aa83f637ffa10a3b05ccf2721a122fad6e56fe1316d74b26ad40948c5b  ic-icrc1-index-ng.wasm
c00919f43dc38b66a9933b9fc8e60c30de1f350453a5826d1de5bd8007f5d4f8  ic-icrc1-index.wasm
11434060e3b92854616c69ff3ab0504761272233a058c6e70d2844f1fb1c77d1  ic-icrc1-ledger-u256.wasm
1607745cf0692b2aec64139390b5a52e80e95d306184a6ba1dee6033472f6d68  ic-icrc1-ledger.wasm
66ea65e7c2b9f84efc7cc1e54df9c4b22297621286d4b40db3aa77efdb717aa9  ic-nervous-system-common-test-canister.wasm
ba608992cf1ecfdfc7511219d3d027a665b0e93e6b5d5a82e6a7e3e42f197412  identity-canister.wasm
72ef0299f6dd1b0e772f72bb1d2b84ed68ac67baaea0b5b8d2d181608fd76b6f  inter_canister_error_handling.wasm
a952b59636ace0333b03ced631bc4a6fe5128cadff8b8a3c12102b72b5900def  json.wasm
1ab33acf3dae085d838885b2711153377d5d3c06f8b0ef38f96586c69010bace  kv_store.wasm
88302e7426cac188e97772b7e9d2e26febadc6cef65a105b5bd470323bf5d954  ledger-archive-node-canister.wasm
a91869caf3cc9a79f13ae644983e6ad19490d971ade39bb9a1eee6f089b9b91e  ledger-canister.wasm
36f65c08cc91946b8c896d0f307300391b4686fabf53db134ca3e2492ca36c6f  ledger-canister_notify-method.wasm
70446a81bf91953d1ef9815f077b6af3daa11e0cfb4262ad1602a0aa28b8c8be  lifeline_canister.wasm
152755da4d4d7b1cde677bd2ec5083878d5989b96185bcb82f748651353bc204  mem-utils-test-canister.wasm
f8b9ecacb032473de57a8e15c5f43b2c968e060a3c378eefdd7f209a3473de21  memory-test-canister.wasm
0d758c1517dec6c70ed1a048ba4def1110681b7f9df67c4a1a188c54ace1e2c5  nan_canonicalized.wasm
ba608992cf1ecfdfc7511219d3d027a665b0e93e6b5d5a82e6a7e3e42f197412  nns-ui-canister.wasm
00fdee211ef3a5e9a2f4722580e24fa41209dec8dc161da451301112996b1cf0  panics.wasm
0c85debc1bc0050d0dca38ce8cf07940ef4aace93807f5b471bd59a6760c7be1  pmap_canister.wasm
85dfc2bcc352db163dd127fe51ae5c8867f3f5bc4ab3e9a624ff7947528bfba3  proxy_canister.wasm
6f083d10ae0c88067563806d287d32911438e3c77fe6b25854e94a83b3efb599  registry-canister.wasm
8092653a7e517ed2ed6a73201b122657ae5debffb1af8c7680946062291d54d4  response-payload-test-canister.wasm
4f50995407fb80a365055eaf8c6c0e6bb4440d57a16199c24d5eabc8cdaaf42e  root-canister.wasm
c0e03c0e293817b439abafb642f939e0b68c8526a89c74d64bb46351f4756938  sns-governance-canister.wasm
8ffd893c065e7ee6f11ca0986da5f837935bb7782b45d394cb6f00be4f66fe75  sns-governance-canister_test.wasm
47e2d96c3edb9a467c206ba6b9b96f646b7d482e976a653ae1270a78e790f931  sns-governance-mem-test-canister.wasm
7f5c1426b078d2e61a64e138af5a4e7d7cf9fe6d9ff33211b5eedb0ff7322259  sns-root-canister.wasm
c84631faba880a3e1a2a6118882fafe55e3177e3231ff54026e59488d9773369  sns-swap-canister.wasm
81ff76f55dc2a991511376a6627b5e50df8131713407be69aa001964b68ded6c  sns-test-dapp-canister.wasm
f44f53538637c6ba2465b8b7b64191ce3bc196dd69cc212ede2d63f8a096d190  sns-wasm-canister.wasm
9fa5bbeb9b2e7695e19f4c0a501f80cc5151b0936b2703e9f1ac31a417072c9a  stable.wasm
b32bef78f89bc8bde7792418133ada8f216e86790c4e2c6a628717b7a1b3db74  statesync-test-canister.wasm
3079d4139ab68c3f576e0f06b57172f4c8da59c91093660391c121127ebeda8b  test-notified.wasm
c7968f309de9c5417d66f5991ca9d91dedfb1a563c8d16b820e115e4698e53e5  time.wasm
fb0b563ff861534ea23a1b279ea188acab9b19db9c6bec4ecf2d5f94d03e738a  upgrade-test-canister.wasm
b2de2d3088c96a4c794241ec8d38fc6456afc72f3a5c54b468ca1ee4efd1393c  wasm.wasm
08f286a5c2e697b5c041e5136de6cf822a60e95305f3a237dadea757be613634  xnet-test-canister.wasm
01ed222ae85891ffe2eae3a3aae90c481f430a440aa5f4c6e95ff5516c2eb85b  xrc-mock-canister.wasm
~/code/ic
Build complete for revision 70f6510221fd2b7b47ae45bfe97963579e0e7f2f
```

Let me contact the owning team to see if they can help debug.

-------------------------

ZackDS | 2023-10-11 17:53:57 UTC | #7

Turns out a clean install wiping the separate home partition solved the problem . Thank you for your help.
![1|690x395](upload://z3ta4W733iy8YhgPUIWcE9RtQhr.jpeg)

-------------------------

DanielThurau | 2023-10-12 16:47:25 UTC | #8

A drop in the finalization rate was detected on the NNS subnet after upgrading the NNS Governance canister. For safety, the NNS team has submitted a proposal to rollback the Governance canister to its previous version. 

The proposal can be viewed here: https://dashboard.internetcomputer.org/proposal/125050

-------------------------

