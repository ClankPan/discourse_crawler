qwertytrewq | 2024-05-29 16:14:34 UTC | #1

Is there maximum time of update execution guarantee?

For example: "every update call is executed in 2000ms".

Well, any such guarantee would be joked by disagreements of replicas' clocks, wouldn't it?

I am trying to query (by an update call) back IC from my HTTPS server (more precisely a proxy server), but my query seems to come too early, when the state hasn't been updated yet. What are conceivable strategies for this?

-------------------------

abk | 2024-05-30 08:41:02 UTC | #2

There are no hard guarantees as the execution time of your message depends on the amount of work being done. But in the worst case an execution triggers DTS across 20 rounds which would take about 20 seconds to complete. Of course this doesn't include the network communication from your server to the IC or the time the message spends waiting in the canister's input queue.

-------------------------

yvonneanne | 2024-05-30 10:22:16 UTC | #3

Hi qwertytrewq

The protocol does not provide read-your-own-write guarantees out of the box. You can implement such behavior though, e.g., by using the IC's [time](https://internetcomputer.org/docs/current/references/ic-interface-spec#state-tree) from the time the update call was processed and re-submitting the query until the reponse is signed at a higher time.

-------------------------

