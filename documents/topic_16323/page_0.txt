saikatdas0790 | 2022-11-02 16:44:10 UTC | #1

I have a canister that relies on arguments passed at initialization to pass values into the init function. I'm trying to Candid encode the values but running into the following:
![image|529x117](upload://cnm3iGz0H5AmPwrrxIp2NAnfdCw.png)

This is what the Candid argument looks like
![image|451x398](upload://c7t89nHmFpCAlSHytiTIqVfePux.png)

Basically the error is "Text must be in valid Base32 encoding".

What am I doing wrong?

P.S. If I echo that command, I get a valid principal ID. Like this
![image|690x36](upload://bUfCVpjLNYEq1wIhTGrOqSDv4UG.png)

-------------------------

Severin | 2022-11-02 16:42:17 UTC | #2

Shells only do command interpolation (that's what this is called) if you are in a `"..."` string, but you're in a `'...'` string. If you use `"` around your argument, it will work. But you'll have to escape the `"` in the string itself

-------------------------

saikatdas0790 | 2022-11-02 16:47:50 UTC | #3

@Severin 
So, like this?

```sh
"\"$(dfx identity get-principal)\""
```

or this?

```sh
\""$(dfx identity get-principal)"\"
```

Let me try both :slight_smile:

-------------------------

saikatdas0790 | 2022-11-02 16:55:44 UTC | #4

Neither worked

![image|591x121](upload://18P8DBwd6mlfUMBKfDmKQgcmYpt.png)

![image|470x101](upload://lvia8FNtq6fGtkEPr39kemcG8yq.png)

I think I misunderstood what you explained.

-------------------------

Severin | 2022-11-02 16:58:58 UTC | #5

Candid expects this:
```
(principal "aaaaa-aa")
```

Converting to `'...'` string (because the shell will interpret the above as two separate tokens):
```
'(principal "aaaaa-aa")'
```

Converting to `"..."` string:
```
"(principal \"aaaaa-aa\")"
```

Using interpolation:
```
"(principal \"$(dfx canister id user_index)\")"
```

-------------------------

saikatdas0790 | 2022-11-02 16:58:41 UTC | #6

So, after rereading what you said, I think I get it.

For anyone reading after, this is what the solution looks like:
![image|499x403](upload://nc9UGCCt5aecfVS9AwkbXh8w5fk.png)

-------------------------

