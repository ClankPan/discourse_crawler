skilesare | 2024-04-03 14:34:48 UTC | #1

Hello everyone,

I’d like to announce a new [technical working group ](https://forum.dfinity.org/t/announcing-technical-working-groups/11781):

**Topic: Inter-canister Event Utility**
DFINITY lead: tbd
Coordinator: @skilesare 
Community Coordinator: @ilialor 
Discord: [inter-canister-events ](https://discord.gg/XaNjTtg8) 
Meeting Notes: [Link](https://drive.google.com/drive/folders/1v8ocWv4bgLPxst-a4NnboDGUcMzD0QXS?usp=drive_link)
Cadence: Weekly on Wednesday at 7:00pm CET
First meeting: April 3, 2024 at 7:00pm CET
The event is part of the regular [calendar for technical working groups ](https://calendar.google.com/calendar/embed?src=c_cgoeq917rpeap7vse3is1hl310%40group.calendar.google.com&ctz=Europe%2FZurich). (meeting link will be there soon)

I'm happy to announce the Inter-canister Event Utility working group.

A number of grantees have been working on various forms of Pub-Sub event systems and we decided it was time for all of us to work together.

Many blockchains have event systems. Ethereum EVMs allow contracts to emit events, but not react to them in real-time.  On the IC we can have the best of both worlds with a bit of cooperation, technical architecture, and elbow grease. @ilialor, @Carsten, and @skilesare have been working on various forms of even systems for some time now. We've all come together and decided that sure does make sense for us all to get on the same page about standards(at least), architecture, and long-term economics(perhaps).

We have the opportunity to add a fundamentally new programming model to the IC by adding pub/sub events. There are challenges. Events need to scale, they need to pay for themselves, and they need to get across subnets.  There are a lot of challenges.  But they are also scaleable. We're going to start small and see where we get.

The short-term goals of the group will be to agree on a set of ICRC standards around pub-sub.  If we can all agree on some basic standards then we can build libraries that should work for everything from single-canister programming models to small private pub/sub networks to big hairy multi-subnet pub-sub.

Once the standards are agreed on we should be able to build client libraries in motoko, rust, azel, etc that let Canisters listen to reliable broadcast messages traveling from broadcasters to unknown listeners that may be interested in the actions and state changes on all of our dapps.

Along the way, we may even find a way to fix the 'notify' problem for ledgers or perhaps give EVMs active pubsub with the IC acting as the web3 glue.  

You all are invited to join and contribute.

-------------------------

skilesare | 2024-04-03 15:03:05 UTC | #2

This meeting is on Wednesdays. Today is our first public meeting.

-------------------------

Samer | 2024-04-03 19:15:00 UTC | #3

Thank you @skilesare for coordinating this working group.

The pace of progress in this ecosystem is fascinating!

-------------------------

icpp | 2024-04-08 20:31:43 UTC | #4

Will you post summaries of the meetings?

I am very interested in this topic, but unable to make the meetings, most of the time.

-------------------------

skilesare | 2024-04-08 20:39:04 UTC | #5

I'll do my best....looking into some tools, to do it automagically:

Notes from the last meeting here: https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240403/Notes.md

# DFINITY's Internet Computer: Intern Canister Events Working Group Meeting Notes

### Meeting Details
- **Date:** [Insert Date]
- **Participants:** Austin, Ilia, Sam, Matthew, H Joseph, Ebin, Byron Becker, Ilia, Aga, Zhenya Usenco, Dclan, Nnadozi, Unicorn

### Meeting Notes
- **Introductions:**
  - All participants introduced themselves at the beginning of the meeting.

- **Discussion on Issue 1 for ICRC:**
  - **Generic Data Types Proposal:**
    - Discussed implementing generic data types with an example structure `{ owner: principal; subaccount: blob; }`.

  - **Public Event Publishing/Subscribing:**
    - Highlighted the advantage of using pub/sub and events, emphasizing the ease of interoperability without the need for coordination.
    - Proposed a `GenericEvent` and `DataSchema` structure to facilitate this process, including event filters, publisher information, schema details, and data expiry.

  - **Value Type and Metadata:**
    - Debated on the use of just a blob versus the Value type from ICRC3 for metadata, pointing out the necessity for a strict definition and hash calculation.
    - Mentioned ICRC16 as a superset of Value, referencing external resources for further details ([ZhenyaUsenko's GitHub](https://github.com/ZhenyaUsenko/motoko-candy-utils)).

  - **Client and Methods:**
    - Discussed keeping the methods and client implementations generic but useful and interesting, focusing on minimalism.

- **Best Practices:**
  - Advised that event data should remain small for efficiency.
  - Byron Becker suggested starting with different use cases and engaging with projects to understand their needs and data requirements.

- **Design Considerations:**
  - The design for an event pub-sub system should account for the data's size and schema, including steady streams versus spikes, broad versus specific use cases, and achieving high throughput through schema constraints and optimization.
  - Mentioned examples from Web 2.0, such as segments and other event publishing frameworks like Kafka.

### Next Actions:
- **Byron:** To research Web2 messaging/event frameworks.
- **Everyone:** 
  - Bring a proposal for the next meeting focusing on external actor endpoints and internal data structure/workflow.
  - Review the pros and cons of ICRC-16 versus ICRC-3 values.
- **Austin:** Develop a more descriptive solution for token tracking.
- **Matt:** Explore multiplayer capabilities with pubsub, including potential support for websockets and WebRTC.

---

### Additional Notes:
- The group emphasized collaboration and open discussion, with a focus on leveraging DFINITY's Internet Computer capabilities to enhance interoperability and efficiency in event publishing and subscription models.
- There was a consensus on the importance of practicality and minimalism in designing the system, ensuring it remains both powerful and user-friendly for various use cases.

-------------------------

skilesare | 2024-04-09 21:07:19 UTC | #6

The agenda for tomorrow's Event Working Group is posted over at [GITHUB.COM](https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240410/agenda.md) If you would like to add something, or are on the list and can't make it, let me know.

-------------------------

icarus | 2024-04-10 14:31:15 UTC | #7

[quote="skilesare, post:5, topic:29048"]
**Design Considerations:**

* The design for an event pub-sub system should account for the data’s size and schema, including steady streams versus spikes, broad versus specific use cases, and achieving high throughput through schema constraints and optimization.
* Mentioned examples from Web 2.0, such as segments and other event publishing frameworks like Kafka.
[/quote]

I would propose [NATS](https://docs.nats.io/nats-concepts/what-is-nats) as an excellent reference architecture for a decentralised high performance "web2" messaging platform. It is a fully open source project evolving since 2011 and is widely used. It's Core NATS server is implemented in Go and is a pure pub/sub messaging model with a simple (word) token based subject(topic) used to identify/filter/route messages and a generic byte_array payload. Authentication is decentralised and client controlled using pub/priv keys and JWTs for authorisation claims. Although it would not fit directly into the IC canister event system requirements, I believe there Is a lot to learn from NATS that we could use here.

Ideally we would reach some level compatibility between the IC canister event on-chain messaging and a off-chain decentralised messaging system like NATS to solve a range of architectural integration problem likely to appear as more web2 development teams seek to leverage the IC

-------------------------

icarus | 2024-04-10 15:04:43 UTC | #8

[quote="skilesare, post:5, topic:29048"]
**Value Type and Metadata:**

* Debated on the use of just a blob versus the Value type from ICRC3 for metadata, pointing out the necessity for a strict definition and hash calculation.
[/quote]

Are there any thoughts on adopting [CBOR](https://cbor.io/spec.html) as a standard binary encoding & encapsulation format for message payloads? I know it is used already in a number of IC code libraries & standards. 

Pros would be 
(a) wide language support incl Rust, Motoko(?), js, python for canisters and just about any other used for off-chain clients, also many developer tools support inspection;
(b) easy to encode JSON data into compact and canonical form for transport (so deterministic data structure removing any text formatting variances of same data content);
(c) 1-4 byte Semantic Tags used in front of encoded binary data structures which can be used to either completely embed schema information or as a very compact reference to an external schema via open extension to the CBOR standard semantic tags dictionary (e.g. we could formally assign a 2byte CBOR semantic tag for each ICRC-X defined data schemas)
Also there is an assigned 1byte tag for "CBOR data" which can be used as a 'magic number' for the first byte of a message payload to distinguish it trivially from a text payload or other binary message format.

Any thoughts on cons to this approach?

-------------------------

skilesare | 2024-04-10 18:28:00 UTC | #9

Awesome example. I'll add it to the list.

-------------------------

skilesare | 2024-04-10 18:34:19 UTC | #10

The actual messages will be going across the wire in candid because that is how the IC works and we're generally targeting either ICRC16 or the Value type from ICRC3, but one of the varients is #Blob, so you could easily put a cbor message in there.  

That being said,  CBOR is awful to work with in Motoko.😂. So unless we seriously level up our parser game you'd be ruling out any motoko-based services easily integrating.

The main issue is that Motoko doesn't have reflection, so each publisher would need to craft a specific cbor-based parser for there events for them to be converted into candid types(and even then, the candid types would require syncing between publisher and subscriber. 

The nice thing about a candid message in ICRC16 or value is that it is reflective without a bunch of byte reading and parsing.  This may have poor performance consequences...we'll need to test.

-------------------------

Gekctek | 2024-04-10 18:44:04 UTC | #11

Just for fun Ill link my previous project that I put on hold till something like this would come around.
Essentially building an RSS like feed/bridging Web2 RSS over to the IC.
Probably doesn't have a lot of useful things for this conversation, but probably could play with implementing the ICRC-72 into this as a proof of concept

https://forum.dfinity.org/t/high-level-overview-of-a-subscription-protocol-proposal/16426

https://github.com/edjCase/subscription_protocol

-------------------------

skilesare | 2024-04-11 13:53:50 UTC | #12

Please let me know if I missed anything:

# Event Working Group Meeting Notes

### Date: April 10, 2024

### Attendees:
- Ilia Agafonov
- Austin Fatheree
- Ethan Celletti
- Byron Becker
- Lachlan Witham (Icarus)
- Jorge Costa
- Gilles Pirio
- Sam DRISSI

### Introductions:
- **Ethan Celletti:** Working on an RSS pubsub, C# agent, Motoko, and a game on the IC (DAOBall).
- **Lachlan Witham (Icarus):** From Melbourne, AU. Gen2 Node Provider. Part of the decentralized AI Working Group, interested in infrastructure and keen to listen in.
- **Jorge Costa:** Has been developing for two months, observing. Software developer for 6 years, with experience in AI, contracts for EVM.
- **Gilles Pirio:** Based in San Francisco. Former DFINITY employee, here to learn.

### Discussion Points:
- **Naming Conventions:**
  - Ilia highlighted the importance of including “event” in the standard for clarity.

- **Identifying Producers and Consumers:**
  - Byron Becker discussed the potential need for two identifiers to distinguish between producers and consumers. He suggested using Nats as ULIDs for this purpose.

- **ID Systems:**
  - Gilles Pirio recommended looking into RabbitMQ for a good ID system, emphasizing its effectiveness.

- **Publication Modes:**
  - Byron raised a question about publication modes, differentiating between wanting the latest data versus wanting the entire history.
  - Gilles questioned the necessity of data history.

- **History and Pub/Sub Separation:**
  - Austin suggested possibly splitting history and pubsub into two parts: a basic ICRC-72 and an extension ICRC.

- **Data Encoding:**
  - Icarus brought up CBOR, noting its expressiveness and efficiency, and mentioned creating a GitHub issue regarding it. However, Austin noted the difficulty of working with CBOR in Motoko.

- **Error Handling and Resending:**
  - Gilles inquired about error handling and the possibility of resending data similar to RabbitMQ, indicating different application modes.

- **Standard Flexibility:**
  - Austin emphasized that the standard should support a wide range of operations and applications, from simple single canister pub/sub models to massive IC-wide tools, with the publish method remaining consistent across various expectations and system specifics.

### Action Items:
- **Austin Fatheree:**
  - To create an open chat room.
  - To collect open chat and principals, and create a GitHub issue accordingly.
- **Working Group:**
  - To address GitHub issues asynchronously.
  - To set the notification bell on the Working Group GitHub.

### Next Meeting:
- Scheduled for next week.

---

### Additional Notes:
- The meeting focused on addressing technical aspects of event publishing and subscription on the IC, including naming conventions, identifying producers and consumers, and discussion on publication modes.
- Participants brought a diverse set of experiences and backgrounds, enriching the discussion with different perspectives on how to improve the event working group's standards and practices.
- The action items set a clear path forward for the group, emphasizing collaboration and the efficient use of GitHub for asynchronous work.

-------------------------

skilesare | 2024-04-11 13:54:24 UTC | #13

Please see this github issue for submitting your principal and your oc user name:  https://github.com/icdevs/ICEventsWG/issues/10

-------------------------

skilesare | 2024-04-11 22:38:01 UTC | #14

The OpenChat group is set up. It is a public group for now, so I don't need individual oc usernames...just join up:

https://oc.app/group/wgoc3-uiaaa-aaaar-bbbqa-cai/?ref=yenup-paaaa-aaaaf-aboha-cai

-------------------------

lastmjs | 2024-04-12 14:20:42 UTC | #15

I just want to do a fly-by post and urge the working group to use as few IC-specific concepts and APIs as possible. For example, I would suggest embracing JSON or any other format over Candid, using HTTP or other protocols that already exist as applicable, etc.

If other pub/sub systems already exist, work well, and have major adoption in the traditional software development world, I would consider how we can simply embrace and incorporate those directly.

At Demergent Labs we have finally in the last 3-6 months come around to fully embracing HTTP, JSON, sockets, etc in an effort to remove as much ICP complexity as possible for newcomers.

I urge you do try and do the same.

-------------------------

skilesare | 2024-04-12 17:27:29 UTC | #16

The system we're considering at the moment is currently focused on all inter-canister calls which require candid in order to not splinter the ecosystem. When we get to the external interface there is lots to consider, but my current thinking is that ingress into the system would take place via canister wallet/wapps/whatever you want to call them so as to keep things simple. Once ingressed you'd relay via the maximally interoperable standards.

The current data structure for events is a generic Value/ICRC16 structure which includes #Text and #Blob which an application can of course stick whatever they want into and CBOR has already been discussed. But as noted in our last meeting, using CBOR will likely seriously complicate interoperability.

-------------------------

skilesare | 2024-04-17 11:51:16 UTC | #17

Today's Agenda: https://github.com/icdevs/ICEventsWG/tree/main/Meetings/20240417

-------------------------

skilesare | 2024-04-17 19:17:51 UTC | #18

# Event Working Group Meeting Notes

### Date: 20240417

### Attendees:
- Austin Fatheree
- Ilia Agafonov
- Ethan Celletti
- Matt
- Lachlan Witham
- Zhenya Usenko

### Agenda and Discussion Points:

1. **Token Vote:**
   - The group agreed to ratify the first token mint based on the discussion in [GitHub Issue #12](https://github.com/icdevs/ICEventsWG/issues/12).

2. **Formalize WG Member List and Role Assignment:**
   - **Decision:** Formal WG member list will be used. Members can join by asking, and roles will be assigned liberally unless there is a consensus to limit a role.
   - **Specific Roles Discussed:**
     - **Austin Fatheree:** Thought Leader, Voting Member
       - **Assignment:** Create weekly meeting agenda.
     - **Roles Defined:**
       - **Thought Leader:** Review issues, provide proactive responses, and insight.
       - **Voting Member:** Vote on "Vote Required" GitHub issues.
       - **Secretary:** Responsible for recording meetings, producing notes, and providing attendance.
   - Austin will brainstorm a more formal list of roles.

3. **Issue Review:**
   - **Issue #2 - Two Types of Subscriber Approach:**
     - General consensus reached; raised by Ilia. Discussion focused on systems requiring trusted responses, especially in smaller systems or those dealing only with trusted canisters.
     - Austin asked about the type of response, leading to a decision on using open metadata so systems can implement ICRC16/Value, ensuring that the response from trusted endpoints should only include metadata, not rich stateful data.
    
     - We have general consensus.
```
  icrcx_event_listener : (event: Event) -> async (); //untrusted
  icrcx_event_listener_trusted : (event: Event) -> async (opt Value);  //#Map for maps, #Nat for ID.
```
Presupposition: The trusted return type should only include response metadata and typically not have rich, stateful data.(emit your own event if you want to talk back to a publisher).

4. **Issue #3 - Message Identifier Discussion:**
     - Raised by Austin, discussion on whether to use variants for message identifiers and the necessity of size checking if using a 'nat'.
     - Consensus on broadcaster needing to validate message size.
     - Group ready to vote on at least using nats for message identifiers, and Previous Message optional.
     - Notification ID will be moved to a different Issue
5. **Ilia’s Pull Request:**
     - Update on the name in the draft related to event identifiers. (Make sure it has Events in it ... see Pull Request 1).

### Action Items:
- **Austin Fatheree:** Create Votes for Issue 2 and 3
- **Austin Fatheree:** Create Role list
- **Group:** Continue to create new issues and address existing issues

-------------------------

skilesare | 2024-04-23 18:36:39 UTC | #19

The agenda for tomorrow's meeting is up: https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240424/agenda.md

-------------------------

skilesare | 2024-04-30 21:22:32 UTC | #20

Notes from last weeks meeting: https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240424/notes.md

Agenda for tomorrow's meeting: https://github.com/icdevs/ICEventsWG/tree/main/Meetings/20240501/agenda.md

Latest Rough draft of ICRC-72:
https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240501/icrc72.draft.md

-------------------------

skilesare | 2024-05-07 20:06:10 UTC | #21

Recorded Meeting: https://youtu.be/OfheHKSPNw8

1. **Members and Roles Update**: The role list was discussed and ratified through a vote. Members were encouraged to express if they were unhappy with their roles for possible changes.
2. **Derived Principals Meeting Update**: An update was provided on a meeting with Frederick from the Divinity team regarding signing transactions using the certified data system. There's ongoing work to streamline the invocation of derived canister principles without a loopback step, which is still in the phase of use case collection for prioritization.
3. **Votes**: The meeting reviewed open issues requiring votes and checked the status of votes on various GitHub issues related to the ICEvents Working Group.
4. **Ilia's Client Work**: Ilia shared updates on client work involving data types. There was a discussion on a simple client for combining subscription and publication functionalities, which led to suggestions for enhancing event data handling.
5. **Issue Discussions**:
  * **ICRC for Allow Lists**: Discussion on developing standards for composable allow lists and roles, possibly leading to an ICRC proposal.
  * **CBOR**: Debate on whether to standardize the binary encoding of message data, with suggestions leaning towards providing type hints for blob data.
  * **Value vs. ICRC16**: Briefly mentioned but not detailed in the summary.
6. **Administrative Topics**: The meeting touched on the importance of ensuring effective management of updates to role lists and subscriptions, along with the need for efficient mechanisms for canisters to authenticate roles and permissions dynamically.

-------------------------

skilesare | 2024-05-07 22:26:28 UTC | #22

Agenda for tomorrow's meeting: https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240508/agenda.md

-------------------------

icarus | 2024-05-07 22:44:59 UTC | #23

@skilesare apologies for the late notice, I dropped the following in our OpenChat WG channel about twenty minutes ago...

> Hi all, just letting you know I won't be able to attend the meeting this week 😕 
> @afat do you mind if we hold off on review & discussion of the binary content encoding topic? I am prepping for a trip to Zurich next week to attend the ICP Lab for Node Providers so I will have something concrete to add to the draft doc sometime early next week.

-------------------------

skilesare | 2024-05-14 11:44:34 UTC | #24

Last Week's Meeting: https://youtu.be/0p3aJ0V8MyY


### Attendees:
Ethan
Ilia
Zhenya
Austin
Byron
Matt H

### Agenda Topics Covered:

1. **Lachlan's CBOR Update:**
   - Lachlan was not present as he was visiting the ICP lab for hosts. Updates are expected in the next meeting.

2. **Ilia's Client Update:**
   - Ilia has created a new pull request (PR) with a draft for the client updates, asking for feedback and comments before merging to ensure that the wildcards and client functionalities are discussed and properly integrated.

3. **Austin's Allow List Update:**
   - Austin shared progress on creating a minimum membership standard that could be useful for managing permissions and memberships in various configurations. This draft is still in its early stages, and feedback will be essential as it develops.

4. **Votes:**
   - The discussion touched upon the necessity of managing token issuance and ensuring that contributions are properly accounted for. Participants were encouraged to report their hours worked.

5. **Issue Discussion:**
   - Several issues were discussed with particular focus on the use of wildcards in subscriptions, and how they might affect the system technically, leading to potential scalability concerns. The idea of using tokens to manage cycle payments for broad subscriptions was considered.

### Key Discussion Points:

- **Client Functionalities and PR Reviews:** The team emphasized the importance of reviewing Ilia's proposed changes to client functionalities, especially how wildcards could be implemented for subscriptions. The use of GitHub's PR review system was encouraged for more effective collaboration.

- **Handling Wildcards in Subscriptions:** There was a significant discussion about the technical challenges and potential system overloads that could result from wildcard subscriptions. The consensus leaned towards allowing wildcards at a high level but with clear warnings about the possible technical implications.

Example:

```Examples:

*.icrc_1_transfer.*
```

- **Membership and Allow Lists:** Austin's update on developing a standard for allow lists and membership management could be crucial for future administrative ease across various applications. The idea of integrating some form of token or JWT to verify memberships without continuous checks was intriguing but requires more exploration.

- **Confirmation Response Types:** The team debated what data should be included in confirmation responses from broadcasters to subscribers. A simple confirmation without metadata was preferred to maintain system efficiency, although the idea of providing subscription limits was floated to help subscribers manage their message intake better.

- **ICRC-16:** General consensus to use it, but need to break out an ICRC-16.mo library.

- **Future Plans and Action Items:** The team planned to further develop the drafts and ideas presented, with specific action items assigned for reviewing and refining the proposed standards and functionalities. This includes revisiting some of the open GitHub issues and preparing for detailed discussions in the next meeting.

This meeting focused heavily on discussing technical implementations and future standards, with a collaborative approach to refining the proposals through community feedback and thorough review processes.

-------------------------

skilesare | 2024-05-14 12:11:08 UTC | #25

Tomorrow's Agenda: https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240515/agenda.md

-------------------------

skilesare | 2024-05-28 18:56:25 UTC | #26

Tomorrow's Agenda:

https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240529/agenda.md

-------------------------

skilesare | 2024-06-03 14:36:43 UTC | #27

Wednesday's Agenda is up. Let me know if you'd like something added:

https://github.com/icdevs/ICEventsWG/blob/main/Meetings/2024_06/20240605/agenda.md

-------------------------

anand008186 | 2024-06-07 08:56:25 UTC | #28

Looking to join the next incoming meeting. I gained a lot from the above discussions about events on IC

-------------------------

skilesare | 2024-06-12 16:32:56 UTC | #29

The next working group meeting  will be June 26. In the meantime, we will be reviewing the latest draft of the ICRC 72 standard And beginning implementation to test its thoroughness.  

https://github.com/icdevs/ICEventsWG/blob/main/Meetings/20240529/icrc72draft.md

-------------------------

Techgirlkhushi | 2024-07-22 16:43:35 UTC | #30

When would be the next meeting and how can we join?

-------------------------

skilesare | 2024-07-31 12:00:55 UTC | #31

As a quick heads up, this WG will move to an every-other-week cadance for focus on technical issues regarding ICRC-72. We are currently in an implementation phase where members are trying to implement a minimum viable ICRC-72 solution to check that we have full coverage on the standard.

On the off weeks(Including today), the group will be discussing the Attention DAO that has been proposed by @ilialor and eventually a Utility DAO for a global-level utility.  I'll still be joining to record the meetings, but we're looking for people to join on these DAO calls that are more on the operational side of things. You won't need to be a techie.

-------------------------

demali.icp | 2024-08-09 21:44:50 UTC | #32

Just wanted to check in here, when is the next meeting and how can i add it to my calendar?

-------------------------

Gekctek | 2024-08-09 22:36:51 UTC | #33

It's on Wednesdays 
Its now alternating between the standard working group and Attention DAO (an implementation) ever other week. The next meeting will be Attention DAO. But you are more than welcome to join both

Meeting links are in the working group calendar linked in the original post

-------------------------

