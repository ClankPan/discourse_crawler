paulyoung | 2021-09-04 18:35:04 UTC | #1

(Copied from megathread)

I propose that my PR to upgrade HTTP request calls from `query` to `update` (upon canister's request) be considered for merging, with some feedback about anything that may be blocking it.

https://github.com/dfinity/agent-rs/pull/195

-------------------------

levi | 2021-09-05 19:34:20 UTC | #2

Yes, I think that dominics main claim on twitter is that the internet-computer can serve web directly without the need for untrustworthy front-ends hosted on amazon servers, **well making a http-request-call into the IC as a query call is the SAME THING AS HOSTING A FRONT-END ON AMAZON-SERVERS!** How is the claim that this ic-blockchain can serve web true if the blockchain is not serving any web because query calls dont go through a blockchain.

-------------------------

nomeata | 2021-09-05 20:22:21 UTC | #3

Better let's not get distracted by tweets here and rather discuss the technicalities of changing the actual status quo :-)

-------------------------

levi | 2021-09-05 21:58:56 UTC | #4

:slightly_smiling_face: What are the technicalities? (Open question) 

With the canister paying for itself, the more want there is for the update-calls the more the network grows.

-------------------------

paulyoung | 2021-09-06 04:39:08 UTC | #5

https://forum.dfinity.org/t/megathread-community-submissions-for-dfinity-foundation-s-roadmap/6175/61?u=paulyoung

-------------------------

paulyoung | 2021-09-06 04:55:19 UTC | #6

@nomeata, what changes are required to the service worker?

I‚Äôve been using the branch from the PR I linked above and hadn‚Äôt considered needing to change the service worker.

-------------------------

jzxchiang | 2021-09-06 07:15:25 UTC | #7

Just to confirm, this PR does *not* support streaming uploads, right?

For example, to upload an asset >2 MB in size.

-------------------------

levi | 2021-09-06 22:30:43 UTC | #8

@jzxchiang  More than 2mb calls is a separate thing, this is giving a canister (or the writer of a canister somehow) the choice to make browser standard http_request calls into an update-call that goes through the full-consensus.

-------------------------

paulyoung | 2021-09-06 23:33:55 UTC | #9

@jzxchiang my PR doesn‚Äôt change anything about streaming. If streaming uploads were/are implemented separately then this may work for those too.

-------------------------

jzxchiang | 2021-09-06 23:52:52 UTC | #10

Yeah, but there needs to be custom support for streaming uploads, just like there was custom support for streaming downloads.

In other words, the `HttpRequest` message probably needs to include a `StreamingStrategy`, so that icx-proxy can repeatedly call some callback method with new data that it receives via the stream from the client.

But yeah, as you said, that would be a different changelist.

-------------------------

jzxchiang | 2021-09-06 23:53:15 UTC | #11

It applies if you want to upload (or POST) a 10 MB file, for example. See my response above.

-------------------------

harrison | 2021-09-15 13:21:10 UTC | #12

We (Fleek) would really appreciate this feature as well. We need it for several of our products.

-------------------------

levi | 2021-09-22 12:55:31 UTC | #13

@diegop hey can we get a word on this status? What is the thinking of the dfinity-team behind this restriction?

-------------------------

paulyoung | 2021-09-23 01:31:01 UTC | #14

My pull request was approved this morning. I'm just waiting on some feedback on how to address the last remaining linter error.

-------------------------

diegop | 2021-09-23 03:25:36 UTC | #15

[quote="levi, post:13, topic:7000, full:true"]
@diegop hey can we get a word on this status? What is the thinking of the dfinity-team behind this restriction?
[/quote]

Yes we reviewed yesterday and was merged in today.

But I think Paul beat me to the punch.

-------------------------

paulyoung | 2021-09-23 05:01:06 UTC | #16

Not merged yet, but soon hopefully.

[quote="paulyoung, post:14, topic:7000"]
I‚Äôm just waiting on some feedback on how to address the last remaining linter error.
[/quote]

-------------------------

alexander | 2021-09-23 06:42:06 UTC | #17

Will it be possible to do the same at the canister level?

-------------------------

nomeata | 2021-09-23 07:49:10 UTC | #18

Is this live?
(Scnr)

-------------------------

levi | 2021-09-23 20:00:16 UTC | #19

@diegop Awesome! Gratitude. 
I will test this out. 
Someone ping when this is live.

-------------------------

diegop | 2021-10-22 22:46:10 UTC | #21

[quote="paulyoung, post:16, topic:7000"]
Not merged yet, but soon hopefully.
[/quote]

Following up: did this get merged, @paulyoung ? if not, let me know so i can follow up internally.

-------------------------

paulyoung | 2021-10-23 00:12:32 UTC | #22

@diegop it hasn‚Äôt been merged yet

-------------------------

levi | 2021-11-11 18:54:35 UTC | #23

Hey guys I think I know what is going on with this. Of course this is no-accident, which got me thinking. Query calls can‚Äôt change the state of the ic. Even certified query calls do not change the state of the ic. But update calls can. I think the reason they don‚Äôt want this feature is because people will start sending data in through the http requests without an agent (because it‚Äôs easier) and unless an agent is used, there is no way for the canister to verify the caller, and no way for the canister to verify the data. This will ‚Äòbreak the determinism of the ic‚Äô, a phrase I have heard before, as people start changing the state of their canisters based on incoming http requests that are not verified and certified. This is the same thing that is holding them back from letting canisters make outgoing http calls. 
One could say that a canister should be able to choose for itself if it wants to take in insecure data however if a canister is taking update calls that come in without an agent, then it is also giving back data that the caller is not verifying/certifying because there is no signature on the data by the ic, because the caller is not using an agent. 
So it seems this is a good choice of the dfinity-team. 
Comments/thoughts are welcome.

-------------------------

nomeata | 2021-11-11 20:40:37 UTC | #24

Not quite. This thread discusses a feature of the ‚ÄúHTTP Gateway‚Äù on the boundary node, which lives outside the actual system and instead _translates_ HTTP requests to normal query calls, or potentially, update calls. This is also why this feature is not specified in the Interface Specification.

And because this component lives outside the (core) Internet Computer, it certainly can't break it in the ways you describe.

Also note that I have been running such a gateway for almost a year now (as a proof of concept, to be able to run a Telegram bot on the IC), and it didn't break determinism :slight_smile: 

What's holding this back is mainly prioritization, I think, and that the interaction with the ‚Äústreaming‚Äù feature is unclear and needs to be designed.

-------------------------

cryptoschindler | 2021-11-15 09:56:26 UTC | #25

Do you mind sharing some insights/guides on how to do that @nomeata ?

-------------------------

nomeata | 2021-11-15 11:54:20 UTC | #26

To do what precisely? Running your own proxy with that feature? Or finishing the design and rigorous specification?

-------------------------

cryptoschindler | 2021-11-19 09:02:48 UTC | #27

Running my own, I heard some people are doing it but I've got no idea how.

-------------------------

nomeata | 2021-11-19 10:32:18 UTC | #28

If you know AWS, maybe https://github.com/nomeata/ic-http-lambda suits you.

Or you could fork `ic-proxy` with @paulyoung's patches and play with that. You'd still have to do your own devops.

-------------------------

cryptoschindler | 2021-11-22 10:05:56 UTC | #29

Thanks! I assume you meant `icx-proxy`? Where would i find those patches? Seems like he didn't fork it and there's only one branch on the repo üßê

-------------------------

nomeata | 2021-11-22 15:29:51 UTC | #30

https://github.com/dfinity/agent-rs/pull/195 (created before the code was moved out)

-------------------------

paulyoung | 2021-12-22 23:07:24 UTC | #31

I've broken things up into separate PRs. The original was closed because `icx-proxy` was moved to its own repository.

https://github.com/dfinity/agent-rs/pull/291
https://github.com/dfinity/icx-proxy/pull/6

-------------------------

