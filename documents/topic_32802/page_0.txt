peterparker | 2024-07-06 10:24:25 UTC | #1

I started a clean local state with DFX and spinned NNS and dapp with dfx but, once logged in NNS dapp, the ICP account load forever and I'm unable to get ICP, which basically makes the test setting basically useless.

Can you fix the issue?

```
dfx start --clean
dfx extension uninstall nns
dfx extension install nns --version 0.4.1
dfx nns install
```

Open NNS dapp e.g. on http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080/

![Capture d’écran 2024-07-06 à 12.23.28|690x463](upload://dKQvcCAn3E7Lj3FRtrJSeIssd3G.jpeg)
![Capture d’écran 2024-07-06 à 12.23.41|690x463](upload://z5wg3JXTHlNpkNRKmaTBtFupAzm.jpeg)

-------------------------

peterparker | 2024-07-06 10:38:43 UTC | #2

Workaround: clean and reinstall the uterrly old version of NNS dapp.

```
dfx start --clean
dfx extension uninstall nns
dfx extension install nns
dfx nns install
```

![Capture d’écran 2024-07-06 à 12.38.35|690x463](upload://btM164bkY4gqHQxhfOTy9tGFVe6.jpeg)

-------------------------

mraszyk | 2024-07-07 13:05:55 UTC | #3

It works for me using dfx v0.20.1, Ubuntu 22.04.4 LTS, Google Chrome Version 126.0.6478.126 (Official Build) (64-bit), and `dfx extension install nns --version 0.4.1`:

![Screenshot from 2024-07-07 15-03-06|690x358](upload://hIv7s2NidMwYwsehjHqUYJG7Kny.jpeg)

For completeness, here's my `networks.json`:
```
$ cat ~/.config/dfx/networks.json 
{ 
  "local": { 
    "bind": "127.0.0.1:8080", 
    "type": "ephemeral", 
    "replica": { 
      "subnet_type": "system"
    } 
  } 
}
```

-------------------------

peterparker | 2024-07-07 13:32:16 UTC | #4

Thanks. I cleared the state for the zillion times and this time it worked out here as well. I guess the state went corrupted at some point.

![Capture d’écran 2024-07-07 à 15.31.31|690x463](upload://qON4S5txEN2ssqJYwGM7uy5Bv0Z.jpeg)

-------------------------

peterparker | 2024-07-07 16:10:36 UTC | #5

Happened again. Might be because I started and quickly killed `dfx start --clean` - i.e. too slow and parts of the states is deleted but, other parts are still there.

![Capture d’écran 2024-07-07 à 18.08.58|690x463](upload://7VzYwG8kBgv0RxqbxYOJQ2luMXr.jpeg)

-------------------------

peterparker | 2024-07-08 15:52:53 UTC | #6

It's broken again! I definitely did not run any command like `clean` or whatsoever. I don't know what's happening, but there is definitely something fishy in that `dfx nns` setup.

![Capture d’écran 2024-07-08 à 17.50.47|690x463](upload://87ulEpkrEvR8USJftO543f3FJ7q.jpeg)

-------------------------

mraszyk | 2024-07-08 17:41:33 UTC | #7

Do you see some suspicious replica logs? Some errors in the browser console? Without a way to reproduce the error, it'd be close to impossible to fix it.

-------------------------

peterparker | 2024-07-09 17:06:51 UTC | #8

It happened again. It feels like every day when I come back to my project, this just crashes.

[quote="mraszyk, post:7, topic:32802, full:true"]
Do you see some suspicious replica logs? Some errors in the browser console? Without a way to reproduce the error, it’d be close to impossible to fix it.
[/quote]

So, no logs in DFX / local replica, or at least nothing particular.

![Capture d’écran 2024-07-09 à 17.56.25|690x444](upload://tOlHlqSgM06X3raD9LlF6fP1J3d.jpeg)

In the browser console, it's Xmas:

```
index.d5b34e7a.js:4 
        
        
       GET http://127.0.0.1:51760/api/v2/status net::ERR_CONNECTION_REFUSED
window.fetch @ index.d5b34e7a.js:4
request @ vendor.1affbd98.js:27
e @ vendor.1affbd98.js:32
status @ vendor.1affbd98.js:27
fetchRootKey @ vendor.1affbd98.js:27
vv @ vendor.1affbd98.js:47
Wn @ index.d5b34e7a.js:6
tc @ index.d5b34e7a.js:15
Aj @ index.d5b34e7a.js:15
request @ index.d5b34e7a.js:15
m @ index.d5b34e7a.js:15
kn @ index.d5b34e7a.js:15
Hi @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
r @ index.d5b34e7a.js:4
o @ index.d5b34e7a.js:4
setCanisters @ index.d5b34e7a.js:15
Tj @ index.d5b34e7a.js:15
jj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
index.d5b34e7a.js:4 
        
        
       GET http://127.0.0.1:51760/api/v2/status net::ERR_CONNECTION_REFUSED
window.fetch @ index.d5b34e7a.js:4
request @ vendor.1affbd98.js:27
e @ vendor.1affbd98.js:32
status @ vendor.1affbd98.js:27
fetchRootKey @ vendor.1affbd98.js:27
vv @ vendor.1affbd98.js:47
Wn @ index.d5b34e7a.js:6
tc @ index.d5b34e7a.js:15
Aj @ index.d5b34e7a.js:15
request @ index.d5b34e7a.js:15
m @ index.d5b34e7a.js:15
kn @ index.d5b34e7a.js:15
Hi @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:16
DW @ index.d5b34e7a.js:16
k @ index.d5b34e7a.js:16
v @ index.d5b34e7a.js:16
(anonymous) @ index.d5b34e7a.js:16
KJ.s.$$.update @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
Z8 @ index.d5b34e7a.js:16
WJ @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
YJ @ index.d5b34e7a.js:16
Lt @ index.d5b34e7a.js:1
Z9 @ index.d5b34e7a.js:6
$e @ index.d5b34e7a.js:1
oq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Vz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
l_ @ index.d5b34e7a.js:15
lq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
eq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
YE @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
QE @ index.d5b34e7a.js:13
rq @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
os @ index.d5b34e7a.js:16
iq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Dz @ index.d5b34e7a.js:15
$e @ index.d5b34e7a.js:1
FP @ index.d5b34e7a.js:13
$e @ index.d5b34e7a.js:1
tP @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
rP @ index.d5b34e7a.js:13
Lt @ index.d5b34e7a.js:1
zP @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
qP @ index.d5b34e7a.js:13
Bz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
Er @ index.d5b34e7a.js:15
aq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Rz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
ol @ index.d5b34e7a.js:15
uq @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
fq @ index.d5b34e7a.js:16
Lt @ index.d5b34e7a.js:1
Y9 @ index.d5b34e7a.js:6
Q9 @ index.d5b34e7a.js:6
$e @ index.d5b34e7a.js:1
y1 @ index.d5b34e7a.js:15
p @ index.d5b34e7a.js:15
l9 @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
Promise.then (async)
k3 @ index.d5b34e7a.js:4
u9 @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:15
r @ index.d5b34e7a.js:4
sync @ index.d5b34e7a.js:6
await in sync (async)
Lj @ index.d5b34e7a.js:15
zj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
index.d5b34e7a.js:4 
        
        
       GET http://127.0.0.1:51760/api/v2/status net::ERR_CONNECTION_REFUSED
window.fetch @ index.d5b34e7a.js:4
request @ vendor.1affbd98.js:27
e @ vendor.1affbd98.js:32
status @ vendor.1affbd98.js:27
fetchRootKey @ vendor.1affbd98.js:27
vv @ vendor.1affbd98.js:47
Wn @ index.d5b34e7a.js:6
Nn @ index.d5b34e7a.js:14
F4 @ index.d5b34e7a.js:14
queryNeurons @ index.d5b34e7a.js:14
request @ index.d5b34e7a.js:15
m @ index.d5b34e7a.js:15
kn @ index.d5b34e7a.js:15
await in kn (async)
Gr @ index.d5b34e7a.js:15
LV @ index.d5b34e7a.js:15
g5 @ index.d5b34e7a.js:15
s.$$.update @ index.d5b34e7a.js:15
l9 @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
Promise.then (async)
k3 @ index.d5b34e7a.js:4
u9 @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:15
r @ index.d5b34e7a.js:4
sync @ index.d5b34e7a.js:6
await in sync (async)
Lj @ index.d5b34e7a.js:15
zj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
index.d5b34e7a.js:4 
        
        
       GET http://127.0.0.1:51760/api/v2/status net::ERR_CONNECTION_REFUSED
window.fetch @ index.d5b34e7a.js:4
request @ vendor.1affbd98.js:27
e @ vendor.1affbd98.js:32
status @ vendor.1affbd98.js:27
fetchRootKey @ vendor.1affbd98.js:27
vv @ vendor.1affbd98.js:47
Wn @ index.d5b34e7a.js:6
tc @ index.d5b34e7a.js:15
Pj @ index.d5b34e7a.js:15
Oj @ index.d5b34e7a.js:15
request @ index.d5b34e7a.js:15
m @ index.d5b34e7a.js:15
kn @ index.d5b34e7a.js:15
await in kn (async)
uo @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:16
DW @ index.d5b34e7a.js:16
k @ index.d5b34e7a.js:16
v @ index.d5b34e7a.js:16
(anonymous) @ index.d5b34e7a.js:16
KJ.s.$$.update @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
Z8 @ index.d5b34e7a.js:16
WJ @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
YJ @ index.d5b34e7a.js:16
Lt @ index.d5b34e7a.js:1
Z9 @ index.d5b34e7a.js:6
$e @ index.d5b34e7a.js:1
oq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Vz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
l_ @ index.d5b34e7a.js:15
lq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
eq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
YE @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
QE @ index.d5b34e7a.js:13
rq @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
os @ index.d5b34e7a.js:16
iq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Dz @ index.d5b34e7a.js:15
$e @ index.d5b34e7a.js:1
FP @ index.d5b34e7a.js:13
$e @ index.d5b34e7a.js:1
tP @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
rP @ index.d5b34e7a.js:13
Lt @ index.d5b34e7a.js:1
zP @ index.d5b34e7a.js:13
W @ index.d5b34e7a.js:4
qP @ index.d5b34e7a.js:13
Bz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
Er @ index.d5b34e7a.js:15
aq @ index.d5b34e7a.js:16
$e @ index.d5b34e7a.js:1
Rz @ index.d5b34e7a.js:15
W @ index.d5b34e7a.js:4
ol @ index.d5b34e7a.js:15
uq @ index.d5b34e7a.js:16
W @ index.d5b34e7a.js:4
fq @ index.d5b34e7a.js:16
Lt @ index.d5b34e7a.js:1
Y9 @ index.d5b34e7a.js:6
Q9 @ index.d5b34e7a.js:6
$e @ index.d5b34e7a.js:1
y1 @ index.d5b34e7a.js:15
p @ index.d5b34e7a.js:15
l9 @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
Promise.then (async)
k3 @ index.d5b34e7a.js:4
u9 @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:15
r @ index.d5b34e7a.js:4
sync @ index.d5b34e7a.js:6
await in sync (async)
Lj @ index.d5b34e7a.js:15
zj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
index.d5b34e7a.js:4 
        
        
       GET http://127.0.0.1:51760/api/v2/status net::ERR_CONNECTION_REFUSED
window.fetch @ index.d5b34e7a.js:4
request @ vendor.1affbd98.js:27
e @ vendor.1affbd98.js:32
status @ vendor.1affbd98.js:27
fetchRootKey @ vendor.1affbd98.js:27
vv @ vendor.1affbd98.js:47
Wn @ index.d5b34e7a.js:6
Yo @ index.d5b34e7a.js:14
Kp @ index.d5b34e7a.js:14
JO @ index.d5b34e7a.js:15
l5 @ index.d5b34e7a.js:15
request @ index.d5b34e7a.js:15
m @ index.d5b34e7a.js:15
kn @ index.d5b34e7a.js:15
await in kn (async)
i5 @ index.d5b34e7a.js:15
eV @ index.d5b34e7a.js:15
$Ne @ index.d5b34e7a.js:22
fB @ index.d5b34e7a.js:14
await in fB (async)
c @ index.d5b34e7a.js:15
s.$$.update @ index.d5b34e7a.js:15
l9 @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
Promise.then (async)
k3 @ index.d5b34e7a.js:4
u9 @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:4
(anonymous) @ index.d5b34e7a.js:15
r @ index.d5b34e7a.js:4
sync @ index.d5b34e7a.js:6
await in sync (async)
Lj @ index.d5b34e7a.js:15
zj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
qsgjb-riaaa-aaaaa-aaaga-cai.localhost/:1 Access to fetch at 'http://sgymv-uiaaa-aaaaa-aaaia-cai.localhost:8080/v1/sns/list/page/0/slow.json' from origin 'http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.
index.d5b34e7a.js:4 
        
        
       GET http://sgymv-uiaaa-aaaaa-aaaia-cai.localhost:8080/v1/sns/list/page/0/slow.json net::ERR_FAILED 500 (Internal Server Error)
window.fetch @ index.d5b34e7a.js:4
q5 @ index.d5b34e7a.js:15
oj @ index.d5b34e7a.js:15
querySnsProjects @ index.d5b34e7a.js:15
K5 @ index.d5b34e7a.js:15
jj @ index.d5b34e7a.js:15
(anonymous) @ index.d5b34e7a.js:15
c3 @ index.d5b34e7a.js:1
(anonymous) @ index.d5b34e7a.js:4
gn @ index.d5b34e7a.js:4
W @ index.d5b34e7a.js:4
HNe @ index.d5b34e7a.js:6
ee @ index.d5b34e7a.js:4
_e @ index.d5b34e7a.js:4
await in _e (async)
te @ index.d5b34e7a.js:4
goto @ index.d5b34e7a.js:4
LNe @ index.d5b34e7a.js:6
(anonymous) @ main.js:11
Promise.then (async)
(anonymous) @ main.js:10
index.d5b34e7a.js:15 Error converting data TypeError: Failed to fetch
    at window.fetch (index.d5b34e7a.js:4:9223)
    at q5 (index.d5b34e7a.js:15:67635)
    at oj (index.d5b34e7a.js:15:68050)
    at Object.querySnsProjects (index.d5b34e7a.js:15:68348)
    at K5 (index.d5b34e7a.js:15:68908)
    at jj (index.d5b34e7a.js:15:78230)
    at index.d5b34e7a.js:15:85386
    at c3 (index.d5b34e7a.js:1:1543)
    at Array.map (<anonymous>)
    at index.d5b34e7a.js:4:6596
```

![Capture d’écran 2024-07-09 à 17.59.23|690x463](upload://jPAGwynVagtGfjFDldEtMFLr2fo.jpeg)
![Capture d’écran 2024-07-09 à 17.59.16|690x463](upload://8sBgwEOYXjXkIEQfmKmwRSmLqUQ.jpeg)

Note that only NNS dapp and the ledger seems to have issues . My own project deployed with my own canister are just fine. Likewise for II.

![Capture d’écran 2024-07-09 à 18.00.01|690x463](upload://snOeNSwzz8wK3ByZ4bsFFcKaDZG.jpeg)
![Capture d’écran 2024-07-09 à 18.00.16|690x448](upload://3i1BMYx5Q4DrpQa6IXkQwIyxY2s.jpeg)

-------------------------

mraszyk | 2024-07-09 17:30:24 UTC | #9

Since http://127.0.0.1:51760/api/v2/status doesn't work, it looks like the agent is trying to connect to a non-existing replica. Why does the agent not use the HTTP gateway port (8080)?

-------------------------

peterparker | 2024-07-09 17:41:11 UTC | #10

No clue.

That's my dfx file: https://github.com/peterpeterparker/proposals.network/blob/main/dfx.json

-------------------------

peterparker | 2024-07-09 17:52:56 UTC | #11

Btw. those are the instruction to deploy and develop that particular project locally: https://github.com/peterpeterparker/proposals.network/blob/main/HACKING.md

-------------------------

mraszyk | 2024-07-09 18:23:49 UTC | #12

The replica URL comes from [here](https://github.com/dfinity/dfx-extensions/blob/c09914b15343659e550ee50558b9a8cf8c976312/extensions/nns/src/commands/install.rs#L42) so you should make sure to not stop and start the replica after running `dfx nns install`, or even better pin the replica port:
```
$ cat ~/.config/dfx/networks.json 
{ 
  "local": { 
    "bind": "127.0.0.1:8080", 
    "type": "ephemeral", 
    "replica": { 
      "subnet_type": "system",
      "port": 8000
    } 
  } 
}
```

-------------------------

mraszyk | 2024-07-09 18:25:58 UTC | #13

I'll also fix the dfx nns extension, but this might take some time to get out, so pinning the replica port is the best short-term mitigation.

-------------------------

peterparker | 2024-07-09 18:47:53 UTC | #14

[quote="mraszyk, post:12, topic:32802"]
so you should make sure to not stop and start the replica after running `dfx nns install`,
[/quote]

I'm not sure I understand what you mean. Are you implying that I should `dfx start`, then `dfx nns install`, and then never stop `dfx` again, otherwise it will lead to the issue?

[quote="mraszyk, post:12, topic:32802"]
or even better pin the replica port:
[/quote]

Sure I can try that.

-------------------------

peterparker | 2024-07-09 19:28:49 UTC | #15

[quote="peterparker, post:14, topic:32802"]
[quote="mraszyk, post:12, topic:32802"]
or even better pin the replica port:
[/quote]

Sure I can try that.
[/quote]

Well, that does not work at all.

```
❯ dfx start --clean
Running dfx start for version 0.20.0
Using project-specific network 'local' defined in /Users/daviddalbusco/projects/opensource/proposals.network/dfx.json
2024-07-09T19:27:56.684786Z ERROR icx_proxy_dev: Runtime crashed
Error: Runtime crashed

Caused by:
    0: fail to fetch root key for http://localhost:8000/
    1: An error happened during communication with the replica: error trying to connect: tcp connect error: Connection refused (os error 61)
2024-07-09T19:27:58.898450Z ERROR icx_proxy_dev: Runtime crashed
Error: Runtime crashed

Caused by:
    0: fail to fetch root key for http://localhost:8000/
    1: An error happened during communication with the replica: error trying to connect: tcp connect error: Connection refused (os error 61)
Initialized replica.
Dashboard: http://localhost:8000/_/dashboard
```

```
"networks": {
		"local": {
			"bind": "127.0.0.1:8080",
			"replica": {
				"subnet_type": "system",
				"port": 8000
			},
			"type": "ephemeral"
		}
	},
```

![Capture d’écran 2024-07-09 à 21.28.40|690x462](upload://a9vuHBX7qrODglMCsTfVEda0qZj.jpeg)

-------------------------

mraszyk | 2024-07-09 20:11:16 UTC | #16

Don't worry about the error messages, icx-proxy seems to be too eager, but eventually the connection is established.

-------------------------

mraszyk | 2024-07-09 20:11:55 UTC | #17

[quote="peterparker, post:14, topic:32802"]
I’m not sure I understand what you mean. Are you implying that I should `dfx start`, then `dfx nns install`, and then never stop `dfx` again, otherwise it will lead to the issue?
[/quote]

Exactly! This is what I mean.

-------------------------

peterparker | 2024-07-10 14:00:30 UTC | #18

[quote="mraszyk, post:17, topic:32802"]
Exactly! This is what I mean.
[/quote]

Thanks, I appreciate that you come up with a scenario but, it's just not an option.

[quote="mraszyk, post:16, topic:32802, full:true"]
Don’t worry about the error messages, icx-proxy seems to be too eager, but eventually the connection is established.
[/quote]

Ok, I'll try again.

-------------------------

peterparker | 2024-07-10 14:20:43 UTC | #19

[quote="mraszyk, post:16, topic:32802"]
Don’t worry about the error messages, icx-proxy seems to be too eager, but eventually the connection is established.
[/quote]

Correct. I redeployed. I let know if NNS dapp and its state get corrupted again.

-------------------------

mraszyk | 2024-07-11 06:56:59 UTC | #20

Here's the dfx extension fix: https://github.com/dfinity/dfx-extensions/pull/129

-------------------------

peterparker | 2024-07-18 13:15:55 UTC | #21

For what it's worth, I'm facing a similar issue again. I shared the stack trace [here](https://forum.dfinity.org/t/sns-yaml-month-and-year-conversion-to-seconds/32905/20?u=peterparker).

I start the replica, configure everything, and finally start working. I create a few proposals, then stop the replica, go on with my life, and come back to it later, only to find the replica is corrupted or unhealthy.

I assumed this happened because I created too many proposals, like 5 or 10. However, I had a call with a friend and wanted to quickly showcase to him where we stand with the preparation of my SNS proposal, but I was unable to do so because the replica I restarted during the call failed.

-------------------------

peterparker | 2024-08-05 16:36:05 UTC | #22

I hate this issue so much. Anyway, gonna close the thread, I guess it's a dead hand.

![Capture d’écran 2024-08-05 à 18.32.00|690x448](upload://oiOv6oDePjMM6bGf1SwYNKtSbrS.jpeg)

-------------------------

