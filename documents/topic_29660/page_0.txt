ChJ4m3s | 2024-04-14 08:56:42 UTC | #1

Hi! I'm quite stuck on this:

I need to store files from another canister and retrieve them as links (mostly images). So I'm trying to use the assets canister in rust. I found this crate: ic_certified_assets and I'm trying to use it. So I created my canister and this is the code inside the lib.rs file:

```
use ic_cdk::{init, post_upgrade, pre_upgrade};
use ic_cdk::storage::{stable_restore, stable_save};
use ic_certified_assets::StableState;

#[init]
fn init() {
    ic_certified_assets::init();
}

#[pre_upgrade]
fn pre_upgrade() {
    let state: StableState = ic_certified_assets::pre_upgrade();
    stable_save((state,)).expect("failed to save stable state");
}

#[post_upgrade]
fn post_upgrade() {
    let (stable_state,): (StableState,) =  stable_restore()
        .expect("failed to restore stable state");
    ic_certified_assets::post_upgrade(stable_state);
}
```

It is similar to what I read from [here](https://github.com/dfinity/sdk/blob/master/src/canisters/frontend/ic-frontend-canister/src/lib.rs).

The problem is that if I try to build it, I got this error:

> error[E0277]: the trait bound `StableState: CandidType` is not satisfied
>   --> src/assets/src/lib.rs:13:18
>    |
> 13 |     stable_save((state,)).expect("failed to save stable state");
>    |     -----------  ^^^^^ the trait `CandidType` is not implemented for `StableState`
>    |     |
>    |     required by a bound introduced by this call
>    |
>    = help: the following other types implement trait `CandidType`:
>              bool
>              isize
>              i8
>              i16
>              i32
>              i64
>              i128
>              usize
>            and 113 others
>    = note: required for `(StableState,)` to implement `ArgumentEncoder`
> note: required by a bound in `stable_save`
>   --> /Users/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ic-cdk-0.13.2/src/storage.rs:9:8
>    |
> 7  | pub fn stable_save<T>(t: T) -> Result<(), candid::Error>
>    |        ----------- required by a bound in this function
> 8  | where
> 9  |     T: candid::utils::ArgumentEncoder,
>    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `stable_save`
> 
> error[E0277]: the trait bound `StableState: CandidType` is not satisfied
>   --> src/assets/src/lib.rs:18:44
>    |
> 18 |     let (stable_state,): (StableState,) =  stable_restore()
>    |                                            ^^^^^^^^^^^^^^ the trait `CandidType` is not implemented for `StableState`
>    |
>    = help: the following other types implement trait `CandidType`:
>              bool
>              isize
>              i8
>              i16
>              i32
>              i64
>              i128
>              usize
>            and 113 others
>    = note: required for `(StableState,)` to implement `for<'de> ArgumentDecoder<'de>`
> note: required by a bound in `stable_restore`
>   --> /Users/user/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ic-cdk-0.13.2/src/storage.rs:19:8
>    |
> 17 | pub fn stable_restore<T>() -> Result<T, String>
>    |        -------------- required by a bound in this function
> 18 | where
> 19 |     T: for<'de> candid::utils::ArgumentDecoder<'de>,
>    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `stable_restore`
> 
> For more information about this error, try `rustc --explain E0277`.
> error: could not compile `assets` (lib) due to 2 previous errors

Do you have some idea to fix this? Or better ways to deploy an assets canister in rust?

-------------------------

b3hr4d | 2024-04-14 11:18:48 UTC | #2

There is better way, you can store them directly on stable memory using [stable-structures](https://github.com/dfinity/stable-structures/), and ignore the pre/post_upgrade!

-------------------------

ChJ4m3s | 2024-04-14 13:25:31 UTC | #3

Thanks for the advise! Is it possible to serve images as https://<canister-io>.icp0.io/<uuid> using stable structures? I donâ€™t know if there are some examples I can learn from, but would be very useful ðŸ˜„

-------------------------

b3hr4d | 2024-04-14 14:36:58 UTC | #4

https://github.com/dfinity/stable-structures/blob/main/examples/src/assets_example/src/lib.rs

Stable is about the storing, Other things are the same!

-------------------------

peterparker | 2024-04-14 15:26:53 UTC | #5

[quote="ChJ4m3s, post:1, topic:29660"]
I need to store files from another canister and retrieve them as links (mostly images).
[/quote]

For what it's worth, you can "just" spin up a satellite on Juno, and you get that with its [storage](https://juno.build/docs/build/storage) capabilities out of the box.

-------------------------

ChJ4m3s | 2024-04-14 17:49:27 UTC | #6

I considered Juno, but I need to implement custom logic for allowing upload and deletion..

-------------------------

peterparker | 2024-04-14 18:05:56 UTC | #7

[quote="ChJ4m3s, post:6, topic:29660"]
I need to implement custom logic for allowing upload and deletionâ€¦
[/quote]

With [serverless functions](https://juno.build/docs/build/functions), you can implement synchronous custom assertions and asynchronous post-hooks logic. Not a call to action, just saying it for the record. ðŸ˜‰

Hope you will get an answer to your original question.

-------------------------

Severin | 2024-04-15 08:38:02 UTC | #8

[quote="ChJ4m3s, post:1, topic:29660"]
error[E0277]: the trait bound `StableState: CandidType` is not satisfied
[/quote]

`CandidType` from `candid <0.10` is not the same / compatible with `CandidType` from `candid >= 0.10`. I suspect this is where the problem comes from. You can check with `cargo tree` which crate uses which candid version. Solutions would be to either downgrade everything to 0.9 or to use the sdk repo on a current commit instead of the (very old) published version

Related: some discussion about the future of the `ic-certified-assets` crate:
https://forum.dfinity.org/t/announcing-the-http-certification-library-for-rust/29595/7

-------------------------

