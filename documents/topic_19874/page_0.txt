jamesbeadle | 2023-05-10 12:11:32 UTC | #1

So I used __get_candid_interface_tmp_hack to get the canidid file of a canister that I can query here:
https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/?id=tskpj-aiaaa-aaaag-qaxsq-cai

The candid service definition contains the definition of a function I would like to query:
![image|391x111](upload://w8eUDGiPXftq2EpdxObC53C1g2r.png)

When I query the availableCycles() function in the canister I get the expected result:
![image|529x176](upload://wr8NQQ3yUwBHxxmNisr4H5XpUaM.png)

But when I query getRegistry() I get an empty array.

It makes me think that I am not converting the registry correctly from a linked list to an array:

![image|505x231](upload://bVAM6tluJx1r0cM0scvP7Og9Evo.png)

The type I'm trying to cast to has the same structure as the candidid getRegistry function:
![image|407x102](upload://2Coei7NmtUvJOVcr2mo5ppUpQz8.png)

But ultimately the array I get is empty.

Any help will be appreciated.

-------------------------

Gekctek | 2023-05-10 13:13:33 UTC | #2

Have you tried using an array instead of a list? Like:
```
... 
getRegistry: () -> async [T.NFT];
... 
```

-------------------------

jamesbeadle | 2023-05-10 14:21:20 UTC | #3

[quote="Gekctek, post:2, topic:19874"]
`async [T.NFT]`
[/quote]

Thanks mate I figured it out from your reply, I changed to an array and got a more descriptive message:

![image|690x446](upload://yPFKzOMJTk5n6yeHTsibHaqcDqa.png)


Just define the type record like this:


        getRegistry: () -> async [(Nat32, Text)];

Map that to type:
let registry = Array.map<(Nat32, Text), T.NFT>(registryRecords, updateFn);

and build the using indexes:


    let updateFn = func(nft: (Nat32, Text)): T.NFT {
      return {
            tokenIndex = nft.0;
            accountIdentifier = nft.1;
          };
      };

-------------------------

