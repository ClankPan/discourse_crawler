flyq | 2021-08-05 11:45:47 UTC | #1

Is there any base32 implemented based on Motoko, specifically RFC4648 with no padding.

I need to convert [Nat8] to Principal, currently in motoko, only [Nat8] can be encoded into the text form of Principal, and this process requires base32, and then use Principal.fromText. Any better methods?

-------------------------

flyq | 2021-08-05 11:55:41 UTC | #2

https://github.com/dfinity/motoko-base/blob/master/src/Principal.mo#L24
this is only fromText in Principal, if there is a fromBlob, it will be very nice.

-------------------------

skilesare | 2021-08-05 21:56:47 UTC | #3

```
public func bytesToText(_bytes : [Nat8]) : Text{
        var result : Text = "";
        var aChar : [var Nat8] = [var 0, 0, 0, 0];

        for(thisChar in Iter.range(0,_bytes.size())){
            if(thisChar > 0 and thisChar % 4 == 0){
                aChar[0] := _bytes[thisChar-4];
                aChar[1] := _bytes[thisChar-3];
                aChar[2] := _bytes[thisChar-2];
                aChar[3] := _bytes[thisChar-1];
                result := result # Char.toText(Char.fromNat32(bytesToNat32(Array.freeze<Nat8>(aChar))));
            };
        };
        return result;
    };

    public func principalToBytes(_principal: Principal.Principal) : [Nat8]{
        return textToBytes(Principal.toText(_principal));
    };

    //todo: this should go to Blob once they add Principal.fromBlob
    public func bytesToPrincipal(_bytes: [Nat8]) : Principal.Principal{
        return Principal.fromText(bytesToText(_bytes));
    };
```

-------------------------

flyq | 2021-08-06 10:12:53 UTC | #4

great job!

Is there any more info about `bytesToNat32`

-------------------------

skilesare | 2021-08-06 11:56:24 UTC | #5

Sorry about that:

```
public func bytesToNat32(bytes: [Nat8]) : Nat32{
        (Nat32.fromNat(Nat8.toNat(bytes[0])) << 24) +
        (Nat32.fromNat(Nat8.toNat(bytes[1])) << 16) +
        (Nat32.fromNat(Nat8.toNat(bytes[2])) << 8) +
        (Nat32.fromNat(Nat8.toNat(bytes[3])));
    };
```

-------------------------

flyq | 2021-08-07 10:43:40 UTC | #6

[quote="skilesare, post:5, topic:6311"]
```
public func bytesToNat32(bytes: [Nat8]) : Nat32{
        (Nat32.fromNat(Nat8.toNat(bytes[0])) << 24) +
        (Nat32.fromNat(Nat8.toNat(bytes[1])) << 16) +
        (Nat32.fromNat(Nat8.toNat(bytes[2])) << 8) +
        (Nat32.fromNat(Nat8.toNat(bytes[3])));
    };
```
[/quote]

Thanks very much for your help :motoko_go:

-------------------------

flyq | 2021-08-08 07:46:42 UTC | #7

I failed.

https://github.com/flyq/ic_codec/blob/master/src/main.rs#L97

I get a Principal:  `yhy6j-huy54-mkzda-m26hc-yklb3-dzz4l-i2ykq-kr7tx-dhxyf-v2c2g-tae`, and it's slice is:
`[152, 239, 24, 172, 140, 12, 215, 142, 44, 41, 97, 216, 243, 158, 45, 26, 194, 160, 168, 254, 119, 25, 239, 130, 215, 66, 209, 166, 2]`

the first 4 bytes: [152,239,24,172] get the Nat32 `2_565_806_252`, and `Char.fromNat32(2_565_806_252)` will be trapped, as there is no unicode char in `2_565_806_252`:
```sh
The Replica returned an error: code 5, message: "IC0503: Canister rwlgt-iiaaa-aaaaa-aaaaa-cai trapped explicitly: codepoint out of range"
```

the problem is that the Principal's slice to Principal text, need crc32, base32 and ascii code:
https://github.com/dfinity/ic/blob/master/rs/types/base_types/src/principal_id.rs#L57

-------------------------

flyq | 2021-08-09 05:31:48 UTC | #8

Successfully converted on the basis of implementing base32:

https://github.com/flyq/ic_codec/blob/master/src/convert.mo#L22

```sh
dfx canister --no-wallet call tools subaccountToPrincipal '(vec { 29;152;239;24;172;140;12;215;142;44;41;97;216;243;158;45;26;194;160;168;254;119;25;239;130;215;66;209;166;2;0;0})'
(principal "yhy6j-huy54-mkzda-m26hc-yklb3-dzz4l-i2ykq-kr7tx-dhxyf-v2c2g-tae")

dfx canister --no-wallet call tools subaccountToPrincipal '(vec {10;0;0;0;0;0;0;0;2;1;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;})'
(principal "ryjl3-tyaaa-aaaaa-aaaba-cai")
```

-------------------------

Ori | 2021-08-09 08:29:45 UTC | #9

Unless thereâ€™s something extra going on in there you could also simplify the lowercase conversion like this:
[https://forum.dfinity.org/t/motoko-type-text-methods-uppercase-and-lowercase/5938/2?u=ori](https://forum.dfinity.org/t/motoko-type-text-methods-uppercase-and-lowercase/5938/2?u=ori)

-------------------------

flyq | 2021-08-09 13:11:49 UTC | #10

Yes, it is effective and will be more concise:

https://github.com/flyq/ic_codec/blob/master/src/convert.mo#L29

-------------------------

