nomeata | 2021-06-15 16:40:50 UTC | #1

I created a small canister that tests how well the IC can keep a secret. The canister running behind https://6b4pv-sqaaa-aaaah-qaava-cai.raw.ic0.app/ has used the Internet Computer's random tape to get a random value and keep it in memory. If you find a way to obtain that secret value (or manage guess very well), you can get the one ICP token stored in [this account](https://dashboard.internetcomputer.org/account/39141f05da8f71024656155dbb7135ff10e3692741dd4dcc65bbe8d867061c1e) and get bragging rights.

You can read more about this challenge in the [README of the repository](https://github.com/nomeata/capture-the-ic-token), which also contains the code of the canister.

Even if you don‚Äôt think you can obtain or guess the secret, you might enjoy reading through more of that, as you can learn a lot about the Internet Computer this way; this little project touched upon

 * The random tape
 * Controller-less canisters
 * Certified variables
 * Canister Signatures, and how they can be used to let canisters ‚Äúhold‚Äù ICP (they [currently can‚Äôt hold them directly](https://forum.dfinity.org/t/can-canisters-hold-icp/4578?u=nomeata)
 * Keys, Principals and account numbers

Note that I do _not_ expect this challenge to be solvable! It can only be done if my canister, Motoko or the Internet Computer have a bug, or maybe if node providers collaborate.

Whoever builds the tool that, given the right secret, would indeed unlock that token, already deserves some bragging rights! Maybe I should do a similar challenge with a secret that can be obtained without waiting for a serious bug in Motoko or the Internet Computer‚Ä¶

Enjoy!

(This is a private little project of mine, and _not_ by DFINITY or the ICA or anyone else.)

-------------------------

neeboo | 2021-06-14 09:35:37 UTC | #2

Worth learning. Thanks

-------------------------

flyq | 2021-06-14 15:11:36 UTC | #3

Great challenge, I like this combining hacking and explain.

I have a question:
https://github.com/nomeata/capture-the-ic-token/blob/master/main.mo#L70

![image|690x198, 75%](upload://r25mgU0Uvt0G04dXsnHCJaW6sn8.png)

Is it to say, as long as the http_request interface is implemented, The 'logical' canister can integrate front-end functions?

and Internet identity canister also does not have a separate front-end canister, and its front-end assets are also directly integrated into the Internet identity canister?

https://github.com/dfinity/internet-identity/blob/main/src/internet_identity/src/main.rs#L537

-------------------------

nomeata | 2021-06-14 16:20:01 UTC | #4

[quote="flyq, post:3, topic:5159"]
Is it to say, as long as the http_request interface is implemented, The ‚Äòlogical‚Äô canister can integrate front-end functions?
[/quote]

A canister is a canister, there is no technical difference between a ‚Äúfrontend canister‚Äù and other canisters. Whenever a canister provides the `http_request` method you can use it via `<cid>.raw.ic0.app`. To make it usable with `<cid>.ic0.app` you also have to add the necessary certification headers. Unfortunately, the specification for both of these features hasn‚Äôt made it to the light of the public yet, even though all relevant code (e.g. `icx-proxy`) has.

-------------------------

gladguy | 2021-06-14 16:50:27 UTC | #5

Great challenge.

Would like to know how i can call the http_request from the local machine ?

http://localhost:8000/?canisterId=qoctq-giaaa-aaaaa-aaaea-cai&id=qoctq-giaaa-aaaaa-aaaea-cai

-------------------------

nomeata | 2021-06-14 17:24:53 UTC | #6

Good question, but maybe worth a separate thread on this forum, to keep this one a bit topical?

-------------------------

anthonymq | 2021-06-14 20:12:48 UTC | #7

Hope you will explain the answer. I only incremented the failed attempts counter üòÖ

-------------------------

nomeata | 2021-06-14 21:12:29 UTC | #8

I won't be able to reveal the answer - this would require a bug to surface, and I don't know of such a bug yet! :-)

-------------------------

skilesare | 2021-06-14 22:04:09 UTC | #9

Could you all work on(or direct me to) the source for the front end asset canister code? It would be interesting to get at the url parsing code that I don't want to have to rewrite.

-------------------------

skilesare | 2021-06-14 22:42:29 UTC | #10

The foundation and ICA should seriously consider something like this with A LOT more ICP in it.  You could fill it with a bunch of cycles and let the foundation be the controller such that when the canister dies it refunds the foundation. (I think that is what happens if I remember correctly).

This tests: the security of the canisters and the security of nodes.  If you $100 million sitting on a node it incentivizes someone to crack open the node and start poking around.  You don't have to start that high...you could increase it every week.  This would go a good way to showing the community that you are confident in the systems.

-------------------------

nomeata | 2021-06-15 07:56:30 UTC | #11

[quote="skilesare, post:10, topic:5159"]
and let the foundation be the controller
[/quote]

Too late, I am not longer the controller of this one. The foundation is free to run their own capture-the-token challenge :slight_smile: 

Otherwise I agree, up-ing the stakes here would be interesting and worthwhile. Although I am not sure how much it proves ‚Äì those running the nodes can trivially get the token out from the node state.

Maybe I should create a second one where someone has to _modify_ the canister state to get the token. This should then be really un-hackable, even with collaboration with individual node providers. And it wouldn‚Äôt be hard to do‚Ä¶

-------------------------

skilesare | 2021-06-15 11:41:36 UTC | #12

> those running the nodes can trivially get the token out from the node state.

Could we get some transparency on this? I'd rather have it be clear how this happens so no one puts a key with significant value on a node than have it be mysterious and cause egg on the face of the project. I have second hand info from a node runner that ‚Äúthey have no way to get in to the machine‚Äù, but I don't think they are very technical.

I'm guessing a tech-savvy person could plug in a monitor, open a repl, dump the wasm memory, and sift through it looking for key like bits.

-------------------------

nomeata | 2021-06-15 12:57:55 UTC | #13

[quote="skilesare, post:12, topic:5159"]
I have second hand info from a node runner that ‚Äúthey have no way to get in to the machine‚Äù, but I don‚Äôt think they are very technical.
[/quote]

I don't know the details either, I must admit, and also think that more clarity would help here. I said ‚Äútrivially‚Äù above in a abstract sense, not ruling out the existence of ‚Äùpragmatic‚Äù restrictions that make accessing the state harder in practice.

-------------------------

nomeata | 2021-06-15 16:42:07 UTC | #14

I had to re-deploy the challenge because of a bug in my code. I updated the post above to point to the new canister.

The ‚Äúold‚Äù canister is still there, and it still holds 1 ICP, but the challenge just got much harder: You now have to somehow _change_ the canister state or code to extract the token (or reverse SHA256). I guess having two challenges isn‚Äôt bad after all :-)

-------------------------

junjing | 2021-07-02 09:55:05 UTC | #15

[quote="nomeata, post:1, topic:5159"]
node providers collaborate
[/quote]

What kind of collaboration is required to achieve this goal? @nomeata 
The Random generation of mainnet is around 4 seconds, one of our plans is try to generate 100 random seeds ahead, and use them randomly - we need to evaluate the risk of such plan.

-------------------------

nomeata | 2021-07-02 11:54:13 UTC | #16

I don‚Äôt think I am the right person to ask here, as I don‚Äôt know much about the practical hurdles of those running nodes to access the state.

My pessimistic assumption would be that at least one node provider is malicious, and will will leak your data, and I would thus not put any data that must be kept secret onto the Internet Computer.

If you want to run something like a lottery, you really shouldn‚Äôt pre-calculate the seed, but only fire the call to `raw_rand()` off after all bets are in. That should then be safe.

-------------------------

nomeata | 2022-03-02 18:50:29 UTC | #17

The canister signature feature is [now enabled](https://forum.dfinity.org/t/canister-signatures-available-to-canisters-on-all-subnets/11240?u=nomeata) system-wide, so the 1 ICP held by the canister is actually redeemable

-------------------------

flyq | 2022-04-21 14:46:06 UTC | #18

Is there any example of transferring icp using canister signature, this challenge is great but too challenging. I want to learn how to build the canister signature in the next steps.

-------------------------

nomeata | 2022-04-23 10:04:08 UTC | #19

No, I don't think there is. Note that this challenge was created before canisters could simply hold and transfer tokens directly, and before we knew we'd be getting ECDSA support. 

The only real implementation of Canister Signatures is in the Internet Identity, and a bit for testing in Haskell in ic-hs.

-------------------------

nomeata | 2023-11-19 21:39:09 UTC | #20

The challenge turned out to be solvable, and has been solved! @mraszyk convinced the canister to set the `certified data` as needed, and was able to make transactions.

Of course, the canister is still running, in case others want to try as well.

(The trick he found isn‚Äôt too surprising in hindsight and nothing new to be worried about. He told me, but I won‚Äôt spoil it :) )

-------------------------

ckMood | 2023-11-19 22:02:54 UTC | #21

Wow, 2 years later there's a find. Congrats @mraszyk! Hopefully this bug gets repaired

-------------------------

