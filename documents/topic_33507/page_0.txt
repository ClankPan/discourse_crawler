M2550 | 2024-07-22 16:08:02 UTC | #1


Hello, I hope this is the right space for this topic.
I have a question regarding the verification of software attached to proposals.

It seems to me that there is a disconnect between the purpose of a proposal and the code attached to it.  In the most extreme case, it seems malicious code could get through the voting process and be automatically executed.  Are there any efforts underway to verify and certify code prior to releasing a proposal for voting?  

I understand this is likely a laborious process requiring human oversight, but the alternative is far worse.  It’s not realistic to expect individuals to check software prior to voting.  In fact, it’s impossible at scale. 

Thanks in advance for the comments.

-------------------------

Severin | 2024-07-23 09:15:29 UTC | #2

[quote="M2550, post:1, topic:33507"]
Are there any efforts underway to verify and certify code prior to releasing a proposal for voting?
[/quote]

There is code review, but that requires trust in the reviewers

[quote="M2550, post:1, topic:33507"]
It’s not realistic to expect individuals to check software prior to voting. In fact, it’s impossible at scale.
[/quote]
That's why you can e.g. follow CodeGov and 'delegate' your checking powers

-------------------------

M2550 | 2024-07-23 14:03:36 UTC | #3

Hey thanks for the reply.  Well, that sounds much worse than I thought.  I was hoping this issue was being worked behind the scenes.  With respect to proposals, by the time they are put out for a vote, it’s too late.  Forget being hacker proof, the front door is wide open.

To me, it seems like the only CONOPS that makes sense is to have the code submitted along with the proposal for verification.  Once verified, it could then be put up for a vote.  Anything less creates a when, not an if, with respect to something bad happening.

I get this could be difficult to implement.  However, the day after something happens, it’s going to seem very foolish not to have had a verification procedure in place.

-------------------------

Severin | 2024-07-23 15:20:18 UTC | #4

[quote="M2550, post:3, topic:33507"]
have the code submitted along with the proposal for verification
[/quote]

Have you looked at proposals? They all contain links to the code along with instructions to verify that the proposed changes actually come from said code

And how would you 'certify' code before proposal? The proposal is the certification logic, no?

-------------------------

M2550 | 2024-07-23 15:42:08 UTC | #5

Yes, that is all true. However it’s not realistic or scalable to place burden of verification on the voting population.  Even if someone finds something, what could they do about it.

There was one idea floated during the Seattle meetup (organized by Bitcoin Renegade).  Jennifer (from Dfinity) proposed creating a group of certifiers which would be paid in ICP to find issues.  

We talked about it and perhaps just like node providers, these folks would provide a verification service in exchange for payment. Votes could be anonymous and once a certain threshold was met, the code/proposal could be approved or rejected.

This might be a place for new developers to cut their teeth, or for people that want to work part time helping the project.
 
I’ll call them Code Warriors, or Hunter Coders :)
The incentives could be weighted so that someone finding something bad, receives more of a reward.

To quote Charlie Munger “show me the incentives, and I’ll show you the outcome.”

-------------------------

wpb | 2024-07-23 17:06:56 UTC | #6

Are you familiar with this forum topic?

The time is now to give it serious consideration to apply if you want to put together a team to participate in technical proposal reviews.  The deadline is in 1 week.

https://forum.dfinity.org/t/grants-for-voting-neurons/32721?u=wpb

-------------------------

BitcoinRenegade | 2024-07-23 18:31:22 UTC | #7

I love this idea. They could even use chat gpt to verify

-------------------------

BitcoinRenegade | 2024-07-23 18:34:46 UTC | #8

I have a quick question. Since there is no need for a firewall, if by a billion to one odds malicious code got through (which i dont think will ever happen) wouldn't the built in capabilities stop malicious code from ruining anything?

-------------------------

Dylan | 2024-07-23 19:20:07 UTC | #9

Related to this topic, here are two recent videos from the NNS team:
[NNS Explained | Verifying NNS Governance Upgrades](https://www.youtube.com/watch?v=BsIg4JZobqU)
[NNS Explained | Verifying SNS Canister Election Proposals](https://www.youtube.com/watch?v=i_ANhb0E1Io)

-------------------------

M2550 | 2024-07-23 22:25:02 UTC | #10


Hey Dylan thanks for the video links.  I guess my response would be that those videos illustrate how potentially bad this is.  Even for folks who know what they are doing, and have the motivation to try and check things, they struggle.  They also take more than ten minutes per proposal. 

By the time proposals make it to voting, it needs to be as close to ‘one click easy’ as possible.  Most people aren’t going to have the skills, patience or motivation to verify things.

I also get that the risks may be acceptable now, given the community size and structure.  However, as things scale, the risks become greater.  Years of Goodwill and trust could be stripped away with a single bad incident. 

All I’m trying to say is that now is the time, when the community is small and composed of fairly technical folks to start thinking about this.

-------------------------

M2550 | 2024-07-23 23:30:29 UTC | #12

I think we need an army of code warriors :-) they swear allegiance to ICP.  They stand between malicious code and the future of web3.  Their motto will be "Return with your laptop, or on it."

-------------------------

wpb | 2024-07-24 04:13:22 UTC | #13

[quote="M2550, post:12, topic:33507"]
I think we need an army of code warriors :slight_smile: they swear allegiance to ICP. They stand between malicious code and the future of web3.
[/quote]

I invite you to join the CodeGov community on OpenChat and read our reviews on IC-OS Version Election and System Canister Management.  If you want to join our army of code warriors, then we might have an opportunity for you on Participant Management, Node Admin, and/or Subnet Management.  Perform reviews for any or these three topics, post your report in the respective thread, and tag @wpb in your report.  If your reviews are impressive, then perhaps we can find a spot for you.  Our deadline for all reviews is 48 hours after the proposal is created in the NNS.

https://oc.app/community/32l35-yaaaa-aaaar-aw57q-cai/?ref=ffpc5-aiaaa-aaaaf-aacva-cai

-------------------------

M2550 | 2024-07-31 16:56:24 UTC | #14

This looks like good news on the code verification effort.

![image|230x500](upload://cf7VLf0KFqiISV8xSMoFBRhwIHw.jpeg)

-------------------------

lastmjs | 2024-08-02 15:23:36 UTC | #15

I believe the NNS needs checks and balances to address problems like this.

A very simple idea would be to not allow any proposals that change code to pass without at least 3-5 different neurons voting.

Allowing unilateral passing, even if the power has been delegated, does not seem wise to me.

-------------------------

