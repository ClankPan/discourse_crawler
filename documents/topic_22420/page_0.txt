NikolasHai | 2023-08-28 08:24:56 UTC | #1

The FI Team will be submitting the following `add canister` proposal this Monday, 2023-08-28. DFINITY plans to vote on this proposal the following Thursday.

## Proposals to be Submitted

```
# Proposal to Add ICP-Index Canister to NNS Subnet

Proposer: DFINITY Foundation

Git Hash: 1c3f9883dd2bd6d36b88ddd4bfe434d1d4372d52

Wasm Hash: 083cf14f68be2ac5bf9213f3d024078600d39e9ddb0be6530dda8aebd665515e

Init Arguments Hash: d954e72837fb2b3b77baba2443e059d44c4c7f7a4e9e983d405af27388b87ff9

## Features

- Add support for accountidentifier based search for transactions of the ICP ledger

## Wasm Verification

git fetch

git checkout 1c3f9883dd2bd6d36b88ddd4bfe434d1d4372d52

./gitlab-ci/container/build-ic.sh -c

sha256sum ./artifacts/canisters/ic-icp-index-canister.wasm.gz

## Argument Verification

didc encode -d rs/rosetta-api/icp_ledger/index/index.did -t '(InitArg)' '(record {ledger_id = principal "ryjl3-tyaaa-aaaaa-aaaba-cai"})' | xxd -r -p > ~/ledger_arg.bin

sha256sum ~/ledger_arg.bin
```

-------------------------

RMCS | 2023-08-28 09:41:29 UTC | #2

Will this be the same canister that is used for testing at the moment? 

https://dashboard.internetcomputer.org/canister/fqyhw-qqaaa-aaaal-acq6q-cai

Also, will all ` operation`s contain valid  `created_at_time`s? Noticed that some were missing on the `Transfer` operation. Canâ€™t recall where exactly.

-------------------------

NikolasHai | 2023-08-28 11:19:25 UTC | #3

Hi,
The canister deployed in this proposal is very similar to the [fqyhw-qqaaa-aaaal-acq6q-cai](https://dashboard.internetcomputer.org/canister/fqyhw-qqaaa-aaaal-acq6q-cai). although the hash of its wasm is not identical.

The `created_at_times` field is optional see: https://github.com/dfinity/ic/blob/master/rs/rosetta-api/icp_ledger/index/index.did.

-------------------------

RMCS | 2023-08-28 18:52:30 UTC | #4

Yes i noticed it was optional, but for a `Transfer` operation i would expect that this data is always filled. What could be the reason that this isn't filled? Is this an arg that need to be filled on the transfer call?

-------------------------

NikolasHai | 2023-09-08 11:02:52 UTC | #5

If you look at the ICRC-1 standard, more specifically the section on [deduplication](https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-1/README.md#transaction-deduplication-), you can see that the `created_at_time` field is used to deduplicate transactions in a certain time window. If a user is fine with their transaction not being deduplicated they can simply leave the field as `None`. The ledger will then not check whether the transaction has already been seen in the transaction window. If however, a user wants to make sure a certain transaction is only processed once during a transaction window, they would use the `created_at_time`. This is for example useful in asynchronous client-server environments during crash-recovery operations. 

I hope this answers your question.

-------------------------

NikolasHai | 2023-09-28 10:45:38 UTC | #6

The ICP Index canister is live at [qhbym-qaaaa-aaaaa-aaafq-cai](https://dashboard.internetcomputer.org/canister/qhbym-qaaaa-aaaaa-aaafq-cai)

-------------------------

peterparker | 2023-09-28 11:06:51 UTC | #7

[quote="RMCS, post:2, topic:22420"]
Also, will all ` operation`s contain valid `created_at_time`s? Noticed that some were missing on the `Transfer` operation. Canâ€™t recall where exactly.
[/quote]

Not clear to me neither so I just started a particular thread about this question @RMCS ðŸ‘‰ https://forum.dfinity.org/t/icp-index-canister-created-at-time-timestamp/23370

-------------------------

RMCS | 2023-10-10 09:51:33 UTC | #8

@NikolasHai This is something we sometimes run into, any idea what it could be?

https://forum.dfinity.org/t/icp-index-canister-get-account-identifier-transactions-runs-into-message-execution-error/23641?u=rmcs

-------------------------

