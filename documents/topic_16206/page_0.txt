peterparker | 2022-10-28 09:15:59 UTC | #1

Do you commit the `src/declarations` folder and content of your dapp in your repo?

I always do so but, notice that the dfx starter kit doesn't and adds the folder to the list of `.gitignore` patterns. So curious to know what's the common practice here.

-------------------------

Severin | 2022-10-28 09:28:40 UTC | #2

The reasoning I always hear is that automatically generated stuff should most likely not be committed since it can be reconstructed trivially

-------------------------

peterparker | 2022-10-28 09:41:10 UTC | #3

I share the reasoning but it is not always applied in practice. e.g. in Capacitor projects it's a best practice to commit the autogenerated files, this mostly for maintainability reason. That's why I am curious to gather some feedback of dapp devs.

But you are for sure right, I might be the only one that does so currently.

-------------------------

cryptoschindler | 2022-10-31 14:18:26 UTC | #4

I commit them because sometimes I put declarations from other projects in there as well.

-------------------------

peterparker | 2022-10-31 15:17:42 UTC | #5

That's a good point 

In addition, I personally commit the declarations for:

- maintanability reason because it is sometimes handy to just check if anything as changed in the declarations

- generating proper declarations for my code need some more steps - like formatting with prettier and duplicating the js files to mjs so that I can run these in NodeJs scripts. Likewise commiting declarations guarantee that these steps are in sync

- it's also a way to make the did files public

- finally it's kind of easier for the community to checkout and try out my dapps if the declaration are already there - i.e. only the backend needs to be deployed and the dapps can be run as it

But again, that's maybe just me and why I started this thread.

-------------------------

cryptoschindler | 2022-10-31 15:52:08 UTC | #6

Also very valid points and I agree on them

-------------------------

kpeacock | 2022-10-31 19:27:53 UTC | #7

I'm also pro committing the declarations, and I agree with @peterparker 's reasons above

-------------------------

chenyan | 2022-11-11 22:28:49 UTC | #8

These are all good points. I want to provide some reasons for not committing the declarations:

* To avoid the confusion that you can edit the files in `declarations`. With the default setting, `dfx build` or `npm run build` will always overwrite everything inside `declarations`. If you change some files there, it silently gets overwritten. This feature can be disabled by editing `packages.json`, but it can be hard for beginners to find out.
* If you want to commit the declarations directory for read-only purposes, you can always do so by updating the `.gitignore` file. The intention for not committing declarations in `dfx new` template was to avoid the confusion above.

-------------------------

peterparker | 2022-11-12 07:31:17 UTC | #9

[quote="chenyan, post:8, topic:16206"]
To avoid the confusion that you can edit the files in `declarations`.
[/quote]

Should we add a comment in each file?

```
/**
 * WARNING: Do not edit - this file is generated automatically by dfx
**/
```

I get your point @chenyan, these are reasonable thoughts but, as I said above, from a practical point of view, I think personally that they should not be excluded per default.

Anyhow, I opened a discussion / feature request. Does think it's a good idea, welcome to upvote. Does think it's a bad idea, welcome to downvote.

ðŸ‘‰ [https://github.com/dfinity/sdk/discussions/2764](https://github.com/dfinity/sdk/discussions/2764)

-------------------------

chenyan | 2022-11-12 17:31:34 UTC | #10

I am also hesitated to add the `Do not edit` warning, as we do expect some projects to edit the files there, especially `index.js` to control how you want to setup the agent. You can disable the overwriting by editing `packages.json`.

I think the question here is that in the default setting, should we include `declarations` or not. There are arguments for both directions, and users can always choose to go a different route than the default setup. As a starting point, maybe a good documentation can already help?

-------------------------

peterparker | 2022-11-13 05:55:21 UTC | #11

[quote="chenyan, post:10, topic:16206"]
I am also hesitated to add the `Do not edit` warning, as we do expect some projects to edit the files there, especially `index.js` to control how you want to setup the agent. You can disable the overwriting by editing `packages.json`.
[/quote]

Makes sense.

[quote="chenyan, post:10, topic:16206"]
As a starting point, maybe a good documentation can already help?
[/quote]

Not sure, sounds more like something that the code explains itself.

Anyhow, that was just my practical two cents.

-------------------------

