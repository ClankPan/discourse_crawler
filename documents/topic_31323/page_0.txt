marcpp | 2024-05-29 15:38:00 UTC | #1

Hi,
I'm trying to make this code work, to fetch the ICP balance from a principal:

```
import { createAgent } from "@dfinity/utils";
import { LedgerCanister, AccountIdentifier } from "@dfinity/ledger-icp";
import { Principal } from '@dfinity/principal';

...

const agent = await createAgent({
  identity,
  //host: HOST,
});
  
const { accountBalance } = LedgerCanister.create({
  agent,
  canisterId: process.env.CANISTER_ID_ICP_LEDGER_CANISTER,
});

const accountIdentifier = AccountIdentifier.fromPrincipal({
  principal: Principal.fromText(principal),
  //subAccount: principalSubaccount
});
  
let balance = await accountBalance(accountIdentifier);
console.log(balance);
```
as mentioned [here](https://github.com/dfinity/ic-js/tree/main/packages/ledger-icp#usage).

I've debugged everything until the *accountIdentifier* (I know that it is correct); However, now I get the following error from the *accountBalance* method:
> Buffer is not defined

![image|690x73](upload://amqZDmu4FJXaqhO0kPKSw4VAcul.png)

![image|690x401, 50%](upload://7zUz8bV5kKyyQOG5ExgG8ppXAnt.png)

That appears to come from the **@dfinity/ledger-icp** library ([this line](https://github.com/dfinity/ic-js/blob/0e762d9405c1f58ccfae2af6e73cab5214ed44d0/packages/ledger-icp/src/account_identifier.ts#L14)), so I have no idea how do debug further.

Any idea?
Thanks!

-------------------------

asjn3e | 2024-05-29 16:02:27 UTC | #2

Hey, try to install these packages from NPM.
if after installation still does not work, lemme know
> "buffer": "^6.0.3",
>     "buffer-crc32": "^0.2.13",
>     "crypto-js": "^4.1.1"

-------------------------

peterparker | 2024-05-29 16:24:00 UTC | #3

[quote="asjn3e, post:2, topic:31323"]
Hey, try to install these packages from NPM.
[/quote]

You actually probably just need `buffer` and depending of your framework, need to polyfill it accordingly.

For example in SvelteKit I do this for production: [https://github.com/dfinity/oisy-wallet/blob/1ec8138c1098d2e754eb559a1a29606cd0334971/src/frontend/src/routes/%2Blayout.ts#L5](https://github.com/dfinity/oisy-wallet/blob/1ec8138c1098d2e754eb559a1a29606cd0334971/src/frontend/src/routes/%2Blayout.ts#L5)

There are also plugins for most common bundlers that polyfill nodejs dependencies (but they do not always work in my experience).

Note that the ultimate goal for agent-js and ic-js, I think, is to get rid of this requirement which solve both the polyfill pain and will reduce properly the bundle size.

-------------------------

