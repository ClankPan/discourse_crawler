kristofer | 2024-05-14 10:59:04 UTC | #1

Hi, 

I'm adding support for EVM chains other than Mainnet and Sepolia to my app. Using Alchemy as a custom provider works great while developing locally. When running on mainnet I run into issues and wonder if someone has ideas for workarounds. 

### 1. Alchemy reqs per second quota exceeded

The Alchemy endpoint only allows 10 calls per second on the free tier. Upgrading to the next tier allows 15 I believe, still not enough as IC sends 20+ requests per EVM call. Upgrading to the enterprise tier is waay to expensive.

### 2. Consensus not reached after implementing a proxy

I thought I could solve it by setting up a caching cloudflare proxy. This works great! Identical requests are cached and the Alchemy limits are respected. 

But.. Cloudflare don't send 100% identical headers on the responses even though the body is the same. So, the EVM_RPC canister don't believe there is consensus among the responses: 

`Canister http responses were different across replicas, and no consensus was reached`

And since I can't modify the `transform()` function of the EVM_RPC canister I can't instruct it to ignore the headers that differ.

Remains to skip the EVM_RPC canister and call the Alchemy API directly. If possible I want to avoid that as it means reimplementing a lot of what is already in the EVM_RPC canister: request/response serialization/deserialization, error handling, etc.

Ideas anyone?

-------------------------

b3hr4d | 2024-05-14 12:25:06 UTC | #2

If you decided to
[quote="kristofer, post:1, topic:30746"]
skip the EVM_RPC canister and call the Alchemy API directly.
[/quote]

you can use this [tutorial repo](https://github.com/b3hr4d/eth_payment_tutorial/tree/main) to getting started, it handles the request/response and serialization/deserialization using serde.

-------------------------

kristofer | 2024-05-14 12:33:44 UTC | #3

Thanks. Yeah, that would be the last resort. I would like to use the EVM_RPC canister if possible though as a lot of work already have gone into creating that implementation.

-------------------------

kristofer | 2024-05-14 13:45:26 UTC | #4

Adding to above issues. I thought caching was working. But, since the requests from the IC nodes are coming in from all over they are hitting different Cloudflare datacenters with different caches. So, 90% of requests are not cached.

Plus, since all requests are sent almost at the same time (within a few ms), even the requests sent to the same datacenter are mostly not cached because of .. there being nothing to cache yet. 

If anyone have managed to use the EVM_RPC canister successfully with other chains than Mainnet and Sepolia I'd like to know how :slight_smile:

-------------------------

kristofer | 2024-05-14 20:41:13 UTC | #5

So, I managed to sort this out writing a new Cloudflare Worker, this one using Durable Objects to both proxy, cache and deduplicate the requests to the EVM RPC.

For reference, if someone else runs into similar issues:

https://github.com/c-atts/evm-proxy-2

-------------------------

cryptoschindler | 2024-05-15 06:50:59 UTC | #6

Maybe @rvanasa can help?

-------------------------

rvanasa | 2024-05-21 14:57:22 UTC | #7

Hi! Apologies for the delayed response. 

> Cloudflare donâ€™t send 100% identical headers on the responses even though the body is the same. So, the EVM_RPC canister donâ€™t believe there is consensus among the responses:

The EVM RPC canister discards all HTTP headers in the transform function ([relevant source code](https://github.com/internet-computer-protocol/evm-rpc-canister/blob/87f6287e0d15432e045c08d5be8af85553b545d2/src/http.rs#L115)). Are you sure that this is caused by the headers rather than the JSON body or status code? If you send me the URL in a direct message, I could help investigate (although will be very busy for the next few weeks).

> ... since I canâ€™t modify the `transform()` function of the EVM_RPC canister I canâ€™t instruct it to ignore the headers that differ.

For anyone reading this who wants to contribute a bugfix or improvement, feel free to open a PR at the [EVM RPC GitHub repository](https://github.com/internet-computer-protocol/evm-rpc-canister) so we can potentially merge your changes into the official canister. 

> If anyone have managed to use the EVM_RPC canister successfully with other chains than Mainnet and Sepolia Iâ€™d like to know how :slight_smile:

We are planning to release first-class support for L2 chains later this week! If you end up trying it, definitely let us know if you encounter any issues so we can improve the experience for everyone.

-------------------------

kristofer | 2024-05-21 17:10:28 UTC | #8

Thanks for the reply! The caching Cloudflare deduplication proxy (!) I came up with did work well as a workaround but is not the ideal solution for the longterm. ðŸ˜‚

[quote="rvanasa, post:7, topic:30746"]
We are planning to release first-class support for L2 chains later this week! If you end up trying it, definitely let us know if you encounter any issues so we can improve the experience for everyone.
[/quote]

Looking forward to this and will definitely try it out ASAP for [Câ€“ATTS](https://catts.run/)! Optimism, Base and Arbitrum are my top wishes.

-------------------------

rvanasa | 2024-07-15 16:22:36 UTC | #9

For anyone reading this who might be unaware, we released support for Arbitrum, Base, and Optimism L2 chains as part of the EVM RPC canister back in May. Cheers!

-------------------------

