shalexbas | 2021-06-13 19:31:14 UTC | #1

Hey guys,

I really like that dfinity created Motoko with features specific to IC and I really would like prefer it instead of Rust but I think that someone with knowledge about language tooling creation (dfinity or other devs) should make some great tooling for this language in the near future (safe refactoring like in Intellije for Java, quick navigation between files, parameter hints, extract method, etxtract variable, change signature, show infered type, code formatting, error visualizer, ...) otherwise lot's of devs who are accustomed to enterprise software-development will just use Rust because there are already great tools available (like IntelliJ Rust).

-------------------------

nomeata | 2021-06-14 09:57:32 UTC | #2

Not all of it, but a lot is already by the Language Server Protocol for Motoko, and [the VSCode extension](https://marketplace.visualstudio.com/items?itemName=dfinity-foundation.vscode-motoko). Did you try these?

But yes, there is always a lot left to do :-)

-------------------------

shalexbas | 2021-06-14 21:43:31 UTC | #5

Yeah I tried it out, I had some beginner issues (needed to restart language service more often and had to import other .mo files in main actor otherwise they won't be analyzed for errors) but now it looks a lot better than my first impression. But still some very important features need to be done like code formatter, better "go to definition" support (currently not working with local methods or in import statements), better refactoring support.

-------------------------

