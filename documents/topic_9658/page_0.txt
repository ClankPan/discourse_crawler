Litzi | 2021-12-14 11:18:31 UTC | #1

I've created a [ticket on Github](https://github.com/dfinity/internet-identity/issues/491) with this question. But then realised it's probably better to bring it here.

From [webauthn.guide](https://webauthn.guide/#registration):

> challenge: The challenge is a buffer of cryptographically random bytes generated on the server, and is needed to prevent "replay attacks".

From the [specs](https://w3c.github.io/webauthn/#sctn-cryptographic-challenges):

> As a cryptographic protocol, Web Authentication is dependent upon randomized challenges to avoid replay attacks. Therefore, the values of both PublicKeyCredentialCreationOptions.challenge and PublicKeyCredentialRequestOptions.challenge MUST be randomly generated by Relying Parties in an environment they trust (e.g., on the server-side), and the returned challenge value in the client’s response MUST match what was generated. This SHOULD be done in a fashion that does not rely upon a client’s behavior, e.g., the Relying Party SHOULD store the challenge temporarily until the operation is complete. Tolerating a mismatch will compromise the security of the protocol. 
> In order to prevent replay attacks, the challenges MUST contain enough entropy to make guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.

But the implementation is not random:

[`createOptions`](https://github.com/dfinity/internet-identity/blob/86e867acce5a0c0e4b35a8dcf9269a8014283c7f/src/frontend/src/utils/iiConnection.ts#L389) used in [`register`](https://github.com/dfinity/internet-identity/blob/86e867acce5a0c0e4b35a8dcf9269a8014283c7f/src/frontend/src/flows/register.ts#L62)

-------------------------

cryptoschindler | 2021-12-15 17:59:31 UTC | #2

answer is here:
https://github.com/dfinity/internet-identity/issues/491#issuecomment-993830672

-------------------------

