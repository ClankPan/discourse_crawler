lukevoz | 2023-09-18 20:38:56 UTC | #1

Hi,

I am trying to generate a unique address (principal) for each user so I can display it in the front end and the user can send ckBTC token to this address.

I tried to search for solutions and couldn't find any. The closest I got was with this code that I found in [this thread](https://forum.dfinity.org/t/completed-icdevs-org-bounty-26-icrc-1-motoko-up-to-10k/14868/34?u=lukevoz):

```
  public type Account = { owner : Principal; subaccount : ?Blob };

  public shared (msg) func getDepositAddress() : async Text {
    let acc : Account = {
      owner = Principal.fromActor(this);
      subaccount = ?Principal.toBlob(msg.caller);
    };
    return Account.toText(acc);
  };
```

However, it is trapping when I call the function because of this assertion in the [Account.mo](https://github.com/dfinity/ICRC-1/blob/main/ref/Account.mo) module.
```
assert (subaccount.size() == 32);
```

Please, do you have a working example somewhere? I feel like this should be really straightforward but I spent a couple of hours on it and couldn't find a solution for this use case.

-------------------------

zohaib29 | 2023-09-18 23:19:25 UTC | #2

The principal is up to 29 bytes, that's why the assertion failed
You can try: [toSubAccount]( https://github.com/letmejustputthishere/ckbtc-payments/blob/2628ac097431753a295d049b5945167ef57cd1ed/src/fortune_cookie_backend/utils.mo#L11C8-L11C8)

-------------------------

lukevoz | 2023-09-19 07:36:56 UTC | #3

Thanks a lot @zohaib29, this works for me. I put together a small working example that generates subaccount for each caller and then verifies balance of it in case this can be helpful for anyone:

https://m7sm4-2iaaa-aaaab-qabra-cai.ic0.app/?tag=372838302

-------------------------

Mercury | 2023-10-12 07:58:07 UTC | #4

Hey @lukevoz , nice solution. Once your customers know where to send their BTCs, do you let them choose their preferred on-ramp provider, or do you forward them to a provider you've partnered with?

-------------------------

lukevoz | 2023-10-12 08:38:49 UTC | #5

Hey @Mercury, thanks for your message. Yeah the way it currently works is we display the address to the user (and a QR code) and the user can pay it from any wallet he/she wants and once the payment is done user can click the button to verify it through the backend. You can see the current design in the picture attached.

![nostric pro|414x500](upload://h98b7gttZOzJg0J7fXLI3ky2Jh0.jpeg)

-------------------------

Mercury | 2023-10-12 08:46:15 UTC | #6

Nice. Any plans to integrate a (web3/web2) KYC / KYB provider ? Yes, IC 's current partner handles KYT for IC, but it's IC 's users who're liable for KYC/KYB, meaning us, the BUIDLers :)

-------------------------

