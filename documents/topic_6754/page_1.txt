saikatdas0790 | 2023-12-03 06:37:08 UTC | #101

Are there any plans to eventually merge standard query calls and composite query calls so that these functions implemented in the cansiter are the same?

Also any stats/insight on adoption of this current feature by dapps on mainnet? I'm curious to understand if other IC developers are finding the ergonomics of this API manageabe

-------------------------

domwoe | 2023-12-04 13:06:24 UTC | #103

[quote="saikatdas0790, post:101, topic:6754"]
Also any stats/insight on adoption of this current feature by dapps on mainnet? I’m curious to understand if other IC developers are finding the ergonomics of this API manageabe
[/quote]

The most impressive application of composite queries that I've seen is RuBaRu (cc: @raj.rubaru)

https://medium.com/dfinity/rubaru-a-fully-on-chain-creator-consumer-economy-1d9e13f7238e

-------------------------

saikatdas0790 | 2023-12-05 05:43:22 UTC | #104

Yeah, this API benefits the asset storage use case quite well. And any sort of fan-out analytics querying architecture. Considering you have an aggregator canister on that subnet.

But the DX is kinda annoying having to write separate queries intended for agents vs canisters when a particular query is intended for both. And it doesn't work for cross subnet calls. So, quite limited for a generic use case

-------------------------

ulan | 2023-12-05 12:54:59 UTC | #105

[quote="bytesun, post:98, topic:6754"]
In my case, I have NFT metadata in one canister(A), and assets in another canister(B), I would like one query to get all information(metadata and assets), which means query call A → query call B, it doesn’t look like can be done by this implement, right?
[/quote]

I think it should work as long as you mark the queries as composite queries and the initial query is done by the client (JS code or dfx).

-------------------------

gravity_vi | 2023-12-08 11:50:30 UTC | #106

This post solved my problem :tada:

-------------------------

