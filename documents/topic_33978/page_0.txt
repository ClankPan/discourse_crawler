AnasMadi | 2024-08-07 16:48:31 UTC | #1

# **IC-PayPortal - Comprehensive Payment Module for Motoko**

## **Project highlights**

IC-PayPortal is a module for Motoko that provides developers with a set of functions for managing fiat payments on the Internet Computer Protocol (ICP). The target users are developers building applications on the ICP who need to integrate payment solutions seamlessly. The project addresses the need for secure, reliable, and easy-to-implement payment processing.

## **Features**

* 📲 **Payment Gateway Integration:** Supports integration with popular payment gateways like Stripe and PayPal.
* 🔄 **Payment Processing:** Handles tasks such as creating payment requests, verifying transactions, and handling callbacks.
* 🔒 **Secure Transactions:** Adheres to best practices in payment security.
* ⚙️ **Error Handling:** Includes robust mechanisms to handle exceptions and provide meaningful error messages.

## **How to install**

1. Clone the git repository:



```
git clone https://github.com/Expeera/IC-PayPortal/tree/phase-3
```

2. Navigate to the project directory and install dependencies:



```
cd IC-PayPortal
npm install
```

3. Start the local Internet Computer environment:



```
dfx start --clean
```

4. Configure the fiat canister's owner before deployment, and update Stripe's `secret_key` and PayPal's `client_id` and `client_secret` in the `service.mo` file.
5. Deploy the canisters:



```
dfx deploy --network local
```

For deployment on the Internet Computer network, use:



```
dfx deploy --network ic
```

6. Update the `config.mo` file with the new assets canister ID and redeploy.
7. Generate TypeScript types:



```
npm run generate:types
```

8. Start the development server:



```
npm run dev
```

9. Run tests:





```
sh test/demo.sh
```

## **Usage Example**

### Creating New Invoice



```
let invoice = IC_PayPortal.create_invoice({
    paymentMethod: "Stripe",
    currency: "USD",
    items: [/* items details */],
    amount: 1000
});
```

### Changing Invoice Status



```
let status = IC_PayPortal.change_invoice_status({
    invoiceNo: invoice.id,
    paymentMethod: "Stripe",
    isSuccess: true
});
```

### Getting User Invoices



```
let invoices = IC_PayPortal.get_my_invoices();
```

## **Documentation**

For full documentation, please visit our [GitHub repository documentation section](https://github.com/Expeera/IC-PayPortal/tree/phase-3#readme).

## **Dependencies**

* IC SDK latest version
* NodeJS version >= 16
* mops (Motoko package manager)

## **License**

IC-PayPortal is open-sourced under the MIT License. For more details, refer to the [LICENSE file](https://github.com/Expeera/IC-PayPortal/blob/phase-3/LICENSE).

## **Resources**

* **GitHub Repository:** https://github.com/Expeera/IC-PayPortal/tree/phase-3
* **Live Demo:** https://3356i-cqaaa-aaaao-axdqa-cai.icp0.io
* **YouTube Product Pitch Video:** https://youtu.be/E3MfxbHCTGY

## **Future Plans**

* **Feature Additions:** Enhance support for more payment gateways and add multi-currency support.
* **Conferences:** Plan to present at upcoming blockchain and decentralized application conferences.
* **Grants:** Apply for additional development grants to further expand the project capabilities.

-------------------------

