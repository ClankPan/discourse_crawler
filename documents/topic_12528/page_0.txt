lastmjs | 2022-04-29 17:46:55 UTC | #1

I'm working on this problem in conjunction with @dostro and @Litzi from Internet Identity Labs. It is our opinion that the Internet Identity system has a major security vulnerability that should be addressed immediately. This was discussed at length in this [thread](https://forum.dfinity.org/t/internet-identity-lack-of-security/9144), and assuming the facts stated are accurate, [this attack](https://forum.dfinity.org/t/my-nns-has-been-stolen-please-help-me/7896) may have been prevented with the fix we are proposing.

Currently all devices attached to an Internet Identity anchor have equal capability. If any one device is compromised, an attacker can remove all other devices and completely lock the legitimate owner out of their Internet Identity. There is no backstop that a user can rely on to prevent this.

We believe that the first iterative step to address this threat is to promote the seed phrase in capability and importance above other devices. To do this the seed phrase must be entered by the user before removing the seed phrase as a device.

We want to get community feedback and feedback from DFINITY engineers. If there seems to be general agreement, we will either encourage DFINITY to implement the changes themselves, or if necessary create a proposal with the code changes ourselves.

We hereby request comments.

-------------------------

Zane | 2022-04-29 16:12:48 UTC | #2

[quote="lastmjs, post:1, topic:12528"]
To do this the seed phrase must be entered by the user before removing it.
[/quote]

I completely agree, there should also be different level of priviledge for seed phrases and devices.

-------------------------

Roman | 2022-04-29 16:13:27 UTC | #3

You are so right @lastmjs, so right.

-------------------------

vavram | 2022-04-29 16:14:15 UTC | #4

Strongly agree that II security needs to be improved, it's actually the main reason I only login from a computer currently which I trust a lot more in terms of security compared to a smartphone or tablet. In rare cases I need to use my smartphone to login to some dApp i make sure to remove the mobile device from the list of approved devices as quickly as I can.

Having said that, I think a logical solution would be to have different permissions for devices allowing users to set specific devices with administrative rights to change list of approved devices or to add/remove seed phrases.

-------------------------

lastmjs | 2022-04-29 16:21:27 UTC | #5

[quote="lastmjs, post:1, topic:12528"]
We believe that the first iterative step to address this threat
[/quote]

We agree there are possibly better yet more complicated solutions to the problem. We aren't interested in discussing those here, we just want to do something quick and simple to address the threat immediately.

Because seed phrases are generally immutable on all other blockchains, and there is already a culture of those being the absolute final backstop to crypto security, it makes sense to choose that as the default elevated device for now. If you want to change it, you need to own it. We can come up with better rules later.

-------------------------

vavram | 2022-04-29 16:40:30 UTC | #6

As the user **coteclaude** notes in the thread you linked, seed phrases stored in plain text are not a secure way though and can also be easily lost or corrupted especially by the average user as opposed to having selected admin devices limiting the surface of the attack vector.

https://forum.dfinity.org/t/my-nns-has-been-stolen-please-help-me/7896/208

-------------------------

ayjayem | 2022-04-29 16:42:46 UTC | #7

Couldn’t agree more with this proposal. Many thanks for reinitiating this conversation.

-------------------------

Desinternauta | 2022-04-29 16:46:21 UTC | #8

Typing your seed phrase in a computer connected to the internet is considered a bad practice.

I understand the issue and agree this need to be addressed, but I would not be comfortable having to type my seed phrase if I need to replace my device, which I'm pretty sure we all will have to do it sooner or later.

I would be more comfortable to use a hardware wallet, Yubikey or other form of two factor authentication.
Or have to confirm the action from a different device, so 2 devices would need to be compromised for the attack to work.

-------------------------

dostro | 2022-04-29 17:03:12 UTC | #9

To be clear, this proposal is to type your seed phrase *to authorize the removal of that same seed phrase*.

Of course there are other improvements we'll propose over time and your suggestion for a multi-factor confirmation is fantastic, but the one we're proposing here removes an important attack vector that could be enforced as soon as next month (pending community approval and PR).

-------------------------

Roman | 2022-04-29 17:11:30 UTC | #10

Totally. And we have been often told "what if I lose my seed etc", but the seedphrase is generally immutable, just as you said, so waiting for a better solution, I don't think it is crazy to proceed like we do usually : with an seedphrase to preciously keep safe in order to be able to mutate it (by entering it). I have always been in favor of this at least temporary solution. The problem is as old as the II, and I am glad you offer to solve this. I will strongly support it.

-------------------------

vavram | 2022-04-29 17:13:33 UTC | #11

I agree that any added security is a good thing so I would most likely vote in favor if it gets pushed to NNS, still hope more will be done sooner than later.

-------------------------

skilesare | 2022-04-29 17:38:50 UTC | #12

This breaks one of the ways Origyn is using II at the moment.  For technically unsavvy users origyn creates IIs for them and stores seed phrases securely(non-digital format). The users adds their device with help, but Origyn has a way to recover the account if necessary.  Of course, they have to trust Origyn.  When they feel ready to take full custody of their account they remove the Origyn seed phrase and create their own(but they do not have access to the old one...it is on paper in a safe location).  This was mostly done for early investors and employees with little to no crypto experience. Origyn is in the process of unwinding this process and doesn't plan to use it going forward, but it is a way the II can be used in its current incarnation.  If this change is made, it should be a go-forward change.

-------------------------

wpb | 2022-04-29 17:42:00 UTC | #13

[quote="lastmjs, post:1, topic:12528"]
We believe that the first iterative step to address this threat is to promote the seed phrase in capability and importance above other devices. To do this the seed phrase must be entered by the user before removing it.
[/quote]

When I first read this comment I was thinking you were intending for the seed phrase to be entered to remove any configured device and the seed phrase.  I see @dostro offered clarification that the focus is just on entering the old seed phrase in order to delete the old see phrase.  This makes sense too.  I think I also like the idea of entering the seed phrase to delete any device.  Is that feasible or do you consider that to be scope beyond your proposal?

I do like this idea overall.  I would be much more comfortable knowing that I have the ability to recover if someone gains access to any one of my devices.

Also, I just want to say how impressed I am with the idea that you all are pursuing this full stop including the possibility of creating a proposal that would implement code changes.  This would be a major milestone for the IC to have someone in the community actually go through the full process of developing and implementing code changes via the NNS.  I would love to see that happen...safely of course.  I'm sure this would be done transparently in a way that enabled Dfinity to review before the proposal is submitted so they can vote No of they find a flaw in the code.  I have no doubt that you three will be able to accomplish the goal safely, but it would be nice to know that Dfinity would have the ability to cast votes to reject if they feel it is needed.  It would be pretty exciting to see this implemented as a community developed change.

-------------------------

bjoern | 2022-04-29 17:52:53 UTC | #14

As described before (but I cannot find it right now), I think the right way to build this feature is by allowing two levels of security for public keys: "more secure" public keys can add/remove any public key; "less secure" public keys cannot add/remove "more secure" public keys. That is a strict generalization of the functionality proposed here, but it also allows other setups – such as a redundant setup with two "more secure" devices.

Beyond that, it's merely a matter of prioritization.

EDIT: In our day-to-day support, we have repeatedly dealt with cases where users simply forgot or lost their seed phrase. So this should be an optional feature that can be activated on anchors, not a general feature of recovery phrases in Internet Identity.

-------------------------

lastmjs | 2022-04-29 17:50:48 UTC | #15

@skilesare @bjoern I think it's reasonable to make this an opt-in feature and the default moving forward.

-------------------------

lastmjs | 2022-04-29 17:52:57 UTC | #16

[quote="wpb, post:13, topic:12528"]
This makes sense too. I think I also like the idea of entering the seed phrase to delete any device. Is that feasible or do you consider that to be scope beyond your proposal?
[/quote]

I think this is beyond the scope of the proposal. My gut reaction would be to avoid that, since you really should never be entering a seed phrase into a device connected to the internet.

But again there are many ways to improve the situation, but we want to get the minimum viable fix out soon, this vulnerability has been haunting me for too long.

-------------------------

dostro | 2022-04-29 20:26:08 UTC | #17

Good point on making it opt-in, perhaps something like this?

Opt-in checkbox upon seedphrase generation
![Screen Shot 2022-04-29 at 1.07.28 PM|306x500](upload://1sj3g5ZlHCEHFjWGku68cQrf2Tf.png)

No change to Anchor Management screen
![Screen Shot 2022-04-29 at 1.20.20 PM|298x500](upload://q50nGTEyuOorP808Rce2QY8w2jG.png)

Instead of simply allowing user to delete their seedphrase and if user opted-in to seedphrase re-entry prior to deletion, force re-entry
![Screen Shot 2022-04-29 at 1.19.47 PM|298x500](upload://hVw5RV3R7PjAgaEwtSzPTWPIhdK.png)

-------------------------

lastmjs | 2022-04-29 20:30:29 UTC | #18

I think it's important that you can opt-in to the seed phrase confirmation for removal on an already-created seed phrase.

-------------------------

dostro | 2022-04-29 21:23:51 UTC | #19

Makes sense, we could do something like adding an icon to the recovery phrase row and on click, display a similar modal to the one for "Remove Seedphrase" that describes what this would do.
![Screen Shot 2022-04-29 at 2.20.35 PM|298x500](upload://k53sVids5y8dnxxVv9BbLTnajGd.png)

-------------------------

Ori | 2022-04-29 23:46:43 UTC | #20

Bjoern’s comments on this from a previous thread:

[quote="bjoern, post:5, topic:10377"]
Our current thinking is that we should enable II to support two levels of authentication mechanisms where the “less trusted” mechanisms cannot add/delete “more trusted” mechanisms – but it is the individual user’s choice which mechanisms are marked as “more” and “less” trusted. That way, each user can make their choice according to their own workflow and preference, and in it is still possible to replace “more trusted” mechanisms by specifying multiple ones.
[/quote]

-------------------------

paulyoung | 2022-04-30 05:30:18 UTC | #21

I’m in favor of doing this.

I think it generalizes to “You can only remove a device/seed phrase by proving it’s in your possession”

In the case of both devices and seed phrases, it would mean that you could never remove them if they become lost or stolen. Methods of marking them as such could be introduced but they could also be used by a malicious actor with a compromised device.

-------------------------

Litzi | 2022-04-30 06:26:22 UTC | #22

Good point, just wondering if that already requires to enter the seed phrase?

I would be in favor of no as it is currently unprotected.

-------------------------

Litzi | 2022-04-30 06:32:35 UTC | #23

I think you're absolutely right that two levels are the future proof way of doing this. But it's better to have a simple solution with improved security right now.

This can be moved even further with multi level and more fine grained control over devices. But this will certainly take significantly more time to implement.

We propose this to have a short term solution.

-------------------------

bjoern | 2022-04-30 07:57:27 UTC | #24

I like @dostro's design showing the padlock in the management screen. I think that may be the right way of presenting that to the user.

I don't think it's reasonable to implement an intermediary solution in the backend. The additional complexity over the *opt-in locked* recovery phrase is minimal, but the effort to implement a partial solution and then generalize later may be significant.

For the frontend, things are a bit different. Migration is easier, so we could go with a simplified solution first. But there's actually a variant that has much better security properties than the plain recovery phrase: Using a Ledger hardware wallet with the FIDO U2F app as web authentication mechanism and using that as the recovery key! (You get back-up security since the key is derived from the seed phrase as well, but you never have to enter/read the seed phrase on your computer.) So I think whatever we build for the recovery phrase should also work for that type of setup as well.

@frederikrothenberger @nmattia please also chime in with your perspective on implementation complexity.

-------------------------

daijianlin | 2022-04-30 08:26:03 UTC | #25

I totally agree with this. Very confused: when want to delete the seed phrase, just press the x, and then it disappears right away, that's not good for security.

-------------------------

justmythoughts | 2022-05-01 01:59:15 UTC | #26

@lastmjs 
Here's a situation that would give me pause to approving this proposal.

Let's say I wrote down my seed phrase somewhere, and I lose it. I don't know that it was destroyed, but I know that I lost it. If this proposal passes, I will have no way of generating another seed phrase, and if my seed phrase is found or stolen by someone else, they have access to my account. I will be worried for the rest of eternity that someone will find my seed phrase and do who know what with it.

I think you may want to change the proposal to require that 2 access points must be used to create a new access point, reset a seed phrase, or delete any other points of access to an identity.

If the identity only has 1 access point (the user only has 1 key/device), then a single device can create new access points, reset the seed phrase, and perform all capabilities. Once there are now 2 access points (not including the seed phrase), the user is required to use 2 access points for any of the create/reset/delete access point capabilities.

I'm thinking this would be like Internet Identity's version of 2 Factor Auth.

A few examples:

* I lose my seed phrase -> (I can use two devices to reset it)
* I lose all of my access points -> (I can use my seed phrase to log in and create new access keys)
* I had >= 2 access points and then lose my seed phrase and all of my access points but one -> (You are SOL on creating new access points or resetting your seed phrase, but can still access your identity through this single point of access, better not lose this access point buddy)

I think this does a good job of protecting identities that have done the legwork to create more than one access point into their identity, without screwing those of us that do a great job safeguarding all of our identity keys, but accidentally lose our seed phrase.

-------------------------

justmythoughts | 2022-05-01 02:05:58 UTC | #27

[quote="justmythoughts, post:26, topic:12528"]
I lose all of my access points → (I can use my seed phrase to log in and create new access keys)
[/quote]

One issue/hole I see with my solution above is the case I've quoted, where an attacker could use a seed phrase not to delete devices, but to quickly add enough devices until they meet the 2 device threshold required to lock people out.

I think there's potentially a way to stall such an attack, such as new devices can not vote to delete or reset any old devices for a particular amount of time or a one can only add a 1 new device per week, but I'm wary to go down either of these solutions as they introduce additional complexity.

I'm going to let my concern and idea above just sit for awhile, and maybe the community can find a solution for the situation where I lose my seed phrase.

-------------------------

Based | 2022-05-01 05:06:14 UTC | #28

Also making the yubikeys require a 6 digit pin to log in ontop of touching the physical button

-------------------------

coteclaude | 2022-05-01 05:43:30 UTC | #29

Was like this at first (June 2021) and suddenly stopped asking for the pin.
Would be really great to have this back.

-------------------------

GLdev | 2022-05-01 07:23:39 UTC | #31

First thank you @lastmjs for starting a new thread. I hated the idea of continuing the old one, as the title was extremely misleading. 

Regarding the proposal to make the Seed Phrase somehow "promoted", I have a couple of thoughts:

1. I like the idea of having to confirm possession of an "admin" device to remove devices. (with caveats)
2. I don't like the idea of being forced to use the seed phrase as an admin device. I would prefer to be able to choose what device is promoted as an "admin" device.

Caveats:
- I don't know if it's ok to *force* or make this behavior the default one. I'd prefer this be an opt-in feature.
- While seedphrases have been used as the de facto standard in other blockchains, there are a few things to consider here. First, this seedphrase is generated by a 3rd party, and it is being displayed on your monitor, in your browser. Some users might have a problem with this flow, and I believe it's a reasonable ask to be able to "own" every device you choose to use.
- There are better (IMO) alternatives to the seedphrase. Ledger provides a Fido U2F APP that can be installed on your Ledger, and you can use it as a regular u2f key (like yubikey etc). What's nice about this feature is that the master seed phrase of the Ledger will generate the same u2f keys, allowing you to use a device that can be restored even if lost. Coupled with the fact that Ledger's seed phrase is generated 100% off-line and not displayed on any computer is, IMO, a better solution for security ~~paranoid~~ conscious users.

It would be nice to be able to choose what device is designated as "admin". It would make sense to support more than the default seed-phrase, if it's possible and not too much work to implement.

-------------------------

NickM | 2022-05-01 07:36:35 UTC | #32


Generally in support of this idea moving to next steps.

But like these suggestions too... 

[quote="wpb, post:13, topic:12528"]
I think I also like the idea of entering the seed phrase to delete any device.
[/quote]

[quote="GLdev, post:31, topic:12528"]
I would prefer to be able to choose what device is promoted as an “admin” device.
[/quote]

-------------------------

kusiyo | 2022-05-01 08:15:08 UTC | #33

Can we have two or more seed phrases simultaneously for each II anchor? Then:

1. You must have a seed phrase to delete a device.
2. You must have a seed phrase to delete the seed phrase itself.
3. You must have all existing seed phrases together to generate a new seed phrase.

Now, if one of your seed phrases is stolen, the thief cannot delete your other seed phrases, but you can delete that seed phrase immediately and then generate a new seed phrase.

(Note: A seed phrase is not considered as a device here.)

-------------------------

RatherIcy | 2022-05-01 08:24:57 UTC | #34

respectfully that is really over complicated lol

-------------------------

kusiyo | 2022-05-01 08:52:19 UTC | #35

You can still have just one seed phrase, but if you want, you can make your account much safer by using multiple seed phrases. This can be especially useful for the 8 year gang.

-------------------------

Roman | 2022-05-01 12:24:39 UTC | #36

[quote="GLdev, post:31, topic:12528"]
I hated the idea of continuing the old one, as the title was extremely misleading.
[/quote] 
 
And I am the one who had been accused of being a troll there... From a person who, even months later, after having had bad interactions with several members on that previous thread, takes the time to add fuel to a fire by sneakingly criticizing a guy who left the previous thread because of such an attitude, like several other persons, like @LightningLad91 who does not need to prove his value. I see that the attitude has stayed the same. I left the previous thread, I did not mention what happened there, whereas I was more legit to do it, but you do it, whereas you messed it up. Very odd. Very.

So, according to you, the title was misleading and you praise Jordan's new thread, who says : 
[quote="lastmjs, post:1, topic:12528"]
It is our opinion that the Internet Identity system has a major security vulnerability that should be addressed immediately.
[/quote]

"Lack of security" and "major security vulnerability" mean the same thing, but nevermind... Again, odd logic.

Even after months of this conversation that I also disliked just because of your attitude (to say "hate" like you do sounds a bit a drama to my ear,) you keep going on by mentioning it without any utility to this mention. So since you evoked indirectly me, I answer : I really hope that you won't mess this thread like you did with the previous one, by making leave several persons loyal to the IC, like at least two voting members of the known neurons. And don't hesitate to not answer to me, here, elsewhere.

And everybody knows about the FIDO, but like @diegop, @timo and @skilesare said it multiple times, the FIDO must be completed buy the II seedphrase, because we can't count fully on FIDO.

Maybe you should reread the previous thread.  You know ? The one whose you hated the title, to not propose the same solutions we already states like inaccurate there. To not make us forced to repeat the same counter arguments here, and move forward with real solutions. 

Regards

-------------------------

dostro | 2022-05-01 15:49:16 UTC | #37

**Purpose of this thread**
Internet Identity Labs, a community team building NFID, and in collaboration with Jordan, are willing to devote time and resources from their projects to write the code for this work. 

Our intention is to make one small but mighty iterative improvement, not to how *all* of the Internet Identity service works, but rather *one* very specific component. However much we’d love one or all of these ideas implemented, in practice any of them would take many months to discuss, architect, and implement.

The feature in question is: An opt-in feature where users wanting to remove a seed phrase must first re-enter their seed phrase as confirmation they’re in possession of it (I posted above what it might look like).

We believe this is important for the specific case when an attacker may be in possession of one or more of a user’s authentication device(s) and attempts to lock the user out by removing all other devices, including the seed phrase. If this feature were implemented, the attacker wouldn’t be able to remove the seed phrase, giving the user a fighting chance to regain control of their anchor. 

Of course there is more work to do - What if the attacker knows the seed phrase? What if the user lost their seed phrase? How could device management generally be made more secure? - and Internet Identity Labs is devoted to taking these on over time.

For the immediate term, please respect this topic’s scope:
- 🙏 raise agreement or challenge for an opt-in feature of seed phrase re-entry prior to its removal
- 🙏 backlog out-of-scope questions, ideas, and discussions to new threads
- One technical challenge exists that @bjoern  highlighted must be investigated, which is the consideration that it may be harder to implement a partial solution and generalize later… we’re looking into it

Thank you all for the healthy discussion!

-------------------------

vavram | 2022-05-01 20:32:50 UTC | #39

Losing the seed phrase shouldn’t be a problem if you have devices on top of seed phrase linked to the II, so like @dostro says it’s a good enough temporary solution for users to stand a fighting chance against bad actors.

-------------------------

justmythoughts | 2022-05-01 20:58:21 UTC | #40

[quote="dostro, post:37, topic:12528"]
Of course there is more work to do - What if the attacker knows the seed phrase? What if the user lost their seed phrase? How could device management generally be made more secure? - and Internet Identity Labs is devoted to taking these on over time.

For the immediate term, please respect this topic’s scope:
[/quote]

@dostro 

Totally appreciate the desire to block scope creep, but this is a **community** proposal and not a company driven feature or a PM adding features to a sprint you already have committed to.

Getting support from the community means considering not just one change, but how this might impact future changes and additional issues that may arise as a result of this. It also means at least hearing and considering other solutions and edge cases from the community. This is also the type of support all of us as IC application developers will need to do once we hand governance of our applications over to the SNS.

Requiring entering your seed phrase in order to replace it, means that if you lose your seed phrase there is no seed phrase replacement option. This is directly related to the feature your are proposing being implemented, and so at least considering and planning out how this might be dealt with afterwards is part of the proposal as far as I’m concerned. We don’t want a feature being implemented that has an unpopular side effect with no abstract plan for a solution, especially if the new feature is too “sticky”, or is hard to change, build upon, or revert in the future. Part of rolling out a new feature is also considering whether it is a “one-way door”, or a “two-way door”. In other words, is the change reversible or permanent? - permanent changes require A LOT more planning, design, and critical feedback before going ahead.

You may very well have the “best” solution, and I am by not means as experienced in the security and identity space, but many times software designs and solutions improve the more eyes and feedback they get.

Your comments suggest that you and @lastmjs have defined an issue and a scope before listening to the full list of user/community feedback and will go through with you implementation regardless of feedback, which is sort of the opposite of working backwards from the problem and listening to your customers’ (NNS users) feedback and using that to develop the scope, solution, and UX.

What type of limited feedback scope are you asking for? Affirmation? Security flaws? Might be good to put that in at the top of the initial post topic of you don’t want community suggestions for features.

-------------------------

dostro | 2022-05-02 05:21:49 UTC | #41

I agree with you completely and apologize if my phrasing came across as anything but a very specific suggestion as a topic for this thread, request for its analysis, and now an action item to analyze the long term consequences (originating as a challenge earlier in the thread)

Of course someone (or people) will be involved in surfacing those long term consequences, and hopefully some of the folks mentioned on this thread will have time to give us this input next week, but we could think of things ahead of time - what are your thoughts in the following cases?
- no long term consequences, will be straightforward to make any kind of change in the future
- some long term consequences, will be more difficult to make some changes
- irreversible long term consequences

Of course I understand we can’t yet discuss the second and third points specifically before we know exactly what those are, so perhaps we could start with the first case? What do you think of implementing this feature if there are no long term consequences?

-------------------------

justmythoughts | 2022-05-02 06:05:29 UTC | #42

Thanks for the response and glad we’re on the same page - I get where you’re coming from.

[quote="dostro, post:41, topic:12528"]
* no long term consequences, will be straightforward to make any kind of change in the future
* some long term consequences, will be more difficult to make some changes
* irreversible long term consequences
[/quote]

Here’s what I see as  a few consequences of this feature.

A seed phrase now becomes more powerful than any other type of access point. It can reset the seed phrase, and create and delete other access points. 

Unintended consequences

1. The seed phrase, which is arguably the most hackable (moreso than a biometric or hardware access point), is now the most powerful access point of all. No other access point can reset the seed phrase, but the seed phrase itself can do everything.

2. I am now forced or highly incentivized to create a seed phrase - if I choose to not to set a seed phrase and an attacker gets access to my account, they can create a seed phrase that I do not have access to and I have no recovery mechanism. The first actor to set/wield the seed phrase owns the account.

If one loses their seed phrase, they are totally screwed if someone finds it (and no ability to reset it).

<br/>

We also need to think about all different types of NNS users, such as the more passive “set-and-forget” user, and how this might affect effect their experience logging in to the NNS in 8 years through their phone if they lost their seed phrase and want to generate a new seed phrase. The active user who’s staying up to date with all of these changes will have no problem whatsoever, but with such a change we have to think about all of the II users.

<br/>

Is this a 1-way door?

I’m not sure. I think there’s a way to make this change reversible (say we decide to move in the future to an Internet Identity version of 2-Factor Auth for creating/deleting/resetting access points), but it really depends on how this is designed and implemented in the code.

The more we segment the identity security options (say make this feature opt-in), the harder it becomes to make new features that are backwards compatible.

I think this can completely be done in a way that’s backwards compatible, but I’m just trying to bring up as many edge cases and concerns as I can in order to ensure that whatever change to Internet Identity keeps all of this in mind.

-------------------------

lastmjs | 2022-05-02 13:08:50 UTC | #43

@justmythoughts I want to address some of your concerns. Like @dostro has said we want to keep this conversation scoped, as many people are suggesting ideas that could be great but would be much more complicated or take much more time than the (hopefully) simple fix we are suggesting.

As for your specific concerns about the seed phrase, I have a few points:

1. I personally believe the long-term solution to the central point of failure of the seed phrase is to use some thing like social recovery which splits the seed phrase into shares. These shares can then be stored in different locations or with different users that you trust, and a threshold of them (say 3 out of 5) would be required to restore an account
2. I think it's reasonable that if you can opt-in by typing in the seed phrase, then you could opt-out with the same mechanism, but we'll need to think about it more
3. As a simple fix, I like focusing on the seed phrase as it's already common practice in the world of cryptocurrency to assign the seed phrase as the ultimate backstop, and there is a culture and general know-how on what it takes to secure a seed phrase

Maybe to sum up, we're suggesting that this simple change optimizes for the quickest solution that might drastically increase security, given the current capabilities and vulnerabilities of Internet Identity.

If anyone sees major issues with this specific proposal, please bring them up. And if there are specific suggestions for alternatives that optimize for what we're trying to optimize for, that sounds in scope to me.

What doesn't seem useful to me here is coming up with all sorts of complicated ideas that we obviously want to look at down the line but are out of scope for a quick fix that greatly improves security now.

-------------------------

emmaperetti | 2022-05-02 15:22:07 UTC | #44

hi team, we started a monthly working group meeting on Internet Identity and Authentication: https://forum.dfinity.org/t/working-group-identity-authentication/11902 Come and join us. FYI @frederikrothenberger

-------------------------

nmattia | 2022-05-02 16:16:44 UTC | #45

__This turned out much longer than expected, sorry about that 🤦‍♂️ these are just my 2cts so feel free to just skip it__

Wow, this is a great thread!

I love seeing everyone coming together and discussing features like this. I'm a little late to the party but I'll share some thoughts (the first one being: this thread probably belongs in the [Internet Identity](https://forum.dfinity.org/c/internet-identity/32) category, which dfinitly deserves some love (pun intended)).

There are some points that were brought up in the original "[II Lack of Security](https://forum.dfinity.org/t/internet-identity-lack-of-security/9144?u=nmattia)" post that I think we should keep in mind. The first one is that II was made to be as simple as possible to be flexible, but now it's clear that it is _too_ simple, because it lacks some important security features raised originally by @Roman . The second point was that "seed phrase" really is a misnommer in II land. A "seed" phrase really is some random (unique, immutable) material generated when initializing e.g. a wallet. In II land I think it's more correct to call this a "recovery phrase".

I really like the idea put forward by @lastmjs, and I _LOVE_ that @dostro actually took the time to make mock-ups! What I understand from the original idea is this: If you have a recovery phrase, then you cannot remove said recovery phrase without proving you have the recovery phrase. dostro in your (very welcome) ["sheparding" post](https://forum.dfinity.org/t/immediate-action-to-protect-internet-identity-w-seed-phrases/12528/37?u=nmattia) you suggest we focus on agreeing (or not) on whether this should be opt-in or not (also brought up by lastmjs and others), and bring up bjoern 's worry about whether implementing a "simple" solution now and implementing a full solution later will be costly; I'll share some thoughts on both (again, just my 2cts).

First, **should this be opt-in**? Whatever solution is agreed on here will probably need to be opt-in; at the very least we cannot just make all existing recovery phrases "secured" (i.e. you need the phrase to delete the phrase)  because lots of people (probably myself included 🙈) never actually wrote down the phrase (and we can't just have those people have their single recovery phrase slot be taken by a phrase they don't remember). Basically we need to support (some) backwards compatibility (as also brought up by @skilesare and the Origyn (Orygin?) use case). Either way, looks like everybody agrees: **solution should be opt-in**.

Then, **is it (too) expensive to implement a stopgap solution**? Well, that largely depends on the stopgap solution, the "final" perfect solution, and the engineers who implement it. _And while the Identity Labs are stellar, I can't vouch for those @#* Internet Identity guys!!_

More seriously, it's very likely that whatever solution we come up with will effectively involve "changing the database schema", i.e. changing the data we write to the canister stable memory. This means: an upgrade that can go wrong, potentially no rollback, and potentially shooting ourselves in the foot and regretting it for the next 5 years. So I think we can agree on a stopgap solution, but **before we implement it we will need to have some idea of what the "final" solution will be**, and some idea of how it will be implemented (basically do some thought experiments on what the future stable memory schema will look like and how we can migrate to it as we implement the "final" solution).

Now I'd like to share **some thoughts on other aspects of the proposed solution**. What I gathered from your posts lastmjs and dostro , and I may very well be wrong, is that you are only talking about recovery phrases, and not recovery devices. There are some very good points (I think by @coteclaude and @vavram, and empirical evidence shared by bjoern) that plaintext phrases can be lost and corrupted. But more importantly in my opinion (which appears to be shared by @Desinternauta, @GLdev and bjoern) is that the phrase keeps transiting through the browser and the monitor (on generation and then on input), which makes it subject to theft.

(quick side note: wpd suggested we force the user to input their recovery phrase when deleting _any_ device, not just recovery devices; that's something I thought about as well when reading the thread, but it would mean getting the "secured" recovery phrase in and out of the safe repeatedly, and typing it in the browser, which will be a real hassle _and_ a risk; so I suggest we don't do that)

With all that in mind, I think it's worth thinking about making the recovery _devices_ "secured". bjoern also gives a nice example of how e.g. a recovery _phrase_ can be used on a Ledger device; in this case the user still has a recovery _device_ from II's point of view, but can use an actual _seed phrase_ which is only used on the Ledger device, and not in the browser. My recommendation would then be to _only_ make the recovery _devices_ "secured", and not the recovery _phrases_. I'm sure some people will disagree though, in particular dostro and lastmjs since they explicitly suggest making the recovery _phrase_ secured (and not the device); I'd love to hear examples of workflows and situations where the FIDO device/hardware wallet is not suitable.

Now there are also some great ideas (by @kusiyo and @justmythoughts for instance) that are more complicated (multiple devices, social recovery, etc) and that we should keep in mind for the future (or as I believe dostro puts it: "backlog out-of-scope questions, ideas, and discussions").

Ok I didn't expect this post to be so long and my wrist is starting to hurt so I'll wrap up, but there's one more thing I'd like to bring up, and that's the question of "who will implement this". This is **really exciting** to me because this is the first feature that's really driven by the community. I think as many people as possible should share their (structured) ideas here and in the community chat tomorrow (can someone share the link?). For implementation however, I think DFINITY's policy (at least for NNS and II) has been that **external contributions are not accepted**. I think this makes a lot of sense, because so far virtually no one has submitted patches as far as I know, and because a malicious contribution in either II or NNS (dapp) would be catastrophic for the whole ecosystem.

But then, I don't believe this to be a "hard and fast" rule/policy. I would be uncomfortable knowing that a feature as sensitive as the one suggested here is the first to be contributed externally to a DFINITY team that hasn't had a chance to sharpen their anti-byzantine review skills, **but** it would be a great opportunity to loop the community in. After we've decided on what exactly the solution will be here, the team could for instance deploy a test version of II that everyone can play with and then feedback can be shared here. Basically, while DFINITY will probably be writing the actual code, it would be awesome if everyone could still be working on this.


(note, these are just my own 2cts)


(P.S.: Actually a great first external contribution would be a patch that replaces all the occurrences of "seed phrase" with "recovery phrase")

-------------------------

dostro | 2022-05-02 17:35:22 UTC | #46

Thank you for this elaborate input! Really like the `recovery phrase` terminology instead of `seed phrase`

I'm operating under two assumptions: 
* The ability for users to remove their `recovery phrase` without *some* kind of confirmation is too dangerous a threat to leave open any longer than it needs to be
* An opt-in feature where a recovery phrase must be resubmitted can be done without introducing breaking or irreversible changes

Are you in disagreement on the first, given your suggestion to secure recovery *devices*, and what does that mean exactly? Anyone else disagree with this first assumption?

Is anyone in disagreement on the second assumption - that the optional enhancement of security without introducing breaking or irreversible changes (and approved by more eyes, inclusive of dfinity's II team) - makes this feature an attractive trade-off between time to implement and positive security effect? Some of our team started researching the exact change requirements and as a first step will summarize here the effects on the stable memory schema when they're done. We've yet to receive any other technical input, but expect to hear from dfinity's II team soon. And please do join tomorrow's working group session @emmaperetti [suggested](https://forum.dfinity.org/t/immediate-action-to-protect-internet-identity-w-seed-phrases/12528/44?u=dostro) - this will be a topic of conversation!

Btw we've introduced one small feature to II as external contributors - developers have the option to open II in a new tab or new window as of `dfinity/agent 0.11.0`. Here's how it looks in a new window:
![Screen Shot 2022-05-02 at 1.15.06 PM|333x500, 50%](upload://oHjC7T9LpQPHTNTb7D1hWGoAR5.jpeg)

-------------------------

Roman | 2022-05-02 17:40:28 UTC | #47

[quote="nmattia, post:45, topic:12528"]
With all that in mind, I think it’s worth thinking about making the recovery *devices* “secured”. bjoern also gives a nice example of how e.g. a recovery *phrase* can be used on a Ledger device; in this case the user still has a recovery *device* from II’s point of view, but can use an actual *seed phrase* which is only used on the Ledger device, and not in the browser. My recommendation would then be to *only* make the recovery *devices* “secured”, and not the recovery *phrases* . I’m sure some people will disagree though, in particular dostro and lastmjs since they explicitly suggest making the recovery *phrase* secured (and not the device); I’d love to hear examples of workflows and situations where the FIDO device/hardware wallet is not suitable
[/quote]

Great post. To retake your wise distinction, a lot of us want to get a secured recovery phrase, because we have been told that the secured device : Ledger Hardwallet using FIDO, was risky because we were not sure that an authentication through FIDO could always work (bug, deprecation or anything else). What is your opinion about this. An impossibility of failure of FIDO used with an hard wallet would make the securing of the seedphrase useless, since we would have an unsecured seedphrase BUT ON a secured device, so eventually an indirectly secured seedphrase. 

So the question is : do we see any risk of failure of FIDO on our hard wallets ? If not, I think the question is solved : keep the elegant simplicity of the II, and complete it with an hard wallet and FIDO.

-------------------------

dostro | 2022-05-02 17:51:03 UTC | #48

I must be missing your point... if someone gains access to your anchor by some means (i.e. stole your Yubikey), wouldn't you think their ability to remove your recovery phrase without knowing what it is a rather significant threat? Building a concept of recovery device hierarchy would certainly solve this problem and what we're proposing here is the first iteration of that where "only proving possession of a recovery phrase unlocks the ability to remove itself", and which @paulyoung helpfully generalized to [“you can only remove a device/seed phrase by proving it’s in your possession”](https://forum.dfinity.org/t/immediate-action-to-protect-internet-identity-w-seed-phrases/12528/21?u=dostro)

Am I understanding correctly your proposal is to rely on the security of recovery *devices* and if so, should we just remove recovery *phrases* from II entirely as a solution to the aforementioned threat?

-------------------------

Roman | 2022-05-02 18:01:18 UTC | #49

Yes, you are right. My mistake. I take it back.
I was talking about the situation where you use only fido with Ledger Hardwallet. But ICP is meant for an universal and fluid adoption on phones etc. So I take back.

-------------------------

paulyoung | 2022-05-02 23:46:54 UTC | #50

[quote="dostro, post:48, topic:12528"]
“you can only remove a device/seed phrase by proving it’s in your possession”
[/quote]

In hindsight this would make it impossible to remove devices added by an attacker.

The difference with the recovery phrase is that there’s only one.

-------------------------

nmattia | 2022-05-03 08:29:34 UTC | #51

As mentioned, I already suspected the "let's only make the FIDO devices secure" bit to be controversial.

[quote="dostro, post:46, topic:12528"]
The ability for users to remove their `recovery phrase` without *some* kind of confirmation is too dangerous a threat to leave open any longer than it needs to be
[/quote]
Here I guess that making the whole feature opt-in already means leaving the threat open for most people, but I see your point. My fear is that by allowing recovery phrases to be "secured" in the way we discussed we make it easy for users to _think_ their account is secure enough, whereas really it carries all the issues mentioned here: 

[quote="nmattia, post:45, topic:12528"]
the phrase keeps transiting through the browser and the monitor (on generation and then on input), which makes it subject to theft.
[/quote]

Maybe a UX expert can chime in here?

About the implementation, you say

[quote="dostro, post:46, topic:12528"]
An opt-in feature where a recovery phrase must be resubmitted can be done without introducing breaking or irreversible changes
[/quote]

And while it's true that in theory everything can be reversed, making changes to the stable memory does come at a cost (that of twiddling with the schema and opening the door to really bad bugs, as well as the cost of preparation to make sure upgrades and rollbacks do still somewhat work). There's also the problem that once we roll this out, it's not really "reversible" in the sense that we can't tell people "your recovery phrase is secure!" and then roll back the feature a week later, that would defeat the purpose.

Some pointers on implementation now; the code suggest that a `Storage<T>` object is the only thing read from stable memory:

https://github.com/dfinity/internet-identity/blob/6715ee478990a63166b58a2e9c3a315db452266b/src/internet_identity/src/main.rs#L985

If we follow the code and the types, we see this is actually a `Storage` of a vector of `DeviceDataInternal`:

https://github.com/dfinity/internet-identity/blob/6715ee478990a63166b58a2e9c3a315db452266b/src/internet_identity/src/main.rs#L234

and here's the definition:

https://github.com/dfinity/internet-identity/blob/6715ee478990a63166b58a2e9c3a315db452266b/src/internet_identity/src/main.rs#L96-L106

So the stable memory is cut in chunks that are indexed by anchors, and where each chunk contains a vector of devices, where some values seem hardcoded/computed by hand:

https://github.com/dfinity/internet-identity/blob/6715ee478990a63166b58a2e9c3a315db452266b/src/internet_identity/src/storage.rs#L11-L18

One thing to note is that the canister doesn't really make a distinction between "recovery" and "authentication" devices (it looks like the `purpose` field is only read by the frontend code). This means that the simplest way to implement the feature is to add some data to `DeviceDataInternal` (meaning to _all_ devices, including recovery phrases, recovery devices, etc) which specifies whether the user should prove they have the private key before removing the device; this is quite a big change and we'd need to think hard. Also, whatever data we add there, we need to make sure the new storage object fits. Depending on the implementation we'll also need a migration step (say if we go from storage `Vec<DeviceDataInternal>` to `Vec<DeviceDataInternalWithExtraData>`).

All of this to say that it's not quite backwards compatible, and while in theory it is reversible, in practice it'll be non-trivial and there's some risk. Voilà!

-------------------------

frederikrothenberger | 2022-05-03 11:39:32 UTC | #52

I think we should do something simple and flexible, which does not impose on the user how to exactly organize their security. This is why I like the first option [here](https://forum.dfinity.org/t/internet-identity-lack-of-security/9144/65) summarized by @timo :

> creating two levels of authentication methods, higher level and lower level, and you need to be logged in with a higher level method in order to remove (i.e. delete) a lower level method. But
a) using the higher level must be optional,
b) the user must be able to choose which method to put on the higher level (for some it is the phrase, for others a Yubikey, etc.)
c) it must be possible to put more than one method to the higher level if the user wants that.
This is just like an admin vs user account in an OS. You can create multiple accounts of either type.

People that want to have a recovery phrase that can only be changed by entering it, could achieve that by setting the recovery phrase as the only device on the higher level.

Additionally, this simple model maps well to the current II backend, which does not differentiate between device types.

-------------------------

lastmjs | 2022-05-03 13:09:47 UTC | #53

> For implementation however, I think DFINITY’s policy (at least for NNS and II) has been that **external contributions are not accepted** . I think this makes a lot of sense, because so far virtually no one has submitted patches as far as I know, and because a malicious contribution in either II or NNS (dapp) would be catastrophic for the whole ecosystem.

As for external contributions, I think we would all hope/expect DFINITY to do a thorough review of the submitted code. But if DFINITY wants to take this on I would prefer that. It just seemed like no progress was being made, so we thought we'd put some pressure on and do it ourselves if possible, subject to the rigorous requirements of DFINITY.

> With all that in mind, I think it’s worth thinking about making the recovery *devices* “secured”. bjoern also gives a nice example of how e.g. a recovery *phrase* can be used on a Ledger device; in this case the user still has a recovery *device* from II’s point of view, but can use an actual *seed phrase* which is only used on the Ledger device, and not in the browser. My recommendation would then be to *only* make the recovery *devices* “secured”, and not the recovery *phrases* . I’m sure some people will disagree though, in particular dostro and lastmjs since they explicitly suggest making the recovery *phrase* secured (and not the device); I’d love to hear examples of workflows and situations where the FIDO device/hardware wallet is not suitable.

I really like the idea of making one or more recovery devices promoted in security, especially since the recovery phrase mechanisms used in II are definitely sub-par compared with generating a seed phrase on something like a ledger.

If the implementation time/complexity/generality makes sense, I think we should consider shifting the focus to promoting recovering devices instead of just the seed/recovery phrase. There is at least one issue that @paulyoung has brought up:

> In hindsight this would make it impossible to remove devices added by an attacker.

> The difference with the recovery phrase is that there’s only one.

So perhaps you can only promote one recovery device at a time to this extra level of security.

Hopefully today during the working group meeting we can discuss all of this.

-------------------------

dostro | 2022-05-03 14:48:19 UTC | #54

One of our team members accidentally submitted a pr (git automatically creates one when you fork, I guess) with the following change to the `remove` function, which first checks the device's purpose is `recovery` and key type is `seedphrase`, no change to stable memory... is there a reason this couldn't be implemented even though it might currently only be read by the frontend code?


```
#[update]
async fn remove(user_number: UserNumber, device_key: DeviceKey) {
    ensure_salt_set().await;
    STATE.with(|s| {
        prune_expired_signatures(&s.asset_hashes.borrow(), &mut s.sigs.borrow_mut());

        let mut entries = s.storage.borrow().read(user_number).unwrap_or_else(|err| {
            trap(&format!(
                "failed to read device data of user {}: {}",
                user_number, err
            ))
        });

        trap_if_not_authenticated(entries.iter().map(|e| &e.pubkey));

        if let Some(i) = entries.iter().position(|e| e.pubkey == device_key) {
            //find required public key
            let entry_to_remove = entries.get(i as usize).unwrap();

            //verify that required pk is a recovery device
            if entry_to_remove.purpose.as_ref().unwrap() == &Purpose::Recovery
                // and specifically a seed phrase
                && entry_to_remove.key_type.as_ref().unwrap() == &KeyType::SeedPhrase {

                //verify that caller signature from recovery phrase
                if ic_cdk::api::caller() != Principal::self_authenticating(entry_to_remove.pubkey.clone()) {
                    trap("Please use public key from recovery phrase to remove recovery");
                }

            }
            entries.swap_remove(i as usize);
        }

        s.storage
            .borrow()
            .write(user_number, entries)
            .unwrap_or_else(|err| {
                trap(&format!(
                    "failed to persist device data of user {}: {}",
                    user_number, err
                ))
            });
    })
}
```

-------------------------

nmattia | 2022-05-03 14:56:14 UTC | #55

I didn't check the code thoroughly, but doesn't this mean this will be enabled for every (existing) recovery phrases? i.e. it's not optional at all

-------------------------

lastmjs | 2022-05-03 14:59:27 UTC | #56

Wouldn't it be pretty simple to add some state to `DeviceData` to keep track of opt-ins? To keep it simple we could just add a boolean flag to `DeviceData` like `remove_recovery_phrase_confirmation` or `remove_recovery_device_confirmation`, and add the methods to update that state.

-------------------------

dostro | 2022-05-03 14:59:22 UTC | #57

Yes this isn't complete, just an example of how it could be done. Of course we'll need to add the opt-in logic somewhere.

-------------------------

nmattia | 2022-05-03 14:59:49 UTC | #58

Writing the code to add some state would definitely be simple; most likely just adding a field; but see what I wrote here about the work and checks that need to be done as well:

[quote="nmattia, post:51, topic:12528"]
Some pointers on implementation now; the code suggest that a `Storage<T>` object is the only thing read from stable memory:
[/quote]

-------------------------

Oleksii | 2022-05-05 07:01:35 UTC | #59

Guys what do you think about such option?
![image|690x289](upload://u9T6W7bpe6EHLpvSlJ5W9pl4Q3T.jpeg)
![image|690x176](upload://zsC4BNFajexm9PaZQzAlxxaeLs2.jpeg)

-------------------------

nmattia | 2022-05-05 08:40:27 UTC | #60

That's a smart workaround! I'm not entirely sure what the original intent of `KeyType` was TBH.

-------------------------

dostro | 2022-05-07 20:21:48 UTC | #61

Ok IC team, it seems we have a contender with @Oleksii 's proposed fix!
* if user has no seed phrase, they can create a seed_phrase or seed_phrase_protected (the UI checkbox will dictate which)
* if user creates a seed_phrase, any device with anchor access can remove it (this is existing behavior and will be backwards-and-forwards compatible with Origyn FYI @skilesare)
* if user creates a seed_phrase_protected, any device with anchor access can *attempt* to remove it, but will be forced to re-enter the phrase to confirm the removal
* if user has a seed_phrase now and wants to change it to seed_phrase_protected, they will have to remove the seed_phrase and create a new seed_phrase_protected
* if user has a seed_phrase_protected and wants to change it to seed_phrase, they will have to click the X to remove it, re-submit the phrase to confirm removal, and create a new seed_phrase
* pending @nmattia 's and community review, we can submit this PR and start working on the frontend (though @lastmjs said he might get to it before us)

-------------------------

Roman | 2022-05-08 08:25:37 UTC | #62

This is wonderful, very elegant.

-------------------------

lastmjs | 2022-05-09 18:40:32 UTC | #63

Why can't we turn an existing seed phrase into a seed phrase protected?

-------------------------

mparikh | 2022-05-10 03:37:36 UTC | #64

That (Why can’t we turn an existing seed phrase into a seed phrase protected?) would be great! I dont relish the thought of going through my "globaly distributed seed recovery mechanism" for DR.

-------------------------

dostro | 2022-05-11 10:48:50 UTC | #65

Simply because this thread has highlighted for me the community's desire to keep II slim, which for me translates to "small, incremental changes". It's also arguably a bit more secure to wipe your insecure recovery phrase in favor of a protected one that you can be assured at that moment only you have access to.

In favor of incrementality, I'd vote to build protection in first and convenience in next. Counter arguments?

-------------------------

frederikrothenberger | 2022-05-11 16:49:24 UTC | #66

Because right now seed phrases can be deleted / changed.

There surely exist some users who still have access to their WebAuthn Credential (YubiKey / Biometric login) but no longer know their seed phrase. There might even be users who *know*, that they have lost access to the seed phrase but still did not update it (for whatever reason). And by just locking everyone's seed phrase we will create a lot of unhappy users unable to use the seed phrase feature *at all*. This is why the seed phrase locking feature has to be opt-in (and imho should require proving that you still have access to it, again because otherwise people will soft-lock themselves out).

Internet Identity should be an unopinionated platform that everyone can use how they see fit. We recognize that right now there is a deficit in functionality for those users who would like to differentiate the access levels of their different devices / recovery mechanisms. It is a very high priority in our team to solve this.

Nevertheless, it is important to not make changes that
* limit the design space in the future in overly restrictive ways
* cause disproportionate amount of maintenance effort
* harm / restrict users

This is why we need to be careful about this change and cannot just lock everyone's seed phrase.

-------------------------

lastmjs | 2022-05-11 16:57:12 UTC | #67

I'm asking why we can't choose to turn an existing seed phrase into a seed phrase protected, I am not suggesting we update all seed phrases to become seed phrase protected.

I just want the option to update my current seed phrase to a seed phrase protected.

@dostro if it isn't as simple and would possibly be a bit more secure then I think it's fine to proceed with the simplest possible implementation that gives the users the option to create a seed phrase protected. But I also don't imagine it wouldn't be that difficult to add the code to upgrade an existing seed phrase to a seed phrase protected.

Here's the thing I was careful when creating my phrase and have multiple backups and everything. Now I'll have to redo it instead of just clicking a button. That's my personal bias.

-------------------------

neeboo | 2022-05-12 03:32:11 UTC | #68

+1

I think 2FA adding/removing devices/phrases and Social Recovery are better choice for users

-------------------------

dostro | 2022-05-12 12:33:56 UTC | #69

Ok how about this - since Internet Identity doesn't have a concept of "update device" and since we want to make minimal changes to the backend, we could handle this from the frontend since a recovery method is just another public key:
- User chooses to convert seed_phrase to seed_phrase_protected in the UI
- UI retrieves the seed_phrase public key from lookup()
- UI adds the public key as a device with seed_phrase_protected keytype
- UI removes the seed_phrase device

I don't think we need to ask the user to re-enter their seed phrase for this procedure because if an attacker is going through this process, they can easily just remove the seed phrase and add their own seed_phrase_protected

-------------------------

nmattia | 2022-05-13 15:43:59 UTC | #70

Hi all, **got some news**!

Identity Labs, Internet Identity and @lastmjs met yesterday to discuss this; made a lot of progress including an implementation plan! I've started [a new thread](https://forum.dfinity.org/t/protected-recovery-phrases-plan-and-progress/12950) for anyone curious about the plan and progress.

There were some questions asked here that I think would be good to clarify once and for all, so I've also [updated the FAQ](https://github.com/dfinity/internet-identity/pull/639). Should be live early next week.

Finally, we're making progress internally on allowing external contributions to the Internet Identity repo, just pending some approvals. I'll send out more info as soon as that's done!

-------------------------

sat | 2022-05-19 11:39:42 UTC | #71

Something mentioned in another topic, re-posting here @lastmjs for visibility and comments.
https://forum.dfinity.org/t/protected-recovery-phrases-plan-and-progress/12950/7?u=sat

More specifically:

> One very likely “device” to be stolen is IMHO a non-physical device, and that would in our case be the “recovery phrase”. Is there anything we can do to prevent this theft?
> 
> Maybe we can require entering multiple authentication and/or recovery devices (i.e. n out of m total auth schemes) in order to be able to remove the “recovery phrase”? The actual required mix of the devices would be open for discussion, of course.

But thinking a bit more about it, it might make sense to have to do this for ***any removal*** of the authentication devices? Otherwise, someone could remove authentication devices one by one until only the recovery phrase is left, and then add their own authentication device, and then they have the "majority".

-------------------------

romulusp | 2022-05-19 14:21:08 UTC | #72



Maybe attaching "kyc" to  neuron ?! I don't know if that is feasible, but as a user i don't mind to have a known neuron attach to my identity. If i will be hack, i only lose the interest. (what i understand in the future 2-3 year will be mandatory for blockchain to do kyc). Please excuse me if i'm wrong, my knowledge in blockchain and Kyc are limited and usually just follow the forum and don't get direct involvement but having identity bounded with neuron is looking unhakable and i will have  plenty of time(8years :stuck_out_tongue_winking_eye: ) to make a proposal and have control back of my neuron. As a user , in my case , it will be the most desirable thing !

-------------------------

Based | 2022-05-29 05:31:38 UTC | #73

Yubikeys with the pin too please, why was this taken away?

-------------------------

paulyoung | 2022-05-29 19:29:44 UTC | #74

[quote="sat, post:71, topic:12528"]
But thinking a bit more about it, it might make sense to have to do this for ***any removal*** of the authentication devices? Otherwise, someone could remove authentication devices one by one until only the recovery phrase is left, and then add their own authentication device, and then they have the “majority”.
[/quote]

https://forum.dfinity.org/t/immediate-action-to-protect-internet-identity-w-seed-phrases/12528/50?u=paulyoung

-------------------------

justmythoughts | 2022-05-29 22:40:34 UTC | #75




@sat 

[quote="justmythoughts, post:26, topic:12528"]
I think you may want to change the proposal to require that 2 access points must be used to create a new access point, reset a seed phrase, or delete any other points of access to an identity.
[/quote]

This was the original idea I had behind a “2-factor-device” auth approach to adding or removing a device. 

https://forum.dfinity.org/t/immediate-action-to-protect-internet-identity-w-seed-phrases/12528/26?u=justmythoughts

-------------------------

sat | 2022-05-31 08:32:20 UTC | #76

[quote="Immediate Action to Protect Internet Identity w/ Seed Phrases, post:50, topic:12528"]
In hindsight this would make it impossible to remove devices added by an attacker. The difference with the recovery phrase is that there’s only one.
[/quote]

Aha, good point @paulyoung .
To clarify, here is one scenario:
Alice has auth key A + recovery key R. An attacker obtains access to the recovery key R. They can enter R to remove A, and even add a new key C. Now they have access to both R and C and it's game over for Alice. The attacker could also replace R with R', to be safe.

Would a requirement for 2+ authentication methods in order to remove entries help? Even that doesn't work in all cases, since:
Alice has keys A+R. Attacker obtains access to R and adds a key C. Attacker uses C+R to remove A, and they again have complete control over the account, i.e. both keys C and R.

**And how about introducing multiple recovery keys?**
Example: Alice has keys A+R1+R2+R3. Any of the R1/2/3 can be used to recover access to an account, BUT the majority of R1/2/3 needs to be used (so in this case 2 out of 3 recovery keys) in order to remove any auth or recovery method.
Now, an attacker obtains access to say A or R1 (assuming it's unlikely that they obtain access to all R1+R2+R3). They can add their own key C, but they can't change the keys R1/2/3 since they do not have the majority of the keys.
There could be N (more than 3) recovery keys, to further improve the account protection.

-------------------------

paulyoung | 2022-05-31 08:33:48 UTC | #77

I’m not sure; can’t an attacker add enough devices to give themselves majority?

-------------------------

sat | 2022-05-31 08:41:34 UTC | #78

We could maybe introduce this limit. There needs to be exactly N recovery keys, where N is a fixed number, either fixed by the system or provided during account creation.
This means that not more than N recovery keys can be added. And to change any of the recovery keys, the majority of the current N recovery keys needs to be entered.

-------------------------

Zane | 2022-05-31 09:14:10 UTC | #79

This thread started as a band aid fix to II's security issue, but seems to have gone a bit further than originally intended, at this point why don't just add customizable permissions to auth devices? UX wise is much better than limiting number of recovery keys and requiring majority to do any change. Not saying its a bad idea but for most users it'd be quite clunky and unintuitive imo, it would be nice to have as an additional optional layer of security.

-------------------------

sat | 2022-05-31 13:46:14 UTC | #80

[quote="Zane, post:79, topic:12528"]
at this point why don’t just add customizable permissions to auth devices?
[/quote]

I'm not working on II so I'm not opposing :) But we need to keep in mind that a novice (inexperienced) user won't know which permission is safe and recommended. So adding customizability may not solve the problem for all users -- and especially for the most risky (security unconscious) part of the IC users.

-------------------------

jsull9 | 2022-07-01 05:58:29 UTC | #81

Thank you SO much for this thread! My apologies in advance for the length of my post/ questions… I have a few questions about long-term storage and using the FUBI keys. Is there a way to just use a spare flash drive as a FUBI key? If not, are/is there a specific brand of FUBI key to purchasing that works for the IC identity? I am concerned about only using the seed phrase created on the computer (mac os), then saved on paper. There is still room for the seed phrase to be vulnerable I was told (which would allow someone full access to my account)… So, I am trying to get the appropriate hardware. I stake (and am fine with it) on the NNS directly, however, down the road if my account becomes of any tangible value I want to protect myself ahead of time, to prevent said experience. I like the Ledger hardware wallets for the ability to have a backup in case damaged or lost. I would prefer that type of concept in any reccomodations.

Also, say I pass away and in my will, I leave my digital assets (ICP coin) to x,y, or z. How can I make sure that person(s) have access (or ability to follow written instructions on how to access) this account? If using the FUBI key then they can plug that in and use it that way, however, what if it is a fingerprint sensor? is there a backup to prevent that?

-------------------------

wpb | 2022-07-01 11:42:21 UTC | #82

If you search the forum for @Manu then I think you will find some really good posts that he has made addressing this topic.  Hopefully they are not too hard to find.  Additional names that have been involved with those conversations are @Roman and @LightningLad91, so perhaps a combination search will provide a better filter.  Each of them have expressed concerns about proper security and recovery in the past and I believe @manu has offered an explanation and solution.

-------------------------

plsak | 2022-07-03 09:09:22 UTC | #83

You're right, this discussion started quite a long time ago, my addition:
https://forum.dfinity.org/t/internet-identity-lack-of-security/9144/128?u=plsak

https://forum.dfinity.org/t/internet-identity-lack-of-security/9144/140?u=plsak

I just feel that deliberation about security threat for investors takes too long, also note that it's scary for possible new investors (some expressed this worry to me).

-------------------------

Roman | 2022-07-01 19:40:07 UTC | #84

Thanks for letting me know about @jsull9’s concern @wpb. Wenzel is right, I invite you to read this @jsull9 : https://identity.ic0.app/faq
Particularly the section « Is a recovery phrase as safe as a recovery FIDO device ? ».

-------------------------

jsull9 | 2022-07-01 20:23:26 UTC | #85

Thank you! I am still learning to navigate this forum so excuse me if the location/timing is off compared to the original discussion.

I appreciate the help though!

-------------------------

frederikrothenberger | 2022-07-05 12:51:27 UTC | #86

Quick update from the II team: the protected recovery phrases feature has been released and deployed to mainnet.

Forum announcement: https://forum.dfinity.org/t/protected-recovery-phrases-released-available-now/14156
Internet Identity Upgrade Proposal: https://dashboard.internetcomputer.org/proposal/68570

-------------------------

jonit | 2022-07-05 16:23:41 UTC | #87

The new locked recovery phrase is a great addition. It has probably been mentioned but an attacker could just access your account ( find your security key ) and send your ICP into another account, without ever worrying about your seed phrase. Is there a possibility of setting send limits, setting time limits on transfers ( 48 hours before it transfers and can be withdrawn in the meantime )  whitelisting addresses and getting email notifications of attempted transfers ? Sorry for all the asks :grinning:

-------------------------

jonit | 2022-07-05 16:26:20 UTC | #88

Also a check seed phrase option, why? If you have multiple seed phrases, in 5 years time you may not know which is which. I've been there. Would be great to know which seed phrase actually is the correct for an account you own.

-------------------------

plsak | 2022-07-05 17:06:26 UTC | #89

Hi, I believe that every security restriction is good for investors and innovation in this area is never enough.

What could help for the mentioned worry is to stake your ICP - eventual attacker won't be able to send your funds away and you'll be able to simply delete the compromised device.

-------------------------

Elephantul | 2022-10-28 20:23:04 UTC | #91

I try it to recover an internet identity in nns app, i have right seed but failed. Is any developer kind to tell me why i cant have acces to my funds, acces that should be provided by seed phrase? Thank you

-------------------------

