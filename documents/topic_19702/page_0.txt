peterparker | 2023-05-01 14:33:44 UTC | #1

Where is the up-to-date public did file of the ICP ledger?

Both [https://raw.githubusercontent.com/dfinity/ic/dd3a710b03bd3ae10368a91b255571d012d1ec2f
/rs/rosetta-api/ledger.did](https://raw.githubusercontent.com/dfinity/ic/dd3a710b03bd3ae10368a91b255571d012d1ec2f/rs/rosetta-api/ledger.did) - displayed in the  [documentation](https://internetcomputer.org/docs/current/developer-docs/integrations/ledger/ledger-local-setup) - and [https://github.com/dfinity/ic/blob/master/rs/rosetta-api/icp_ledger/ledger.did](https://github.com/dfinity/ic/blob/master/rs/rosetta-api/icp_ledger/ledger.did) seem outdated are none contains the Icrc1 methods ü§î.

-------------------------

kpeacock | 2023-05-01 19:26:54 UTC | #2

https://dashboard.internetcomputer.org/canister/ryjl3-tyaaa-aaaaa-aaaba-cai

Tautologically, the public interface of the ICP ledger is the public interface of the ICP ledger

-------------------------

peterparker | 2023-05-01 19:42:28 UTC | #3

Good point. I should have been more precise in my question. Where is the up-to-date public did file....so that I can continue to automatically download it with a bash script? üòâ

I use that [script](https://github.com/buildwithjuno/juno/blob/main/scripts/ledger.sh) to download and install the ledger locally.

```
#!/usr/bin/env bash

IC_VERSION=f02cc38677905e24a9016637fddc697039930808
curl -o ledger.wasm.gz "https://download.dfinity.systems/ic/$IC_VERSION/canisters/ledger-canister_notify-method.wasm.gz"
gunzip ledger.wasm.gz
curl -o ledger.private.did "https://raw.githubusercontent.com/dfinity/ic/$IC_VERSION/rs/rosetta-api/ledger.did"
curl -o ledger.public.did "https://raw.githubusercontent.com/dfinity/ic/$IC_VERSION/rs/rosetta-api/icp_ledger/ledger.did"

etc.
```

-------------------------

Severin | 2023-05-02 09:53:18 UTC | #4

Here's a line that fetches the latest IC_VERSION: https://github.com/dfinity/sdk/blob/master/.github/workflows/update-replica-version.yml#L40

-------------------------

peterparker | 2023-05-02 10:08:10 UTC | #5

Thanks Severin. Not sure how I can get the path to the ICP ledger did file from there üòÖ.

-------------------------

Severin | 2023-05-02 10:11:03 UTC | #6

You have the curl command already there. It should never be outdated by more than a few days, and at the pace of ledger interface changes this shouldn't be a problem.

I just remembered: You should be able to run `dfx canister metadata <canister> candid:service` to get the same interface the dashboard uses

-------------------------

peterparker | 2023-05-02 15:57:29 UTC | #7

[quote="Severin, post:6, topic:19702"]
You have the curl command already there. It should never be outdated by more than a few days, and at the pace of ledger interface changes this shouldn‚Äôt be a problem.
[/quote]

That's a nice command to know (üëç ) but it gives back the replica version, not the did file I'm looking for.

> ‚ùØ curl -s https://ic-api.internetcomputer.org/api/v3/subnet-replica-versions\?limit\=50\&offset\=0 | jq  -r '.data[0].replica_version_id'
0a239c213c048563577969276739b090aa31c241

Sorry for not understanding fast, maybe I'm missing something.

[quote="Severin, post:6, topic:19702"]
I just remembered: You should be able to run `dfx canister metadata <canister> candid:service` to get the same interface the dashboard uses
[/quote]

That's another nice command but, it does not seem the generated did content was what I was looking for ü§î. The ledger should now exposes Icrc1 function, as those Idisplayed on the dashboard - https://dashboard.internetcomputer.org/canister/ryjl3-tyaaa-aaaaa-aaaba-cai - but strangly, even though I got these locally (I can use the function from my dapp, all good), these weren't generated in the did file ü§∑‚Äç‚ôÇÔ∏è.

e.g. dashboard

```
service : (LedgerCanisterInitPayload) -> {
  account_balance : (BinaryAccountBalanceArgs) -> (Tokens) query;
  account_balance_dfx : (AccountBalanceArgs) -> (Tokens) query;
  archives : () -> (Archives) query;
  decimals : () -> (Decimals) query;
  icrc1_balance_of : (Account) -> (nat) query;
  icrc1_decimals : () -> (nat8) query;
  ...
```

locally:

```
  service : {
  // Transfers tokens from a subaccount of the caller to the destination address.
  // The source address is computed from the principal of the caller and the specified subaccount.
  // When successful, returns the index of the block containing the transaction.
  transfer : (TransferArgs) -> (TransferResult);

  // Returns the amount of Tokens on the specified account.
  account_balance : (AccountBalanceArgs) -> (Tokens) query;

  // Returns the current transfer_fee.
  transfer_fee : (TransferFeeArg) -> (TransferFee) query;

  // Queries blocks in the specified range.
  query_blocks : (GetBlocksArgs) -> (QueryBlocksResponse) query;

  etc.
```

-------------------------

Dylan | 2023-05-02 20:20:12 UTC | #8

It looks like the ICP Ledger canister's Candid interface in custom section 'icp:public candid:service' is not up to date.

You can do this instead (not a recommended long-term solution) to get the correct Candid interface:
```
dfx canister --network ic call ryjl3-tyaaa-aaaaa-aaaba-cai __get_candid_interface_tmp_hack
```

-------------------------

peterparker | 2023-05-03 04:49:11 UTC | #9

What a cool hack, that would do the trick.

And thanks for confirming it is not up-to-date and therefore, not up-to-date in the doc ([Ledger Local Setup](https://internetcomputer.org/docs/current/developer-docs/integrations/ledger/ledger-local-setup/)) and in the repo as well.

-------------------------

