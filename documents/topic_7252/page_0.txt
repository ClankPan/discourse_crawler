lastmjs | 2021-09-15 13:44:27 UTC | #1

Copied from https://forum.dfinity.org/t/megathread-community-submissions-for-dfinity-foundation-s-roadmap/6175/15?u=lastmjs

Consider adding social recovery to the Internet Identity. It would be excellent for users to create their own personal trust networks, allowing other IIs to have the power to regenerate lost IIs or have other powers, controlled by the creator of the II.

The fact that II cryptographic information is only stored on locally-owned devices is quite scary…one natural disaster, one bad encounter on the street, etc could result in a lost II. It needs to be decentralized.

* Vitalik Buterin's thoughts on social recovery: https://vitalik.ca/general/2021/01/11/recovery.html
* Starting point of some discussion on social recovery in the tokenomics thread: https://forum.dfinity.org/t/tokenomics-proposal-community-consideration/6159/5?u=lastmjs
* Argent wallet recovery: https://support.argent.xyz/hc/en-us/articles/360022631412-About-wallet-recovery

-------------------------

aramakme | 2021-09-15 13:13:03 UTC | #2

This is a big concern.  I'd love to see a social recovery. It is also a fun way to introduce friends to the system and show them how it works.

-------------------------

umekalu | 2021-09-16 19:50:33 UTC | #3

I am facing that right now. 

I'm currently running a disaster test, assuming I lose my device will I be able to login to my account using another device without having to worry about security key stored in some kind of local device? 

Guess what, I couldn't. I can't generate a security phrase except I have a security key store in an external device (like Yubikey or something like that).

This is something we need to look into. 

For those using Mobile device, if you lose your phone your accounts are gone and if you have funds in it that becomes worst.

We need to have a decentralised recovery mechanism so that you can login with any device anywhere provided it's your fingerprint or login with your phrase key you have written somewhere not on security device.

When you login with a new device the server will sense your fingerprint and request for a seed Phrase for confirmation.

-------------------------

lastmjs | 2021-09-16 20:34:53 UTC | #4

You should be able to do this with the recovery phrase

-------------------------

umekalu | 2021-09-17 06:15:12 UTC | #5

It's requesting for an external device to be able to generate it.

-------------------------

nomeata | 2021-09-17 09:21:56 UTC | #6

[quote="lastmjs, post:1, topic:7252"]
It would be excellent for users to create their own personal trust networks, allowing other IIs to have the power to regenerate lost IIs or have other powers, controlled by the creator of the II.
[/quote]

The Internet Identity allows you to add arbitrary cryptographic keys to your account, and it’s API is open. So I think this could be done as a community-created add-on. For example, it could be a a static webpage that, fully on your computer:
 * Creates a threshold ECDSA key with your desired n-out-of-m property.
 * Shows you the _m_ secret key shares to distribute among your friends.
 * Gives you the link (clickable or as QR code) that would add the public key as a new “device” to the Internet computer.

If you need to recover, with your new device;
 * You go to the Internet Identity page, and go through the add-device flow.
 * You take the generated add-device-link and paste it in the recovery page.
 * You also paste enough of the secret key shares.
 * The recovery page adds your new device to II and you are back in action.

(I hope I am not missing something, but this might work very well).

So all it takes is a bit of crypto programming in JavaScript and a single static page that you can host on the Internet Compute or elsewhere (no backend needed). At least a working prototype should not be too hard. 

Of course, there is a question of whether this should be offered natively by the Internet Identity. But one doesn't have to wait for it, and one does not have to work for DFINITY to build it.

-------------------------

lastmjs | 2021-09-17 18:38:20 UTC | #8

This could be an amazing MVP, thanks for the explanation.

-------------------------

lastmjs | 2021-09-17 18:39:29 UTC | #9

Also, the Internet Identity repository is open source right?

-------------------------

Ori | 2021-09-17 19:46:42 UTC | #10

https://github.com/dfinity/internet-identity

-------------------------

nomeata | 2021-09-18 06:43:36 UTC | #11

Yes, but you don't actually need the code for that; it'd be a service that _integrates_ with the existing live Internet Identity, not a fork of it.

-------------------------

lastmjs | 2021-09-20 19:01:25 UTC | #12

Yes, for an MVP a separate service might be fine, but I'm wondering if this shouldn't just be integrated into the II directly. Since the code is all open (I believe the canisters as well, if that's needed), technically someone in the community could actually work on adding this to the II system directly.

The barriers to creating this functionality outside of DFINITY seem relatively low (when compared with something like extending chain key with ECDSA for example).

-------------------------

tkitchens | 2021-10-12 20:28:41 UTC | #13

This is definitely an issue I’ve been thinking about. I’m also not sure yet how the general public will manage II. I see the potential for a lot of frustration. Maybe this can be solved with good UX? 

Another permutation on social recovery is having a system to somehow enroll public authorities in a process where physical documents could facilitate recovery. Maybe not useful if someone loses access to social media but very useful in the event of financial loss after a catastrophic event or total loss of device anchors.

-------------------------

lastmjs | 2021-10-12 20:51:15 UTC | #14

I agree, centralized entities could be useful as guardians as well. You could imagine registering a private key share with a custodian who records your name, address, phone number, ID, social security card, etc to provide an excellent level of assurance as to your identity. Only in the case that they absolutely know you are you and are requesting access to regenerate your key, would they intervene and help as part of the threshold regeneration.

So you could have 3 friends and 2 centralized custodians be your web of trust, or 4 friends and 1 centralized custodian, etc.

-------------------------

tkitchens | 2021-10-12 20:54:37 UTC | #15

exactly. I think it would be very useful. Would need a way to prevent a hostile takeover of an II by requiring a biometric maybe.

-------------------------

lastmjs | 2021-10-12 20:57:59 UTC | #16

Can you describe the hostile takeover scenario? The threshold requirement should take care of that, because you would need say 3/5 IIs to all decide basically at the same time that a new key should be regenerated

-------------------------

tkitchens | 2021-10-12 21:04:39 UTC | #17

It’s unlikely it would happen but if 3/5 turned on you there is a potential for them to assume ownership of lost II. A biometric would increase trust though not perfect that the actual owner approved and is present for the re-generation. Could be an optional feature. Maybe it would be needed if the one (or two) central authorities were a bank or other institution that has their own identity verification protocols.

-------------------------

tkitchens | 2021-10-12 21:05:48 UTC | #18

*maybe it wouldn’t be needed…

-------------------------

lastmjs | 2021-10-12 21:15:35 UTC | #19

Well WebAuthN already supports biometrics so I think we're good :) Creating a requirement for a biometric would be another question, but doesn't necessarily seem too difficult, hopefully

-------------------------

tkitchens | 2021-10-12 21:35:24 UTC | #20

good point. biometrics not stored on nns.  They live on mobile device. If it was stored (or maybe it’s hash) than it could be used as a final auth method that reconnects the anchor to person. Not sure but fun to think about.

-------------------------

mparikh | 2021-11-10 07:13:43 UTC | #21

I  just implemented an MVP on Social Recovery of Internet Identity here(https://github.com/icdev2dev/bachao). 

Essentially from my recovery phrase, I generate a bunch of QR codes that represent threshold key shares of the original recovery phrase; meaning that one needs a quorum of QR codes to recover the recovery phrase. Then I ship these QR codes (laminated, of course) via USPS to different folks that I know and trust across the globe. I no longer have my recovery phrases and I hope NEVER to use the recovery phrases. However if I do, I am secure without knowing the actual recovery phrase.

With internet identity, recovery phrase rotation is doable. Recovery phrase rotation is nice for folks who intend to keep their wallets for decades; because people change, friends change, folks pass away, I have yet to figure out how I would do this with stoic.

-------------------------

GLdev | 2021-11-10 06:47:34 UTC | #22

[quote="mparikh, post:21, topic:7252"]
I have yet to figure out how I would do this with stoic.
[/quote]

Isn't stoic just based on II? As long as you maintain control of your II you maintain control of any accounts created with that II. Or am I missing something here?

-------------------------

mparikh | 2021-11-10 06:49:58 UTC | #23

Stoic also will also generate an random seed phrase for you; as an option; to open an wallet. If you use II as a basis, then with stoic you are good.

-------------------------

Celae | 2021-11-23 03:32:18 UTC | #24

Do you know by chance if there is any possible way to reach a Stoic wallet if the seed phrase is lost?

-------------------------

mparikh | 2021-11-23 08:25:22 UTC | #25

Not that I am aware off in context of a random seed phrase generated by stoic.

-------------------------

bjoern | 2022-08-12 11:41:08 UTC | #26

I am reviving this discussion based on the latest [Identity & Authentication Working Group](https://forum.dfinity.org/t/working-group-identity-authentication/11902/31) meeting.

There are two main options that have been discussed with respect to assisted recovery, one above here in the thread; the other one is a proposal that originates from Dom and has been discussed informally in several venues. For clarity, I'll give a high-level description of both, compare some pros and cons, and then I hope for a lively discussion :slight_smile: 

## Threshold recovery

The account holder chooses a group of _n_ friends and a threshold _t ≤ n_ such that any _t_ of the _n_ friends together can gain access to the account, but any subgroup of _f < t_ cannot. Initially, the account holder sends one key share to each of the _n_ friends, which are trusted to keep their share both **secret** and **available**. When the account holder needs to regain access to the account, they need to contact at least _t_ of their _n_ friends for help.

There are a few variants in how exactly one implements the scheme, but the core idea is always to use a [Shamir Secret Sharing](https://en.wikipedia.org/wiki/Shamir's_Secret_Sharing) for the threshold property, sending one share to each friend. In the recovery phase, one can then either have each friend send back the share they received and reconstruct the key locally (a bit easier) or actually generate a threshold signature (potentially a bit more secure).

## Identity-based recovery

The account holder stores a digest (ensuring the information itself does not leak) of personal information that can be validated from the person's legal documents with the identity anchor, probably including data such as name, DOB, citizenship, and so forth. When the account holder needs to regain access to the account, they contact one of several service providers which validate the person's identity and – probably in exchange for some payment – help the person regaining access.

Several details still have to be fixed: How are the service providers chosen, are they appointed by the NNS? (There probably have to be different SPs for different regions.) Can the account holder choose which service providers they trust, can they specify some policy ("at least 2 out of the following have to confirm", or "only SPs that are actually provide services in Europe", or ...)?

## Comparison

Advantages of threshold recovery:
* Implementation in front-end only, no change to the backend required.
* Probably productive much quicker, since identity-based recovery requires an ecosystem with identity verification services to be set up.

Advantages of identity-based recovery:
* Easier to initially set up on the user side (simply enter some personal information compared to sending shares to a group of friends).
* Threshold recovery (at least when implemented in front-end only) requires users to manage key material; making it secure with a group of non-technical people and with acceptable security probably involves sending paper (with printed seed phrases or QR codes) around.

## And now ...

The two options aren't exclusive, btw., so we may very well decide on building a threshold-based variant (especially if front-end only) now and build an identity-based version later.

-------------------------

lastmjs | 2022-08-12 12:52:03 UTC | #27

I think the identity based version would be far more complicated to build, far harder to preserve the privacy of the individual, and just have many more practical challenges.

The threshold scheme is rather simple, and yes I think a hybrid solution would be possible very quickly. You could send a share to an identity verification service, and only when verified with the service (providing documents etc) would they provide their share. This would allow you to construct a group to your liking, composed of friends, family, and service providers.

-------------------------

wpb | 2022-08-12 13:46:08 UTC | #28

I would be happy with both options, but I would prefer the identity based recovery solution.  I don’t really like the idea of having to rely on others to recover my internet identity.  I would rather preload some secure service provider with personally identifiable information (maybe including info that can be verified by third parties) and then be able to recover based on my own initiative.  I think this scales to the general public more effectively than social recovery.  I suspect there would be a lot more resistance to social based threshold recovery.

-------------------------

mparikh | 2022-08-12 22:02:24 UTC | #29

[quote="bjoern, post:26, topic:7252"]
making it secure with a group of non-technical people and with acceptable security probably involves sending paper (with printed seed phrases or QR codes) around
[/quote]


That is exactly how https://github.com/icdev2dev/bachao works. I use it to send qr codes to friends and family around the globe. Any recovery mechanism(and process)  must designed to last 20+ years (remember dfinity has a 20 year roadmap)

Some key issues with this: 

(a) test the dr every year or so. I found that some friends lost their share...couldnt locate it
(b) be prepared for seed phrase rotation ( friends , relationships change)

The main issue with identity-based recovery is that you are trusting centralized third parties with your recovery.(what if they go bankrupt? What if they are acquired?...) Any solution must overcome this burden.

-------------------------

lastmjs | 2022-08-12 22:15:19 UTC | #30

I'm not sure it needs to be done on paper or last 20+ years. I'm imagining you'll do this with other people that have II/NFID accounts. All of it will be handled with good UX through the interface. Periodic attestations can be made from the clients, and if you see that any of your friends haven't logged in for a long while, then you can reach out to them or perhaps increase your threshold. The n of m makes it more resilient to people losing their keys, as it's probably unlikely that a group of active II users will all lose their keys at once.

-------------------------

mparikh | 2022-08-12 22:27:09 UTC | #31

What i have today is not with II/NFID users (simple custodians of printed qr codes). Incidentally  i use the same mechanism for ledger seed phrases.

The UX for OP(me) is terrible right now (though it is better (security wise) than engraving on a steel wallet). Agree that the UX could be a lot better with II/NFID

-------------------------

