rbole | 2022-03-11 16:28:25 UTC | #1

How is it possible to search for a value in a HashMap structor and receive multiple results if available.

Thanks for any hint.

-------------------------

claudio | 2022-03-11 18:55:52 UTC | #2

Maybe use a combination hashmap's `.entries()` to obtain an iterator and then use `Iter.filter` on that with a suitable predicate function to return an iterator of the matching values.

-------------------------

rbole | 2022-03-12 09:31:39 UTC | #3

OK, thank you.
Finally I came up with that solution, maybe this could be helpful to others, as well.

> import Debug "mo:base/Debug";
> import Principal "mo:base/Principal";
> import HashMap "mo:base/HashMap";
> import Nat "mo:base/Nat";
> import Hash "mo:base/Hash";
> import Result "mo:base/Result";
> import Iter "mo:base/Iter";
> import List "mo:base/List";
> 
> actor {
> 
>   type TokenIndex = Nat;
>   type NextTokenIndex = Nat;
>   type Result<Ok, Err> = {#ok : Ok; #err : Err};
> 
>   var next : NextTokenIndex = 0;
> 
>   stable var registryEntries : [(TokenIndex, Principal)] = [];
>   let registry : HashMap.HashMap<TokenIndex, Principal> = HashMap.fromIter<TokenIndex, Principal>(registryEntries.vals(), 10,Nat.equal, Hash.hash);
> 
>   public shared ({caller}) func mint() : async Result<(), Text> {
>     // tis is not working im 0.8.4 I think so !
>     registry.put(next, caller);
>     next += 1; 
>     return #ok;
>   };
> 
>   public shared ({caller}) func getTokenFromCaller (): async List.List<Nat> {
>     var listOfTokenIndex = List.nil<Nat>();
>     
>     for ((k,v) in registry.entries()) {
>       //Debug.print("> "#debug_show(v)#" == "#Principal.toText(caller));
>       if( v == caller){
>         listOfTokenIndex := List.push(k,listOfTokenIndex);
>       };
>     };
>     return listOfTokenIndex;
>   };
> 
>   // check your HashMap
>   public func checkRegistry (): async [(Nat, Principal)] {
>     return Iter.toArray<(Nat, Principal)>(registry.entries());
>   };
> 
>   system func preupgrade() {
>     // uncomment this for testing
>     //Debug.print("test");
>     registryEntries := Iter.toArray(registry.entries());
>   };
> 
>   system func postupgrade() {
>     registryEntries := [];
>   };
> }

-------------------------

justmythoughts | 2022-03-12 18:25:05 UTC | #4

This is more of a data structures/algorithms solution, but if you want efficient value lookup you might want a second `<V, K>`HashMap that  is inverses your `<K,V>` HashMap, with the same data, just with the values becoming the keys and visa-versa.

Double the space taken up, but now you have instant lookups by value.

-------------------------

JaMarco | 2022-03-13 12:38:09 UTC | #5

[quote="justmythoughts, post:4, topic:11449, full:true"]
This is more of a data structures/algorithms solution, but if you want efficient value lookup you might want a second `<V, K>` HashMap that is inverses your `<K,V>` HashMap, with the same data, just with the values becoming the keys and visa-versa.

Double the space taken up, but now you have instant lookups by value.
[/quote]
Look ups for HashMaps are instant by value but not by key? I thought it would be the other way around.

-------------------------

skilesare | 2022-03-13 14:44:26 UTC | #6

Only if you have two of them <a,b> and <b,a>.

The trick here is that a lot of times b is an object and you are going to have to come up with a hash function and equality function for your object.

You may also want to consider using TrieMaps instead since they are much more memory efficient. See: https://forum.dfinity.org/t/nftanvil-ic-network-tests-report/11001/

-------------------------

rbole | 2022-03-14 05:44:52 UTC | #7

Thanks to all answers, I think to write the example - implemented as Trie Element - would be good exercise  f√ºr me.

-------------------------

MCLYang | 2022-06-14 15:10:54 UTC | #8

Maybe this is relevant: https://github.com/aviate-labs/bimap.mo

-------------------------

MCLYang | 2022-07-04 10:25:15 UTC | #9

I test all cases for [GitHub - aviate-labs/bimap.mo: Generic Bijective Maps in Motoko](https://github.com/aviate-labs/bimap.mo). It works very well. Just import it as a module then are ready to go. We use the library in our project: https://github.com/Itoka-DAO/IC-XRP/blob/main/src/icxrp/bridge.mo

-------------------------

