ildefons | 2023-10-28 16:39:38 UTC | #1

I would like to develop a Motoko function to random sample a vector. It should look like:


```
let v: [Nat] = [1,2,3,4,5,6,8,9];
let vv: [Nat] = randomSample(sample=v, num_samples=4, with_repetition=false, seed=12);
// vv = [2,4,6,1];
```

Given a fixed `seed` and a `sample` vector, we should always return the same vector `vv`

Any hint on how should I proceed?

-------------------------

tomijaga | 2023-10-28 19:04:22 UTC | #2

You can check out @Zenvoich's [fuzz](https://mops.one/fuzz) library or the [Random](https://internetcomputer.org/docs/current/motoko/main/base/Random/) module in the base lib to generate the samples for the `vv` array.

-------------------------

ildefons | 2023-10-29 14:40:40 UTC | #3

Hi @tomijaga , It's the first time I heard about the Motoko "on-chain" package manager "mops". Is this the standard way to use existing Motoko packages? 
I read also in the "mops" we page that I should install the base package using "mops":  `mops add base` but this is weird because the bas3e package was already available by default. Excuse me for diverting topic but I would like to use the fuzz package and this using mops is something new

-------------------------

skilesare | 2023-10-29 14:44:19 UTC | #4

Mops is the state of the art and a much better experience than vessel.  As a community we likely need do some maintenance and get some of the classic packages in there, but I'm trying to publish anything new that I build there.

-------------------------

ildefons | 2023-10-29 14:46:32 UTC | #5

What about the "base" library, do I really nned to do "mops add base"?

-------------------------

skilesare | 2023-10-29 14:56:32 UTC | #6

Maybe you get base for free?  I'm not sure...I think it may default to the latest version and add base for you. @ZenVoich would be able to clear that up.

-------------------------

ZenVoich | 2023-10-29 15:38:21 UTC | #7

[quote="ildefons, post:5, topic:24117, full:true"]
What about the “base” library, do I really nned to do “mops add base”?
[/quote]

By default, dfx uses the base package that comes with it.

If you set `packtool` in `dfx.json`, then dfx will not add the base package, but will leave it up to packtool.

So yes, if you want to use `mops` and you need `base` package, then you need to add it to `mops.toml`

-------------------------

ildefons | 2023-10-29 19:29:35 UTC | #9

I have installed `mops` and with it, the package `fuzz`. however, when I do `dfx generate` I get an error with the base library:


```
Stderr:
.mops/base@0.10.1/src/Text.mo:817.43-817.47: type error [M0072], field textLowercase does not exist in type ...
```

It seems that there is something inconsistent in the "mops" base library? perhaps I should delete something before doing dfx generate?

-------------------------

tomijaga | 2023-10-29 21:07:35 UTC | #10

You need to install the most recent version of the motoko compiler (`v0.10.1`) that contains the `textLowercase()` function in the `prim` module and then update dfx to use the newly installed compiler. 
Installing the `mocv` cli tool (also created by @ZenVoich ) and following the [setup instructions](https://github.com/ZenVoich/mocv#setup) should fix the issue.

-------------------------

timo | 2023-10-30 07:43:30 UTC | #11

[quote="ildefons, post:1, topic:24117"]
`with_repetition=false`
[/quote]

If you want a permutation (i.e. no repetitions) then you need to some own code on top of fuzz. I don't think that's provided by fuzz or any other pseudo-random number library.

-------------------------

skilesare | 2023-10-30 11:25:33 UTC | #12

You could push your selections into a Set until the desired number are found. There is likely a more efficient way, but depending on your use case, that would likely be the most compact using existing libraries.

-------------------------

