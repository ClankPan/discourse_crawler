coin_master | 2021-06-07 11:35:16 UTC | #1

Hello,
I am starting to learn Motoko and I am walking through the documentations which is fantastically written, but I am missing a playground where I  want to just play with the code.
Is there something like that or even a REPL where I can write Motoko code and just run without having to run all the setup?
I am talking about something like this https://www.typescriptlang.org/play

-------------------------

kritzcreek | 2021-06-16 08:28:21 UTC | #2

If you're already reading the documentation at https://sdk.dfinity.org/docs/language-guide/motoko.html every(most) code block in there already is such a playground. You can change them and press the `Run` button in the top-right to evaluate the code.

-------------------------

coin_master | 2021-06-07 11:34:47 UTC | #3

Thanks I didn't know that you can change the code.
Although this works, however I would recommend an improvement on this to be a stand alone page.

-------------------------

hackape | 2021-06-16 08:28:21 UTC | #4

I put together a playground couple days ago. Not much, just the doc snippet moved to a standalone page. 

https://hackape.github.io/motoko-playground/

-------------------------

claudio | 2021-06-07 16:22:43 UTC | #5

Word of warning though. The playground supports both more features (eg. recursive actor classes) and fewer features (eg. cycle transfer, state rollback on trap) than code that is compiled to run on the internet computer. This is because it's a simple interpreter designed to exercise some but not all of language design.

But thanks for doings this!

-------------------------

wang | 2021-06-09 06:10:27 UTC | #6

How feasible is it to compile moc to Wasm so we can have an on-chain compiler? What about to JS so we can build web IDEs?

-------------------------

chenyan | 2021-06-09 06:13:57 UTC | #7

OCaml to Wasm support is not great. But we do have a JS version of moc, and will have a web IDE coming up in a few weeks :)

-------------------------

coin_master | 2021-06-18 05:53:27 UTC | #8

Thanks to @hackape I have also deployed his work on the ic
check this out
https://bgtba-gyaaa-aaaad-qagya-cai.ic.fleek.co/

-------------------------

cryptoschindler | 2021-06-20 09:27:33 UTC | #9

This would be nice to have on canlista!

https://k7gat-daaaa-aaaae-qaahq-cai.ic0.app/

-------------------------

coin_master | 2021-06-20 11:35:00 UTC | #10

How do I add it to canlista?
Edit: found it

-------------------------

coin_master | 2021-06-21 09:16:14 UTC | #11

What's an easier/more elegant way to use the interpreter code instead of relying on the compiled code, so we can build on that.

-------------------------

