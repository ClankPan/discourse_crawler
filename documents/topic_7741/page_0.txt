tommccann | 2021-10-07 04:05:43 UTC | #1

In this page of the documentation [https://sdk.dfinity.org/docs/developers-guide/sdk-guide.html](sdk-guide) it states the following:

> Regardless of the development workflow you choose, keep in mind that when you deploy a canister for the first time, either on a local execution environment or on the Internet Computer, a unique [principal identifier](https://sdk.dfinity.org/docs/developers-guide/glossary.html#g-principal) is created for your canister smart contract.

From reading the glossary I was led to believe that a principal describes a person with an identity, yet the above paragraph implies that the canister has a principal id. Does it mean that a principal identifier can be associated with a canister? i.e. that a principal identifier can be the controller for a canister?

-------------------------

wole | 2021-10-07 11:22:17 UTC | #2

Useful discussion here https://forum.dfinity.org/t/what-is-the-difference-between-account-identifier-principal-identifier-and-public-key/3677

Yes, a principalId (i.e. a user) can be the controller. A controller is an identity that has rights to manage the canister. It is usually the *textual representation* of a principal.

-------------------------

senior.joinu | 2021-10-07 23:10:52 UTC | #3

Principal describes an _entity_ (like a legal entity) - an actor in a system which is enabled to perform actions  on their own.

I don't know for sure, but there is an opinion that this term was inspired by [Agency agreement](https://en.wikipedia.org/wiki/Agency_agreement) terminology. Which seems okay to me, since it is pretty simple to describe a canister like an agent of the agency agreement.

-------------------------

cyaolong | 2021-10-07 13:21:34 UTC | #4

As Principal ID to me, it can be referred to a normal user enjoying IC Dapps, and it can also be an ID for a Canister where Dapps run on it.

-------------------------

