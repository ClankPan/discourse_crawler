NS01 | 2023-03-23 20:54:11 UTC | #102

Hello Folks, 

I'm new to this working group. I'm looking at ICRC standards as the next part of the 221Bravo App build gets closer. One quick question - is there a plan to have a method for finding the last transaction (tip of chain)? 

This would be really handy for what I'm trying to do and I imagine other would find it useful too. 

Many Thanks, 

Nathan.

EDIT - Ignore this just spotted the log_length info in the returned transactions.

-------------------------

timo | 2023-03-23 11:43:45 UTC | #103

Is there any best practice on how "small" subaccount ids are padded, on the left or on the right? Regardless of whether the small subaccount id represents an integer or a short blob, where is it best to place the padding with 0-bytes?

-------------------------

benji | 2023-03-23 12:40:54 UTC | #104

Subaccounts are left padded up to the nearest 4-bit boundary.

-------------------------

timo | 2023-03-23 14:23:19 UTC | #105

So you mean if I want to create a subaccount that corresponds to a principal and the principal is 29 bytes then the canonical way (according to a written or unwritten standard) would be to have 3 zero-bytes followed by the 29 principal bytes?

There is one unfortunate thing about this choice. If you ever wanted to recover the principal from the subaccount id then it is not uniquely possible because the principal itself can start with a zero byte. If the padding was on the right then it would be possible because principals never end in a zero byte (currently they can only end in 01-04).

-------------------------

benji | 2023-03-23 16:57:29 UTC | #106

bit, not byte.

I don't really follow your argument... It doesn't matter how many leading 0s you have does it?

-------------------------

timo | 2023-03-23 17:07:29 UTC | #107

I mean left padded vs right padded. Not talking about the 4bit boundary.

Right padding is an injective operation because principal never ends in a 0 byte.

Left padding is not injective because principal can start with a zero byte.

-------------------------

benji | 2023-03-23 17:17:45 UTC | #108

It would greatly surprise me if principals can contain leading zeros, i.e. 00000101100100000010b !== 0101100100000010b.
@mariop @dieter.sommer @roman-kashitsyn

-------------------------

timo | 2023-03-23 17:29:45 UTC | #109

Not IC-generated ones. But all self-authenticating principals start with a hash according to https://internetcomputer.org/docs/current/references/ic-interface-spec/#id-classes which can start with a 0.

To clarify: I am not worried about collisions but about invertibility of the padding operation.

-------------------------

benji | 2023-03-23 17:30:20 UTC | #110

And when we compare those principals they're different? Or is it just that the textual representation of one of them not canonical?

-------------------------

timo | 2023-03-23 17:34:19 UTC | #111

[quote="benji, post:110, topic:11925"]
And when we compare those principals they’re different?
[/quote]

The two that you have written are different.

There is no problem for the textual representation. It encodes the additional zeros and comes out as a different string.

-------------------------

benji | 2023-03-23 21:08:35 UTC | #112

Judging from the specification it shouldn't be a problem because

> `H` denotes SHA-224

so we could deduce the number of leading zeros if the last byte is 0x02 or 0x03 (provided that the canister knows it's a principal, which it should almost always do). It may be a problem only if it's a 0x7f principal but I'm not sure how much that is being used. But even then the IC interface spec doesn't specify the blob comparison operator.

-------------------------

roman-kashitsyn | 2023-03-24 09:40:39 UTC | #113

Most canisters injecting principals into subaccounts use one byte for the actual length and pad with zeros on the right. The textual representation for such an approach is not optimal, but I don't think it's a big deal.

Canisters that want to shorten the textual representation could use the mirror approach:
`Subaccount = [pad zeros][principal bytes][length byte]`.

-------------------------

timo | 2023-03-24 10:07:22 UTC | #114

Is there really precedence for doing it that way? In particular with using the length byte?

If they pad on the right then length byte wouldn’t be necessary. My preferred solution now, taking into account the textual encoding as well, would be to use a length byte (as prefix) and pad on the left.

-------------------------

dieter.sommer | 2023-03-31 11:20:24 UTC | #115

The slides, recording, and minutes of the WG Meeting of March 21 are available:
[**Slides** ](https://docs.google.com/presentation/d/1sOj9HEcnn_p9m1Xh1jlLfOFMB0KIUs9Lvy1XBwFE3qk/edit?usp=share_link)
[**Recording** ](https://drive.google.com/file/d/1YNzDNZFlGcqcaGabXAClXqnYrZsHLigi/view?usp=share_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-03-21)

-------------------------

dieter.sommer | 2023-04-04 09:26:18 UTC | #116

We are skipping the WG meeting today April 4, 2023, due to multiple people, including myself, being on vacation.

-------------------------

Agent2222 | 2023-04-05 04:39:17 UTC | #117

Hi everyone, I'm currently going through the token standard pains, and I can tell you that DIP721 was the simplest solution for me so far, until I found out that the community was moving away from it. 

Now i'm trying to switch to EXT and its really convoluted. I get the expandable idea, but theres so much there that I can't tell what is necessary. Even now with discovering ICRC I see there are already multiple versions. 

I think it would help if there was a State of the Dapp like app that the community could upvote on to display the overall consensus. There's no sense in using the term standard when there are multiple "standards".

-------------------------

Severin | 2023-04-05 09:13:34 UTC | #118

[quote="Agent2222, post:117, topic:11925"]
Even now with discovering ICRC I see there are already multiple versions.
[/quote]

This sounds like a misunderstanding. Different ICRC standards are not necessarily replacing previous ones. The basic ICRC-1 lends itself to be expanded by also supporting ICRC-2, but that doesn't mean that ICRC-1 will make sense to combine with ICRC-345

-------------------------

Agent2222 | 2023-04-05 16:06:06 UTC | #119

Yes, you're right. I've been searching for answers regarding EXT and other NFT token standards, and because of the lack of answers I ended up here ^_^.

-------------------------

dieter.sommer | 2023-04-17 14:55:50 UTC | #120

Dear community! See [here](https://forum.dfinity.org/t/to-have-or-not-to-have-approval-expiration-for-icrc-2-community-help-requested/19208) for an issue where we need help from the community. Would be great if we could get more input and opinions from the community on this issue, otherwise the WG needs to decide on its own.

-------------------------

dieter.sommer | 2023-04-17 15:04:10 UTC | #121

Dear working group members!

Here is the proposed agenda and draft slides for the ledger and tokenization WG meeting on **Tuesday, April 18, 2023**. See the working group calendars ([Google Calendar](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda
* ICRC-2: Recurring payments (continuing the discussion, esp. whether expirations are needed and, if so, which semantics they should have)

[Slides ](https://docs.google.com/presentation/d/1LpfMQsfJRJczmthUVxWBCbpDKVJv-JvDtG22HNJXMI4/edit#slide=id.g125c3b1bfa8_0_0)

Talk to you tomorrow!

-------------------------

dieter.sommer | 2023-04-28 06:29:27 UTC | #122

Dear Working Group!

In the recent WG meeting we have discussed a change of semantics of ICRC-2 approvals to be closer to ERC-20. Please have a look at the [PR-109](https://github.com/dfinity/ICRC-1/pull/109) and comment if you have inputs to this!

Thanks and have a nice weekend!

-------------------------

dieter.sommer | 2023-05-01 08:34:14 UTC | #123

Dear working group members!

Here is the proposed agenda and draft slides for the ledger and tokenization WG meeting on **Tuesday, May 2, 2023**. See the working group calendars ([Google Calendar](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-2: Semantics for approvals.

The goal is to find an agreement in this meeting and finish the ICRC-2 topic off to move forward to new topics.

**Please have a look at [PR-109](https://github.com/dfinity/ICRC-1/pull/109) before tomorrow's meeting**

[Slides ](https://docs.google.com/presentation/d/1rtYDv_fxUfg08oDx8SKaaBVHyGj8WOksR95QXeVB7po/edit?usp=share_link)

See you tomorrow!

-------------------------

dieter.sommer | 2023-05-01 10:56:09 UTC | #124

The slides, recording, and minutes of the WG Meeting of April 18 are available:
[**Slides** ](https://docs.google.com/presentation/d/1LpfMQsfJRJczmthUVxWBCbpDKVJv-JvDtG22HNJXMI4/edit?usp=share_link)
[**Recording** ](https://drive.google.com/file/d/1ukhkNrgfAODLyaY7OGxVR3BA5tyu7wv7/view?usp=share_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-04-18)

-------------------------

levi | 2023-05-01 21:13:05 UTC | #125

Hi Everyone, 

[PR-109](https://github.com/dfinity/ICRC-1/pull/109) fixes the issue of [93](https://github.com/dfinity/ICRC-1/issues/93).

-------------------------

timo | 2023-05-02 08:50:51 UTC | #126

I am curious what is a use case that requires the `expected_allowance` field? Can someone provide an example?

-------------------------

dieter.sommer | 2023-05-11 12:21:58 UTC | #127

Dear WG members!

As discussed in the recent meeting, we want to move forward with a WG vote on the ICRC-2 and the ERC-20 semantics for approvals. Please cast your vote in its [GitHub issue](https://github.com/dfinity/ICRC-1/issues/113).

Just tagging the members I know the forum ids of:
@skilesare, @levifeldman, @Maxfinity, @lastmjs, @simpson, @timo, @benji, @roman-kashitsyn, @mariop

-------------------------

dieter.sommer | 2023-05-16 10:11:25 UTC | #128

Dear working group members!

Here is the proposed agenda and draft slides for the ledger and tokenization WG meeting on **Tuesday, May 16, 2023**. See the working group calendars ([Google Calendar](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-3: A standard for accessing the transaction log

Slides

* https://docs.google.com/presentation/d/1nQ7oWeb9Xk8CW1aXyP1vqMFMxI3xZRvovXu1SVN6lPo/edit#slide=id.g125c3b1bfa8_0_0

Relevant minutes:

* https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-01-10

See you tomorrow!

-------------------------

mariop | 2023-05-17 11:32:48 UTC | #129

[quote="timo, post:126, topic:11925, full:true"]
I am curious what is a use case that requires the `expected_allowance` field? Can someone provide an example?
[/quote]

It allows the caller to change the allowance conditionally using compare-and-swap. We think it's good to have the option to set it because the allowance may change in between it's displayed to the user and the user tries to change it.

-------------------------

coin_master | 2023-05-22 07:50:59 UTC | #130

Any information when ICRC-2 will go for NNS vote?

-------------------------

mariop | 2023-05-22 08:46:35 UTC | #131

We are preparing the proposal right now.

-------------------------

mariop | 2023-05-22 18:33:31 UTC | #132

Dear working group members,

As discussed during the wg, I've opened a [new forum thread](https://forum.dfinity.org/t/icrc-3-discussion/20167?u=mariop) about ICRC-3 with a proposal as starting point.

-------------------------

coin_master | 2023-05-25 06:31:44 UTC | #133

Was it publishing yet? I might have missed it

-------------------------

dieter.sommer | 2023-05-29 11:11:56 UTC | #134

The slides, recording, and minutes of the WG Meeting of May 02 are available:
[**Slides** ](https://docs.google.com/presentation/d/1rtYDv_fxUfg08oDx8SKaaBVHyGj8WOksR95QXeVB7po/edit?usp=share_link)
[**Recording** ](https://drive.google.com/file/d/168t4RI3c1pQSO16AUnQgQQRTuDjPwR5L/view?usp=share_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-05-02)

-------------------------

dieter.sommer | 2023-05-29 13:38:02 UTC | #135

The slides, recording, and minutes of the WG Meeting of May 16 are available:
[**Slides** ](https://docs.google.com/presentation/d/1nQ7oWeb9Xk8CW1aXyP1vqMFMxI3xZRvovXu1SVN6lPo/edit?usp=share_link)
[**Recording**](https://drive.google.com/file/d/1fv7W6Ibw6OlpRE5vcF1rZmd4hO44QVkW/view?usp=share_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-05-16)

-------------------------

dieter.sommer | 2023-05-29 13:42:31 UTC | #136

Dear working group members!

Here is the proposed agenda and draft slides for the ledger and tokenization WG meeting on **Tuesday, May 30, 2023**. See the working group calendars ([Google Calendar ](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link ](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-3: A standard for accessing the transaction log

Specifically, we want to
* continuing the discussions from the recent meeting
* **discuss [the proposal](https://forum.dfinity.org/t/icrc-3-discussion/20167)**

Slides

* [2023-05-30 WG meeting slides](https://docs.google.com/presentation/d/1_UJIXPJF31LchhQjX1LMEMNA2OptnXkME8f7ZVPhaZ8/edit#slide=id.g125c3b1bfa8_0_0)

Relevant minutes:

* [ICRC-3 discussion of May 2](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-05-16)

See you tomorrow!

-------------------------

dieter.sommer | 2023-05-29 13:47:34 UTC | #137

Hi DeFi projects!

We are planning to discuss [the proposal](https://forum.dfinity.org/t/icrc-3-discussion/20167) made by  @mariop on ICRC-3 in the upcoming WG meeting tomorrow May 30.

Please have a look at it and contribute your thoughts in the forum topic. Of course, you are also welcome to join the WG meeting, see the meeting calendar in the post just above.

@simpson, @ccyanxyz, @brutoshi, @Maxfinity, ...

-------------------------

mariop | 2023-05-30 08:05:39 UTC | #138

Hi everyone,

The motion proposal [122613](https://nns.ic0.app/proposal/?u=mxzaz-hqaaa-aaaar-qaada-cai&proposal=122613) for the [ICRC-2](https://github.com/dfinity/ICRC-1/tree/main/standards/ICRC-2) Fungible Token Standard is live and being voted right now!

Keep in mind that the summary is missing the API part because of an escaping mistake. We should proceed with voting as what is missing is just a copy of what is available in the standard repository.

Thanks to everyone involved with the new standard.

-------------------------

coin_master | 2023-06-19 05:17:28 UTC | #139

Is there a timeline for upgrading ckBTC to ICRC2?

-------------------------

Manu | 2023-06-19 10:41:25 UTC | #140

We don't have a super precise timeline but I would expect this change to land in the coming months.

-------------------------

coin_master | 2023-06-21 06:00:08 UTC | #141

Why not ASAP though?
I would say not moving to ICRC2 is limiting the progress of ckBTC and Defi in general.
Who would in the right mind would send millions of BTC to an external address of a service and hoping someone on the other end would catch it? I wouldn’t.
Moving ckBTC to ICRC2 would signal to everyone it’s okay to move every other token to ICRC2 and move Defi forward.

-------------------------

Manu | 2023-06-21 07:19:57 UTC | #142

It is actually a priority that is being worked on at DFINITY, but it is not a small task: the ledger implementation first needs to support ICRC-2 (which is being worked on), and then we would need to change the ckBTC minter such that the BTC -> ckBTC flow can take advantage of ICRC-2, and the NNS FE dapp would need an update to support this. So I agree it's important, but it's hard to give a precise estimate of when we could submit proposals to add this functionality.

-------------------------

coin_master | 2023-06-21 09:30:25 UTC | #143

Thanks that’s nice to hear.
I appreciate the work DFINITY is putting in to this.

-------------------------

dieter.sommer | 2023-06-26 20:11:58 UTC | #144

The slides, recording, and minutes of the WG Meeting of May 30 are available:
[**Slides** ](https://docs.google.com/presentation/d/1_UJIXPJF31LchhQjX1LMEMNA2OptnXkME8f7ZVPhaZ8/edit?usp=drive_link)
[**Recording**](https://drive.google.com/file/d/1zfTqWyQrIQeZ6_lmpDeLR-eQTZ7FbztT/view?usp=drive_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-05-30)

-------------------------

dieter.sommer | 2023-06-26 20:13:02 UTC | #145

Dear working group members!

Here is the proposed agenda and draft slides for the ledger and tokenization WG meeting on **Tuesday, June 27, 2023**. See the working group calendars ([Google Calendar ](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link ](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-3: A standard for accessing the transaction log

Specifically, we want to
* continuing the discussions from the recent meeting

See you tomorrow!

-------------------------

timo | 2023-07-07 08:24:05 UTC | #146

The [specification](https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-1/TextualEncoding.md) for the textual encoding of subaccounts, which is part of ICRC-1, is in status "Draft". So it says in the document itself. What does it take to move to "Accepted" and is there a timeline for it?

-------------------------

dieter.sommer | 2023-07-08 10:35:02 UTC | #147

The slides, recording, and minutes of the WG Meeting of June 13 are available:
[**Slides** ](https://docs.google.com/presentation/d/1tIvXbGAHoqwUtCt4AbhbJ2gzCalBzO73vquk6Ld69Ek/edit?usp=drive_link)
[**Recording**](https://drive.google.com/file/d/1ccyPjpj9q8pcKR7nSblWJYqS8-sSoRl-/view?usp=drive_link)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-06-13)

-------------------------

NS01 | 2023-07-08 22:56:54 UTC | #148

Hello Folks, 

I've come across this ICP account 8c349a0dd0a86420a0fcb2f5d66dd5a93faeda4cae7ba60f0a56f1d17263e589 which seems to have a number of outgoing '0' sum transactions - some of which pay a transfer fee and some which don't. This confuses me somewhat and as such I'd like to clarify the fee situation for ICP and ICRC in regards '0' value transactions. 

1. Is it possible/ should it be possible to make a 0 sum transaction in ICRC?
2. If so should that transaction deduct a fee? 
3. Does ICRC differ from ICP ledger in this regard? 

Many Thanks, 

Nathan.

-------------------------

mariop | 2023-07-09 10:04:36 UTC | #149

[quote="NS01, post:148, topic:11925, full:true"]
Hello Folks,

I’ve come across this ICP account 8c349a0dd0a86420a0fcb2f5d66dd5a93faeda4cae7ba60f0a56f1d17263e589 which seems to have a number of outgoing ‘0’ sum transactions - some of which pay a transfer fee and some which don’t. This confuses me somewhat and as such I’d like to clarify the fee situation for ICP and ICRC in regards ‘0’ value transactions.

1. Is it possible/ should it be possible to make a 0 sum transaction in ICRC?
2. If so should that transaction deduct a fee?
3. Does ICRC differ from ICP ledger in this regard?

Many Thanks,

Nathan.
[/quote]

It is possible to make a 0 amount transaction in ICP and ICRC as long as the caller can pay the fee. The fee is required every time the state of the Ledger changes like in the case of adding a new block.

I can speculate on potential reasons on why 0 amount transactions should exist. The Ledger allows to store a piece of data in the `memo` field. A user could decide to pay the fee to record something on the Ledger.

-------------------------

NS01 | 2023-07-09 12:10:36 UTC | #150

I agree that 0 transactions with a fee paid could be useful in certain situations. 

My understanding is that only transaction types will have a fee for the sender. Burn and Mint, although changing balances on the ledger, dont have a fee recorded against them? 

Any idea why the ICP account above has 0 fee transactions.. the pattern seems to suggest a bug which was then fixed?

-------------------------

mariop | 2023-07-09 15:16:52 UTC | #151

[quote="NS01, post:150, topic:11925"]
My understanding is that only transaction types will have a fee for the sender. Burn and Mint, although changing balances on the ledger, dont have a fee recorded against them?
[/quote]

Mint doesn't have a fee because the Minting Account is special and making it pay fees doesn't make sense given that it can mint tokens. The Minting Account must be something trustworthy that won't break the Ledger such as a trusted DAO.

Burn is different because it can be initiated by any Account. The [standard says that burn has no fee but also that a Ledger may require a minimum amount to burn](https://www.sqlite.org/lang_datefunc.html). This minimum amount replaces the fee. In the ICP and ICRC Ledgers developed by DFINITY, this minimum amount is equivalent to the fee. You can see the ICP check [here](https://github.com/dfinity/ic/blob/7fae88d687b76f36b4c26e93a1b2341eb1820480/rs/rosetta-api/icp_ledger/ledger/src/main.rs#L257). If the minimum amount is not met then the caller receives the error `BadBurn` as specified in the standard.

-------------------------

mariop | 2023-07-10 08:28:00 UTC | #152

[quote="NS01, post:150, topic:11925"]
Any idea why the ICP account above has 0 fee transactions… the pattern seems to suggest a bug which was then fixed?
[/quote]

That was a bug that got fixed in 2021. The reason why this kind of 0 amount transactions exist is for a legacy feature of the ICP Ledger called `notify`. When the notification for a block happens, the Ledger records a new block with amount 0 and the memo set to the previous block, e.g. block [15921](https://dashboard.internetcomputer.org/transaction/0b094ae91cfa10fd8a589d75d7ab8e54de75a9fdc6ebad9a4c02e5a08f5d2a38) memo is set to [15920](https://dashboard.internetcomputer.org/transaction/BF7B2E45F0B84588313D03803B85E0BDB6EEDADB11838055DFB2A2E7A439B951). Now that the bug is fixed, the notifier has to pay a standard fee.

-------------------------

mariop | 2023-07-11 16:49:29 UTC | #153

The slides and minutes of the WG Meeting of July 11 are available:
[**Slides**](https://docs.google.com/presentation/d/17h_7w3_yK2SdM2wOHW7Wkz8pCIxNN9AV7iioZNy0_iE/edit?usp=sharing)
[**Minutes**](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-07-11)

-------------------------

timo | 2023-07-17 03:48:02 UTC | #154

Is there an agreed-upon name for the textual encoding of an ICRC-1 account? The spec just calls it a textual representation. But what shall users call it when they speak about it. As in „give me your account ….“ What is ….? Is it account identifier, account string, account label, account address, etc?

-------------------------

NS01 | 2023-07-20 09:36:07 UTC | #155

Good question! Has the format for them (what ever the name is) been agreed.. trying to work out if I missed it. 

I'm using prinicpal.subaccount at the moment but I'm aware that full stops can cause issues for URL encoding

-------------------------

mariop | 2023-07-20 09:55:12 UTC | #156

The textual encoding is finalized, you can read about it [here](https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-1/TextualEncoding.md).

-------------------------

mariop | 2023-07-25 13:19:08 UTC | #157

Dear working group members!

Here is the proposed agenda and [draft slides](https://docs.google.com/presentation/d/1if2iZPLWSg6gV0siInuBBST_HXiLaVAfUlgGMdSse04/edit?usp=sharing) for the ledger and tokenization WG meeting on **Tuesday, July 25, 2023**. See the working group calendars ([Google Calendar ](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link ](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-3 Vote
* Next topic

Specifically, we want to

* summarize the ICRC-3 proposal and then [vote it here](https://github.com/dfinity/ICRC-1/issues/136)
* pick the next topic of the working group. Candidates are ICRC-4 Batching, ICRC-5 Indexing, URL Namespacing for ICRC canisters and signed transactions.

See you later!

-------------------------

mariop | 2023-07-28 10:23:57 UTC | #158

The slides and minutes of the WG Meeting of July 25 are available:
[Slides](https://docs.google.com/presentation/d/1if2iZPLWSg6gV0siInuBBST_HXiLaVAfUlgGMdSse04/edit?usp=sharing)
[Minutes](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-07-25)

-------------------------

dieter.sommer | 2023-08-07 20:59:11 UTC | #159

For completeness, here is a transcript of the WG Meeting of June 27, 2023:
[Transcript](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-06-27)
Recording not available

-------------------------

dieter.sommer | 2023-08-08 07:33:08 UTC | #160

Please find the recording of the WG Meeting of July 11, 2023 below:
[**Recording** ](https://drive.google.com/file/d/1hSyd4yBkw5LpjuKMjRgB1WSu2RlFKd8d/view?usp=sharing)
[**Chat** ](https://drive.google.com/file/d/1Hm6xSwoQU9EqQTLX7XX60PPkhIIsp-sk/view?usp=drive_link)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings**](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

dieter.sommer | 2023-08-08 07:41:09 UTC | #161

Please find the recording of the WG Meeting of July 25, 2023 below:
[**Recording** ](https://drive.google.com/file/d/1X1FjaiGxUPIZ4PvUYLsGoSlb0tZGV6ZO/view?usp=sharing)
[**Chat**](https://drive.google.com/file/d/1XCIVRwq8GxriJ7hRAPfN9bdgC2czpnwP/view?usp=drive_link)

-------------------------

dieter.sommer | 2023-08-08 09:26:51 UTC | #162

Dear WG members!

Due to holiday season and multiple core contributors not being available, we decided to cancel today's meeting of 2023-08-08.

-------------------------

NS01 | 2023-08-15 07:59:24 UTC | #163

Good Morning, 

Just a quick heads up - anyone who uses the Dfinity icrc-ledger-types package (https://github.com/dfinity/ic/tree/master/packages/icrc-ledger-types) will get an error if they upgrade to candid 0.9.0+ 

Breaking changes to candid::Func creates an error in icrc3/archive.rs (code below)

```
impl<Input: CandidType, Output: CandidType> CandidType for QueryArchiveFn<Input, Output> {
    fn _ty() -> candid::types::Type {
        candid::types::Type::Func(candid::types::Function {
            modes: vec![candid::parser::types::FuncMode::Query],
            args: vec![Input::_ty()],
            rets: vec![Output::_ty()],
        })
    }

    fn idl_serialize<S>(&self, serializer: S) -> Result<(), S::Error>
    where
        S: candid::types::Serializer,
    {
        candid::types::reference::Func::from(self.clone()).idl_serialize(serializer)
    }
}
```

I've been using this library to call SNS ICRC canisters. I'm trying to get composite queries to work so need candid 0.9.0.. does anyone know how to update the code above to use the define_function! as per candid release notes? (https://github.com/dfinity/candid/blob/master/Changelog.md#2023-06-30-rust-090) 

My rust skills are still in development!

Thanks,

Nathan

-------------------------

timo | 2023-08-17 10:52:10 UTC | #164

Does ICRC-1 explicitly allow or disallow a transfer of amount 0?

EDIT: I tested the ICRC-1 interface of the ICP ledger and it does allow it (just like the legacy interface of the ICP ledger always did).

-------------------------

0rions | 2023-08-17 09:11:34 UTC | #165

Hey Nathan,
I would advise you to wait a bit until upgrading candid to version 0.9.+. But if you really want to use a recent candid version here are the required changes:

```
impl<Input: CandidType, Output: CandidType> CandidType for QueryArchiveFn<Input, Output> {
    fn _ty() -> candid::types::Type {
        candid::types::internal::TypeInner::Func(candid::types::internal::Function {
            modes: vec![candid::types::internal::FuncMode::Query],
            args: vec![Input::_ty()],
            rets: vec![Output::_ty()],
        })
        .into()
    }

    fn idl_serialize<S>(&self, serializer: S) -> Result<(), S::Error>
    where
        S: candid::types::Serializer,
    {
        candid::types::reference::Func::from(self.clone()).idl_serialize(serializer)
    }
}


candid::define_function!(pub QueryBlockArchiveFn : (GetBlocksRequest) -> (BlockRange) query);
candid::define_function!(pub QueryTxArchiveFn : (GetTransactionsRequest) -> (TransactionRange) query);
```

-------------------------

NS01 | 2023-08-17 15:59:16 UTC | #167

Thank you! Am I right in thinking I’ll need candid 0.9 to do composite queries?

It’s not a deal breaker but would make things a bit quicker for users.

-------------------------

0rions | 2023-08-18 09:50:41 UTC | #168

[quote="NS01, post:167, topic:11925"]
Am I right in thinking I’ll need candid 0.9 to do composite queries?
[/quote]
I looked at the candid crate and it seems that indeed you'll need candid 0.9 for composite queries.

-------------------------

levi | 2023-09-05 16:12:21 UTC | #169

Hey @dieter.sommer is there a meeting going on now? There is one scheduled on the calendar. Is there a different calendar or did the schedule change?

-------------------------

mariop | 2023-09-06 07:28:08 UTC | #170

Hey Levi,

It seems that has been an issue with the WG meeting yesterday. I apologize for that and I'll make sure it won't happen again.

The next meeting will be the 19th of September. We will use the zoom link that is part of the existing calendar entries.

-------------------------

dieter.sommer | 2023-09-19 15:43:32 UTC | #171

Dear working group members!

Here is the proposed agenda for the ledger and tokenization WG meeting on **Tuesday, September 19, 2023**. See the working group calendars ([Google Calendar ](https://calendar.google.com/calendar/u/0?cid=Y19jazBncjc5YmtnY29vaWNuMXA4N21vMWVyb0Bncm91cC5jYWxlbmRhci5nb29nbGUuY29t), [calendar browser link ](https://calendar.google.com/calendar/u/0/embed?src=c_ck0gr79bkgcooicn1p87mo1ero@group.calendar.google.com&ctz=Europe/Zurich)) for details and dial-in information.

Agenda

* ICRC-3: A standard for accessing the transaction log

[Slides](https://docs.google.com/presentation/d/1xQ2P8H-7D9PRuwV57lXEiK0Wzr9isMMD7AYOOEWylVA/edit#slide=id.g125c3b1bfa8_0_0)

Specifically, we want to

* try to wrap ICRC-3 up and go towards voting. There have been some issues still open before we can vote on this.


See you later!

-------------------------

dieter.sommer | 2023-09-19 08:59:19 UTC | #172

Please find the recording and minutes of the WG Meeting of August 22, 2023 linked below:
[**Recording**](https://drive.google.com/file/d/116qMOaILlRxaRrpri1DnH0u4hkGOSKh-/view?usp=sharing)
[**Minutes**](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-08-22)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings** ](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

dieter.sommer | 2023-09-20 13:01:44 UTC | #173

Please find the slides, recording, and minutes of the WG Meeting of September 19, 2023 linked below:
[**Recording**](https://drive.google.com/file/d/1PBwH3TBXoFx15_x3UiH4nhvsEA4IgY26/view?usp=sharing)
[**Slides** ](https://docs.google.com/presentation/d/1xQ2P8H-7D9PRuwV57lXEiK0Wzr9isMMD7AYOOEWylVA/edit?usp=sharing)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-09-19)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings** ](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

timo | 2023-09-21 05:33:06 UTC | #174

Are there any wallets yet that support arbitrary ICRC-1 subaccounts (not just the default subaccount)?

-------------------------

zohaib29 | 2023-09-21 06:10:30 UTC | #175

Bitfinity Wallet supports ICRC-1 subaccounts

-------------------------

timo | 2023-09-21 07:26:17 UTC | #176

I see, as far as I can tell it supports sending to arbitrary subaccounts but not receiving, i.e. handling own non-default subaccounts.

-------------------------

zohaib29 | 2023-09-21 08:20:43 UTC | #177

Yes, sending to a subaccount is supported, AFAIK there are no other wallets supporting subaccount transfers atm. You have to handle subaccount transfers at your end using [encode&decodeICRCAccount](https://github.com/dfinity/ic-js/tree/main/packages/ledger#gear-encodeicrcaccount)

-------------------------

timo | 2023-09-21 10:18:26 UTC | #178

Ok. I was hoping to be able to compare UIs to manage own subaccounts. But then I'm glad if our wallet here brings something new to the table (besides being open source): https://forum.dfinity.org/t/announcement-a-full-featured-open-source-icrc-1-wallet
Hope people will find it useful to play around with subaccounts.

-------------------------

NS01 | 2023-09-21 17:42:12 UTC | #179

Quick question - does ICRC-2 change the type of transactions that are returned from the ckBTC ledger?

At the moment I've got a canister indexing ckBTC transactions. This canister pulls transactions from the "get_transactions" endpoint and sorts them as Mint, Burn, Transfer before doing some other calculations. Will the canister find something other than Mint, Burn, or Transfer returned from the ICRC-2 version of ckBTC 'get_transactions' endpoint?

-------------------------

sea-snake | 2023-09-21 18:10:01 UTC | #180

I'm also working on a wallet (React Native) for web/ios/android that will soon be open sourced once I've finished the remaining details and cleaned up some code: https://etk52-fqaaa-aaaak-ae4ca-cai.icp0.io

-------------------------

timo | 2023-09-21 19:02:43 UTC | #181

It looks really nice. Looking forward to it being open sourced. We need more open code for wallets that people can experiment with, learn from and fork.

-------------------------

skilesare | 2023-09-21 19:29:00 UTC | #182

You may want to look here:  https://github.com/dfinity/ICRC-1/tree/icrc-3/standards/ICRC-3#icrc2_approve-schema

I would imagine that icrc 3 will get a new endpoint, so maybe get_transactions will stay untouched...but I think that there will end up being an approve transaction added.  For OGY when we added a DIP20 pass-through, approves would come through as a 0 amount transaction.(example: https://governance.origyn.network/transaction/0bcfa3616bfbd0304dab68a5c0bf6be5b4a1c8ebf4388c96a6cca9fb83a8a2a7).  Since zero transactions are otherwise not allowed we can identify them.  Unfortunately, the approved amount is masked from the ledger and that data is held in the passthrough canister.

-------------------------

NS01 | 2023-09-21 20:09:04 UTC | #183

I hope the old endpoint still works and captures movements of tokens.. it will be a real pain to modify all the ICRC index canisters I've just setup for 221Bravo. 

Got about 30 canisters churning through transaction data. Looking to add OGY sometime soon :)

-------------------------

mariop | 2023-09-22 11:32:42 UTC | #184

[quote="NS01, post:179, topic:11925"]
Will the canister find something other than Mint, Burn, or Transfer returned from the ICRC-2 version of ckBTC ‘get_transactions’ endpoint?
[/quote]

Yes, it will find `approve` https://github.com/dfinity/ic/blob/56800b234dc986c14e8730ba9c26f29811c3db79/packages/icrc-ledger-types/src/icrc3/transactions.rs#L65.

-------------------------

NS01 | 2023-09-22 19:06:57 UTC | #185

Ah ok - am I right in thinking that approve transactions dont change the balance of an account and only earmark funds that can be transferred on another users' behalf? Is the changing of balances still done with a transfer transaction? 

Or am I way off? 😂

-------------------------

mariop | 2023-09-22 20:00:03 UTC | #186

Tokens are transferred by `icrc1_transfer` or a `icrc2_transfer_from` but `icrc2_approve` charges a fee for recording the approval and therefore it changes the balance of the "approver".

For instance, let's say that Alice approves Bob. If the approval is successful then the balance of Alice has been decreased of the fee. That's the only balance that changes.

-------------------------

dieter.sommer | 2023-10-02 15:24:39 UTC | #187

Dear Working Group!

Due to absence of almost everyone from DFINITY side tomorrow, I suggest to cancel the WG meeting of October 3.

-------------------------

sea-snake | 2023-10-02 15:25:45 UTC | #188

Thanks for letting us know :smiley:

-------------------------

dieter.sommer | 2023-10-17 13:44:17 UTC | #189

Dear Working Group!

The next WG meeting is taking place today, October 17, 2023.

As discussed in the recent meeting, the topics are the following:
* [Payment request formats](https://github.com/dfinity/ICRC/issues/22)
* [HTTP request namespacing](https://github.com/dfinity/ICRC/issues/23) (if time)

Hope to see you there!

-------------------------

dieter.sommer | 2023-10-30 14:00:03 UTC | #190

Please find the recording and minutes of the WG Meeting of October 17, 2023 linked below:
[**Recording** ](https://drive.google.com/file/d/1G2dN3Vy0XQQx0R8TH4GRsTKdHaInceNR)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-10-17)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings** ](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

dieter.sommer | 2023-10-30 14:02:42 UTC | #191

Dear Working Group!

The next WG meeting is taking place tomorrow, October 31, 2023.

As discussed in the recent meeting, the topics are the following:

* [ICRC-22 — URI Format for Payment Requests](https://github.com/dfinity/ICRC/issues/22)
  * Revisit the open items based on the [new draft](https://github.com/dfinity/ICRC/issues/22#issuecomment-1784947777).
* [HTTP Request Namespacing](https://github.com/dfinity/ICRC/issues/23)
* [ICRC-4: Batch Transfers](https://github.com/skilesare/ICRC-1/blob/Icrc4/standards/ICRC-4/readme.md#icrc-4-batch-transfers)

We will cover then depending on availability of people and time.

Hope to see you there!

-------------------------

NS01 | 2023-10-30 14:11:54 UTC | #192

Is ICRC-3 complete now? Is that it set :slight_smile:

-------------------------

mariop | 2023-10-30 14:57:42 UTC | #193

Hey @NS01, I'm still working on it. I had to put it aside for a few weeks to deal with other features but I should be able to produce a full spec for next WG together with a tool to verify the compliance of blocks to the ICRC-3 schema. A preview of the tool is already available [here](https://github.com/dfinity/ic/blob/master/packages/icrc-ledger-types/src/icrc3/schema.rs) and is part of `icrc-ledger-types` [0.1.3](https://docs.rs/icrc-ledger-types/0.1.3/icrc_ledger_types/icrc3/schema/fn.validate.html).

-------------------------

skilesare | 2023-10-31 14:07:27 UTC | #194

I've made a formal recommendation on the ICRC-23 - HTTP request namespacing and would love feed back.  We can also discuss more on the call:

https://github.com/dfinity/ICRC/issues/23#issuecomment-1787282250

-------------------------

dieter.sommer | 2023-11-01 15:40:03 UTC | #195

Please find the recording and minutes of the WG Meeting of October 31, 2023 linked below:
[**Recording** ](https://drive.google.com/file/d/1qc1iND7UXKG6l4eQtXdt-L3haMpnCQ-y/view?usp=sharing)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-10-31)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings**](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

dieter.sommer | 2023-11-10 14:10:48 UTC | #196

Dear Working Group and community!

In the upcoming meeting on Nov 14, 2023, we suggest to discuss ICRC-3 as progress has been made towards resolving remaining issues and completion of the standard.

[ICRC-3 draft](https://github.com/dfinity/ICRC-1/pull/128/files)

-------------------------

dieter.sommer | 2023-11-28 10:27:41 UTC | #197

Please find the recording and minutes of the WG Meeting of November 14, 2023 linked below:
[**Recording** ](https://drive.google.com/file/d/1Hz3kI8_Bg5mu_kmywQuIhv4E3-Xwxckc/view)
[**Minutes** ](https://github.com/dfinity/ICRC-1/blob/main/Charters.md#2023-11-14)

You can find all the recordings, chats, and slides of all meetings here:
[**All files of all meetings**](https://drive.google.com/drive/u/0/folders/1TlaDISjZpAKpqJdXzYMw4hhuKj5YxZ3J)

-------------------------

dieter.sommer | 2023-11-28 14:41:46 UTC | #198

In today's meeting of Nov 28, 2023, we suggest to continue the discussion on ICRC-3.

[ICRC-3 draft ](https://github.com/dfinity/ICRC-1/pull/128/files)

-------------------------

mariop | 2023-11-29 12:16:25 UTC | #199

Hi, the second draft of the ICRC-3 standard is available (see [this](https://forum.dfinity.org/t/icrc-3-draft-v2-and-next-steps/25132)). People part of the working group can now vote to make the proposal official https://github.com/dfinity/ICRC-1/issues/169.

-------------------------

dieter.sommer | 2023-11-29 14:20:42 UTC | #200

:slight_smile: propose a minor extension to ICRC-3 that specifies how future ICRC standards that build on top of ICRC-3 should name their `op` in order to avoid naming clashes.

See https://github.com/dfinity/ICRC-1/pull/128/files#r1409273874.

*tl;dr*
We need to namespace the `op` that goes into blocks. My proposal is to keep is as succinct as possible: For the `transfer_from` operation defined in `ICRC-xy`, the op must begin with the prefix `xz`, e.g., `30xfer_from` or only `30xfer` (still readable, but shorter).

Proposal for naming:
* Prefix is the ICRC number without the string `ICRC-` to keep it shorter.
* The actual op name must then start with a letter character.
* The following characters can be alphanumeric and "_" and "-"

I.e.:
```
op = icrc_number op_name
icrc_number = nonzero_digit *digit
nonzero digit = "1" "2" "3" "4" "5" "6" "7" "8" "9"
digit = "0" "1" "2" "3" "4" "5" "6" "7" "8" "9"
op_name = a-z *(alphanumeric \ "_" \ "-")
```

What do people think about this? We need this for the NFT standards that are coming up and we should define something.

At the bare minimum, we could fix the ICRC number as prefix, followed by anything not starting with a number to keep it as unconstrained as possible.

-------------------------

dieter.sommer | 2023-11-29 14:14:22 UTC | #201

Here would be a proposal of a first draft of the ICRC-3-compliant block schema for ICRC-7 using the above namespacing proposal. That would be the first "customer" of ICRC-3 besides the "built-in" ICRC-1 and ICRC-2.

https://github.com/dfinity/ICRC/blob/icrc7-wg-draft/ICRCs/ICRC-7/ICRC-7.md#icrc-7-block-schema

Comments welcome also from this WG as this is an inter-WG affair.

-------------------------

dieter.sommer | 2023-11-29 15:36:17 UTC | #202

Here's another application of ICRC-3 in ICRC-30 (draft):
https://github.com/dfinity/ICRC/blob/ICRC-30-Approval_support_for_ICRC-7_NFTs/ICRCs/ICRC-30/ICRC-30.md#icrc-30-block-schema

-------------------------

