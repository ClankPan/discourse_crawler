marcpp | 2024-06-12 15:01:32 UTC | #1

Hi,

I have a **getBalance** method as follows:

[details="getBalance details"]
```
public shared ({ caller }) func getBalance() : async Text {
    let account : AccountIdentifier = await IcpLedger.account_identifier({ owner = caller; subaccount = null});
    let accountBalanceArgs : AccountBalanceArgs = { account };
    let balance = await IcpLedger.account_balance(accountBalanceArgs);
    return "Balance: " # Nat64.toText(balance.e8s);
};
```
[/details]


Calling it from the terminal, I get

> ("Balance: 10000000000")

Then I have an **initBalance** method as follows:
[details="initBalance details"]
```
public shared ({ caller }) func initBalance() : async Result.Result<IcpLedger.BlockIndex, Text> {
        let me : AccountIdentifier = await IcpLedger.account_identifier({ owner = Principal.fromText("6qx4h-7o65n-z7e5h-m6pmk-yhkmp-isl3g-sv7xp-5eg2b-k7pib-g5iwv-3qe"); subaccount = null});
        let meTransferArgs : IcpLedger.TransferArgs = {
            memo = 1;
            amount = {e8s = 1_000_000_000};
            fee = {e8s = 10_000};
            to = me;
            from_subaccount = null;
            created_at_time = null;
        };

        try {
            let transferResult : IcpLedger.TransferResult = await IcpLedger.transfer(meTransferArgs);
            switch (transferResult) {
                case (#Err(e)) {
                    return #err("Couldn't transfer funds: " # debug_show (e));
                };
                case (#Ok(blockIndex)) { 
                    return #ok(blockIndex) 
                };
            };
        } catch (error) {
            return #err("Reject message: " # Error.message(error));
        };
    };
```
[/details]

Basically it's a simple transfer, but I get the following response:

> (
    variant {
      err = "Couldn\'t transfer funds: #InsufficientFunds({balance = {e8s = 0}})"
    },
)

How come??

Thanks

-------------------------

cosmasken | 2024-06-12 15:42:50 UTC | #2

Can you share the transfer method. It could be youre transferring from the wrong owner or subaccount

-------------------------

Severin | 2024-06-12 15:59:47 UTC | #3

`getBalance` returns the amount of tokens the _caller_ owns. `initBalance` attempts to transfer from the _canister's_ balance

-------------------------

marcpp | 2024-06-12 16:23:04 UTC | #4

@cosmasken I'm using 
```
import IcpLedger "canister:icp_ledger";
```
where icp_ledger is the ICP ledger canister.

@Severin that would indeed make sense. How can I `transfer` from the caller from a canister ?
EDIT: Hmm.. You're going to say you can't transfer on behalf or another account, unless using ICRC2, right? So I have to use `icrc2_approve`, then `icrc2_transfer` ?

-------------------------

cosmasken | 2024-06-12 16:36:03 UTC | #5

Transfer to the canister first then subaccount of the canister

-------------------------

Severin | 2024-06-13 07:37:37 UTC | #6

Correct, you need to call `icrc2_approve` from the user, and then use `icrc2_transfer_from` from the canister

-------------------------

marcpp | 2024-06-17 18:35:06 UTC | #7

Thanks a lot @Severin! I still have a few doubts which I've grouped in [another thread](https://forum.dfinity.org/t/subscription-based-app-need-architectural-advice/32068?u=marcpp) if you want to chime in ;)

-------------------------

