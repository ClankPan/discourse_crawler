lpettenella | 2022-10-04 13:53:02 UTC | #1

Hi,
I want to know if there's a way to make a backend canister written with motoko to call the frontend canister (built with node.js). 

What I want to do is update my frontend page in real time based on some triggers reveived by the backend. So that when some data are updated on the backend it will call the frontend (like a notification message for example...). 

I had to use http calls? Or there are other ways?
Thanks.

-------------------------

peterparker | 2022-10-04 14:27:08 UTC | #2

Last time I checked web sockets were not support yet therefore I don't think you can push from backend to frontend directly at the moment.

There was a similar question on Discord recently, for such use case I personally choose to implement some kind of cronjob features in web workers that perdiodically queries the backend.

-------------------------

lpettenella | 2022-10-04 15:26:46 UTC | #3

@peterparker Do you think something like this could work? [Simple http request handler canister in Motoko - Developers - Internet Computer Developer Forum (dfinity.org)](https://forum.dfinity.org/t/simple-http-request-handler-canister-in-motoko/6053)

-------------------------

peterparker | 2022-10-04 16:02:54 UTC | #4

This - the `http_request` function - is commonly use to serve assets (html page, images, js, css etc.) on the web. It's like the function that answer to the http request your browser do e.g. when you access your dapp with the browser on https://canister-id.ic0.app

It also don't push data but respond to a query so it does not solve your original question in my opinion.

-------------------------

peterparker | 2022-10-04 16:15:04 UTC | #5

Out of curiosity, what technology are you using for your frontend dapp, React and JavaScript?

-------------------------

lpettenella | 2022-10-04 16:21:25 UTC | #6

Maybe is usefull for me, 'cause what I really want is that a particular user do something and the frontend of another user is updated, more like a chatbot, probably I wasn't clear on my original question.
Anyway for the frontend part I just use javascript with node.js.

-------------------------

peterparker | 2022-10-04 16:24:54 UTC | #7

Yes yes a chat is totally what I was thinking at. Don't think this function is your solution nor that data can be pushed at the moment but again, if that's wrong, please correct my saying.

JavaScript, well noted. Was asking if one day I ever wrote a blog post about running cronjob to query the IC in web workers. Thanks for the feedback.

-------------------------

lpettenella | 2022-10-04 18:39:11 UTC | #8

I never used it but is not [OpenChat](https://oc.app/) an example of this? It will be interesting to know how it works.

-------------------------

peterparker | 2022-10-04 18:51:42 UTC | #9

Good you mention it, they literally open source their [repo](https://github.com/open-ic/open-chat) ... today ðŸ˜‰

-------------------------

lpettenella | 2022-10-04 19:00:54 UTC | #10

Oh nice, I'll check it out!

-------------------------

lpettenella | 2022-10-04 20:25:06 UTC | #11

I've found out, even without checking the source, that if you go to OpenChat and open the developer tool on the net tab there is a query every 5 seconds.

![image|690x288](upload://sYTeuHt4OkVEaRde6tbor33EcwF.png)

So you were right about that is impossible for now. I really looking forward your future blog post!

-------------------------

kpeacock | 2022-10-04 20:31:19 UTC | #12

I threw together a little node.js websockets example a while back https://github.com/krpeacock/websockets-example

It's not really any better than polling, other than potentially sending fewer requests through the actual canister

-------------------------

peterparker | 2022-10-10 15:44:57 UTC | #13

@lpettenella as promised, I just shared a blog post about polling the IC with web workers

https://forum.dfinity.org/t/blog-poll-the-ic-with-web-workers/15830?u=peterparker

P.S.: I opened a new thread in case there would be specific feedbacks

-------------------------

lpettenella | 2022-10-14 08:55:11 UTC | #14

Thanks, when I have time I'll try to use it!

-------------------------

paulyoung | 2022-10-15 01:32:57 UTC | #15

See also:

https://twitter.com/signalsicp/status/1580915577266339841

-------------------------

peterparker | 2022-10-15 07:38:26 UTC | #16

Looks like they poll from the window side through the service worker, sounds interesting. They are not open source right? I'll be curious to see their implementation.

-------------------------

bertiespell | 2022-10-17 17:34:04 UTC | #17

:wave: We're indeed polling client-side using a library (React Query). We're not open source yet, but we do plan to be in the future :blush:

-------------------------

