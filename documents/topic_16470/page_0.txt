ShueiYang | 2022-11-09 22:26:33 UTC | #1

Hello, i am new in IC Network, and i want to understand why I am not able to deploy locally a project if I set a new Internet Identity with Dfx identity new cmd with passphrase encryption. When I test to deploy the simple hello dapp I can deploy only if i use the default Dfx identity with no encryption or if i create one with --disable-encryption option, otherwise i am stuck at the dfx build phase like this : 

> $ dfx deploy
> Please enter the passphrase for your identity: [hidden]
> Decryption complete.
> Creating a wallet canister on the local network.
> The wallet canister on the "local" network for user "ic_yangshuei" is "rkp4c-7iaaa-aaaaa-aaaca-cai"
> Deploying all canisters.
> Creating canisters...
> Creating canister hello_backend...
> hello_backend canister created with canister id: rno2w-sqaaa-aaaaa-aaacq-cai
> Creating canister hello_frontend...
> hello_frontend canister created with canister id: renrk-eyaaa-aaaaa-aaada-cai
> Building canisters...
> Shrink WASM module size.
> Building frontend...

No error message either so I wasn't able to figure it out where is the issue.

-------------------------

Severin | 2022-11-10 08:21:49 UTC | #2

The build step does not access your identity in any way, so would guess that the problem lies somewhere else. Since the frontend build hangs: Is there a chance you have a problem with node/npm? We generally recommend that you use Node version 16.

-------------------------

ShueiYang | 2022-11-10 10:35:20 UTC | #3

yea it's really strange, I am using already Node 16,  I try again with dfx start --clean to clean up and redeploy I still got the same issue and stuck at the building phase, however if I try to redeploy with a new identity without encryption it work fine.

-------------------------

Severin | 2022-11-10 10:45:27 UTC | #4

I looked at the code once more, and there's really no way for the identity to influence anything once `Creating a wallet` appears. Can you try nuking everything generated in the project?

``` bash
dfx stop
rm -r .dfx
rm -r node_modules
# if Rust:
rm -r target
```

If this doesn't work, my next attempt would be to try with a different version of dfx (or reinstalling).

-------------------------

ShueiYang | 2022-11-10 19:32:25 UTC | #5

well after nuking everthing, I even uninstall and reinstall a clean version of dfx (0.12.0) with the cmd line in the doc it still doesn't work, I also think the issue is somewhere else.

-------------------------

Severin | 2022-11-11 07:09:24 UTC | #6

Does your 'everything' include `node` as well? That would be my next try if you haven't done that yet

-------------------------

ShueiYang | 2022-11-11 11:32:08 UTC | #7

if you mean the cmd line  rm -r node_modules as you mention to remove node module directory yea it's already done.

-------------------------

Severin | 2022-11-14 07:24:24 UTC | #8

I meant `brew remove node && brew install node` or `apt remove node && apt install node`

-------------------------

ShueiYang | 2022-11-14 20:52:00 UTC | #9

Oh sry, yea I already reinstall node, I even try node 18 and 19 but still the same issue... but it's not really a big deal for now as I can still work with it and play around, it's just a weird issue that's why I am asking, and sry for taking your time >.>

-------------------------

dindog18 | 2022-12-31 05:29:07 UTC | #10

Hi! I also have the same problem. What I did is to really stick with the "default" identity. If you have problems while deploying the canister. I suggest to use "dfx canister update-settings" to add a default controller (--add-controller <principal>) then set it to the default controller (--set-controller <principal>). Make sure to use the "--all" arguments so you don't repeat yourself. Try deploying it again it should work.

Summary:
1. dfx canister update-settings --add-controller <principal> --all
2. dfx canister update-settings --set-controller <principal> --all

Hope this helps!

-------------------------

karim | 2022-12-31 18:43:37 UTC | #11

I'm having the same issue. However, I had already used different identities before and never encountered this issue. Now, after having created a new identity, building the frontend canister stops without an error message. Deleting .dfx and node_modules didn't help either. Any solution to this other than using the default identity?

-------------------------

Severin | 2023-01-04 12:24:02 UTC | #12

@dindog18, @karim, does this also happen to you if you use the default `dfx new` project? Or is it something bigger? I can't reproduce this on my machine, so any information would be very helpful

-------------------------

karim | 2023-01-05 07:38:27 UTC | #13

I just double-checked and tried deploying a new default project. Same issue here, but again only on mainnet. `dfx deploy` on the local replica does work. dfx version is 0.12.1. If the issue was related to insufficient cycles, would dfx tell me so?

-------------------------

Severin | 2023-01-05 08:33:42 UTC | #14

[quote="karim, post:13, topic:16470"]
If the issue was related to insufficient cycles, would dfx tell me so?
[/quote]
Yes, you would see an error message that talks about cycles. Most likely it would say `insufficient cycles`. 

[quote="karim, post:13, topic:16470"]
Same issue here, but again only on mainnet. `dfx deploy` on the local replica does work. dfx version is 0.12.1.
[/quote]
Just tried the same, and it worked. Can you maybe try `dfx deploy` with the flag `-vv`? This would enable debugging output and maybe would include some relevant information.

-------------------------

karim | 2023-01-07 11:16:21 UTC | #15

I did  some more testing. The issue arises with newly created identities both when trying to deploy locally and on mainnet, but only in certain projects including new default projects created with `dfx new`. Apparently, it's hanging at `npm run build`. This is a new default project created with `dfx new`:

```
[karim@archlvm test]$ dfx deploy -vv
Trace mode enabled. Lots of logs coming up.
Please enter the passphrase for your identity: [hidden]
Decryption complete.
Deploying all canisters.
All canisters have already been created.
Building canisters...
No canister of type 'rust' found. Not trying to run 'cargo audit'.
Building canister 'test_backend'.
Running "/home/karim/.cache/dfinity/versions/0.12.1/moc" "/home/karim/test/src/test_backend/main.mo" "-o" "/home/karim/test/.dfx/local/canisters/test_backend/test_backend.wasm" "-c" "--debug" "--idl" "--stable-types" "--public-metadata" "candid:service" "--actor-idl" "/home/karim/test/.dfx/local/canisters/idl/" "--actor-alias" "test_backend" "rrkah-fqaaa-aaaaa-aaaaq-cai" "--actor-alias" "test_frontend" "ryjl3-tyaaa-aaaaa-aaaba-cai" "--package" "base" "/home/karim/.cache/dfinity/versions/0.12.1/base"...
Shrink WASM module size.
Building canister 'test_frontend'.
Building frontend...
Running "npm" "run" "build"...
```
I'm getting this warning when creating a new default project: 

```
npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: 'test_frontend@0.1.0',
npm WARN EBADENGINE   required: { node: '^12 || ^14 || ^16 || ^18' },
npm WARN EBADENGINE   current: { node: 'v17.9.1', npm: '8.11.0' }
```

Running `npm run build --progress` works however:

```
[karim@archlvm test]$ npm run build --progress

> test_frontend@0.1.0 prebuild
> npm run generate


> test_frontend@0.1.0 generate
> dfx generate test_backend

Please enter the passphrase for your identity: [hidden]
Decryption complete.
Building canisters before generate for Motoko
Shrink WASM module size.
Generating type declarations for canister test_backend:
  src/declarations/test_backend/test_backend.did.d.ts
  src/declarations/test_backend/test_backend.did.js
  src/declarations/test_backend/test_backend.did

> test_frontend@0.1.0 build
> webpack

No production canister_ids.json found. Continuing with local
asset index.js 622 KiB [emitted] (name: index) 1 related asset
asset index.html 689 bytes [emitted]
runtime modules 1.16 KiB 6 modules
modules by path ./node_modules/@dfinity/ 234 KiB 38 modules
modules by path ./node_modules/borc/ 113 KiB
  ./node_modules/borc/src/index.js 647 bytes [built] [code generated]
  + 9 modules
modules by path ./src/ 1.89 KiB
  ./src/test_frontend/src/index.js 547 bytes [built] [code generated]
  + 2 modules
modules by path ./node_modules/simple-cbor/src/*.js 17.5 KiB
  ./node_modules/simple-cbor/src/index.js 595 bytes [built] [code generated]
  + 2 modules
modules by path ./node_modules/iso-url/ 4.36 KiB
  ./node_modules/iso-url/index.js 285 bytes [built] [code generated]
  + 2 modules
+ 7 modules
webpack 5.75.0 compiled successfully in 953 ms
```
This means that I can avoid the issue by running `npm run build` and then `dfx canister create test_frontend` followed by `dfx build test_frontend` and `dfx canister install test_frontend`.

I've also tried dfx 0.12.0 but the issue persists. Node version is `v17.9.1`, npm version is `8.11.0`. Btw: Does dfx look for a 'rust' canister by default when deploying? I've never noticed this line before and I don't use Rust: `No canister of type 'rust' found. Not trying to run 'cargo audit'.`

-------------------------

Severin | 2023-01-09 07:30:39 UTC | #16

Thank you very much for the thorough investigation, @karim! Can you maybe try once more with a stable node version? v17 is [not stable](https://github.com/nodejs/release#release-schedule) and we've seen best success with v16 and v18.

[quote="karim, post:15, topic:16470"]
Does dfx look for a ‘rust’ canister by default when deploying? I’ve never noticed this line before and I don’t use Rust: `No canister of type 'rust' found. Not trying to run 'cargo audit'.`
[/quote]
Not quite. It looks for any canister of _type_ `rust`, not a canister that is called `rust`. If it finds one, it will run `cargo audit` to notify the developer of vulnerable dependencies.

-------------------------

nolyoi | 2023-01-12 13:36:09 UTC | #17

[quote="Severin, post:16, topic:16470"]
Thank you very much for the thorough investigation, @karim! Can you maybe try once more with a stable node version? v17 is [not stable](https://github.com/nodejs/release#release-schedule) and we’ve seen best success with v16 and v18.
[/quote]

I'm having this same issue with node 16 and 18 on my mac and linux machines. But, if I try to run `dfx build <canister-name>` it hangs as well (frontend only, backend builds fine). However, `npm run build` runs fine by itself if I manually run it.

-------------------------

Severin | 2023-01-12 14:48:49 UTC | #18

It's really just running `npm run build` on its own (see [source code](https://github.com/dfinity/sdk/blob/master/src/dfx/src/lib/builders/assets.rs#L219-L241)). Can you maybe try once more with `-vv` to enable debug output? I feel there has to be something else going on...

-------------------------

Severin | 2023-01-12 15:44:05 UTC | #19

I just heard this may be because `npm run build` tries to access (for some questionable reason) the identity. Can you test if this only happens if you use a non-plaintext identity? (i.e. a keyring or password-protected one)

-------------------------

ShueiYang | 2023-01-12 19:02:23 UTC | #20

wow i thought i was the only one with this weird issue but looks like it's not >.> I also try with a plaintext identity there is still the same issue, and when i run dfx deploy -vv i have more or less the same log as karim, and although getting stuck at the npm run build phase, it looks like the build continues to proceed behind the scene.. because when i run npm start after forcing the exit, it work.

-------------------------

FELIX | 2023-01-12 21:44:35 UTC | #21

Hi, same for me, deploy works with default but not with id created

with id it block like that

> Citation
Please enter the passphrase for your identity: [hidden]
Decryption complete.
Deploying all canisters.
All canisters have already been created.
Building canisters...
Shrink WASM module size.
Building frontend...
^C

and default

> Citation 
Deploying all canisters.
All canisters have already been created.
Building canisters...
Shrink WASM module size.
Building frontend...
WARN: Building canisters before generate for Motoko
Shrink WASM module size.
Generating type declarations for canister wawa_backend:
  src/declarations/wawa_backend/wawa_backend.did.d.ts
  src/declarations/wawa_backend/wawa_backend.did.js
  src/declarations/wawa_backend/wawa_backend.did

Installing canisters...
Module hash 82dd0d3281e70992b8566e2c9da5a28452f2a4e7ca50593c1756260e66104a44 is already installed.
Module hash db07e7e24f6f8ddf53c33a610713259a7c1eb71c270b819ebd311e2d223267f0 is already installed.
Uploading assets to asset canister...
Starting batch.
Staging contents of new and changed assets:
  /index.html (689 bytes) sha 64e1989943da68e767ff91e8e4f453973f4cbaab2c250f2000fabb490466cd2a is already installed
  /index.html (gzip) (385 bytes) sha 2a3a6332dab58060c588eacf18fcbfe325380dc6a2d4b2a4c8d35a66996cd744 is already installed
  /index.js (637147 bytes) sha f8253daec6d00e00afe8a4667a8fe0656f4632bbff3380d84aaad6fac44ab38d is already installed
  /index.js (gzip) (152950 bytes) sha b82e991d40bbcf67279cce0607cf8feb5bcd67e088c36b21b9663a97f56a711d is already installed
  /favicon.ico (15406 bytes) sha 4e8d31b50ffb59695389d94e393d299c5693405a12f6ccd08c31bcf9b58db2d4 is already installed
  /index.js.map (681314 bytes) sha 48d0c7d17c9a9298421af42ca5226c53fa28b8a26de4e5ac74caebfcd0b02d47 is already installed
  /index.js.map (gzip) (156606 bytes) sha 2a5b095dd02f84c92e6972bd7ce60e7a631b993bf092c81a71846a593d875b3d is already installed
  /main.css (537 bytes) sha 75ac0c5aea719bb2b887fffbde61867be5c3a9eceab3d75619763c28735891cb is already installed
  /main.css (gzip) (299 bytes) sha b4879e7ba34e68b2965d626e48d772ce615e4f6b78b69cc8f2f91127ed18b850 is already installed
  /sample-asset.txt (24 bytes) sha 2d523f5aaeb195da24dcff49b0d560a3d61b8af859cee78f4cff0428963929e6 is already installed
  /logo2.svg (15139 bytes) sha 037eb7ae523403daa588cf4f47a34c56a3f5de08a5a2dd2364839e45f14f4b8b is already installed
Committing batch.
Deployed canisters.
URLs:
  Frontend canister via browser

-------------------------

nolyoi | 2023-01-13 07:50:12 UTC | #23

[quote="FELIX, post:21, topic:16470"]
Hi, same for me, deploy works with default but not with id created
[/quote]

[quote="ShueiYang, post:20, topic:16470"]
ow i thought i was the only one with this weird issue but looks like it’s not
[/quote]

in your package.json, remove the “prebuild” script, that worked for me.

-------------------------

Severin | 2023-02-02 10:50:33 UTC | #24

I assume that this is the problem you guys are running into: https://github.com/dfinity/sdk/issues/2872

Looks like my comment above was wrong:

[quote="Severin, post:2, topic:16470"]
The build step does not access your identity in any way
[/quote]

It should be `The build step SHOULD not access your identity in any way`.

Workaround that I can offer right now, which I figured out because of @nolyoi's suggestion to remove the prebuild step:
- edit `package.json`
- find field `scripts.generate`
- replace `dfx generate <some canister name>` with `dfx --identity anonymous generate <some canister name>`

This will use the anonymous identity for the build step, (which is available to anyone and not protected by a password) and therefore will not hang the process.

-------------------------

FELIX | 2023-01-13 15:07:10 UTC | #25

thanks for the help, i ve tried to remove that

>   "prebuild": "npm run generate",

dfx deply done that

Deploying all canisters.
All canisters have already been created.
Building canisters...
Shrink WASM module size.
Building frontend...
Installing canisters...
Module hash 82dd0d3281e70992b8566e2c9da5a28452f2a4e7ca50593c1756260e66104a44 is already installed.
Module hash db07e7e24f6f8ddf53c33a610713259a7c1eb71c270b819ebd311e2d223267f0 is already installed.
Uploading assets to asset canister...
Starting batch.
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed while trying to install all canisters.
    Failed to install wasm module to canister 'wawa_frontend'.
      Failed to store assets in canister 'wawa_frontend'.
        Failed asset sync with canister xxxxxx-jaaaa-aaaaa-xxxxxxx-cai.
          The Replica returned an error: code 4, message: "Caller is not authorized"

-------------------------

FELIX | 2023-01-13 15:15:40 UTC | #26

Thanks, i ve tried too your solution, it done that

Deploying all canisters.
All canisters have already been created.
Building canisters...
Shrink WASM module size.
Building frontend...
WARN: Building canisters before generate for Motoko
Shrink WASM module size.
Generating type declarations for canister wawa_backend:
  src/declarations/wawa_backend/wawa_backend.did.d.ts
  src/declarations/wawa_backend/wawa_backend.did.js
  src/declarations/wawa_backend/wawa_backend.did

Installing canisters...
Module hash 82dd0d3281e70992b8566e2c9da5a28452f2a4e7ca50593c1756260e66104a44 is already installed.
Module hash db07e7e24f6f8ddf53c33a610713259a7c1eb71c270b819ebd311e2d223267f0 is already installed.
Uploading assets to asset canister...
Starting batch.
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed while trying to install all canisters.
    Failed to install wasm module to canister 'wawa_frontend'.
      Failed to store assets in canister 'wawa_frontend'.
        Failed asset sync with canister xxxxxxxx-jaaaa-aaaaa-xxxxxxx-cai.
          The Replica returned an error: code 4, message: "Caller is not authorized"

it s done the same

-------------------------

rbole | 2023-01-14 09:42:15 UTC | #27

Another workaround is to use an identity without encryption til this issue is fixed.

dfx identity new xxx **--disable-encryption**

-------------------------

ShueiYang | 2023-01-14 22:54:36 UTC | #28

@rbole yea we know, this is what i told when I post the first time, btw the solution nolyoi provide work for me when I remove the  “prebuild” script, also the solution from Severin work as well if i change the script to :

> "generate": "dfx --identity anonymous generate `<some canister name>`"

@FELIX Did you try to remove all your canister and clean up using the cmd line :

>  rm -rf ./.dfx/* canisters/*

then try to redeploy again after updating the script in package.json ?

-------------------------

FranHefner | 2023-01-18 02:23:44 UTC | #29

To save time, I solved it like this.

* Export my identity  & remember the ids of your canisters // wallet // backup proyects

https://internetcomputer.org/docs/current/developer-docs/updates/release-notes/0.10.0-rn#new-feature-identity-export

* Delete all the wsl with the distributions (in my case I use W11 with wsl)

* Install ubuntu again and update it ( sudo apt update  & sudo apt full-upgrade )

* Install dfx

* Import Identity

* Set of the previous canisters ( dfx identity set-wallet  "id" --network ic)

Everything working again.

-------------------------

FranHefner | 2023-01-18 14:43:39 UTC | #30

As an extra value to the analysis they did, I can say that this inconvenience does not "break" the process, but rather that it continues (perhaps it enters an infinite loop or similar). I discovered this with the top command, visualizing that the process continues to constantly consume resources.

-------------------------

