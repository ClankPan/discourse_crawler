lastmjs | 2022-03-10 05:41:41 UTC | #1

Just checking before I embark on this journey for Azle (TypeScript CDK). Is there an existing TypeScript -> Candid compiler?

If not then I (Demergent Labs) will be creating one. Demergent Labs will most likely create a Python -> Candid compiler as well, I really doubt that has been touched.

-------------------------

paulyoung | 2022-03-10 07:44:38 UTC | #2

[quote="lastmjs, post:1, topic:11413"]
Is there an existing TypeScript → Candid compiler?
[/quote]

Probably not in the way you mean. The [candid package](https://github.com/dfinity/agent-js/blob/main/packages/candid) has provided something like this for a long time:

> We provide a library for serialization of native JavaScript values, and a visitor class for extending Candid for building generic tools such as UI and random testing.

I imagine what you’re trying to do would involve something similar to the developer experience of generating Candid from Rust; by providing TypeScript types and functions that you want to be part of the generated Candid interface.

I think that probably means going from the TypeScript AST to the IDL types in the following file, and then leveraging the encoding it already provides.

https://github.com/dfinity/agent-js/blob/main/packages/candid/src/idl.ts

-------------------------

