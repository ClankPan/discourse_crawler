cryptoschindler | 2021-05-21 12:30:23 UTC | #1

where can we find the wallet canister interface?

i tried throwing the canister id at the candid ui, but it resulted in an error 
`An error happened in Candid canister:
Error: Cannot fetch candid file
    at Object.fetchActor (https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/index.js:2:283106)
    at async https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/index.js:2:289093`

-------------------------

prithvi | 2021-05-21 15:12:47 UTC | #2

For non-Motoko canisters, the candid UI requires a .did file
The wallet's interface file isn't publicly available yet. Until then, the rust agent has bindings to the wallet defined here: https://github.com/dfinity/agent-rs/blob/next/ic-utils/src/interfaces/wallet.rs

-------------------------

chenyan | 2021-05-21 16:52:05 UTC | #3

We will need an official place to publish did files. For now, I have a copy here: https://github.com/chenyan2002/ic-repl/blob/master/examples/wallet.did.

-------------------------

wang | 2021-05-22 04:55:30 UTC | #4

I'm working on an app to publish and view canister interfaces. Is there a `didc` JS library so I can generate JS/TS bindings from `did` files client-side?

-------------------------

chenyan | 2021-05-22 05:21:38 UTC | #5

You can compile `didc` to Wasm. Candid UI also has a `did_to_js` endpoint.

-------------------------

wang | 2021-05-22 06:16:15 UTC | #6

I see, but how do I use the Wasm file? Is there a JS implementation of the system API?

-------------------------

chenyan | 2021-05-22 16:20:38 UTC | #7

didc is a serialization library, it doesn't know system API. You can compile a normal Wasm from Rust without the System API exports, and run it in the browser.

-------------------------

wang | 2021-05-23 07:34:33 UTC | #8

Got it working, PR here:

https://github.com/dfinity/candid/pull/230

-------------------------

