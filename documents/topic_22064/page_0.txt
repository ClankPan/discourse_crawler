dctech | 2023-08-10 15:02:29 UTC | #1

is there limitation on number of actors created on same cansiter in frontend code?
I have below frontend test code to dynamically create actor on same canister to load data

  client = await AuthClient.create();
  
  client.login() { 
   ....
 }
  
  async function loadData(data_id) {
    const actorStore = createActor("b62cx- ...  -cai", { agentOptions: { host: host } });
    Actor.agentOf(actorStore).replaceIdentity(client.getIdentity());
    let ret = await actorStore.loadData(data_id);
    console.log(ret);
  }

after client logged in,  tried below code
   loadData(1);
   loadData(2);
it works perfectly. no error.

but when tried 3 loadData or more
  loadData(1);
  loadData(2);
  loadData(3);

the first 2 loadData are able to get data, however the 3rd LoadData or onwards always got below error

Uncaught (in promise) Error: Invalid certificate: Signature verification failed
    at _Certificate.verify (certificate.ts:179:13)
    at async _Certificate.create (certificate.ts:149:5)
    at async pollForResponse (index.ts:38:16)
    at async caller (actor.ts:372:29)
    at async loadImage (+layout.svelte:54:12)

Please help.   My project could store data in same or different canisters (dynamic created) and it is possible to load mutiple data from same canister.

-------------------------

kpeacock | 2023-08-10 16:19:33 UTC | #2

Interesting - I don't see anything wrong with the code you've shared here or what you're trying to do

-------------------------

dctech | 2023-08-14 13:23:06 UTC | #3

Any advice?  i have to use map ( canister id -> actor )  to reuse same actor for same cansister id as workaround now.

-------------------------

kpeacock | 2023-08-14 16:35:29 UTC | #4

I mean, that's a worthwhile practice anyway. This is the first report I've heard of this issue though. Would you mind opening an issue? https://github.com/dfinity/agent-js/issues/new

-------------------------

