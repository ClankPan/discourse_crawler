ccyanxyz | 2021-05-29 13:54:06 UTC | #1

I upgraded my dfx to 0.7.0-beta.6 recently, and noticed that the canister cycle balance does not change after update call, anyone know why?

I'm using this example for testing: https://github.com/dfinity/examples/tree/9ef9b9a08c8f953a1488b4f488a3ba866fd0405e/motoko/calc

![Screen Shot 2021-05-29 at 9.49.26 PM|674x500](upload://p0ow452ptMShJQr54Gwr2cXmcf2.png)

-------------------------

nomeata | 2021-06-01 15:07:57 UTC | #2

Is that a canister running on mainnet, local `replica` (via `dfx start`) or local emulator (via `dfx start --emulator`)?

-------------------------

prithvi | 2021-06-01 17:44:50 UTC | #3

This has to be local development, since the wallet canister id is `rwlgt` (which is the registry on mainnet); and likely the replica too since emulator more random with the canister ids it generates.
@ccyanxyz The replica shipped with dfx is configured such that it runs in a "system" subnet configuration, and so, there is no cycle accounting (think of it like a canister running on the NNS subnet where there's no cycle cost.) This issue has been discussed internally between the DX and execution team and we know about it! Previously, you could expect to see cycles deducted for update calls and such. Unfortunately, the configuration change is a bit more involved than expected; when we reintroduce cycle accounting to local development, it will be highlighted in the release notes

-------------------------

ccyanxyz | 2021-06-01 17:44:42 UTC | #4

Thanks for the explanation!

-------------------------

