w0whi | 2022-04-14 03:21:29 UTC | #1

I'm currently working with the Ledger canister pulled from Aviate Labs' Github (https://github.com/aviate-labs/icp-canister). Everything has deployed just fine, but when trying to call the balance() function using Candid, I get the error: 

Call was rejected:
Request ID: 510f2809dd1ce281299974c80c9fcde367c654cfc17419c8d7acd1269a5ebbf1
Reject code: 
Reject text: IC0302: Canister ryjl3-tyaaa-aaaaa-aaaba-cai has no update method 'account_balance'

The error message leads me to believe that it is unable to access the 'account_balance' function from the Ledger.mo module it's calling from. Any ideas as to what I'm doing wrong? Below is a look at the code for the balance() function I'm trying to call:

![2022-04-13 (5)|690x365](upload://xb3pYT10indPjJO2WzCtNwrAtQy.png)

And this would be the code for the actor I'm importing from the Ledger.mo module:

![2022-04-13 (6)|690x365](upload://3NZngd0v6JxezkhuoTxBYZdSHGp.png)

-------------------------

domwoe | 2022-04-14 07:10:57 UTC | #2

It seems that you try to call the `account_balance` function from the NNS ledger which is marked as a query function (See [Canlista](https://k7gat-daaaa-aaaae-qaahq-cai.raw.ic0.app/listing/nns-ledger-10244/ryjl3-tyaaa-aaaaa-aaaba-cai) ). Query functions can be only called from agents not from other canisters. That would explain why you get this error that there's "no update method `account_balance`".

-------------------------

Jesse | 2022-04-19 17:06:44 UTC | #3

i used the same example and i was actually able to get it to work. I'm curious as to why its not working for you here. did you ever find a solution?

-------------------------

w0whi | 2022-04-19 18:49:11 UTC | #4

This is the error i get when trying to deploy the ledger canister locally using these parameters, but i'm not quite sure what it's referencing. Everything is properly configured in dfx.json("Candid" value set to "ledger.private.did"). I used the same AccountIdentifier in my "initial_values" as i did for "minting_account". That shouldn't be a problem right?

![2022-04-19|690x365](upload://sAfGlhUMJA4zQ8NLQ12828BMn4t.png)

-------------------------

Jesse | 2022-04-19 18:56:22 UTC | #5

Getting the ledger canister running locally was a bit of a hassle for me the first time. I was eventually able to get it running locally buy conducting these steps: 

delete the /package-lock.json file, 
delete the /node_modules file,
delete the /dist file,
delete the /.dfx file,
delete the /src/declarations file

add the follow property to the "canisters" object in the dfx.json file:

```
"ledger": {
      "type": "custom",
      "wasm": "ledger.wasm",
      "candid": "ledger.public.did"
    },
```

change the `"candid": "ledger.public.did"` line of the dfx.json file so that it reads `"candid": "ledger.private.did"`

start local replica(if its not already started) by running the following line :

```
dfx start --background
```

Create a new identity that will work as a minting account by running the following lines(note, `dfx identity new minter` may error out as a result of this identity already existing. if it does, thats okay. carry onto the next commands):

```
dfx identity new minter
dfx identity use minter
export MINT_ACC=$(dfx ledger account-id)
```

Switch back to your default identity and record its ledger account identifier by running the following lines:

```
dfx identity use default
export LEDGER_ACC=$(dfx ledger account-id)
```

Deploy the ledger canister to your network by running the following line:
```
dfx deploy ledger --argument '(record {minting_account = "'${MINT_ACC}'"; initial_values = vec { record { "'${LEDGER_ACC}'"; record { e8s=100_000_000_000 } }; }; send_whitelist = vec {}})'
```

change the "candid": "ledger.private.did" line of the dfx.json file back so that it reads "candid": "ledger.public.did" again.

Take the ledger canister-id and set it as the value of the CANISTER_ID variable in the /ledger.mo file. 

run the following commands in the Digital-Time-Capsule terminal: 

npm i

then, in a new terminal: 
//note: dont run `dfx deploy` by itself, because that'll redeploy another ledger canister for you as well. 
// run the commands exactly like so: 

dfx deploy dtc

dfx deploy dtc_assets

then: 

npm start

-------------------------

w0whi | 2022-04-19 19:19:04 UTC | #6

Thanks for the help man. The first error was just a small syntax error in my argument, but what I didn't know was to change the CANISTER_ID variable in Ledger.mo to that of my ledger. Seems to be working just fine now.

-------------------------

w0whi | 2022-04-19 20:41:05 UTC | #7

When calling for the balance of my canister, I still get 0, even though i set my canister to have a preset balance in my "initial_values". Here are the parameters I used:

dfx deploy ledger --argument "record { minting_account=\"6da4509fa7e69430d1c1aa1d43f281dafe412f30eeeabe5c6ade86378b26135d\";
initial_values=vec {record{\"ryjl3-tyaaa-aaaaa-aaaba-cai\"; record{e8s = 10000000 : nat64}}};
max_message_size_bytes= null;
transaction_window= null;
archive_options= null; send_whitelist= vec {}; }"

![2022-04-19 (1)|690x365](upload://qqpmypdPx742wcl1gSJPP6Wtc8f.png)

-------------------------

Jesse | 2022-04-19 20:42:50 UTC | #8

put this command in the terminal to mint coins to your LEDGER_ACC wallet: 

```
dfx canister call ledger transfer 'record {memo = 1234; amount = record { e8s=10_000_000_000 }; fee = record { e8s=10_000 }; from_subaccount = null; to =  '$(python3 -c 'print("vec{" + ";".join([str(b) for b in bytes.fromhex("'$LEDGER_ACC'")]) + "}")')'; created_at_time = null }'
```

-------------------------

w0whi | 2022-04-19 21:03:28 UTC | #9

Strange that it doesn't pick that command up
![2022-04-19 (2)|690x129](upload://7fOTSPmn4TJAZ2S3D5BGOwpvYuu.png)

-------------------------

Jesse | 2022-04-19 21:04:17 UTC | #10

I think you're missing the `'` at the end.

-------------------------

w0whi | 2022-04-19 21:35:00 UTC | #11

[quote="Jesse, post:8, topic:12138"]
`'$(python3 -c 'print("vec{" + ";".join([str(b) for b in bytes.fromhex("'$LEDGER_ACC'")]) + "}")')'`
[/quote]

Fixed it. My last question is regarding checking the account_balance of the LEDGER_ACC using the command line. It requires the the account ID be converted to a blob. Would this just have to be executed within the canister and copy/pasted? Or is there a quicker way to go about this?

-------------------------

Jesse | 2022-04-19 21:35:55 UTC | #12

run this command to check the balance:

```
dfx canister call ledger account_balance '(record { account = '$(python3 -c 'print("vec{" + ";".join([str(b) for b in bytes.fromhex("'$LEDGER_ACC'")]) + "}")')' })'
```

-------------------------

w0whi | 2022-04-20 18:27:17 UTC | #13

When sending ICP to another canister using the command line, where would the account ID of the destination canister be derived from?

-------------------------

successaje | 2022-12-24 16:37:05 UTC | #15

![Screenshot 2022-12-18 at 12.37.12|690x260](upload://AoLHJ8er7gZ3MPpbPVPR1fHFXq1.png)
I have been stuck with this for a while and even followed your steps and still got this error.

-------------------------

skilesare | 2022-12-24 20:24:46 UTC | #16

What parameters are you passing to DFX? Can we see the command you  ran? The errors telling you what the problem is. You need to make sure that your arguments match expected signature. It's possible if those have changed since the tutorial was written.

-------------------------

successaje | 2022-12-25 11:50:04 UTC | #17

dfx deploy ledger --argument '(record {minting_account = "'${MINT_ACC}'"; initial_values = vec { record { "'${LEDGER_ACC}'"; record { e8s=100_000_000_000 } }; }; send_whitelist = vec {}})'
i use this to deploy the ledger canister.

dfx deploy canister_name --argument="(principal \"r7inp-6aaaa-aaaaa-aaabq-cai\", record { \"supply\" = 100 : nat16; \"name\" = \"canister_name\"; })"
i use this to deploy my canister

-------------------------

Severin | 2023-01-04 09:41:13 UTC | #18

[quote="successaje, post:17, topic:12138"]
--argument=“(principal "r7inp-6aaaa-aaaaa-aaabq-cai", record { "su
[/quote]

You're terminating your string too early.

```
 --argument=“(principal "r7inp-6aaaa-aaaaa-aaabq-cai", record { "su
            ^ start     ^end                        ^start      ^end 
```

If you use `"` to delimit your string, you'll have to escape double quotes like this: `\"` or use single quotes (if you don't use string interpolation, like you're not using in this example)

-------------------------

successaje | 2023-01-08 12:04:45 UTC | #19

Ohh yes, it was a pseudo command. Even after using the correct one i still get the error. 

dfx deploy canister_name --argument="(principal \"r7inp-6aaaa-aaaaa-aaabq-cai\", record { \"supply\" = 100 : nat16; \"name\" = \"canister_name\"; })"

-------------------------

Severin | 2023-01-09 07:24:57 UTC | #20

IDK if it's a display error / Discourse being annoying, but I see the same error in the command you posted

-------------------------

