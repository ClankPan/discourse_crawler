peterparker | 2023-01-15 16:13:01 UTC | #1

I have "build" (copied code from II) some GitHub actions to build my Rust canisters in GitHub actions. The jobs run on releases and I attach the generated wasm to the artifacts of the release. Since the repo contains multiple canisters, it is possible that I create release without any changes to some. 

That's is why - better idea welcomed btw. - that I would like to automatically suffix the artifacts with their effective version number as provided in the `toml` file.

Being really lame at `bash`, I was asking my self if anyone as an existing script or command line to share that would extract such information?

![Capture d’écran 2023-01-15 à 17.08.55|690x463](upload://7U9QwsWJDLqo2aY6BKMOlV6T9jY.jpeg)

-------------------------

paulyoung | 2023-01-15 17:03:18 UTC | #2

You could do something like pipe the output of `cargo metadata` to `jq`.

Or, write a basic Rust program that prints the version where `const VERSION: &str = env!("CARGO_PKG_VERSION");`

-------------------------

peterparker | 2023-01-15 17:19:18 UTC | #3

Thanks, `cargo metadata` was the key.

Something like following should do:

```
cargo metadata --format-version 1  | jq -r '.packages[]  | select(.name | test("console")) | .version'
```

where `console` is the name of my canister.

-------------------------

