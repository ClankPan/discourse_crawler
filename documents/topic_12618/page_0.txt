jzxchiang | 2022-05-01 22:59:03 UTC | #1

I couldn't find any good documentation about it.

I know that canisters can do `import Canister "canister:<name>"` to import another canister from the same `dfx.json` project. If the canister isn't specified in the `dfx.json`, then the programmer can write [something](https://forum.dfinity.org/t/how-to-use-cowsay-project-in-my-project/6473/2?u=jzxchiang) like:

```
actor {
    public func main() : async Text {
        let cowsay = actor(“7igbu-3qaaa-aaaaa-qaapq-cai”): actor { cowsay: (Text) -> async Text };
        return await cowsay.cowsay(“hello”);
    };
};
```

But when is it useful (if ever) to do `import Canister "ic:<canister-id>"`?

-------------------------

nomeata | 2022-05-02 07:46:07 UTC | #2

I think it’s not fully supported by the full toolchain. The vision was that if you `import Canister "ic:7igbu-3qaaa-aaaaa-qaapq-cai"` then `dfx` would fetch the candid interface from the Internet Computer and thus give you the right type directly, so you wouldn’t have to write the type in your code (and hope you got it right).

The motoko side of this feature [was there for a long while now](https://github.com/dfinity/motoko/blob/master/design/DFX-Interface.md#resolving-canister-types), but we only decided on the “official” system-level protocol for storing and fetching that interface with the canister very recently, which was blocking this, and I don’t think the `dfx` devs have started implementing this feature yet.

-------------------------

jzxchiang | 2022-05-03 00:56:39 UTC | #3

Gotcha. Does that mean it's best not to use this import syntax at all, whether locally or in production?

-------------------------

jzxchiang | 2022-05-03 00:57:23 UTC | #4

> we only decided on the “official” system-level protocol for storing and fetching that interface with the canister very recently, which was blocking this

Interesting, do you happen to have a link to this?

-------------------------

nomeata | 2022-05-03 07:10:19 UTC | #5

[quote="jzxchiang, post:3, topic:12618, full:true"]
Gotcha. Does that mean it’s best not to use this import syntax at all, whether locally or in production?
[/quote]

I think it simply doesn’t work yet, so yes :-).

It is ok to use of you’d use a different build system than `dfx` that provides the Candid files for these canisters to the motoko compiler. But to my knowledge nobody has written such a build system before. Although I wouldn’t be surprised if the Motoko Playground, which is in a way a build system for Motoko separate from `dfx`, would implement this feature first … pinging @chenyan  :slight_smile: 

[quote="jzxchiang, post:4, topic:12618"]
Interesting, do you happen to have a link to this?
[/quote]
https://github.com/dfinity/interface-spec/commit/51913bfb18fd85a28e5b35186b328704eb9136da

-------------------------

kentosugama | 2023-10-04 19:32:39 UTC | #6

Commenting this here in case anyone is reading in the future: https://forum.dfinity.org/t/import-canister-qol/23509

-------------------------

