link2020 | 2021-10-15 08:02:52 UTC | #1

Could we deploy a canister on a specified subnet? 
If we can, when can we deploy a canister on a specified subnet？

-------------------------

akhilesh.singhania | 2021-10-15 08:11:34 UTC | #2

This is currently not possible but we recognise that this is a problem.  We hope to be able to allow users to deploy canisters to specific subnets in the near future.

-------------------------

saikatdas0790 | 2021-10-18 17:20:57 UTC | #3

This would be the opposite of the serverless philosophy. Ideally, I'd want to just deploy to the IC and have it figure out the details. I imagine people want to deploy to specific subnets to subvert the issues plaguing pjljw or the like. While other seemingly empty subnets are available.

-------------------------

alexa.smith | 2021-10-18 20:32:39 UTC | #4

While not a perfect solution, you can use the `dfx ledger create-canister` command to create an empty canister (which will be created on a random subnet), check on ic.rocks or the ICA dashboard to see where the canister has been created, and if it was created on a desired subnet, deploy a cycles wallet to that canister using `dfx identity --network ic deploy-wallet <canister id>`. Once the cycles wallet is deployed, any canisters created from that cycles wallet will be on the same subnet. I've done this and it works! More info on the `create-canister` command here: https://smartcontracts.org/docs/developers-guide/cli-reference/dfx-ledger.html#create-canister

-------------------------

nomeata | 2021-10-19 09:09:16 UTC | #5

[quote="alexa.smith, post:4, topic:7936"]
Once the cycles wallet is deployed, any canisters created from that cycles wallet will be on the same subnet.
[/quote]

I consider this a bug (or missing feature): If I create a new canister through a wallet, and the subnet with that wallet is already full, or generally more busy than some other subnet, then I would expect the new canister to be transparently be installed on that subnet (echoing @saikatdas0790’s sentiments). At least “create that canister wherever possible” should be the default, and “create that canister on the same subnet as canister X” or “create this canister on a subnet _other_ than canister X, Y, Z (for load balancing)” or “create this canister on a subnet with at least _n_ nodes” or other subnet indications an optional setting. And I hope we aim for such declarative settings, and not just a blunt and inflexible “create on subnet X”.

-------------------------

Hazel | 2021-12-14 13:51:19 UTC | #6

:wave: hey all! Just wanted to check the status of this.

-------------------------

diegop | 2021-12-14 15:04:00 UTC | #7

Good question. Let me ping internally as well.

-------------------------

bogwar | 2021-12-14 15:29:04 UTC | #8

We have a proposed feature to allow the caller to specify a subnetwork on which to install a newly created  canister. The feature would also require to expose via the dashboard a variety of attributes of subnetworks (like replication factor, availability of threshold ECDSA on that subnetwork, subnetwork load etc), which should allow for a somewhat informed decision.

-------------------------

Hazel | 2021-12-14 22:21:30 UTC | #9

Wonderful, would I be able to use this feature on chain? For me this is critical. 

Also, is there a timeline associated with this or is it just proposed?

-------------------------

bogwar | 2021-12-15 08:39:06 UTC | #10

Yes, canisters should be able to make such canister creation requests -- however in the first iteration it is likely that a canister would not be able read up-to-date subnetwork info so that may need to be fed "manually". In the long term, we should expose subnetwork info on chain (there's more than one usecase for this). 
There is no timeline unfortunately at the moment.

-------------------------

h1teshtr1path1 | 2022-04-16 17:52:13 UTC | #11

I want some extra information for this, im unable to check wallet_create_canister method in motoko , do you have some example for that, already tried to use it according to docs, getting some error.....
if you could help with that : 
[Blog for error](https://forum.dfinity.org/t/syntax-error-with-wallet-create-canister/12193)

-------------------------

tokuryoo | 2023-03-28 12:00:24 UTC | #12

Just wanted to check the status of this.

-------------------------

h1teshtr1path1 | 2023-03-28 12:12:34 UTC | #13

In case if it helps, we can create new canisters in the subnet of an already existing canister. Meaning, you can use management canisters create_canister method from an already existing canister, and new canisters will get created in the same subnet.

-------------------------

Severin | 2023-03-28 12:17:08 UTC | #14

No specific subnet is possible (yet?), but you can [choose the subnet type](https://internetcomputer.org/docs/current/references/cli-reference/dfx-ledger#dfx-ledger-create-canister) with `dfx ledger create-canister --subnet-type <type>`

To see available options, use `dfx ledger --network ic show-subnet-types`. No option means `application`

-------------------------

tokuryoo | 2023-03-29 02:08:48 UTC | #15

Thank you very much. I am amazed. But it is not the best for me.

-------------------------

tokuryoo | 2023-03-29 02:04:38 UTC | #16

@Severin 
Should I do create-canister and then deploy-wallet?
If I do dfx deploy, will it deploy to the same subnet as the one the wallet was deployed to?
> dfx identity --network ic deploy-wallet <CanisterID>

-------------------------

Severin | 2023-03-29 08:19:44 UTC | #17

[quote="tokuryoo, post:16, topic:7936"]
Should I do create-canister and then deploy-wallet?
[/quote]

Only if you want your cycles wallet to be on that subnet as well. It's a little bit more expensive, but I don't think that's a reason not to.

[quote="tokuryoo, post:16, topic:7936"]
If I do dfx deploy, will it deploy to the same subnet as the one the wallet was deployed to?
[/quote]
- If the canisters are already created, it will deploy to the already created ones, no matter which subnet they are on.
- If the canisters don't exist yet, it will create them on the same subnet as your default wallet
- If the canisters don't exist yet, and you use `dfx deploy --wallet <some wallet id>` it will create the canisters on the same subnet as `<some wallet id>` is located in

-------------------------

tokuryoo | 2023-03-30 03:50:19 UTC | #18

@Severin 
Thank you for your reploy. I understood.
Do you think the following way is also possible?

dfx ledger create-canister --subnet-type fiduciary
I secure a CanisterID with the above. I run dfx deploy using the Application Subnet wallet, specifying the CanisterID in canister_ids.json. The new canister is deployed to the fiduciary.

Is the CanisterID unique across all subnets?

-------------------------

Severin | 2023-03-30 10:19:44 UTC | #19

[quote="tokuryoo, post:18, topic:7936"]
I secure a CanisterID with the above. I run dfx deploy using the Application Subnet wallet, specifying the CanisterID in canister_ids.json. The new canister is deployed to the fiduciary.
[/quote]

Yes, this works exactly the way you described

[quote="tokuryoo, post:18, topic:7936"]
Is the CanisterID unique across all subnets?
[/quote]
Yes

-------------------------

gravity_vi | 2024-01-16 16:42:07 UTC | #20

is there a way to create canister on different subnet programmatically using ic-cdk?

-------------------------

Severin | 2024-01-16 16:46:06 UTC | #21

Yes, you can use the CMC's [`create_canister` function](https://dashboard.internetcomputer.org/canister/rkp4c-7iaaa-aaaaa-aaaca-cai#create_canister). If you specify no `subnet_selection` field then you land on a random subnet, otherwise you can either choose the type or target a specific one

-------------------------

gravity_vi | 2024-01-17 05:12:43 UTC | #22

Thanks for the quick response. We want to create canisters on different subnet using our one main `platform_orchestrator`. I will try using CMC canister to create canister on different subnet from `platform_orchestrator`. Is there a way to locally test this scenario using pocket-ic?

-------------------------

gravity_vi | 2024-01-17 07:41:32 UTC | #23

I think I found a way looking at the documentation. To test the scenario I would have to load CMC canister  using pocket ic and then test my functions as shown in the example. Correct me if I am wrong here

```
let ledger_canister_id = Principal::from_text("ryjl3-tyaaa-aaaaa-aaaba-cai").unwrap();
pic.create_canister_with_id(..., ledger_canister_id).unwrap();
pic.install_canister(ledger_canister_id, ...);
```

-------------------------

Severin | 2024-01-17 09:51:35 UTC | #24

You're not wrong that you can install NNS canisters like this, but they are _really_ annoying to set up properly. And I don't know myself how you properly set up the real CMC to target different subnets and I also don't know if it works properly on pocket ic. What I would suggest is that you use the fake CMC in [this repository](https://github.com/dfinity/cycles-ledger) and use this to check if you make the right calls. (It's not part of the releases right now, but I need it to be added there myself so I should get around to that this week)

-------------------------

