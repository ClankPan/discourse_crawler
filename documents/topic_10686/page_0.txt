icme | 2022-02-03 22:12:53 UTC | #1

I would like to use a variant as a key in my HashMap, for example
```
let Country = { 
  #germany;
  #france; 
  #england;
  ...
}

func countryEqual(c1: Country, c2: Country): bool { c1 == c2 };

let countryMap: HashMap<Country, Text> = HashMap<Country, Text>(
  countries.size(),
  countryEqual,
  //what could/should I use here as a hash?
);
```

I have a few questions based off of this example:

1. Is this possible/recomended usage of a variant, or should I be using a type union of country strings, or even a record and just not have my HashMap key be typed?
2. If this is possible, is my variant equals function valid in Motoko or would I need a `toText()` function? I'm assuming this works based on how a variant is used in pattern matching, but don't understand the underlying representation of a variant.
3. As mentioned in the comment above, is a variant hashable as is or would I need to `toText()` it first and hash the Text?

-------------------------

paulyoung | 2022-02-04 03:52:26 UTC | #2

[quote="icme, post:1, topic:10686"]
Is this possible/recomended usage of a variant
[/quote]

I think itâ€™s a reasonable use case. I try to avoid strings when I can use something more strongly typed.


[quote="icme, post:1, topic:10686"]
is my variant equals function valid
[/quote]

If it type checks then I assume it is valid ðŸ™‚

[quote="icme, post:1, topic:10686"]
is a variant hashable as is
[/quote]

I donâ€™t think thereâ€™s anything provided for you. My understanding is that youâ€™d need to provide a hashing function.

The constructor for `HashMap` takes a `keyHash : K -> Hash.Hash` function, so youâ€™d need to implement that.

I suppose technically something like this would work but youâ€™d probably want to use a popular hashing algorithm on the tag name as text, or something like that.

```
hashCountry(country : Country) : Hash.Hash {
  Hash.hash(
    switch {
      case #england 0;
      case #france 1;
      case #germany 2;
    }
  )
};
```

-------------------------

jzxchiang | 2022-02-04 05:36:12 UTC | #3

> If this is possible, is my variant equals function valid in Motoko

I'm no OCaml expert, but I [think](https://github.com/dfinity/motoko/blob/9084575745b235720610cbf742f75f71b0072df9/src/mo_values/operator.ml#L228) it should work.

-------------------------

