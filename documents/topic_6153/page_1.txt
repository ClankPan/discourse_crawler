JensGroth | 2021-10-05 17:43:16 UTC | #102

Hi tnpxu, thanks for the reminder to give an update.
Our security reviews found a risk of subnet congestion. This could impact smart contracts, e.g., if a canister is supposed to transfer ICP before a deadline but cannot do it due to congestion. We are in parallel debating whether it is enough of a concern to be a blocker and also working on mitigations. I'd not want to commit to a concrete deadline, but I'm guessing in the order or weeks, not months.

-------------------------

tnpxu | 2021-10-06 08:05:08 UTC | #103

Thank you for an update @JensGroth

-------------------------

diegop | 2021-10-06 16:25:29 UTC | #104

I thought this thread would be interested in the update about project scope and design on the Sandboxing project tread: https://forum.dfinity.org/t/security-sandboxing-community-consideration/7438/3?u=diegop

-------------------------

stopak | 2021-10-21 08:49:13 UTC | #106

Hi Jens, any update on this? Thanks!

-------------------------

jonit | 2021-10-21 11:57:24 UTC | #107

would be great to have news on this as it is vital update in order to get ICP NFT projects onto the same playing filed as those on other chains

-------------------------

aramakme | 2021-10-21 13:33:43 UTC | #108

What features are you looking for?  I've integrated ICP with my NFT auction.  Code is at https://github.com/aramakme/aramakme_nft_auction  Project is at https://hwqwz-ryaaa-aaaai-aasoa-cai.raw.ic0.app/  Fell free to dm.

-------------------------

jonit | 2021-10-21 13:57:02 UTC | #109

primarily auction functionality, I don't think you can submit bids on NFT's right now as canisters would need to hold the ICP that has been bid

-------------------------

aramakme | 2021-10-21 14:36:14 UTC | #110

I got around that by using a reverse auction.  Because the price starts high and decays to low, no one has to pay until the price is where they want it be...so the ICP can go directly to an account. This is not as good if you are a market place taking a cut, but this is decentraland and we're supposed to be cutting out middlemen anyway.  Artists can use it to get paid directly and not have to worry about split cuts and waiting on payouts. 

There are other creative solutions. If you have to do a split cut you can just do two transactions before transferring...if you do the UI right the user won't really know...well..maybe with plug they will.  You just need to confirm the transactions with the ledger canister before taking action.

-------------------------

jonit | 2021-10-21 17:42:48 UTC | #111

Really you want multiple people to bid on a sale and and for people to see the bids, this also gives you a floor price for average bids. The dutch auction is more like a buy it now option , its a great option if there is no other way to do it.

-------------------------

JensGroth | 2021-10-22 10:43:47 UTC | #113

Hi everybody, we want to hold back on this feature with a new ETA of January.
There are two security reasons: subnet congestion could affect availability and we have after internal discussions become more wary about the risk of Wasm jailbreak. The latter concern is addressed by the Canister Sandboxing feature but unfortunately incurs a delay.

-------------------------

lastmjs | 2021-10-22 13:01:47 UTC | #114

Sounds wise to me. How will subnet congestion be addressed by January?

-------------------------

jfw1987 | 2021-10-22 15:01:16 UTC | #115

Holding this back might indeed be wise but the community has voted on it and those security risks were known about before the proposal was put in place for a vote. The proposal people voted on even said:
> Some of the mitigations, e.g., sandboxing of canisters will take time to develop and will not be ready before this proposal. We do not consider the mitigations and additional security features as blocking the proposal. But we consider the ability for canisters to transfer ICP to be in an experimental phase. We encourage experimentation with small amounts of ICP but discourage large amounts of ICP.

So this delay is just ignoring the proposal that won 99.98% of the vote? I'm not trying to be antagonistic here, just concerned NNS votes can just be ignored.

-------------------------

lastmjs | 2021-10-22 17:07:01 UTC | #116

That is a very good point

-------------------------

diegop | 2021-10-22 22:03:18 UTC | #118

**It's important I accept responsibility here:** I made the call and told @JensGroth  that his project being blocked by canister sandboxing did not go against the intent of the NNS proposal which in my mind was "*we trust this team/plan to execute this project*". Jens did ask me if I thought this would go against the proposal so I do want to make sure i emphasize that he and the team take this very seriously.

Did I make the wrong call? Possibly. I am always willing to accept responsibility and iterate.

I do not want to over-talk, but I do want to characterize that because I saw the intent of the NNS proposal to be about trusting the particular team of experts to design and build the plan. 

As all plans change as they make contact with reality, I saw the blocking delay as "*still within the scope of the original plan*". If the change had been "*we decided to NOT hold ICP*", I think that would go against the intent of the plan. When said experts went from "*we think the risk is manageable*" to "*we no longer think the risk is manageable*", I thought that showed intellectual honesty.

So lay it on me. I am here, and I am learning. Fwiw, I think this is a good opportunity for community norms to emerge.

So what do folks think?

1. Did I make the wrong or right call? both are very possible.

2. Is the problem in the intent I understood or communicated of the NNS proposal? Very possible.

3. Do we need another NNS proposal to change the plan? Not unreasonable.

4. Do we need to better encapsulate the possible ranges of the plan and what is acceptable changes or delays?

-------------------------

mparikh | 2021-10-22 22:50:13 UTC | #119

We are all learning as a community. That is the good part. There is nothing wrong in admitting that we were wrong ("we now think that risk is not manageable"). This is the point of having an vested community. that is, at times, quite vociferous.  So, IMO, I think you made the correct call. 

That said, we cannot ignore NNS votes. I believe that we should create another proposal to negate the original vote (and see if it passes). There might be projects that might be dependent on canisters holding ICP....so we will see. In  the future, have this as the explicit plan in case of severe adverse findings as opposed to individuals calling the shots.

As a general rule, there are "unknown unknowns" that will creep up in any project. So we should be ready to tackle this at every step. This is in contrast of writing papers/participating in 50 different conferences (the development philosophy of another chain which shall not be named) and then taking years to develop even a semblance of "smart contract". 

Specific to this proposal, it could have been worded differently because we knew about the risks ("known-unknowns"). In that case, the action might have been the same; with a forewarning in that proposal..."if we find, upon further investigations, that such risks become unmanageable, then we will...."

-------------------------

LightningLad91 | 2021-10-23 04:30:20 UTC | #120

I agree with this approach and I am in favor of holding another vote. It would be nice to have a formal record of this change.

-------------------------

LightningLad91 | 2021-10-23 14:34:24 UTC | #121

[quote="diegop, post:118, topic:6153"]
Did I make the wrong or right call? both are very possible.
[/quote]

I don’t think you’re wrong for addressing a security concern. 
 
[quote="diegop, post:118, topic:6153"]
* Is the problem in the intent I understood or communicated of the NNS proposal? Very possible.
[/quote]

Does this go against the proposal? That depends. Did Dfinity discover some new information that changes the original risk assessment; or did someone just decide they were no longer comfortable accepting the risk? I think the latter would be considered outside the scope of the proposal.

However, since Dfinity is the team building this feature, I think it is completely acceptable for you to raise a concern and request a new vote after providing your rationale.


[quote="diegop, post:118, topic:6153"]
Do we need another NNS proposal to change the plan? Not unreasonable.
[/quote]

Definitely. We need a record of the change

[quote="diegop, post:118, topic:6153"]
Do we need to better encapsulate the possible ranges of the plan and what is acceptable changes or delays?
[/quote]

I don’t think so. I think this proposal was unique (so far) because it included a statement about risk acceptance. If it wasn’t for that statement I don’t think anyone would have a problem with the delay.

-------------------------

skilesare | 2021-10-23 16:11:57 UTC | #122

I'd concur that if security concerns have shifted a vote to amend should take place.

That being said, this going to say a lot about this community. We have a wide range of folks varying from technologists to opportunists and a bunch along different vectors. The challenge with democracy is that you get a lot of uninformed people weighing in. The liquid part of the NNS can fix some of that but I don't think it is out of line in suggesting that that component is basically not organized and not to be relied on yet.

Basically, I don't think we can trust the risk profile of the community on this just yet. The devs that need this don't have a lot of ICP(yet) and the folks that do have a bunch of ICP probably don't understand what is at risk technically.  In a well-informed and mature ecosystem, you can probably trust the “market of ideas” to make the right choice...not sure we are there yet.

Will be interesting to see what happens.

-------------------------

LightningLad91 | 2021-10-23 17:31:48 UTC | #123

I don’t agree. This ommunity may not be full of IC developers but that does not mean they lack the competency to assess risk.

If the developer organizations believe that the security risk is to great they should present their case to the community. Cycle_DAO already started doing this https://cycledao.xyz/posts/nns-proposal-enabling-canisters-to-hold-icp

I don’t think it’s fair to pick and choose when we are going to listen to the community. That’s not how this governance system is supposed to work.

-------------------------

skilesare | 2021-10-23 17:42:27 UTC | #124

I don't disagree. This 100% is on the emerging institutions to provide information in a digestible format. 

I'm not saying we pick and choose. I'm saying we addressed any organizational risks head on. They are as real and valid as the technical risks.

-------------------------

Soolking-cyber | 2021-10-24 19:18:04 UTC | #125

Guess, we'll just need to workaround lol

-------------------------

LightningLad91 | 2021-10-26 18:55:32 UTC | #127

This is a great question. I can think of some other questions well:

1. How sophisticated would this attack have to be?
2. What level of access is required to perform this attack
3. What resources are required
4. Finally (most important in this case) what is a realistic timeframe for someone to actually plan for and execute this attack? Could all of that be achieved in the 3-4 month window that is afforded to the attacker before the sandboxing feature is implemented?
4a. Is there any chance that the sandboxing feature will be delayed?

-------------------------

mparikh | 2021-10-26 20:32:53 UTC | #128

This post is informing on one of two issues: the wasm jail-break. The subnet congestion issue is separate.

https://forum.dfinity.org/t/direct-integration-with-bitcoin/6147/48

Please do go through the link for the community thought on perceived risk. IMO it would take a fairly sophisticated attack. However even the potential of an attack vector along with known method of preventing such an vector (i.e. sandboxing) , particularly in context of IC and the reputation of best cryptographic team in the world at stake, is the key issue.

The rug pull issue (alluded to by @cmatza ) is orthogonal to the sandboxing; and cannot / should not be addressed here. (It is a valid issue, though).

-------------------------

diegop | 2021-10-26 22:19:11 UTC | #129

hey folks,

I deliberately let this thread breathe to see what folks thought, but overall, I think there is a consensus in doing a new NNS motion proposal for this kind of change. I particularly am attracted by the clarity of thought in @LightningLad91's post.

I will draft an NNS motion proposal, post it on this thread, and see what folks think. Once we have a more baked version we can submit for formal NNS motions. I am sure it will have multiple areas where we will need to tweak and change, but I wanted to let folks know that I appreciate the guidance.

-------------------------

LightningLad91 | 2021-10-27 10:59:52 UTC | #130

Hi @mparikh. Thanks for providing the reference. I've read through it before, but I read through it again to refresh myself. I also read through the latest on the Sandboxing thread here: https://forum.dfinity.org/t/security-sandboxing/7438

[quote="mparikh, post:128, topic:6153"]
Please do go through the link for the community thought on perceived risk.
[/quote]
These threads are great for technical folk, but they don't present the information in a digestible format for the average community member. A good security engineer should be able to synthesize the discussion into a few key points.

Furthermore, we should not be making decisions like this based on perceived risk; rather, we should put emotions aside and use quantitative and qualitative measures to provide an accurate risk assessment.

[quote="mparikh, post:128, topic:6153"]
However even the potential of an attack vector along with known method of preventing such an vector (i.e. sandboxing) , particularly in context of IC and the reputation of best cryptographic team in the world at stake, is the key issue
[/quote]

I disagree. The reputation of Dfinity should not be a driving factor (no offense intended).

You and others have already acknowledged that this vulnerability has existed for some time now. We already have millions in assets (mainly NFTs) that are susceptible to exploitation. What does this mean? It means that delaying this proposal does not mitigate the risk. Delaying this proposal simply reduces the potential impact (total $$$ stolen) of an attack. I'm not trying to be dismissive; I just want to paint an accurate picture.

[quote="mparikh, post:128, topic:6153"]
IMO it would take a fairly sophisticated attack.
[/quote]

Agreed. But I also think this may be understating it. We are talking about a decentralized system right? I don't claim to be an expert on the IC architecture, but even if a rogue process was able to escape from it's canister and tamper with another, wouldn't this have to be accomplished on all replicas at the same time in order for any valuable assets to be moved around? I assume consensus would still have to be reached, no? This sounds like an extremely well orchestrated attack that requires a deep understanding of the IC. Does that mean it's impossible? absolutely not. But it is something that should be measured and included in our assessment. 

To be clear; i'm not saying i'm for, or against, a delay. I'm just asking for additional information and for everyone to remember that we are talking about a network whose very existence depends on an active ecosystem. What do I mean by this? Unlike other networks, users cannot keep the network alive by running their own hardware. We effectively pay node providers for this service when we buy ICP off of the exchange. IMO, the IC is very vulnerable right now. The demand for NFTs (across all chains) has reduced significantly and we don't have DeFi to bring in money flows. Many of our other services are designed to be free to users. This is great for adoption, but it does not pay the bill (node providers). We need to consider that there are other risks associated with this delay and factor those into our decision as well.

Sorry for getting on a soapbox. I was actually supposed to take this week off from the IC. Unfortunately, between the IC Gallery Moonwalkers launch (I love utility/access NFTs) and this discussion (I work as a security engineer) I couldn't help myself.

-------------------------

singularity | 2021-10-27 14:21:05 UTC | #131

I consider this part of the preparation work for the deployment of the proposal, so I see nothing wrong. I am sure there are many other things that the developers resolve as they plan to deploy, and hence the time delay between the vote and the deployment, and this is no exception. We will still get to hold ICP in canisters as we voted.

-------------------------

singularity | 2021-10-27 14:24:28 UTC | #132

[quote="mparikh, post:119, topic:6153"]
“if we find, upon further investigations, that such risks become unmanageable, then we will…”
[/quote]

Great points. The caveat “if we find, upon further investigations, that such risks become unmanageable, then we will…” should fix this for future proposals.

-------------------------

JensGroth | 2021-10-27 15:08:56 UTC | #133

Wrt congestion there are several concerns that can be addressed individually. To some extent meeting the ETA is a question of reaching the right tradeoff, we will not aim for perfection but tackle the highest priority ones and ask for an ok from the security team. Since new findings have trickled in and the resolution features have just been created the ETAs are not yet established so while still optimistic about January I have to acknowledge the risk of delay.

-------------------------

JensGroth | 2021-10-27 15:13:18 UTC | #134

Since we’re looking at a much later release date, I want to give an update of where we’re at.

**Implementation**
The change wrt allowing canisters to transfer ICP is small and we have the enablement of canisters to transfer ICP ready and tested. Accompanying it is a bigger piece of work, a candid interface to specify how to interact with the ledger.

**Documentation**
We have written a spec for the ledger canister. We are working on developer guidance on how to transfer ICP in canisters and also guidance on how to verify canister smart contracts. As part of verifying a canister smart contract you may want to check that the canister’s Wasm code is correct, and we have already published guidance to verify it[ matches original source code](https://smartcontracts.org/docs/developers-guide/tutorials/reproducible-builds.html).

**Security**
I’m going to be deliberately vague wrt the concerns but let me try to give the gist.
One area I’ve called congestion. This relates to the concern that there can be delays in transferring ICP, an unfortunate outcome could for instance be you send an ICP to fulfill a smart contract obligation but it arrives too late because an attack has clogged the system. Congestion is an umbrella term, there are several things we want to improve, some of them found recently. We currently have one feature addressing the most important of these issues with ETA at the end of November, other features are in the works.
Another area is sandboxing. We are not aware of concrete attacks but are concerned about the risk of Wasm jailbreak. We have increased the priority of canister sandboxing to address this issue, with ETA at the end of December.

-------------------------

jzxchiang | 2021-10-27 21:28:14 UTC | #135

Thanks for the update.

I believe the congestion mitigation and sandbox features will also help improve security for canister principals holding arbitrary tokens (e.g. SNS tokens once they are available).

At the same time, I agree with @LightningLad91's general message. A single wasm jailbreak isn't enough—an attacker would need to hijack 2/3 of the nodes in that subnet to override consensus. That doesn't seem easy.

Security is important, but so is execution. Personally, I would be in favor of implementing the proposal now, and not being blocked on congestion mitigation and sandboxing. They can continue to be worked on in the background.

-------------------------

diegop | 2021-10-28 00:51:47 UTC | #136

[quote="diegop, post:129, topic:6153"]
I will draft an NNS motion proposal, post it on this thread, and see what folks think. Once we have a more baked version we can submit for formal NNS motions.
[/quote]

*Hey folks,*

*Here is my follow-up to the quote above, what do all you think? Below is draft NNS motion proposal to bless the change to the plan.*


## Postponing proposal 20588 (Enabling canisters to hold ICP) for security concerns


## 1. Objective

The engineers and researchers working on the project "enabling canisters to hold ICP" discovered some security risks and issues that lead them to delay this project until some security issues are resolved (ETA: end of December 2021).

## 2. Background

September 17, 2021: NNS motion proposal #20588 to work on "enabling canisters to hold ICP" passed. This is an important proposal and feature as it can accelerate the growth of defi on the Internet Computer.

October 22, 2021: the team working on the project announced that they had discovered some security issues which their better judgment leads them to address first before enabling canisters to hold ICP.

October 26, 2021: After discussing in the developer forum, the consensus was the project should not be delayed unilaterally by the security concerns, but rather that the community vote and bless the delay. https://forum.dfinity.org/t/enable-canisters-to-hold-icp/6153/129?u=diegop

## 3. State of the project currently

### Implementation
The change with respect to allowing canisters to transfer ICP is small and the team working on it has the enablement of canisters to transfer ICP ready and tested. Accompanying it is a bigger piece of work, a Candid interface to specify how to interact with the ledger.

### Documentation
The team has has written a spec for the ledger canister. They are working on developer guidance on how to transfer ICP in canisters and also guidance on how to verify canister smart contracts. As part of verifying a canister smart contract one may want to check that the canister’s Wasm code is correct, so they have already published guidance to verify it matches original source code 3.

### Security
The team is "deliberately vague" with respect to the security 
concerns, but the gist has two areas:

a. "Congestion" - This relates to the concern that there can be delays in transferring ICP, an unfortunate outcome could for instance be that one sends an ICP to fulfill a smart contract obligation but it arrives too late because an attack has clogged the system. Congestion is an umbrella term, there are several things the team wants to improve, some of them found recently. They currently have one feature addressing the most important of these issues with ETA at the end of November, other features are in the works.

b. "Sandboxing" - The team is not aware of concrete attacks but are concerned about the risk of Wasm jailbreak. We have increased the priority of canister sandboxing to address this issue, with ETA at the end of December.

-------------------------

LightningLad91 | 2021-10-28 12:00:44 UTC | #138

I think it would be worthwhile to include this statement from @JensGroth as well

[quote="JensGroth, post:133, topic:6153"]
Wrt congestion there are several concerns that can be addressed individually. To some extent meeting the ETA is a question of reaching the right tradeoff, we will not aim for perfection but tackle the highest priority ones and ask for an ok from the security team. Since new findings have trickled in and the resolution features have just been created the ETAs are not yet established so while still optimistic about January I have to acknowledge the risk of delay
[/quote]

-------------------------

nomeata | 2021-10-28 13:50:41 UTC | #139

What I still don’t understand is why we can't enable “canisters to hold ICPs” while explaining people it’s beta (like the whole IC is)?

Or, put differently: Isn't there a cognitive dissonance between “we need to prevent people from putting their ICPs at risk, and hence put up technical hurdles” and, at the same time, “we applaud people to already run valuable NFT and other valuable projects on the IC”? Why doesn't DFINITY put technical hurdles in place to prevent, say, valuable NFTs on the IC (e.g. resetting all canister state)?

I’d be strongly in favor of removing the restriction, together with clear communication about the risk (just like we clearly say that the whole IC is still in beta). This way, development of dApps that involve ICPs can at least _begin_, and the ecosystem will be ready once the IC is ready!

Is this (alternative) option going to be part of the vote? (Or is rejecting your postponing proposal exactly that?)

-------------------------

LightningLad91 | 2021-10-28 14:16:54 UTC | #140

I agree.

I find it odd that way the proposal is written. We are voting to "adopt" a proposal to delay. And if we want to implement the original proposal we must "reject" this one.

Wouldn't it be better to state the updated security concerns, include the roadmap for implementing fixes, and then ask the community to "adopt" a proposal to accept the risk and proceed, or "reject" the proposal (resulting in a delay)?

-------------------------

JensGroth | 2021-11-02 15:35:48 UTC | #141

We were thinking of the approach to launch with warnings that the IC is in beta. The risk is that regardless users use big amounts. Of course we can wash our hands if there is an attack and say, hey, we warned you it is in beta. But it would still be sad for those users and it would still give bad publicity for the IC. 
Having said that, I would indeed interpret a reject vote as 'go ahead regardless of sandboxing or not as we originally planned'. I'd also consider a rejection of the delay as increasing the risk appetite wrt congestion.

-------------------------

nomeata | 2021-11-02 22:35:55 UTC | #142

[quote="JensGroth, post:141, topic:6153"]
Of course we can wash our hands if there is an attack and say, hey, we warned you it is in beta.
[/quote]

Which is what we would do if the NFT canisters get attacked, right? It seems equally bad for our users … but maybe not equally bad for the reputation. So a sarcastic conclusion is that the motivation isn't the users safety but dfinity's reputation - which I guess is fair and reasonable, in an unfortunate way.

-------------------------

LightningLad91 | 2021-11-03 03:55:15 UTC | #143

There’s a lot I want to say but I honestly don’t think it matters. 

Fwiw (coming from a user), I’ll be voting against this proposal.

-------------------------

diegop | 2021-11-03 04:52:32 UTC | #144

I am not sure I follow the latest few comments, so I will lay out what I see so folks can help me piece them together: 

1. @nomeata asked why we cannot just go ahead with security implications and just warn people (very fair question). My answer (which I think @JensGroth  would agree) is "*we absolutely could. The security team is conservative, but perhaps there is more community appetite for risk than the security team has."

2. @LightningLad91 will be voting against a proposal to delay this (again, totally fair). Should I interpret this statement meaning "*I have the appetite for the risk of congestion and wasm jailbreak*"? Or something more subtle I am over-simplifying?

Am i understanding correctly?

-------------------------

jzxchiang | 2021-11-03 07:18:30 UTC | #145

Not sure when the new proposal will go live, but I also will vote against it (meaning that we should let canisters hold ICP as soon as possible).

Basically, I think the risk is acceptable, and a lot of DeFi projects have been waiting for this (and I'm waiting for some of those DeFi projects).

-------------------------

ApeInFoamOhhh | 2021-11-03 10:58:42 UTC | #147

This was brought to my attention by @LightningLad91 thus I created an account 5 mins ago so I could chime in…

Im in aggreance with this statement below by @LightningLad91 :

“Wouldn’t it be better to state the updated security concerns, include the roadmap for implementing fixes, and then ask the community to “adopt” a proposal to accept the risk and proceed, or “reject” the proposal (resulting in a delay)?”

This also rings true for the below comment by @nomeata :

" I’d be strongly in favor of removing the restriction, together with clear communication about the risk (just like we clearly say that the whole IC is still in beta). This way, development of dApps that involve ICPs can at least *begin* , and the ecosystem will be ready once the IC is ready!"

As long as the risk is well advertised/communicated as to caution those who to take the plunge then I cant see anything wrong with removing the restriction for canisters to hold ICP inturn allow testing and developments of dApps.

-------------------------

LightningLad91 | 2021-11-03 11:29:53 UTC | #148

Thanks for asking Diego. I'll try to keep it short.

[quote="diegop, post:144, topic:6153"]
Should I interpret this statement meaning “ *I have the appetite for the risk of congestion and wasm jailbreak* ”?
[/quote]
I would not state it this way. It's my opinion that the risk of perpetual delay will have a far greater impact on the ecosystem than the risk associated with congestion and Wasm jailbreak. Therefore, I am choosing what I perceive to be the lesser of two evils. If we look back at some previous comments it might help explain my point of view.

[quote="JensGroth, post:133, topic:6153, full:true"]
Wrt congestion there are several concerns that can be addressed individually. To some extent meeting the ETA is a question of reaching the right tradeoff, we will not aim for perfection but tackle the highest priority ones and ask for an ok from the security team.
[/quote]
This may sound rational; but, this tells me that the security team has not defined an acceptable level of risk. Sure, they have assessed the vulnerability, but that is different than managing risk. Basically, it sounds to me like we are making decisions based on the security team's feelings rather than anything quantifiable. I could certainly be wrong; but this is how I perceive the situation based on the information presented here.

[quote="JensGroth, post:133, topic:6153"]
Since new findings have trickled in and the resolution features have just been created the ETAs are not yet established so while still optimistic about January I have to acknowledge the risk of delay.
[/quote]
This seems to contradict the first statement about not seeking perfection. So findings have trickled in the last couple months; do we really expect that no additional findings will trickle in between now and January? As someone who also works in security, I highly doubt it. At what point do these security concerns result in perpetual delay? I would be more confident about avoiding this scenario if I wasn't already under the impression that risk decisions were being made based on feelings.

[quote="JensGroth, post:134, topic:6153"]
Congestion is an umbrella term, there are several things we want to improve, some of them found recently. We currently have one feature addressing the most important of these issues with ETA at the end of November, other features are in the works.
[/quote]
This sounds positive. So the most important congestion issue is (tentatively) being addressed at the end of November. Considering it is November now, i'd say that leaves a pretty short window of opportunity for Dfinity to implement the original proposal; developers to push out DeFi solutions; and for an attacker to exploit the vulnerability. Obviously there are other concerns, but if we are making incremental improvements to our security posture over the next 3-4 months how likely is an attacker to be successful in exploiting any of these individual vulnerabilities? That's an honest question, obviously i'm not familiar with everything that falls under the "congestion umbrella" (for good reason).

[quote="diegop, post:136, topic:6153"]
b. “Sandboxing” - The team is not aware of concrete attacks but are concerned about the risk of Wasm jailbreak. We have increased the priority of canister sandboxing to address this issue, with ETA at the end of December.
[/quote]
So a risk was identified, with no concrete attack vectors, and there is a mitigation in work. Personally, I am comfortable accepting this risk given the ETA of Q1 2022 for the sandboxing feature.

Obviously this is just one opinion. I am not trying to discredit Dfinity or its security team. I'm just not convinced they see the forest for the trees.

-------------------------

diegop | 2021-11-03 14:22:38 UTC | #149

[quote="LightningLad91, post:148, topic:6153"]
would not state it this way. It’s my opinion that the risk of perpetual delay will have a far greater impact on the ecosystem than the risk associated with congestion and Wasm jailbreak. Therefore, I am choosing what I perceive to be the lesser of two evils. If we look back at some previous comments it might help explain my point of view.
[/quote]

I think this makes a lot of sense. It is what I understood as well, but I did not write it as clearly as you did.

-------------------------

jfw1987 | 2021-11-04 21:14:16 UTC | #150

Does Dominic's latest tweet mean the delay has been scrapped and we can expect this to be turned on imminently? 

https://twitter.com/dominic_w/status/1456305502112075779?t=9PTayrI7vbQGJC0c4300sA&s=19

-------------------------

ApeInFoamOhhh | 2021-11-05 05:36:32 UTC | #151

It would seem that way, some clarification would be good...

-------------------------

Hazel | 2021-11-05 14:13:08 UTC | #154

Agree, getting mixed signals now. 

We are working to release a hosted checkout solution. Knowing if the January deadline still stands is critical in planing our next couple of weeks.

-------------------------

mparikh | 2021-11-05 15:09:47 UTC | #155

I believe that if we take Dominic's tweet literally, he is advocating for dfinity foundation to vote against the proposal to delay proposal 20588. This would be troublesome because it is the security engineers and researchers at dfinity who are advocating to delay proposal 20588. 

However in all things software, taking everything literally might not be ideal. I would suggest that a true security assessment (threat vs risk along with risk mitigation) as advocated by @LightningLad91 be done and attached to the proposal to delay. Then vote and let's the chips fall where they do.

-------------------------

diegop | 2021-11-05 17:45:18 UTC | #156

I don't want to front-run too much, but I did want to let folks that our intent is that @JensGroth will be posting an update very soon.

-------------------------

JensGroth | 2021-11-05 18:20:09 UTC | #157

We are thinking to put out a proposal to enable canisters to transfer ICP next week. Instead of making a community proposal to delay or not, it makes more sense to vote directly on the real proposal. If you prefer to delay you can vote to reject an upgrade, if you don't want to delay you can vote to accept the upgrade.

On the security front, the canister sandboxing ETA is still end of December, and we have made good progress on the congestion issues.

-------------------------

Hashimoto | 2021-11-06 16:31:21 UTC | #158

Can I ask some clarifying questions:

* Is there a more in-depth description of the risks associated with "congestion" than @diegop's description above. What does "too late" mean exactly. Is there an theoretical example of how this could lead to loss of funds? 
* ~~What does an attacker need to do in order to exploit a WASM jailbreak if possible? Do they need to control a single node, 2/3 of nodes as @LightningLad91 asks, or might it be possible to craft a payload like a malicious canister that would then be able to compromise other canisters~~ (**Edit confirmed the theoretical attack is a canister escaping its runtime so could in theory be exploited by anyone rather than just a node operator**)
* Could this feature be initially enabled only on some subnets rather than all? Possible benefits: 
  * Signals that this is an experimental feature, and creates a kind of "testnet" style pathway by which features can be rolled out.
  * Could resurrect the idea of "Authorised subnet" and only allow authorised developers to deploy on subnets which allow canisters to hold ICP - this might reduce risk of WASM jailbreak attacks, and could also reduce risk of rug pulls.
  * Could possibly throttle messages to this subnet earlier thus reducing the possibility of DoS attacks aimed at creating congestion.

-------------------------

ComputerInternetMan | 2021-11-07 23:27:39 UTC | #159

This is purely antecdotal… but it does play into reputational concern albeit from a different perspective. IC is seen as a palpable threat to some extremely well financed interests. Let me emphasize the term ‘extremely well financed’ and add reckless. Does not mean that folks should be afraid, but wariness is appropriate. The general fragility of some parts of the crypto ecosystem at this moment coupled with the not insignificant probability of an orchestrated rug pull by ‘outside interests’ taking advantage of the community that would be damaging to Dfinity’s reputation… might suggest an ultra conservative approach is warranted. Yes this is qualitative… but it feels like a thesis that is supported by the external environment. Respect the urgency felt by folks that want to ‘make it happen’ now, it is understandably very hard to be patient when time and effort has been made. Especially when you have conviction that you have built a better mousetrap. Hope you appreciate this commentary in the spirit with which it is intended, as someone that duly supports IC. In summation, allocating a few additional ounces of prevention in deferring to what ‘security’ recommends seems warranted. We cannot legislate good behavior however we can make best efforts for good guardrails and hold ourselves accountable for the latter.

-------------------------

LightningLad91 | 2021-11-08 00:30:01 UTC | #160

Hello. I just wanted to clarify my prior statement.

My question wasn't really about *who* could perform the attack. It was about *how* the attack would have to be carried out. If I'm understanding it correctly, the Wasm runtime exists on each node that the replica is deployed too. So using the latest subnet numbers I believe that is 13 nodes = 13 replicas. So 2/3 would be roughly ~9 nodes. So each replica would have to break out of its runtime on 9 different nodes. That's probably not too hard to imagine since the exploit would probably be just as effective on one node as another; but, the underlying IC-OS is where it gets tricky for me. Now each of the 9 replicas is responsible for understanding its own environment and targeting the right process that is holding the valuable assets. Does the IC-OS identify each process the same way on every node? Is this the type of information that the attacker would be able to figure out before constructing the payload, or does this have to be resolved in real-time?

Maybe I'm overthinking this? Maybe the attacker just has to escape the canister and set up some sort of C2 capability that allows them to navigate all the more complex details of underly IC-OS. It would be great to understand how much protection we gain from the replicas in this scenario.

-------------------------

Hashimoto | 2021-11-08 10:27:42 UTC | #161

AFIK the issue is that specially crafted code in one canister could access state of other canisters. I guess the exact memory location might vary from node to node but would guess that if malicious code works on one replica it likely works for them all. https://forum.dfinity.org/t/security-sandboxing/7438/3

-------------------------

LightningLad91 | 2021-11-08 12:27:16 UTC | #162

Understood. If it's really that easy to locate a specific memory location and read it across 2/3 of the nodes at the same time then that would be good to know. I still imagine there are a lot of other moving parts that would make the attack more complex, but this is good information.

-------------------------

hshadab | 2021-11-10 02:36:49 UTC | #163

Hi @JensGroth! Any updates on whether a proposal is coming this week? Thank you!

-------------------------

JensGroth | 2021-11-10 18:19:12 UTC | #164

Yes, the plan is to make the proposal this week, we're currently testing the upgrade on our testnet.

-------------------------

levi | 2021-11-10 18:33:41 UTC | #165

@JensGroth does this also come with a new complete candid interface for the ledger in this proposal this week? Or is that at a later time?

-------------------------

kpeacock | 2021-11-10 22:29:48 UTC | #166

Yes, the ledger will be getting its new interface to support this upgrade, and you can see a preview of it in this draft PR of an example that calls it https://github.com/dfinity/examples/pull/123/files#diff-71f0787157a463b609c9da3f32e1fc8a19a4e973b92953cd51441f45328d4c19

-------------------------

nomeata | 2021-11-10 23:19:39 UTC | #167

Thanks for the glimpse! I wonder if we will regret not putting the error `variant` in an `opt`, which is necessary if you want to extend the set of variant tags (e.g. errors) later in a backwards-comlatible way. Is it too late to change that?

Yuck, although I just noticed that with the latest iteration of subtyping on Candid values, the idea of wrapping `variant` in `opt` to make them extensible doesn't work: with the subtype check on the level of types, such an extended opt type will always be `null`, even if a known tag is observed. I will bring this up in the Candid repo.

-------------------------

levi | 2021-11-11 01:10:23 UTC | #168

Looks great, I see its a draft, where/when are the candid methods to read the ledger and find specific transactions? For a canister to cept icp it will also want to be able to confirm that someone specific sent it. Will that also be with this proposal?

-------------------------

bogwar | 2021-11-11 07:44:08 UTC | #169

Hi levi,

The version that we'll release will not have a method to fetch blocks -- we are still working on that. However, one can already do the kind of check you suggest by encoding in the destination subaccount all the information you'd want to be associated with the transaction. The subaccount would need to be agreed with the sender somehow, but then checking the balance of the corresponding address (which should be non-zero if the correct transfer was made) should ensure that all is as expected: the balance should be the expected amount and the subaccount info confirms the parameters. 

Of course, once we'll have fetching blocks there will be an additional mean to check by looking at the transaction rather than at the destination address. I hope this helps.

-------------------------

levi | 2021-11-11 19:32:57 UTC | #170

Hey, yes that is a good solution, gratitude. I will want to make sure that the sub-account balance is zero (or some amount that I keep track of) before I give the user the sub-account address to send to. Not the most sustainable but it works for the now. 

For the people out there who are making canisters that want to analyze and track the ledger, can you give us a timeframe for the fetch of the blocks? Are we looking at a couple of weeks? Or after the Bitcoin and sns stuff next year? So we know how to plan our canisters. 

One more question on the ledger, i don’t see a notify method in the draft, are the old methods (send and then notify) still going to work for the creation of a canister through the ledger? Are there plans for a new method(s) to create a canister through the ledger? And what is the timeframe we are looking at with that?

-------------------------

bogwar | 2021-11-11 18:14:13 UTC | #171

The sub-account based check is a workable solution which can work well/complement other solutions where one fetches and looks at blocks. 

The fetch_blocks method won't be available in two weeks but, and here I'm venturing a guess perhaps by the end of December.  I'd expect it to be available before the sns & btc integration stuff. 

We plan to remove notify completely (that's why it's not spec'ed out) The current thinking is that will have the user/canister notify the cycles minting canister about the transfer. The notify method will still be available (but not documented/added to the Candid interface) until we do this change. Can't give an estimate for that though.

-------------------------

levi | 2021-11-11 20:05:26 UTC | #172

My mistake, you are right, the sub-account feature is great and will work great. Thanks for those specifics and for the solution.

-------------------------

jzxchiang | 2021-11-11 21:49:56 UTC | #173

A couple high-level questions:

* Can you explain why a user/canister would want to notify the cycles minting canister about a transfer? Why do cycles come into play when transferring ICP between accounts?
* Just to confirm―if `notify` is removed, how would a recipient canister learn about that? In Ethereum, ether-receiving contracts typically implement a `receive` function, which is automatically executed. Will something like that be available?
* Why does the ledger canister even have a hashed blockchain of transactions? Is it for additional security? I'm not sure why the underlying security guarantees of the IC aren't enough here.

A couple low-level questions about the interface leaked by @kpeacock:

* Why is the `fee` a field in the `TransferArgs` instead of being an implementation details?
* Is `Address` the same as `AccountIdentifier` inside ledger.did? Why not make `SubAccount` a field inside one of those instead of making it an opaque blob?

Thanks! The ICP ledger canister interface is important because it also serves as inspiration for token canister interfaces. I hope they can learn from one another.

-------------------------

bogwar | 2021-11-11 22:24:54 UTC | #174

* The cycles minting canister is not notified of all transfers: it is only notified by transfers of ICP which should be converted to cycles. That is: if i want to get cycles (to either create a canister or top up a canister) I make a ledger transfer to a specific account of the CMC and then ask the ledger to notify the CMC. The CMC burns the ICPs mints cycles & either creates a canister or tops up a canister. 
* The sender of the ICPs would have to call the recipient directly to let it know about the incoming transfer. Above I outlined two ways in which the recipient can confirm the transfer was "as it should be". 
* As you hint, the guarantees are sufficient for all replicated execution but not for unreplicated execution. For example, Rosetta nodes fetch the blocks of the ledger via query calls. Instead of (somehow) verifying that each individual block they got was correct (e.g. by making repeated queries to different replicas) one can get all blocks of the ledger, verify that chaining is correct and get a certificate (digital signature) on the hash of the last block in the chain. 

* The intention of the fee field is to indicate a max fee the caller is willing to pay for the transfer -- this is in a world where the fee for transfer are dynamic (e.g. to throttle calls in case of overload). We're not there yet, but it is part of the thinking. 
* They're related but not the same: the Address is the AccountIdentifier prepended with a CRC32 checksum.

-------------------------

jzxchiang | 2021-11-11 22:33:42 UTC | #175

> * The sender of the ICPs would have to call the recipient directly to let it know about the incoming transfer. Above I outlined two ways in which the recipient can confirm the transfer was “as it should be”.

What about the use case where a user or canister wants to pay for a service using ICP, and the service should be performed in the same atomic transaction as the ICP transfer? I think this is a common use case in Ethereum, hence the `receive` callback.

> * As you hint, the guarantees are sufficient for all replicated execution but not for unreplicated execution. For example, Rosetta nodes fetch the blocks of the ledger via query calls. Instead of (somehow) verifying that each individual block they got was correct (e.g. by making repeated queries to different replicas) one can get all blocks of the ledger, verify that chaining is correct and get a certificate (digital signature) on the hash of the last block in the chain.

Interesting, this seems really important. It means that token canisters will also need to implement some kind of hashed blockchain, or only support update (not query) calls for all functions, if they want maximum security.

-------------------------

bogwar | 2021-11-11 22:46:55 UTC | #176

* It is difficult to ensure atomicity when multiple canisters are involved in a transaction: for example one of the canisters involved, say the service, may have its input queue full and calls may fail. So some retry logic would be needed, or some two-phase commit involving the ledger would have to be in place. We did have some discussions regarding two-phase commit protocols but are right now not on top of the agenda. 
i should highlight that having the ledger as part of a multi-canister call tree (e.g. what we get now using notify ) does not solve the problem since, to keep complexity low and state manageable we do not implement retry logic in the ledger for notify calls that failed and it's up to the caller to "re-notify" the recipient. 

* Very good and important point! In general and data that is exposed via unreplicated query calls should be considered untrusted. What we use for the ledger is just an instace of using certified variables: the ledger is mantained as a hashed chain and we set the hash of the tip as a certified variable. The IC will then return (if asked) a certificate which can then be used to verify that whatever was hashed is genuine, i.e. comes from the IC. One can imagine other hashing schemes (e.g. a Merkle trees balanced one way or another) depending on the application.

-------------------------

JensGroth | 2021-11-12 11:00:08 UTC | #177

I'm terribly sorry to disappoint and for having been too optimistic in my ETA. We hit roadblocks when testing the upgrade and will have to delay the proposal. I cannot give an ETA right now, we are treating it as a high priority but it may take a few weeks. I will keep you posted and give a progress update by the end of next week.

-------------------------

daijianlin | 2021-11-12 12:06:22 UTC | #178

You are unbelievable, keep working. 😺

-------------------------

Avocado | 2021-11-12 16:40:24 UTC | #179

![rofl|690x487](upload://impy9UNC2jh1Ij4vCejP90FOjFO.jpeg)

-------------------------

blockchain-x | 2021-11-14 14:56:07 UTC | #180

  The canister can't hold ICP just like Ethereum smart contract can't hold ETH. This is unreasonable .
If you don't finish it  ASAP ,the whole ecosystem  will continue to be insulated from financial applications.

-------------------------

mparikh | 2021-11-15 01:55:28 UTC | #181

While the inability to hold ICPs is a big disappointment, we should also recognize that the team is trying to do the best under the circumstances.

However because this feature was deemed to be ready to go in a few days and we are now pulling it back by several weeks, I would ask the obvious question.

 How did we think that it was ready to go in a few days & what made us decide that there was a fairly severe issue that could not remediated in days but would take weeks? 

This question is pretty important to be answered from a community standpoint; so that we minimize this kind of possibility in the future as well as provide surety to teams whose success absolutely depends on this feature. 

I look forward to the update to be provided by @JensGroth this week & hopefully it will include the questions posed.

-------------------------

quinto | 2021-11-15 04:51:13 UTC | #182

I feel like this problem (Canister unable to transfer ICP) has been blown out of proportion. ICP, after all, is just an application run by a canister on the NNS subnet. Anyone, I mean literally anyone, can build a canister to issue tokens, like the ICP. Developers don't have to be held back by DFINITY foundation. For example, Wrapped ICP already exists, why don't we see more utilization of that?

The only difference between a canister based token X and ICP, in my opinion, is that ICP is already traded on major exchanges and has a value in the market. So why aren't we working on to bringing value to some token X?

 1. Build a bridge between IC and some other chain, and bring other chain's token over. For example Wrapped ETH, or Wrapped ERC-20.
2. Work on the adoption of Wrapped ICP.
3. Create a new token X for every ICP burned (to cycles). This creates an exchange between X and cycles.

Any of these 3 options will work, and do not need the blessing from DFINITY foundation. The only native token to IC is cycle. ICP is only for NNS governance, and I'm feeling perfectly fine if we can ignore it. My question to the community is, can we?

-------------------------

blockchain-x | 2021-11-15 05:03:09 UTC | #183

Although we have a better way to wrap Ethereum token into ICP without bridge. But this is really a temporary good method. After all, the integration with bitcoin and Ethereum takes a lot of time .

-------------------------

mparikh | 2021-11-15 05:31:50 UTC | #184

If I read you correctly, Origyn has already tokens on IC. The issue is that community does not know what the actual issues were while testing this feature. Would it be applicable to other tokens (i.e. OGY) already on IC. 

As you mentioned, ICP is already trading on the market. Certain use cases depend on the liquidity of the token and also it's market cap. 

Additionally it is much more important to learn from lessons; so that we try not to repeat them in the future (i.e. for Threshold Signatures, BTC and ETH integration etc)

-------------------------

jzxchiang | 2021-11-16 07:42:59 UTC | #185

Yeah I'd be curious what token standard they adopted, or whether they rolled with their own.

There are a lot of tricky issues with implementing a secure token canister... that's why it's probably safer for the community to agree on a token interface that everyone can then use and interoperate with, like how Ethereum did it.

Hopefully DFINITY can chime in at some point... see [this](https://forum.dfinity.org/t/where-does-the-community-agree-on-standards/8435/5?u=jzxchiang).

-------------------------

JensGroth | 2021-11-17 10:40:09 UTC | #186

We had trouble getting one of our testnests to work, and the vague “a few weeks” was due to not having a good estimate of the time involved to get it up and running. Based on my latest information I’m hoping it will be shorter.

-------------------------

JensGroth | 2021-11-17 11:28:08 UTC | #187

We have made the preparatory [proposal 30232](https://github.com/ic-association/nns-proposals/blob/bd6acdcd9374d20d32a399ed16d2e562d874e36d/proposals/network_canister_management/ledger_20211111T1332Z.md). This proposal does not enable canisters to transfer ICP. The proposal tweaks the ledger to improve safety. In this proposal the ledger will be upgraded so that only whitelisted canisters (all residing on the NNS subnet) can receive transfer notifications from the ledger. This is to ensure the ledger will not get into a situation where it is waiting forever for a notify-reply from an outside canister. We are also updating the archiving mechanism to keep blocks in the ledger until the archiving canister has confirmed receipt. Finally, we are updating some dependencies in the ledger canister. The main proposal to enable canisters to transfer ICP will follow later.

-------------------------

NnsDAO | 2021-11-17 13:13:26 UTC | #188

Expect a new interpretation, icp will usher in a new beginning. For how whitelist containers are assigned, perhaps a big question is, who gets priority access to the test?

-------------------------

blockchain-x | 2021-11-17 16:44:25 UTC | #189

 Is  proposal 30232 means proposal  20588  invalid ?

-------------------------

daijianlin | 2021-11-19 09:48:54 UTC | #190

It's the weekend now, how about the progress?

-------------------------

JensGroth | 2021-11-19 11:58:12 UTC | #191

We will submit the proposal to allow canisters to transfer ICP on Monday November 22, 2021 at 15:00 UTC.

This proposal implements community motion 20588 to [enable all principals including canisters to transfer ICP](https://dashboard.internetcomputer.org/proposal/20588).
To vote YES means you agree to adopt the proposal.
To vote NO means you disagree with or want to delay the proposal.

Voting: The IC uses a wait-for-quiet mechanism such that if there is a stable preference for adoption or rejection and a 3% threshold of votes is met the vote can be decided after 24 hours. If no stable preference appears, wait-for-quiet keeps extending the deadline up to a maximum of 48 hours. The DFINITY Foundation will abstain from early voting to let the broader community’s preference be expressed.

Performance: During testing we saw around 7 seconds latency in ICP transfers.

Integrity: We are not aware of any ways to do a Wasm jailbreak or otherwise break the integrity of ICP on canisters. We believe that without mitigation there would be high risk of a Wasm jailbreak within a 12 months period as in the past there has been a [bug](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32629) of the sort that could potentially assist an attacker (the IC never used the affected version). We are implementing sandboxing of canisters to guard against Wasm jailbreaks with an ETA at the end of December.

Availability: In our security analysis we looked at the deterministic replicated state and identified some general risks, which I have earlier referred to as ‘congestion’. The impact of those could be e.g. be a delay in a canister transferring ICP or a user input not being delivered to a canister smart contract. We have mitigated the highest priority concern, which was that inter-canister messages were prioritized over external ingress messages and hence flooding a subnet with inter-canister messages could cause a DoS of external users, by implementing a round-robin schedule between different types of senders. We have a mitigation for the second highest priority which we expect to roll out in a few weeks, and a mitigation for the third highest priority in the works. The risk with lowest priority is not yet resolved. Given we have found several risks it is reasonable to assume that additional unknown risks affecting availability exist.

-------------------------

mparikh | 2021-11-19 21:01:00 UTC | #192

I am not sure about how this categorization of "high risk" in Integrity came from. I think that the reasoning must be made transparent because of attribution, in part, to a bug (see below).

The bug, in question, specifically refers to "a potential sandbox escape in a Wasm program". Not sure about how sand-boxing,as a mitigation strategy,  would solve that.

-------------------------

jzxchiang | 2021-11-19 22:28:57 UTC | #193

Thanks for the update.

A couple questions:

1. Can you explain where the 7s latency comes from? Regular update calls are advertised to complete in <2s, so I'm curious what the source of the remaining 5s is.

2. Is the prioritization of inter-canister messages over external ingress messages a universal problem across all subnets, or does it only affect the ICP canister and/or the NNS subnet?

3. You mentioned a couple other bugs, including a "second highest priority", a "third highest priority", etc. Can you briefly describe what they are?

4. This would be a perfect use case for a fully open sourced IC codebase, as suggested by this [post](https://forum.dfinity.org/t/furthering-open-source-contributons-to-the-ic/8226?u=jzxchiang). If this proposal is indeed high risk, I think it would probably be best if we all could take a look at the PR before voting.

Thanks!

-------------------------

JensGroth | 2021-11-21 16:58:43 UTC | #194

>The bug, in question, specifically refers to "a potential sandbox escape in a Wasm program". Not sure about how sand-boxing,as a mitigation strategy,  would solve that.

Yes, I should clarify there are two layers of sandboxing we are talking about. WebAssembly provides sandboxing to ensure the code cannot be modified and that data is contained within allocated memory. The risk we want to mitigate is jailbreak from this Wasm sandbox.

Sandboxing of canisters is another layer. The idea is to use process isolation. Each canister will run in its own process. So even if malicious canister code manages to break out of the Wasm sandbox, it is still only affecting its own isolated process, i.e., captured within the canister sandbox.

We have a thread for discussing canister sandboxing [here](https://forum.dfinity.org/t/security-sandboxing/7438).

-------------------------

JensGroth | 2021-11-21 17:31:26 UTC | #195

> 1. Can you explain where the 7s latency comes from? Regular update calls are advertised to complete in <2s, so I'm curious what the source of the remaining 5s is.

There are at least two rounds of consensus involved. A canister sends a transfer request to the ledger, which need to go through consensus on the NNS subnet to reach the ledger (and the NNS subnet runs at a slower speed than other subnets to prioritize stability). Then the response from the ledger needs to go through consensus on the canister's subnet before the canister knows whether the transfer succeeded.

> 2. Is the prioritization of inter-canister messages over external ingress messages a universal problem across all subnets, or does it only affect the ICP canister and/or the NNS subnet?

It affects all subnets.

> 3. You mentioned a couple other bugs, including a "second highest priority", a "third highest priority", etc. Can you briefly describe what they are?

I'd prefer not to not discuss them until resolved. But generally: affecting availability, related to deterministic replicated message routing and execution, and not specific to ICP on canister.

> 4. This would be a perfect use case for a fully open sourced IC codebase, as suggested by this [post](https://forum.dfinity.org/t/furthering-open-source-contributons-to-the-ic/8226?u=jzxchiang). If this proposal is indeed high risk, I think it would probably be best if we all could take a look at the PR before voting.

Totally agree. For ICP on canisters, note that the proposal only affects the ledger canister (open source) slightly; it upgrades the ledger canister by removing a condition that canisters transferring ICP must be whitelisted. We do not see much risk in the ledger upgrade by itself. The risk is whether there could be problems in the interaction between the ledger (open source) and the replica. But the replica (the platform itself on which the canisters run) does not change during the upgrade of the ledger canister.

-------------------------

mparikh | 2021-11-21 18:42:36 UTC | #196

[quote="JensGroth, post:191, topic:6153"]
Integrity: We are not aware of any ways to do a Wasm jailbreak or otherwise break the integrity of ICP on canisters. We believe that without mitigation there would be high risk of a Wasm jailbreak within a 12 months period as in the past there has been a [bug ](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32629) of the sort that could potentially assist an attacker (the IC never used the affected version). We are implementing sandboxing of canisters to guard against Wasm jailbreaks with an ETA at the end of December.
[/quote]

Not sure that I completely follow your reply below.

[quote="JensGroth, post:194, topic:6153"]
Yes, I should clarify there are two layers of sandboxing we are talking about. WebAssembly provides sandboxing to ensure the code cannot be modified and that data is contained within allocated memory. The risk we want to mitigate is jailbreak from this Wasm sandbox
[/quote]

However as i understand it, this high risk is perceived is from layer 1 risk, but the canister sandboxing is addressing a layer 2 risk. So currently there is no current mitigation for the layer 1 risk. Is this correct understanding?

-------------------------

mparikh | 2021-11-21 18:47:54 UTC | #197

Perfect! So when should we expect to see the fully open source IC codebase?

-------------------------

JensGroth | 2021-11-22 07:34:49 UTC | #198

They're addressing the same risk. The 2nd layer, process isolation, is a backup in case the 1st layer of defense, Wasm sandbox, fails to contain the attacker.

-------------------------

JensGroth | 2021-11-22 07:37:32 UTC | #199

You can see the IC open source code [here](https://github.com/dfinity). The path to the ledger is [here](https://github.com/dfinity/ic/tree/master/rs/rosetta-api/ledger_canister/src).

-------------------------

kmanxhuka | 2021-11-22 09:01:50 UTC | #200

Is there a way to vote from inside NNS Dapp?

-------------------------

blockchain-x | 2021-11-22 09:24:37 UTC | #201

 When can we hold ICP in ordinary canister

-------------------------

JensGroth | 2021-11-22 15:39:04 UTC | #202

Voting on enabling canisters to transfer ICP is now [open](https://dashboard.internetcomputer.org/proposal/30946)

-------------------------

JensGroth | 2021-11-22 15:54:29 UTC | #203

>  Is there a way to vote from inside NNS Dapp?

Yes, if you have staked ICP in a neuron with long enough dissolve delay in the NNS Dapp, or you have staked outside the NNS Dapp but assigned a hotkey in the Dapp

-------------------------

lastmjs | 2021-11-23 01:18:56 UTC | #204

I'm voting no again, basically the same reasoning as before: https://forum.dfinity.org/t/enable-canisters-to-hold-icp/6153/77

-------------------------

ApeInFoamOhhh | 2021-11-23 03:48:16 UTC | #205

Earlier discussion previously here leads me to the decision of voting yes!

-------------------------

JensGroth | 2021-11-23 14:50:56 UTC | #206

TL;DR: Due to an ongoing incident, the foundation will vote “reject” on the currently open proposal for “ICP on canisters” ([proposal 30496](https://dashboard.internetcomputer.org/proposal/30946)). Once the incident is resolved, a new proposal will be submitted.

Hello, there is an [ongoing incident](https://status.internetcomputer.org/) with one of the application subnets (subnet "pjljw"). The subnet hosts a canister for which execution of messages results in different states on different replicas. Multiple teams are investigating the cause for this non-determinism right now.

The Internet Computer has a fail-safe built in for such a case causing the subnet to suspend sending messages to other subnets so that the problem can be isolated and fixed. However, this may prevent canisters on other subnets from being upgraded. The reason for this is that, to upgrade a canister, the canister needs to have processed all outstanding messages - otherwise replies might not be processable anymore by the upgraded canister due to change of code.

Unfortunately, there is thus a possibility that the Ledger canister may not be able to upgrade and stall: if there are outstanding messages from the Legder canister to the Cycles Minting Canister to top-up or create canisters on the “pjljw” subnetwork, these messages cannot obtain a reply and the Ledger canister will not be able to fully stop, which is a prerequisite for upgrading.

We view this as a high risk. Therefore, to avoid another potential incident, the DFINITY Foundation has chosen to vote “reject” the [ledger upgrade proposal 30496](https://dashboard.internetcomputer.org/proposal/30946) enabling ICP for canisters.

Please note that the incident with subnet "pjljw" is NOT related to the “Canisters can hold ICP” feature. Once the incident with subnet "pjljw" is resolved, the Foundation will resubmit the proposal upgrade the ledger canister and to enable ICP on canisters.

-------------------------

NnsDAO | 2021-11-23 15:04:34 UTC | #207

sad news, "pjljw" subnetwork What's happening?

-------------------------

nomeata | 2021-11-23 16:45:00 UTC | #208

Outstanding responses preventing a ledger upgrade - [it needn't be that way](https://forum.dfinity.org/t/prioritize-safe-instantaneous-canister-upgrades/9039).

-------------------------

Hazel | 2021-11-23 17:19:56 UTC | #209

[quote="JensGroth, post:206, topic:6153"]
Hello, there is an [ongoing incident ](https://status.internetcomputer.org/) with one of the application subnets (subnet “pjljw”). The subnet hosts a canister for which execution of messages results in different states on different replicas. Multiple teams are investigating the cause for this non-determinism right now.
[/quote]

Was the break in determinism just discovered? I know pjljw has been a hotspot for issues, but I wasn't aware of something this big.

-------------------------

