Jesse | 2022-03-19 14:06:24 UTC | #1

Hey devs: I‚Äôm trying to deploy to the IC but the deploy is failing because the ledger canister is being built out and it exceeds the 2MB maximum for canister sizes. I used a local version of the ledger canister when developing, but when the app is deployed to the IC, it should be calling the actual ledger canister on the mainnet so I feel like the ledger canister shouldn‚Äôt even be being built as a canister during the deploy. Can anyone confirm this? And if it is the case that the ledger canister shouldn‚Äôt be being built during my deploy, how do i get it to stop building the ledger canister when deploying?

-------------------------

mariop | 2022-03-19 15:04:09 UTC | #2

Hi Jesse, it depends on what you are trying to do. If you are developing a canister that uses the ICP ledger then you shouldn't deploy the ledger canister on mainnet. You can achieve this by removing the ledger canister from your dfx.json. If instead you want to deploy your own token then you should deploy the ledger canister but probably a different one from the ICP ledger.

A side note to this: you should never build the ledger canister locally unless you plan to change its code. We provide optimised builds that you can use both locally and remotely.

-------------------------

Jesse | 2022-03-19 15:14:16 UTC | #3

[quote="mariop, post:2, topic:11587"]
A side note to this: you should never build the ledger canister locally unless you plan to change its code. We provide optimised builds that you can use both locally and remotely.
[/quote]

Thats news to me. How do I call the test ledger remotely?

-------------------------

paulyoung | 2022-03-19 15:20:59 UTC | #4

There‚Äôs some info here on the Rosetta API: https://smartcontracts.org/docs/integration/ledger-quick-start.html#_integrate_with_the_internet_computer_ledger_canister_using_the_rosetta_api

Perhaps this is closer to what you‚Äôd want to do though:

https://github.com/dfinity/ic/tree/master/rs/rosetta-api/ledger_canister#deploying-locally

-------------------------

Jesse | 2022-03-19 15:34:00 UTC | #5

This is what i currently do for ledger testing. As I understand, this requires I deploy the ledger canister locally to use this method. @mariop is saying I don't have to deploy locally, and that i can merely call a test ledger canister if I'm interpreting him/her correctly?

-------------------------

paulyoung | 2022-03-19 16:05:00 UTC | #6

I think @mariop is saying 2 things:

1. People shouldn‚Äôt build the ledger canister locally unless they want to change the source code, and should use one of the pre-built versions instead
2. People shouldn‚Äôt be deploying the ledger canister to the IC if they want to use the ICP ledger.

I‚Äôm not sure of the best way to keep the configuration around for development and then omitting it for production.

-------------------------

GLdev | 2022-03-19 16:16:07 UTC | #7

@Jesse, I believe [this article](https://smartcontracts.org/docs/rosetta-api/ledger-local-setup.html) might be helpful. It details how to run a local ledger without having to build it yourself (pre-built wasm files).

Regarding your development & deployment pains, it would really help if you could include what you are trying to achieve, what tutorials / docs are you following, what does your dfx.json look like, and so on. The IC ecosystem is moving along at neck-breaking speed, and unfortunately some resources are left behind in terms of updating. If you link the versions that you're following people will have a much easier time understanding where you got stuck, and helping you if they can.

Also, consider hopping on the dev discord, there's a bunch of people hanging out there, you can usually get some quick help / pointers there as well.

-------------------------

paulyoung | 2022-03-19 16:26:39 UTC | #8

If you do solve this on Discord please also update this thread üôèüôÇ

https://twitter.com/Yelix/status/1504495691573387270

-------------------------

GLdev | 2022-03-19 16:40:13 UTC | #9

Fair point, but on the other hand @Jesse has said in another post that they've spent hundreds of dollars on failed deployments. Surely someone on discord can help by catching the problem sooner :slight_smile: 

I feel like there's a time and place for both platforms, and rapid prototyping / figuring out deployment pains in a particular case can benefit from live chats. It's a great suggestion though to ask people to quickly post something on the forums once they figured it out, maybe someone else can benefit from their pains later on.

-------------------------

Jesse | 2022-03-19 17:41:42 UTC | #10

The issue was that I still had 
`"ledger": {
      "type": "custom",
      "wasm": "ledger.wasm",
      "candid": "ledger.public.did"
    },
`
defined in the dfx.json file. Removing it fixed the error.

-------------------------

