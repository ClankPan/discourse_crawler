Iceypee | 2022-12-27 16:39:35 UTC | #1

Is there a way to set the canister id to be deployed before calling dfx deploy .....? so that when I do some local tests of the ledger or ckbtc, etc I can use the same canister id in my tests and mo files? 
I try doing this by presetting my canister_ids.json i.e. 
```
{
 "canister": {
    "local": "mc6ru-gyaaa-aaaar-qaaaq-cai"
  },
}
```
but I either get 

```
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed while trying to install all canisters.
    Failed to install wasm module to canister 'ckbtc'.
      Failed to install wasm in canister 'mc6ru-gyaaa-aaaar-qaaaq-cai'.
        Failed to install wasm.
          The replica returned an HTTP Error: Http Error: status 404 Not Found, content type "", content: Canister mc6ru-gyaaa-aaaar-qaaaq-cai not found
```

or it sets the canister id in .dfx/local/canister_ids.json to a completely new canister id

-------------------------

peterparker | 2022-12-27 17:00:35 UTC | #2

Not sure because I am no `dfx` expert and no direct answer but, canister ids deployed locally are predictable in the sense that if you deploy your canisters always in the same order, you will always get the same canister ids. 

So that's what I do. I either document the order in a README.md or create a script that deploys the canisters and that way I can use the same canister id in my code for local dev.

-------------------------

Iceypee | 2022-12-27 17:14:29 UTC | #3

appreciate the input, but yea I wanted it so that if I deploy a local icp ledger or local ckbtc ledger on a test server, if I move over to mainnet I didnt want to have to go to all my mo files and change the ids. This is useful to know though. 

> canister ids deployed locally are predictable in the sense that if you deploy your canisters always in the same order, you will always get the same canister ids.

Albeit, for some reason for the one of my canisters I was able to actually change the canister id in .dfx/local/canister_ids.json and it worked. so yea idk

-------------------------

peterparker | 2022-12-27 17:18:03 UTC | #4

[quote="Iceypee, post:3, topic:17677"]
Albeit, for some reason for the one of my canisters I was able to actually change the canister id in .dfx/local/canister_ids.json and it worked. so yea idk
[/quote]

Hope someone with better dfx can answer here. For what it's worth and if it can help too maybe, there is also a thread about "env files for Motoko" https://forum.dfinity.org/t/env-variables-for-motoko-builds/11640/8?u=peterparker

-------------------------

paulyoung | 2022-12-27 17:27:57 UTC | #5

[quote="Iceypee, post:3, topic:17677"]
appreciate the input, but yea I wanted it so that if I deploy a local icp ledger or local ckbtc ledger on a test server, if I move over to mainnet I didnt want to have to go to all my mo files and change the ids. This is useful to know though.
[/quote]

`dfx.json` has a feature for `remote` canister support: https://github.com/dfinity/sdk/blob/master/CHANGELOG.md#feat-remote-canister-support

-------------------------

peterparker | 2022-12-27 17:33:16 UTC | #6

e.g. to specificy Ledger and II existing canister IDs on mainnet, I've got following in my dfx:

```
"internet_identity": {
			"type": "custom",
			"candid": "internet_identity.did",
			"wasm": "internet_identity.wasm",
			"build": "bash -c 'test -f internet_identity.wasm || curl -sSL https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity_dev.wasm -o internet_identity.wasm; test -f internet_identity.did || curl -sSL https://raw.githubusercontent.com/dfinity/internet-identity/main/src/internet_identity/internet_identity.did -o internet_identity.did'",
			"remote": {
				"candid": "internet_identity.did",
				"id": {
					"ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
				}
			}
		},
		"ledger": {
			"type": "custom",
			"candid": "ledger.public.did",
			"wasm": "ledger.wasm",
			"remote": {
				"candid": "ledger.public.did",
				"id": {
					"ic": "ryjl3-tyaaa-aaaaa-aaaba-cai"
				}
			}
		}
```

-------------------------

Iceypee | 2022-12-27 21:49:09 UTC | #7

@paulyoung and @peterparker but thats basicallly to specify an already existing canister id on the specific network. Not if I wanted to create a canister with a specific id
![image|690x343](upload://gp72BTjSzHS4OSQN0bGXK73xy3I.jpeg)

Because I'm doing something where I want to update some hashmaps that use the canister-id's/canister-principals as keys, I want to make my local canisters have the canister-ids of the already existing network canisters. You get what I mean?

I do understand thats for the specifying the interface based on either local or ic network but its not for the principal.

-------------------------

paulyoung | 2022-12-27 22:47:22 UTC | #8

I think you can pre-populate `.dfx/local/canister_ids.json` with any canister IDs you like and they will get used locally.

-------------------------

Iceypee | 2022-12-27 23:10:18 UTC | #9

yea I tried that and I got this
```Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed while trying to install all canisters.
    Failed to install wasm module to canister 'ckbtc'.
      Failed to install wasm in canister 'mc6ru-gyaaa-aaaar-qaaaq-cai'.
        Failed to install wasm.
          The replica returned an HTTP Error: Http Error: status 404 Not Found, content type "", content: Canister mc6ru-gyaaa-aaaar-qaaaq-cai not found
```

If I swap one of the autogenerated ones with a custom canister it works. I.e. like if I created 5 canisters and the first one in the canister_ids.json was ryjl3-tyaaa-aaaaa-aaaba-cai and I set the fifth one to that id, it will work. But not a new fresh id.

-------------------------

ZenVoich | 2022-12-29 07:31:54 UTC | #10

It would be very convenient to be able to specify an id for a local canister (for example, for ledger, token canisters, NFT canisters).

Using the root `canister_ids.json` seems like a good option.

-------------------------

Tbd | 2022-12-29 10:29:07 UTC | #11

Seconded, this feature would be really useful to have! Not just for convenience but other tooling I have in mind.

-------------------------

Severin | 2023-01-04 13:22:50 UTC | #12

[quote="Iceypee, post:9, topic:17677"]
yea I tried that and I got this
[/quote]

Best guess: The canister is not created yet, so there's no way to install anything to it.

As for specifying specific IDs for local canisters: we're pretty close to having this, now it's a matter of prioritisation. EDIT: I misread what this PR does <s>If someone wants to cut the line by making a PR: @mraszyk did all the hard work in [this PR](https://github.com/dfinity/sdk/pull/2776), now it's just a matter of exposing the parameters in a sensible manner.</s>
The interface to support is described in [the spec](https://github.com/dfinity/interface-spec/blob/master/spec/index.adoc#ic-provisional_create_canister_with_cycles).

-------------------------

Dustin | 2023-08-09 20:17:41 UTC | #13

@Severin the link that you provided seems to be broken. I'm also looking for a way to define a local canister id for testing of canisters in local development. Do you have an updated reference for this?

EDIT: just found that this is possible with the deploy command directly and setting the flag `--specified-id <canister-id>` (see [reference description](https://internetcomputer.org/docs/current/references/cli-reference/dfx-deploy)). Would still love to have an option to define it in dfx.json or canister_ids.json for the local deployment.

-------------------------

