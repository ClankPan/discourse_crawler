tomijaga | 2022-05-15 10:08:59 UTC | #1

https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/?tag=4291415706
https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/?tag=4291415706
I have this piece of code that returns an error 
```bash
this pattern is never matched
```
There are two variables defined
```
let Get = "GET";
let Post = "POST";
```
I defined switch cases for both variables, but the first variable matches every text instead of the assigned text. This is an issue because it blocks the code from going to the other switch cases. 

```swift
switch (method){
    case (Get){
        ...
    };
    case (Post){ // this pattern is never matched
        ...
    };
}
````
However, It works when I create switch cases with raw text instead of with variables.

```
switch (method){
    case ("GET"){
        ...
    };
    case ("POST"){
        ...
    };
}
```
Is this a bug, or was this the intended design choice for Motoko?

-------------------------

paulyoung | 2022-05-15 11:52:03 UTC | #2

I think it’s a bug in the sense that _your_ code contains something you probably didn’t intend, and the compiler error is informing you of that.

When you write `case (Get)` you aren’t comparing `method` with the previous binding of `Get` but instead are creating a new binding called `Get` which contains all of the possible values of `method`.

See: https://smartcontracts.org/docs/current/developer-docs/build/languages/motoko/language-manual#identifier-pattern

I’m not sure how to do what you intended if you don’t want to use the literal pattern. Your only option might be to use `if method == Get`.

-------------------------

