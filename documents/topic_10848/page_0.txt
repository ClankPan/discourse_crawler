lastmjs | 2022-02-12 15:31:37 UTC | #1

This is a suggestion to DFINITY and the community.

People don't seem to be fully satisfied with the current documentation about the Internet Computer. I know there are multiple efforts to fix this, like the wiki. I want to focus specifically on developer documentation.

I think that for developer documentation we should follow the example of the Rust community. I've never seen a software development ecosystem with such an amazing documentation experience. In the Rust ecosystem, there is a book for everything. When someone asks how do I get started with Rust, the answer is simple: Read The Book (https://doc.rust-lang.org/book/).

The Rust Book covers the basics of the language so well. It's well-written, comprehensive, and uses a standard open source UI that many other Rust community books use as well. It creates a consistent learning experience that seems to be working very well for the Rust community.

They have a book for everything (well not everything):

* Rust by Example: https://doc.rust-lang.org/rust-by-example/
* The Rustonomicon: https://doc.rust-lang.org/nightly/nomicon/
* Rust Design Patterns: https://rust-unofficial.github.io/patterns/
* Asynchronous Programming in Rust: https://rust-lang.github.io/async-book/
* The Little Book of Rust Macros: https://danielkeep.github.io/tlborm/book/index.html

I've followed their example with The Sudograph Book: https://i67uk-hiaaa-aaaae-qaaka-cai.raw.ic0.app/

If someone wants to learn everything about Sudograph, I have one place to send them to. It answers nearly all of their questions.

We don't seem to have that with the Internet Computer, for software development. I would love to see The Internet Computer Book, and I think other projects should make books as well.

That's my suggestion.

-------------------------

jzxchiang | 2022-02-14 07:51:39 UTC | #2

The Rust docs are great, but writing good docs is also a massive undertaking.

Me personally, I actually think the IC docs are really clear and well-organized, especially the Motoko code samples and the IC spec.

But yeah, I wonder if an "IC Book" could be community-led, hosted on the IC, and run by an SNS and thus tokenized to reward contributors...

-------------------------

