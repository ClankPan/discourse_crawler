Luka | 2022-10-07 19:01:42 UTC | #1

Hello there!

we are happy to announce that voting is now open for [a new IC release ](https://github.com/dfinity/ic/tree/rc--2022-10-05_18-32).
The NNS proposal is here: [IC NNS Proposal 85007](https://dashboard.internetcomputer.org/proposal/85007).

Here is a summary of the changes since the last release:

```
* Consensus: Remove complainer_id from EcdsaOpeningContent
* Crypto: Chunking proof optimizations
* Crypto: Document IDkgProtocol's contract for transcript params
* Crypto: Remove use of compatability random functions where possible
* Crypto: Return InitialIDkgDealings' params and dealings as references
* Crypto: Use single histogram and labels for crypto performance metrics
* Crypto: use more efficient multi-exp in LagrangeCoefficients::interpolate_point
* Execution: Allow canisters to read their own status
* Execution: Switch to canister error when the canister does not reply during ICQC
* Execution: Reduce old call context log spam
* Message Routing: Enforce max length for synthetic reject messages produced by message routing
* Message Routing: Remove root from ReplicatedState
* Message Routing: Remove tombstones
* Networking: Canister http client metrics
* Networking: Make read_one_message. read_from_socket and spawn_read_task  accept a reader that implements AsyncRead + Unpin
* Networking: Move the RegistryClient interface trait in a dedicated crate/package
* Networking: Record ic00_http_requests success metrics
* Networking: Transition the socket_heart_beat_timeouts metric to message_read_errors_total
* Node: Cleanup node ignore files
* Node: Fix dependencies of launch_single_vm
* Node: Repair launch_single_vm
* Orchestrator: Print CUP infos during the verification
* Runtime: Add histograms for paused and aborted executions to scheduler metrics
* Runtime: DTS Response cycles tests
* Runtime: Dts metrics for number of aborts
* Runtime: Handle `cycles_debit` in DTS update and response
* Runtime: Improve DTS logging
* Runtime: Postpone charging for ingress induction with DTS
* Runtime: Scalability suite farm integration for e2e tests
* Runtime: Simplify prepaying for DTS execution cost
```

And a complete list of changes can of course be found on GitHub.
Please reply to this message if you have any questions or comments.

-------------------------

