saikatdas0790 | 2022-10-17 17:32:09 UTC | #1

I'm referring to [this](https://stedolan.github.io/jq/)

Also, I noticed something peculiar. Here's a response of 10 vs 20 paginated items returned by an API for an app that we're working on. The 10 items are automatically formatted, but the 20 aren't. Wondering why.

# 10 items
![image|314x500](upload://ygeIWZTb7nsCD5jS5vMXoTfGwOS.png)


## 20 items
![image|690x106](upload://ymV6KcOiEVgaHMUPh4ZdBDXUfRS.png)

Thoughts?

-------------------------

paulyoung | 2022-10-18 03:15:24 UTC | #2

I just looked at the `dfx` source code and it appears that for `dfx canister call` you should be able to provide `--output pp` to pretty-print the output.

-------------------------

saikatdas0790 | 2022-10-18 03:37:44 UTC | #3

You're right. It's documented [here](https://internetcomputer.org/docs/current/references/cli-reference/dfx-canister/#dfx-canister-call).

Soooo, it didn't quite work. This is the output I'm seeing

![image|690x133](upload://pBhpOUX3K9gRjISbRz6zaXiVDX0.png)

Maybe I'm doing something wrong?

-------------------------

paulyoung | 2022-10-18 03:47:49 UTC | #4

This is why:

https://github.com/dfinity/candid/blob/697462e91b7fc6484ae9c8d07d40403ff3964c8c/rust/candid/src/parser/pretty.rs#L10

-------------------------

saikatdas0790 | 2022-10-18 03:59:05 UTC | #5

That seems like an arbitrary limitation. 

@chenyan 
Maybe we could raise/remove it? Or add another parameter that lets users specify that limit when making the call?

-------------------------

chenyan | 2022-10-18 04:02:00 UTC | #6

You could use https://github.com/dfinity/idl2json to convert candid to json and then use `jq`.

As for the pretty printing, we stopped pretty printer when the data is too large, due to several reasons:
 1) it's hard to know a good format for large data. For example, `vec { 1;2;3 }` .vs. `vec {\n 1;\n2;\n3;\n }`; 
2) The pretty printer we used is unfortunately not linear time, so for large data, it's not very efficient; 
3) Even with the same type, we may need different format for different cases. For example, both `account_id` and `asset_content` can be of type `blob`, but we may prefer to display `account_id` in hex, and `asset_content` as printable ascii. Ideally, we need a way to specify how to pretty print each field.

-------------------------

saikatdas0790 | 2022-10-18 04:11:17 UTC | #7

Ok. I'll try to use idl2json for now. Thank you for the workaround.

P.S. I think it's helpful to provide prebuilt binaries for idl2json. Figuring out another build toolchain is cumbersome and deters adoption :slight_smile:
Created an issue [here](https://github.com/dfinity/idl2json/issues/8)

-------------------------

Mathias | 2022-11-22 14:12:45 UTC | #8

Hi @chenyan, may I ask a question?

From the terminal, I need to call a canister, wait for its response, and then use a part of that response to call another canister.

How would you recommend that I do that? Should I try to use this tool or could I do so with ic-repl?

Thanks in advance

-------------------------

chenyan | 2022-11-22 18:25:08 UTC | #9

Yep, you can use `ic-repl`. Here is one example: https://github.com/chenyan2002/ic-repl#installsh for your use case.

-------------------------

