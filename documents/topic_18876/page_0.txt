AVOlight | 2023-03-09 18:53:27 UTC | #1

I have a DIP20 token that's burning > 0.1 T Cycles a day with next to no additional transaction being made...

Has there been any progress getting a dashboard for tracking cycles?

Right now this cycles issue is why I spend my dev time elsewhere so would really like a resolution to this please ü•∫

here's my token info
[https://info.icpswap.com/token/details/6ohjj-4qaaa-aaaai-aapua-cai](https://)

-------------------------

dragoljub_duric | 2023-03-10 16:00:46 UTC | #2

I have just checked your canister and it looks like you are not using `heartbeat`, `global_timer`, or `compute_allocation`. Also, your memory usage is not large enough to justify the cost. But I have checked the rounds in which your canister is executed and it seems that it is executed not that rarely. The current execution round is `56646234` and the last executed round for your canister is `56646230`, and I checked it multiple times in the last few hours, each time the last executed round for your canister was incremented.  Since there‚Äôs no heartbeat or timer and the canister gets executed, it means that it must be processing some message.

Can you please specify what you meant by "no additional transaction being made"? Are you referring that your canister did not call any other canister or that it was not been called by another canister nor it had ingress messages?

We are working on a dashboard for tracking cycle consumption by use_case (Memory, Instructions, IngressInduction ...), but now we are finalizing such a dashboard for subnets. The next step should be to make such tracking on per canister level. We have this on our list, but other projects are a higher priority and I cannot give an ETA on when this one will be done.

-------------------------

AVOlight | 2023-03-10 21:29:01 UTC | #3

Thank you @dragoljub_duric üòÄ for looking into this.
Its based on DIP20 token standard https://github.com/Psychedelic/DIP20
So I mean token transactions.

I'm surprised that canister level cycle tracking isn't a higher priority, especially in such a new dev environment. ü§î

haven't been able to upgrade dfx version for the project because of this
https://forum.dfinity.org/t/upgrade-is-not-working-on-canister/15793

tried removing the website asset canister from the project in the dfx.json config and removing the version lock "dfx": "0.10.1" and then re deployed the token canister with latest "0.13.1" and it deployed the canister with out the usual error on any version past "0.10.1"
so hoping this might somehow help reduce the cycle bleed ü§û

-------------------------

domwoe | 2023-03-12 09:26:30 UTC | #4

Hey @AVOlight,

note that you can track the cycle consumption of your canisters yourself. Have a look at the links [here](https://github.com/dfinity/awesome-internet-computer#monitoring) for example.

-------------------------

AVOlight | 2023-03-12 16:41:57 UTC | #5

@domwoe Thank you üòÄ yes that how I got here.

Hopefully üôè soon there will be a way to track which messages use the most cycles.

Unfortunately for me the upgrade hasn't reduced the cycle bleed... üòÖ

-------------------------

