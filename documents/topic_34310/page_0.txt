baolongt | 2024-08-20 02:54:48 UTC | #1

Here is my code 
```rust
thread_local! {
    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(MemoryManager::init(DefaultMemoryImpl::default()));

    static USER_STORE: RefCell<StableBTreeMap<
        String,
        User,
        Memory
    >> = RefCell::new(
        StableBTreeMap::init(
            MEMORY_MANAGER.with_borrow(|m| m.get(USER_MEMORY_ID)),
        )
    );
}
```

When I made an upgrade the data in USER_STORE is gone. It only work when I put this code in the `post_upgrade`

```rust
 USER_STORE.with(|t| {
            *t.borrow_mut() = StableBTreeMap::init(
                MEMORY_MANAGER.with_borrow(|m| m.get(USER_MEMORY_ID)),
            );
 });
```

-------------------------

jennifertran | 2024-08-20 15:18:14 UTC | #2

Can you please take a look at [this thread](https://forum.dfinity.org/t/stable-storage-not-working-as-expected/23822)? 

Review the notes here to see if you are not overwriting stable structures. Please let us know if this helps!

-------------------------

baolongt | 2024-08-20 16:08:08 UTC | #3

Yes, I'm using `stable_restore` with my legacy code, I change it to memory management so it fixed

-------------------------

