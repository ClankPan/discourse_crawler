josephgranata | 2023-04-08 19:04:40 UTC | #1

We are in the Architecture phase of an end user software we plan to build using the InternetComputer.

A key concern is whether the IC can be used as a reliable backend for a desktop or mobile application.

After reading about Canister support for HTTPS Outcalls it's clear the communication can go from the IC to an app via HTTPS:
https://internetcomputer.org/https-outcalls

But what about the reverse? Can an application talk to a canister, and retrieve information, and establish a dialogue with the IC. Effectively making the IC the backend of a rich Desktop or mobile application?

If this is so, can you please point me to somewhere in the IC Rust docs to read more about it, or ideally an example.

Thanks, and Happy Easter!

-------------------------

Gekctek | 2023-04-08 22:49:17 UTC | #2

@josephgranata What you are looking for is an 'Agent'. There is a list of agents for different languages here:
https://github.com/dfinity/awesome-internet-computer#client-libraries-agents

-------------------------

josephgranata | 2023-04-09 02:50:43 UTC | #3

Thank you Ethan! this confirms that the IC can be a backend for a suitable desktop or mobile app, this is great news.

Here is an example I found by following your suggestion:
https://docs.rs/ic-agent/latest/ic_agent/

-------------------------

peterparker | 2023-04-09 07:25:27 UTC | #4

Never tried but you can also write desktop app with JS (e.g. [Tauri](https://tauri.app/), [Electron](https://www.electronjs.org/fr/)) and mobile app with JS (e.g. [Capacitor](https://capacitorjs.com/)) so I'm guessing you could use agent-js there too.

The tricky part is probably implementing the sign-in (if you need one in a webview) but that sound also duable I am guessing since Distrikt is a mobile app available in store.

-------------------------

josephgranata | 2023-04-10 20:36:27 UTC | #5

Thanks David @peterparker.

Yes we are exploring those options now.

-------------------------

