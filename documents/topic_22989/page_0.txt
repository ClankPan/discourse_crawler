sat | 2023-09-13 09:57:54 UTC | #1

### Greetings Internet Computer Community and Node Providers üåê

We hope this message finds you well. We would like to share a proposal aimed at providing trustworthy metrics directly on the Internet Computer. Your feedback is invaluable as we consider implementing these changes.

### Proposal OverviewüéØ

The core idea is to introduce Trustworthy Node Metrics that provide greater visibility into node performance. These metrics could potentially be used to influence node rewards in the future.

### Architectural Changes üõ†Ô∏è

**![|624x359](upload://kSNRFAZuWhRhYuPmqCB2vU4gnjO.png)**

#### Consensus Layer:

* The Consensus layer will now expose information on which nodes have succeeded or failed in the role of block makers. This data will be sent to the Message Routing layer via an extension to the existing Batch data structure. Notably, no special handling is required for empty blocks.

#### Message Routing Layer:

* The MR layer will integrate this information into the replicated state. Specifically, it will map each node ID to a counter of successes and failures over the last 60 days. A double-ended queue will be used for efficient storage. Importantly, the data will be queryable within specific date ranges.

#### Management Canister:

* A new function will be introduced for fetching these metrics. This function will allow users to pull data from the replicated state across different subnets. Moreover, users will have the ability to specify the date range for the metrics they wish to query.

A draft specification for these changes is available for review[ here](https://github.com/dfinity/interface-spec/pull/215).

### Additional Points üìù

* A future feature could adjust node rewards based on these metrics, such that misbehaving nodes get penalties. This feature, however, will not cause any changes in the node rewards.
* Details on changes in the replicated state will be clarified during the implementation phase.
* Open-source (CLI) tools will be developed to facilitate in-depth analysis of these metrics.

### Fees for Metrics Retrieval üí∏

In order to prevent DOS attacks, a nominal fee will be charged for each metrics retrieval operation, which will be processed through the wallet canister. We would like to hear your thoughts on this matter.

Beside the CLI tools, follow-up work will expose these metrics on the Public Dashboard and on a canister, which will be open to the public for querying.

### Data Storage Consideration ü§î

* The addition of these metrics will require approximately 50 KB of extra storage per subnet, which is considered to be minimal.

### Your Feedback is Welcome üì£

We are particularly interested in your thoughts on the proposed architectural changes and the proposed charges for metrics retrieval.

Next Steps üé¨

Once we've gathered your feedback and received approval, we'll start implementing these changes.

-------------------------

ckMood | 2023-11-22 02:28:20 UTC | #3

Bookmarked and will come back to this after I‚Äôm done with homework lol but any tools to help empower users to understand metrics are appreciated

-------------------------

sat | 2024-01-22 09:40:18 UTC | #4

I wrote and published docs for this feature:
https://dfinity.github.io/dre/trustworthy-metrics/trustworthy-metrics.html
and
https://dfinity.github.io/dre/trustworthy-metrics/architecture.html

There is even an example for a Jupyter notebook in which the metrics are analyzed:
https://github.com/dfinity/dre/blob/main/docs/trustworthy-metrics/TrustworthyMetricsAnalytics.ipynb

-------------------------

yvonneanne | 2024-02-07 17:22:28 UTC | #5

Hi everyone

In the past few months we‚Äôve been working on the implementation of the functionality outlined above. DFINITY teams from almost all layers (consensus, message routing, execution, DRE, security, SDK) have been involved in this project. We‚Äôre very happy to announce that we‚Äôre very close to completing this effort.

The management canister now offers a node_metrics_history endpoint (see [Interface Spec](https://internetcomputer.org/docs/current/references/ic-interface-spec#ic-node-metrics-history) entry). In the DRE tooling linked to in the post by Sasha, you can find examples of how to use this new feature.
More cdk and agent support will be added in the next few weeks.

The functionality is described in more detail in the following [blog post](https://medium.com/@dfinity/dont-trust-verify-new-node-metrics-on-the-internet-computer-367cc154a572).

Should you have any questions or feedback (do you understand the metrics, does the history endpoint make sense, which other metrics could be interesting), let us know!
If there are many questions, we can also organize an interactive session or walkthrough.

Cheers
Yvonne-Anne

-------------------------

