Aaron | 2020-11-06 12:35:38 UTC | #1

Hi all,

I finally have a little time to devote to Motoko development but am concerned that I may be jumping the gun by starting with Motoko before getting my head around Solidity. Although I've been in tech for 23+ years and have some limited programming experience I am for all practical purposes a beginner. I have some basic applications I'd like to build and want to experiment with Dfinity since I really like the idea of the internet computer.

So, should I be spending time on Solidity before digging in to Motoko? Put another way: will learning the basics of Solidity *first* make me a better Motoko developer?

Kind regards from Berlin. Aaron.

-------------------------

Ori | 2020-11-06 14:09:40 UTC | #2

Hey Aaron, great to see you again! 

Motoko’s what you want if you’re looking to build apps easily (Rust or C are options too if you’re familiar but they require a touch more heavy lifting)—just jump straight in with the [quick start](https://sdk.dfinity.org/docs/quickstart/quickstart.html) and we can help you along with the next steps or any questions you have.

(Ethereum’s Solidity language was mooted as an option a very long while back, possibly when you were reading things last, but this isn’t on the cards now.)

-------------------------

Aaron | 2020-11-06 14:18:12 UTC | #3

Hi Ori! Long time :) 

Thanks for that. Onwards!

• (Ethereum’s Solidity language was mooted as an option a very long while back, possibly when you were • reading things last, but this isn’t on the cards now.)

Yes, my knowledge is from earlier last year. My son and I are just now getting back into it. Our solar power project flamed out mainly due to the fact that there just isn't much sun here in former East Berlin. We'll go ahead and power things via mains power like grandpa' used back in frontier times ;)

Kind regards,

Aaron

-------------------------

enzo | 2020-11-06 20:16:47 UTC | #4

Great question!

Echoing what @Ori said, in no way is Solidity a prerequisite for Motoko. In fact, it's probably best to start from a clean slate since Solidity is all about smart contracts, Motoko is all about canisters, and the two aren't really the same.

Canisters are a more general concept rooted in the [actor model](https://en.wikipedia.org/wiki/Actor_model). You can develop a canister in just about any language that compiles down to WebAssembly. Most people have gravitated towards C, Motoko, or Rust.

I would say it really depends on your project. Motoko is pretty easy to learn and a great place to get started in my opinion.

-------------------------

Aaron | 2020-11-07 10:04:01 UTC | #5

Hi Enzo,

Thanks for your reply. I've put Solidity on hold for now and am chewing through the Motoko tutorial.

Kind regards,

Aaron

-------------------------

