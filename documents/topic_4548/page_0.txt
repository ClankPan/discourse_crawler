wang | 2021-05-30 11:01:33 UTC | #1

I'm trying to query the registry canister using protobuf but getting stuck on encoding. I'm using [protobufjs](https://www.npmjs.com/package/protobufjs), `@dfinity/agent`, and the `.proto` files from ic:

```js
const argType = root.lookupType("ic_registry_transport.pb.v1.RegistryGetValueRequest")
const retType = root.lookupType("ic_registry_transport.pb.v1.RegistryGetValueResponse")
const emptyArg = argType.encode({}).finish(); // <Buffer >

const result = await agent.query("rwlgt-iiaaa-aaaaa-aaaaa-cai", 
  { methodName: "get_value", emptyArg }
)
retType.decode(result.reply.arg) // valid RegistryGetValueResponse {..}
```
With an empty arg, the request is valid and accepted by the canister. However, when I try with real args, I get an error:
```js
const arg = argType.encode({ key: Buffer.from("test") }).finish(); // <Buffer 12 04 74 65 73 74>
// returns the following:
RegistryGetValueResponse {
  error: RegistryError {
    code: 1,
    reason: 'Registry Canister Error. Msg: PB error: failed to decode Protobuf message: unexpected end group tag'
  }
}
```

According to this [decoder](https://protogen.marcgravell.com/decode), my input `120474657374` is valid.

Any ideas? @PaulLiu or @hansl maybe?

-------------------------

wang | 2021-05-31 02:19:17 UTC | #2

Source:
https://github.com/ic-cubes/agent-pb

-------------------------

wang | 2021-06-01 06:00:28 UTC | #3

Well, turns out it was a JS type error. I was cbor-encoding a `UInt8Array` instead of a `Buffer`. Fixed here: https://github.com/ic-cubes/agent-pb/commit/b9f541339c21705d882a53eb34106d26fea84fef#diff-a2a171449d862fe29692ce031981047d7ab755ae7f84c707aef80701b3ea0c80R27

The question above is solved! New question:

## Is there an official protobuf canister service definition?

I am currently handling annotations like this:

```protobuf
service MyCanister {
  rpc read (google.protobuf.Empty) returns (google.protobuf.UInt64Value) {
    option annotation = query;
  };

  rpc write (google.protobuf.UInt64Value) returns (google.protobuf.Empty) {
    option annotation = update;
  };
}
```

-------------------------

