Mathias | 2022-04-19 08:58:41 UTC | #1

**Article: [50 Million Partners](https://medium.com/@the_gouverneur/50-million-partners-8082dc0b0b54)**

The concept I describe is not an entirely new thing. It is rather that I tried to think through what the logical conclusion is of our ability to scale global, credible, promises and to have vast amounts of data on-chain. The article is not about specific dapps but rather about how we can use the properties of the IC to leverage entrepreneurial efforts more effectively to build large platforms. 

Some key arguments:

* We can reward entrepreneurs that bootstrap local use-cases much more credible than before. 

* The fact that we can do so globally, increases everyone's expectations that the platform will succeed which makes it more attractive for entrepreneurs to bootstrap local use-cases in the first place. If there are enough of these use-cases, increasing expectations can lead to more entrepreneurs' contributions. This alone can be enough to bootstrap the entire platform. 

* To achieve the above, we need to give entrepreneurs the ability to monetize and even monopolize a part of our platform. I think consciously allowing entrepreneurs to do so, could unlock a lot of value.

* Entrepreneurs could even allow further entrepreneurs within their use-case to monetize and monopolize even smaller parts of the platform. Contribution incentives would therefore scale by becoming more heterogenous and targeted.

* Entrepreneurs could further add to the value created by building further services for the local users specifically (I don't mean physically local). This would result in vast ecosystems containing nested structures of entrepreneurial activity organized in DAOs. 


I hope the idea makes sense and inspires someone. 

Thanks in advance for any feedback.

-------------------------

inviscidpixels | 2022-05-31 19:58:01 UTC | #2

Cross side network effects, I like to call the "decentralized network effect". 

You're close with the idea of self similarity in the network topology, so how to manage and monetize the franchise? To me the simplest way is an open source platform managed by a DAO that can be forked and implemented however local use case needs. It'd likely take only a handful of templates, and would benefit from some standards (like identity credentials) so that "decentralized user bases" could easily plug in play in whatever emerged. 

The autonomy of locality can preserve the order necessary for things to function without being overrun by entropy and without that order becoming the dictator of consent the network must conform too. Similar to this idea is "graduated representative delegation" which provides a means by which decentralized networks can be stable enough, since there's definitely an upper limit to amount "one agency" can maintain, but there's likely no upper limit to how many agencies can interdependently maintain the network at every level they're present. Not only that, but if it is understood users are not merely passive consumers from which someone else's profit can be extracted, but are instead rewarded for being proactive creators of and participants in the network, it would help stabilize the decentralized network's structure since instead sharing that profit can provide a source for incentives for all users of the network.

Compared to the opposite such as the familiar legacy pattern of vertical hierarchy which specifically doesn't scale in horizontally expanding network topologies; the key is to understand "one's limits". Trust too few people you may never get anything done, trust too many and you'll likely be used without even knowing it: thus there's a sweet spot by which transitive delegation can provide the scaffolding in which a decentralized network can function without destroying itself. Like I said the well known alternatives we know of already, don't even work on these kind of networks.

To recap, at least imho, achieving what you want would best be done by providing an open source platform. Anyone can fork it, even contribute, and everyone can use it. If there's some roles such as maintainers baked into the DAO then some of the cost of using that network can be funneled to them without any intermediate centralizing sink obtaining as much as it can. Like how web2 relies very much on open source to run at all without really compensating those who contribute, such a basis of platform that does reward its maintainers would provide a foundation by which then more private endeavor and enterprise could build from, since as good as web3 can be, it still needs to map to the asset values in the real world.

Great article! Hopefully my response is clear enough; the only other thing I'd say is maybe some more diagrams / generalized "UML" of the concepts would be helpful. That and you are too kind to existing legacy infrastructure, because it specifically conceals the derivation of profit so it can monopolize its capitalization of that profit as best it can... this is probably why many who are "web2" positive and anti web3 are unable to grok web3, it literally defies how they presume the internet should work to (only) their realized benefit.

-------------------------

Mathias | 2022-06-10 11:18:41 UTC | #3

That is truly fantastic feedback, which I really appreciate! My apologies for getting back late at this, I was obsessively working on something for Supernova.

I really like how you put it, especially here:

> The autonomy of locality can preserve the order necessary for things to function without being overrun by entropy and without that order becoming the dictator of consent the network must conform to.
> 

And here:

> users are not merely passive consumers from which someone else’s profit can be extracted, but are instead rewarded for being proactive creators of and participants in the network, it would help stabilize the decentralized network’s structure since instead sharing that profit can provide a source for incentives for all users of the network.
> 

That is exactly my thinking. 

I completely agree a platform being open-source could be essential to provide assurances to the contributors involved. Everyone would understand how the platform works and specific parts of the network would have the credible threat to coordinate towards an alternative implementation if they want, which generally aligns incentives I’d say. 

I think what might be the biggest problem and that is also what I have not yet done enough work on is how the contributors of the platform can update it. If we use the open-source model without a governance system then it can get extremely hard to coordinate towards an improved implementation. That is what we see with certain standards on the web, where there are better ones but it is very hard to move towards them.

So if we want to have a more dynamic system someone needs to be able to modify the underlying platform. If we have something like that, for example in the form of a DAO it brings up the conflict between the platform creator and the local contributors. If the creator has all the power we are in a web2 world, where they have incentives to build the platform but where that is really hard, as none of their “customers” have incentives to contribute. On the other hand, if we distribute ownership widely we might be able to credibly incentivize people by using the franchising model. But at the same time we lower incentives for someone to build the platform in the first place as well as their incentives to keep improving it. 

I think that fundamental tradeoff is a big problem, that I have not completely thought through, although I argue in the article that we can achieve both in certain situations. 

But I think we are on to something and again you really put it nicely with this:

> without being overrun by entropy and without that order becoming the dictator of consent the network must conform to.

In the end, it is apparent that the system we both seem to have in mind could make all involved parties better off and even has certain analogies in the traditional world such as franchising. So it should be possible to find a better way of collaboration between the creator and contributors of platforms. 

Let me know in case you have further thoughts on this.

Personally, my background is in economics rather than in computer science, although I'm on an intense journey to develop technical skills. When writing the article I was digging into things like contract theory and platform governance research. I think you look at it from a different, very related angle. You mentioned "transitive delegation", which could be something very helpful for me to dig into. I was aware of things like voting delegation but it seems like it could be useful to devote more time to the topic generally. Is "graduated representative delegation" an analogous term? I think I understood your point though. If you know of other topics that seem to be related let me know. It always helps me a lot to think about problems from different perspectives.

And finally yes I should generally make such articles shorter and visualize better what I like to express ;). If I'll further write about the subject I'll put together a more visual summary at some point.

Thank you very much for the feedback!

-------------------------

jzxchiang | 2022-06-12 18:01:45 UTC | #4

[quote="Mathias, post:3, topic:12265"]
If the creator has all the power we are in a web2 world, where they have incentives to build the platform but where that is really hard, as none of their “customers” have incentives to contribute. On the other hand, if we distribute ownership widely we might be able to credibly incentivize people by using the franchising model. But at the same time we lower incentives for someone to build the platform in the first place as well as their incentives to keep improving it.
[/quote]

This is so important IMO.

-------------------------

inviscidpixels | 2022-06-16 21:16:13 UTC | #5

I thought I posted this on this forum already, but I figure you would enjoy:

[System Dynamics: Systems Thinking and Modeling for a Complex World - YouTube](https://www.youtube.com/watch?v=o-Yp8A7BPE8&t=504s)

-------------------------

inviscidpixels | 2022-06-16 22:27:40 UTC | #6

I have a lot of comments on this, but I think you might be letting a bias of believing "vertically integrated systems are naturally better". I'll reply more later, but the idea is to consider what it would take to make a franchise that is horizontally integrated rather than vertically, as the former is how the web can really work (or did before Big Tech self preference anyways) and the later is what is what results in the problem we are trying to overcome. It might help to consider such a kind of franchising model like that would be one that enables "perfectly competitive markets". 

Also, you are maybe underestimating how DAO's can function: if a feedback of proceeds can be the source of further maintenance and development can be setup according to consensus of those who have a stake in that DAO, this would likely solve "that fundamental tradeoff is a big problem". 

In any case I'll reply more later, but you might check out this if you haven't seen it before: https://en.m.wikipedia.org/wiki/Liquid_democracy

-------------------------

Mathias | 2022-06-27 11:41:57 UTC | #7

Thank you for the answer. I don't fully understand your perspective yet but am eager to learn more. It seems like I'm coming from a slightly different angle. More from the "how we can make a diverse set of people commit resources to something" perspective. It would be very insightful if you could elaborate on what you meant. 

I'm especially curious about this:

> a franchise that is horizontally integrated rather than vertically, as the former is how the web can really work


And this:

> Also, you are maybe underestimating how DAO’s can function: if a feedback of proceeds can be the source of further maintenance and development can be setup according to consensus of those who have a stake in that DAO, this would likely solve “that fundamental tradeoff is a big problem”.


Just to summarise my current thinking (going a bit further than the article); the motivation to apply the franchising concept to digital contracts is that we can find the local "spots" where the application (== restaurant concept) already creates value without having to onboard the entire world to the application first. Note that local could be a subreddit created around some topic, not physically local.
If enough people market the app locally (== creating a franchise) then this can bootstrap a global user base which leads to more and more incentives for more and more people to further market the app locally (== create more franchisees). We still need a sufficiently large number of use cases but we can better tackle the chicken and egg problem of the entire platform because we can find and utilize the use cases where the app creates value before it is globally adopted.
To achieve that, the platform builder needs to credibly promise the franchisees that they will indeed be able to monetize the app locally. This means the platform builder has to credibly restrict their own power to pocket all the profits eventually.

I'm not necessarily saying that the franchisees have to be businesses that provide value further down the supply chain, I'm rather saying that we can try to use a distributed set of people from around the world to find use cases for an application. The idea of them being independent entities and having their own organisations, comes from trying to solve the issue that they need to be sure to get a piece of the pie if they commit resources to the project. 
Nobel prize-winning economist Oliver Hart has argued that there are these cases where a contract cannot be written to give such assurances (incomplete contracts). For example, an entrepreneur can find indefinite ways of cheating an investor out of their money. To prevent that, and give assurance to an investor that they would get a piece of the cake, the investor needs to get some ownership over the company. Ownership is the right to decide whenever a contract does not prevent you from doing so. As such, in all these indefinite cases of cheating, the investor has now something to say.

Before Blockchains the distribution of control rights of digital platforms was only possible in the legal system. I argue that doing it globally can be exponentially better, as more people are coordinated toward the platform at the same time. I think the platform ownership could be distributed to franchisees to achieve that. But that also seems inefficient and might end up being quite similar to airdropping tokens to people once again (which is cool). I'm researching if there are better ways, where the platform builder keeps a large part of the equity but can still credibly promise the franchisees that they will make money if they commit to the project.

If you want, please tell me more about your perspective coming from vertical/horizontal integration, it helps me a lot to look at these things from different angles. And I'll definitely read up on it.

-------------------------

Mathias | 2022-06-27 11:42:37 UTC | #8

Thank you, yeah definitely that looks really interesting!

-------------------------

jzxchiang | 2022-07-01 00:26:20 UTC | #9

[quote="Mathias, post:7, topic:12265"]
I think the platform ownership could be distributed to franchisees to achieve that. But that also seems inefficient and might end up being quite similar to airdropping tokens to people once again (which is cool).
[/quote]

Can you explain why that is inefficient?

[quote="Mathias, post:7, topic:12265, full:true"]
I’m researching if there are better ways, where the platform builder keeps a large part of the equity but can still credibly promise the franchisees that they will make money if they commit to the project.
[/quote]

I'm very eager to learn about what you find. Please keep us updated!

-------------------------

Mathias | 2022-07-05 22:42:20 UTC | #10

Nice, I‘m glad it is of interest to someone! The reason why I always need some time to respond is that I'm actually pretty confused and have not yet fully wrapped my head around this entire topic. So take the below with a grain of salt. 

I think if we want people (agents, DAOs, companies, or whatever you want to call it), to commit resources to a project, in some cases we run into the problem of incomplete contracts (typically when committed resources stop being useful anywhere else once committed). Ownership in these cases becomes important because it allows people to protect their interests in the scenarios not covered in a contract. Now when I give you some ownership, for example in the form of equity, of course I lose it in return and thus my interests are not as well protected as before. So this is kind of what I meant with "inefficient". 


In some cases (that is not necessarily always possible) we can go beyond that and further optimize the distribution of ownership rights to make us better off. We can do so by either: 1) making the ownership state-dependent or by 2) simply not sharing ownership over ALL assets but only some. 

1) Apparently is what a debt contract is about. If an entrepreneur runs a company that possesses valuable assets (collateral) these can be used to keep ownership rights in the hands of the entrepreneur until things go wrong. As long as the investor gets the interest payments they basically have nothing to say (the entrepreneur has all the rights). Only if the entrepreneur fails to make the payments, control is transferred to the investor. This works because it's assumed that the assets are still worth a lot (cannot be exploited by the entrepreneur) and can be sold off. 

2) I think in some cases it simply is not necessary to give up fractions of control over the entire business. Instead, we try to define more precise ownership agreements over specific assets. I think this is what franchising is about. I'm pretty confused about this right now and cannot tell you exactly why or when this works yet. But if it does there are clear benefits. If we assume that we are working on a startup that scales (becomes exponentially more efficient with more users let's say), then it means we get people to commit resources without giving them (a fraction) of control over ALL assets. These resources can positively affect the exponential part of our business. 

The reason why I'm generally confused is that the distribution of these rights is all about the scenarios that we do not anticipate yet. And furthermore, it's about who derives how much utility of having decision power in what scenarios over what assets. So we are sort of thinking about "scenarios that we cannot anticipate yet" but still try to define structures where ultimately people that care in scenario X very much about having control rights over asset Z get it. 

But all in all, I think it explains a bit why we generally say giving up equity is the most expensive way of raising capital. It means we were not able to find a more precise distribution of ownership rights that led us to collaborate with each other. 

I think the same thinking can and should be applied to how we think about decentralization on the application level. I think we have realized that the owners of something like Facebook have fundamentally misaligned incentives with their user base. And we are trying to change that by "cutting out the middlemen". Once again a possible way to protect users' interests is to give them ownership rights (e.g. tokens of a governance contract). But that is expensive as we are losing the equity we give up. This can still lead to huge things being built, don't get me wrong, I'm just trying to understand if we can go beyond that. 


Side note: I did not go into governance here really, I rather stayed on the contract level. I think it's important to also go into that. We barely question how majority voting works and who exactly has how much power when owning some fraction of shares. There's a lot to unpack there. It's quite interesting to start from the beginning and read about majority voting and things like the Shapley value (I don't understand the math): https://en.wikipedia.org/wiki/Shapley_value

-------------------------

