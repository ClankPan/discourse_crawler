DaveyEbb | 2022-07-18 17:02:05 UTC | #1

I am trying to upgrade an IC deployment with new code (Rust backend and vue.js frontend). It deploys nicely and works perfectly locally. The `canister-ids.js` file is as follows:
```js
{
  "rust_simplifire": {
    "ic": "redgg-aaaaa-aaaap-qaesa-cai"
  },
  "rust_simplifire_assets": {
    "ic": "rdcas-nyaaa-aaaap-qaesq-cai"
  }
}
```
The Rust canister appears to upgrade OK:
```
$ dfx canister --network ic install --mode=reinstall rust_simplifire
WARNING!
You are about to reinstall the rust_simplifire canister
This will OVERWRITE all the data and code in the canister.

YOU WILL LOSE ALL DATA IN THE CANISTER.");


Do you want to proceed? yes/No
yes
Reinstalling code for canister rust_simplifire, with canister_id redgg-aaaaa-aaaap-qaesa-cai
```
But the front-end canister upgrade fails as follows:
```
dfx canister --network ic install --mode=reinstall rust_simplifire_assets
WARNING!
You are about to reinstall the rust_simplifire_assets canister
This will OVERWRITE all the data and code in the canister.

YOU WILL LOSE ALL DATA IN THE CANISTER.");


Do you want to proceed? yes/No
yes
Reinstalling code for canister rust_simplifire_assets, with canister_id rdcas-nyaaa-aaaap-qaesq-cai
Error: No such file or directory (os error 2)
```
Not sure what I'm doing wrong. Any suggestions most welcome.

Dave

-------------------------

paulyoung | 2022-07-18 17:11:30 UTC | #2

I think the error message might be improved in newer versions of `dfx` but I would compare the files you have on disk with the file paths mentioned in your `dfx.json` and see if something is missing.

-------------------------

peterparker | 2022-07-18 18:10:09 UTC | #3

Did you recently upgrade to newer version of dfx `v0.11.0`? Not sure it is related but there is a breaking change regarding assets that was announced in this thread https://forum.dfinity.org/t/dfx-0-11-0-is-promoted-with-breaking-changes/14327

-------------------------

kpeacock | 2022-07-18 20:52:21 UTC | #4

Check the `source` config in dfx.json. Are all the directories listed there actually present?

-------------------------

DaveyEbb | 2022-07-19 05:04:26 UTC | #5

I can see the dfx.json source files & directory fine from the root directory, Kyle. `dfx.json` is:
```js
"canisters": {
    "rust_simplifire": {
      "candid": "src/rust_simplifire/rust_simplifire.did",
      "package": "rust_simplifire",
      "type": "rust"
    },
    "rust_simplifire_assets": {
      "dependencies": [
        "rust_simplifire"
      ],
      "frontend": {
        "entrypoint": "dist/rust_simplifire_assets/index.html"
      },
      "source": [
        "dist/rust_simplifire_assets/"
      ],
      "type": "assets"
    }
  },
  "defaults": {
    "build": {
      "args": "",
      "packtool": ""
    }
  },
  "dfx": "0.9.3",
  "networks": {
    "local": {
      "bind": "127.0.0.1:8000",
      "type": "ephemeral"
    }
  },
  "version": 1
```

-------------------------

DaveyEbb | 2022-07-19 06:11:45 UTC | #6

We're still on dfx 0.9.3. Should we upgrade?

-------------------------

kpeacock | 2022-07-19 16:11:23 UTC | #7

I see two odd things here - the `entrypoint` is pointing to your `dist` directory. Generally Webpack uses this to determine the entrypoint for your code bundling.

Can you confirm that your `npm build` job is successfully outputting to `dist/rust_simplifire_assets` and not just `dist`? Providing your webpack config may help too

-------------------------

DaveyEbb | 2022-07-20 06:11:31 UTC | #8

We do have the `dist/rust_simplifire_assets` folder.  Our webpack config can be seen on this link:  https://github.com/Simplifire/simplifire-ic/blob/master/webpack.config.js

-------------------------

DaveyEbb | 2022-07-20 13:55:42 UTC | #9

I seem to have found a way around the problem, Kyle. I used `sudo dfx -v deploy --network ic` instead of `dfx canister --network ic install --mode=reinstall rust_simplifire`

It deployed the two canisters:
```
Deployed canisters.
URLs:
  Frontend:
    rust_simplifire_assets: https://rdcas-nyaaa-aaaap-qaesq-cai.ic0.app/
  Candid:
    rust_simplifire: https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/?id=redgg-aaaaa-aaaap-qaesa-cai
```

The new code is visible through the frontend URL and, upon initial testing, all looks good.

Should we continue to use this for new versions of code (noting that we are still in prototype mode so loss of data is not an issue)?

Thanks

Dave

-------------------------

kpeacock | 2022-07-20 16:24:32 UTC | #10

`dfx deploy --network ic` is a perfectly fine pattern, and won't delete your canister's state like `--mode=reinstall` does. If you need to use `sudo`, there's something weird about your dfx installation

-------------------------

peterparker | 2022-07-20 17:24:11 UTC | #11

[quote="kpeacock, post:10, topic:14385"]
If you need to use `sudo`,
[/quote]

I remember having issue with permission on OSX too. If @DaveyEbb you deploy on OSX too and if it can be useful, here what solved my scheme: https://forum.dfinity.org/t/permissions-on-osx/5853/2?u=peterparker

-------------------------

