ildefons | 2024-05-17 12:33:17 UTC | #1

I would like to learn about the ICRC-3 standard. Where is the best place to start?

-------------------------

Severin | 2024-05-17 12:43:34 UTC | #2

IMO the standard itself is pretty readable: https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-3/README.md

-------------------------

senior.joinu | 2024-05-19 17:15:42 UTC | #3

Did it get standardised? I see the ‘Accepted’ status, but the main README doesn’t list it among others?

-------------------------

Henry_Suso | 2024-05-19 16:41:34 UTC | #4

There are a couple deployed canisters with icrc3

SHADOWMANTIS (5xwlp-hiaaa-aaaag-qjqqa-cai)
ZORK (ckgsm-dqaaa-aaaah-adyca-cai)
ICDV (ryjl3-tyaaa-aaaaa-aaaba-cai )

Come to mind 

You could probably play with those canisters and see how they work.

-------------------------

skilesare | 2024-05-19 14:45:39 UTC | #5

Implementation: https://github.com/PanIndustrial-Org/icrc3.mo

Video: https://forum.dfinity.org/t/building-an-icrc-1-2-3-4-and-10-fungible-token-series/29040/13?u=skilesare

-------------------------

ildefons | 2024-05-22 14:18:25 UTC | #6

@skilesare I have tried to compile (dfx generate) icrc3.mo with dfx 0.19 and I got the following error
```
Stderr:
/home/ildefons/neutrinite/icrc3.mo/src/archive/lib.mo:129.50-129.56: syntax error [M0001], unexpected token 'system', expected one of token or <phrase> sequence:
  >
  seplist(<typ>,,) >
type or paste code here
```

This line correspond to:

```
    /// Deposit cycles into this archive canister.
    public shared func deposit_cycles() : async () {
        let amount = ExperimentalCycles.available();
        let accepted = ExperimentalCycles.accept<system>(amount);  //<----ERROR
        assert (accepted == amount);
    };type or paste code here
```
What is happening? I suspect the base package version specified in the mops file is not correct but I cannot figure out the right one

-------------------------

skilesare | 2024-05-22 16:47:58 UTC | #7

I think it requires dfx 20+

-------------------------

