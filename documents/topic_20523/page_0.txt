decentralised.trade | 2023-06-07 21:02:49 UTC | #1

Dear IC community

We’d like to throw an idea out here to understand if an optional feature for the SNS is interesting:

When we were looking into the concept of SNS neurons we were quite impressed about how incentives are handeled for token holders.
Unfortunately, not every project stakeholder is a token holder: Partners who don't own token but provide important services (e.g. programmers) are usually not directly considered in the governance process.

How about introducing badges that are issued by the SNS for these partners. Badges are a very flexible means to enable the SNS to incentivise stakeholders in a decentralized way. 
In a simple scenario consider badges (1-5) that determine how engaged or experienced partners are within the community. These different badges would then be considered when creating a neuron.

Is there some interest from the community for such an addition to the Neuron system? 

Would love to hear your thoughts.

Thanks!

-------------------------

lara | 2023-06-08 08:48:34 UTC | #2

Hi @decentralised.trade ,
interesting idea. I wonder whether this needs to be built into the SNS or could also be done as part of the dapp as the detailed goals of this might be rather dapp-specific.

What would be the difference with different badges in your ideas?
I don't fully understand what you mean by 
> These different badges would then be considered when creating a neuron.

Also, how would this relate to 
> Partners who don’t own token but provide important services (e.g. programmers) are usually not directly considered in the governance process.

Would those partners now neverthless have a neuron in your proposal or would the badges have other effects too?

-------------------------

decentralised.trade | 2023-06-08 13:30:44 UTC | #3

Hi @lara,
Thx for your reply:
I think a deep integration would be preferred to enable voting rewards based on the badge as a fourth component next to stake, lock-up period and maturity.

Badges could be used for verification purposes during the initial token sale. Therefore, every token holder could receive a badge together with the tokens.

Partners could receive a token airdrop together with a badge and can then open a neuron with their badge.
Their stake of a few tokens would be sufficient for them to receive a higher than usual reward. 

The badge voting power would be specified by the SNS in a governance vote and the different badges would enable higher or lower voting power.

I hope this clarifies your questions

-------------------------

lara | 2023-06-12 08:46:48 UTC | #4

Thanks for elaborating.

So basically, you mean that the badge would be the property of a neuron that would both influence the voting power but also the rewards?
What would be the advantage of this over just giving those people more tokens so they have more voting power? Wouldn't that align more with the incentive system of "if you have more stake in the game, you are more incentivised to vote in the interest of the DAO"? 

If some stakeholders should be paid for extra jobs would it maybe also make sense to consider [user rewards](https://wiki.internetcomputer.org/wiki/SNS_Rewards#Design_of_SNS_rewards)?

-------------------------

decentralised.trade | 2023-06-12 09:55:32 UTC | #5

Hi Lara,

Yes, that is the idea:
Thanks for sharing the feature of user rewards: I think some of the use cases can be covered nicely like this already. It mentiones that the user rewards canister might be able to mint: Do you think the minting can be programmed with the full flexibility of ICRC1 by the SNS community?

Other use-cases such as identification of members during the initial sale or assigning specific roles within the SNS community might require something like the aforementioned approach.

I am aware that @michel.abdalla is working on Verifiable Credentials: This technology might find a perfect use-case here.

-------------------------

lara | 2023-06-12 10:27:24 UTC | #6

> it mentiones that the user rewards canister might be able to mint: Do you think the minting can be programmed with the full flexibility of ICRC1 by the SNS community?

So the ledger canister built in the SNS is already implementing the ICRC-1 standard. It allows one to set *one* minting address, controlled by one principal. Currently when an SNS is initialised this is set to the SNS governance, which allows SNS tokens to be minted for voting rewards.
There is a proposal type to move SNS tokens from the SNS treasury (which is controlled by SNS governance) and to mint new tokens (as the SNS governance controls the minting account). 
So an SNS could send such a proposal to mint new tokens. This would currently not be possible to be done in a "reward canister", but it is possible to mint tokens to the reward canister's account 
(with the mentioned proposal) and the the canister can then implement the logic how to distribute them. 

> Other use-cases such as identification of members during the initial sale or assigning specific roles within the SNS community might require something like the aforementioned approach.
I am aware that @michel.abdalla is working on Verifiable Credentials: This technology might find a perfect use-case here.

Yes, I agree that this work might be useful for such cases. It might make sense to differentiate between attributes that are relevant during the swap participation (the SNS's launch), in the SNS DAO (after the launch), and in the dapp's functionality. 
Some community members already expressed interest in having this for the swap participating, for example for airdrops to users with NNS neurons.

-------------------------

decentralised.trade | 2023-07-24 18:22:51 UTC | #7

There now seems to be concrete technological plans by the wallet standardization working group for the internet identity to be able to issue verifiable credentials:

https://github.com/dfinity/internet-identity/commit/297fe813fd4dcfc48cefdb0d7fb10a91fe50112d

Maybe it is a good time now to think about how such credentials could be used and which attributes might be important for the initial swap as well as during the DApps functionality.

There might be different attribute requirements depending on the SNS as well as common verification functions needed:

Is there a way for the community to contribute here?

-------------------------

