mraszyk | 2023-08-03 14:57:25 UTC | #1

**What?**

The IC is going to enforce that exported function names must not start with the `canister_` prefix except for those explicitly allowed by the Interface Specification (https://internetcomputer.org/docs/current/references/ic-interface-spec#system-api-module).

Canister developers need to make sure they don't deploy new canister modules exporting functions with reserved names in the future.

**Why?**

Exported function names starting with the `canister_` prefix and not explicitly allowed by the Interface Specification are reserved so that the IC might introduce such names for new IC features (as was the case for `canister_composite_query ` recently) without breaking existing canisters.

**How?**

The IC rejects canister modules exporting functions with reserved names during canister module validation. For new canister modules deployed onto the IC, the validation is performed as part of the `install_code` management canister call.

The change is implemented by this MR: https://github.com/dfinity/ic/commit/e4ff4a5334ed1c6a8abf97e5d00a79efd90ec076.

According to the production logs, existing canisters are not affected by this change. After rolling out the change on mainnet, the IC will reject new canister modules exporting functions with reserved names.

-------------------------

saikatdas0790 | 2023-08-12 01:39:42 UTC | #2

Could this be added as a lint to `ic_cdk` so that this is flagged as an error automatically by a language server like Rust analyzer? Maybe for functions annotated with the `ic_cdk::query` or `ic_cdk::update` attribute?

-------------------------

chenyan | 2023-08-12 05:20:44 UTC | #3

If you are using the `query` and `update` attributes from `ic_cdk`, it automatically complies with this requirement. The function name can start with `canister_` prefix just fine. It only forbids the exported function name, which starts with either `canister_update` or `canister_query`. It only affects CDK authors who are exporting more functions than allowed in the interface spec.

-------------------------

mraszyk | 2023-08-14 05:38:14 UTC | #4

[quote="chenyan, post:3, topic:21932"]
The function name can start with `canister_` prefix just fine. It only forbids the exported function name, which starts with either `canister_update` or `canister_query`. It only affects CDK authors who are exporting more functions than allowed in the interface spec.
[/quote]

Thank you for the clarification! Then the question is if it'd be possible to make `ic_cdk` also forbid all exported function names which start with `canister_` and are not allowed by the spec?

-------------------------

AdamS | 2023-08-14 14:11:57 UTC | #5

ic-cdk has no control over what `#[export_name]` the user writes; it is not possible to make such a lint. However, a user using ic-cdk has no reason to use `#[export_name]` either. It should in general be a non-issue.

-------------------------

