kristofer | 2024-02-15 14:26:58 UTC | #1

I am having issues accessing a canister through the candid web interface. 

Canister works fine, deploy works fine and accessing canister from frontend/other canisters work fine. It is just the generated web interface that says "Cannot fetch candid file". 

Deploy 1:
```
"ic_siwe_provider": {
  "type": "custom",
  "candid": "https://github.com/kristoferlund/ic-siwe/releases/download/v0.0.4/ic_siwe_provider.did",
  "wasm": "https://github.com/kristoferlund/ic-siwe/releases/download/v0.0.4/ic_siwe_provider.wasm.gz"
},
```

Deploy 2:
```
"ic_siwe_provider": {
  "type": "custom",
  "candid": "https://raw.githubusercontent.com/kristoferlund/ic-siwe/09cb809d6b94edea17c9d0c96bffdb845dbea1d3/packages/ic_siwe_provider/ic_siwe_provider.did",
  "wasm": "https://github.com/kristoferlund/ic-siwe/raw/09cb809d6b94edea17c9d0c96bffdb845dbea1d3/packages/ic_siwe_provider/ic_siwe_provider.wasm.gz"
},
```

Am I missing something obvious here? ðŸ˜€

-------------------------

Severin | 2024-02-15 15:32:59 UTC | #2

Your build process probably does not add the candid file to the metadata. If you want dfx to add it automatically when deploying you have to tell it to add it [like this](https://github.com/dfinity/sdk/blob/master/e2e/assets/metadata/custom/dfx.json#L14-L18). If you want to do it manually in your build process you can do it with `ic-wasm` (installed via `cargo install ic-wasm`)

-------------------------

peterparker | 2024-02-15 15:39:55 UTC | #3

[quote="Severin, post:2, topic:27603"]
f you want dfx to add it automatically when deploying you have to tell it to add it [like this ](https://github.com/dfinity/sdk/blob/master/e2e/assets/metadata/custom/dfx.json#L14-L18).
[/quote]

Is this a potential breaking change, @Severin? In other words, could it be that older versions of dfx automatically included the did metadata, but now this feature requires opting in?

Maybe it has always been an opt-in feature but, I'm asking because I feel like this is the second similar question I've encountered this week.

-------------------------

kristofer | 2024-02-15 15:41:06 UTC | #4

Oh, the existence of the metadata section I had missed completely. ðŸ˜€ Is the rationale here that you probably don't want to include the did metadata for a production canister but that it might be nice during development?

-------------------------

Severin | 2024-02-15 15:55:14 UTC | #5

[quote="peterparker, post:3, topic:27603"]
Is this a potential breaking change, @Severin? In other words, could it be that older versions of dfx automatically included the did metadata, but now this feature requires opting in?
[/quote]

You're right, this was a [breaking change that was not labelled as such](https://github.com/dfinity/sdk/blob/master/CHANGELOG.md#feat-configurable-custom-wasm-sections). However, it was merged in October 2022 and released in dfx 0.12.0, so I don't think anything this week should really be an effect of that. (Maybe important detail: it's only breaking for canisters of type `custom`)

[quote="kristofer, post:4, topic:27603"]
Is the rationale here that you probably donâ€™t want to include the did metadata for a production canister but that it might be nice during development?
[/quote]
No, it's about giving full control. If you say you build your wasm yourself (canister type `custom`) and then we go and change it before installing that's unexpected. So we decided to make it opt-in instead of opt-out. Another expected use case would be that you may want to have debug methods in the candid file when you build non-release builds, so you add your own logic about when to add which metadata section.

I would actually suggest that you include the metadata for a production canister if you want others to be able to integrate with your project. That way the dashboard and similar services can also show what functions your canister offers

-------------------------

