dymayday | 2022-02-23 20:33:25 UTC | #1

Hi community !

I'm going through the Rust tutorials and I'm stuck at the [dependency one](https://smartcontracts.org/docs/rust-guide/multiply-dependency.html#_replace_the_default_rust_canister_smart_contract) with this error at the `dfx deploy` stage : 

![image|690x248](upload://jtt9FqI9bTGC7MSxyZfe58apaC2.png)


I've followed the steps carefully, does anybody knows how I got this error ?

Thanks in advance.

More info : 
dfx 0.8.4
[dependencies]
ic-cdk = "0.4.0"
ic-cdk-macros = "0.4.0"

-------------------------

diegop | 2022-02-23 19:42:32 UTC | #2

Not sure myself. Thanks for letting us know. Let me ping some folks i know are working on rust docs and SDK.

-------------------------

lwshang | 2022-02-23 19:47:02 UTC | #3

Hi @dymayday,
`ic-cdk` v0.4 introduced a breaking change that `candid` should be included in your project Cargo.toml.

FYI, https://github.com/dfinity/cdk-rs/blob/main/README.md?plain=1#L46

-------------------------

dymayday | 2022-02-23 20:51:55 UTC | #4

Thank you @lwshang ,
I tried to add candid 0.7.11 as a dependency, but still having the same error.

Also, I took a look at the [ic-cdk-macros](https://github.com/dfinity/cdk-rs/tree/main/src/ic-cdk-macros) repo, and I couldn't find any `import` test overthere. Maybe it's an overlooked bug :man_shrugging:

-------------------------

lwshang | 2022-02-23 22:32:39 UTC | #5

Yes, I can reproduce the problem. 
I'm still investigating the reason of it. Will get back to you when we have a fix.

Thanks for reporting!

-------------------------

lshoo | 2022-02-26 05:04:03 UTC | #7

I encountered a similar problem when I mixed rust + motoko canister an.
At the beginning the project was simple (motoko only has one main.mo file), I add the motoko interface and then rust canister call new motoko interface, dfx deploy successful.
When Motoko canister were complicated ( There are multiple mo files and there is an import relationship), after adding a new interface in rust canister to call motoko canister, and then executing dfx deploy, an error similar to that will occur.

![image](upload://cAqgSGwyxqRzAc4NMTVhwQsqnAO)

source repo: https://github.com/lshoo/rust_deps

If I only use main.mo.0 (simple) instead of main.mo (complex) in the code repository , it can compile and deploy successfully, and what is even more strange is that complex main.mo can also be compiled and deployed successfully later.

Whenever I add a new function to rust canister and call the motoko canister function, I have two kinds of problems.

Operating environment: win10 + wsl2 (ubuntu 20.04)
dfx 0.9.0

-------------------------

lwshang | 2022-03-08 20:31:08 UTC | #8

The fix of this issue is included in `dfx` version 0.9.2.
Could you (@dymayday & @lshoo) install the new version and see if it works?

-------------------------

dymayday | 2022-03-10 11:58:53 UTC | #9

Thank you @lwshang !
Using dfx 0.9.2, still having issues, but it's a different one now : 
![image|690x239](upload://3uWBmaZAs5rn4K7MLWBjrT0cVQN.png)

From the code in the tuto : 
```
use ic_cdk_macros::*;
use ic_cdk::export::candid;

#[import(canister = "multiply_deps")]
struct CounterCanister;

#[update]
async fn read() -> candid::Nat {
    CounterCanister::read().await.0
}
```

-------------------------

lwshang | 2022-03-10 16:42:41 UTC | #10

I just went through the tutorial with dfx 0.9.2 and it works as expected.
Could you start a fresh new project and follow the tutorial again?

P.S. If you kept `"dfx": "0.8.4"` in `dfx.json`, it will actually use the specified version of `dfx` to build your canister instead of the latest version. I would recommend to copy/paste the final output of `dfx.json` as described in the tutorial.

-------------------------

dymayday | 2022-03-10 18:48:48 UTC | #11

All good ! Thanks for the fix ! I don't know what went wrong, but starting from fresh solved the issue.
PS : I did not have the dfx version in the `dfx.json` but it still failed.

-------------------------

lshoo | 2022-03-11 00:37:53 UTC | #12

@lwshang Thanks!
The problem still exists, when multipy_deps has only one mo file, both multiply_deps and rust_deps can be compiled and deployed successfully, but after multiply_deps has multiple mo files, 90% of rust_deps often fail to compile, even if it can be successfully compiled occasionally, when a new method is added to rust_deps , it will also fail.
Do you try to compile and deploy this repo: https://github.com/lshoo/rust_deps?
dfx 0.9.2
windows10 + wsl2 (ubuntu20.04)
![image|599x500](upload://qsFQzJuvviKHkkazunbdgD5405q.png)
![image|311x500](upload://lBynyAOMKKhfxBANabi2bBUrt07.png)
![image|528x375](upload://tWIk7FieXqUUeYldEfWuhDgMb1n.png)

-------------------------

lshoo | 2022-04-10 06:08:11 UTC | #13

When I updated the rust sdk to 0.5, the compilation error still existsã€‚
@lwshang ang

-------------------------

lwshang | 2022-05-24 13:44:25 UTC | #14

Hi @lshoo, currently `import` doesn't work for all candid types. When the `did` file get more complicated, it may trigger the "not implemented" panic.

Could you try `didc bind ecdsa.did -t rs` , and use the generated rs binding? `didc` can be found at `candid` repo. Note that, you will need to get canister id from static env as in https://github.com/dfinity/cdk-rs/blob/main/src/ic-cdk-macros/src/import.rs#L16.

This issue is on our plate. We are working on improving the developer experience about inter-canister operation.

-------------------------

