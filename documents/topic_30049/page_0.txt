peterparker | 2024-04-26 12:19:40 UTC | #1

Is there a way to write, or does anyone have an example to share, a test that asserts whether an endpoint is set as `update` or `query` with PocketIC?

I'm looking for examples in Rust or PicJS, as I use both. I know I'm asking for a lot :smile:.

-------------------------

michael-weigelt | 2024-04-30 08:02:44 UTC | #2

IIUC, you have a canister with a method and you want to determine whether that is a query only or can also be called as an update call? 

I can't think of a way with the current version. Why do you want to do that as an integration test as opposed to just inspecting the wasm (or .wat)?

-------------------------

peterparker | 2024-04-30 08:12:49 UTC | #3

Because I only have a suite of integration tests, but fair pointâ€”if it can be done in a unit test, that works too. Do you know if there's an example somewhere of such a test?

Note: This question is more of a nice-to-have from my perspective, not a must, so no need to try too hard. If it's not possible, it's not. ;)

-------------------------

michael-weigelt | 2024-04-30 08:43:05 UTC | #4

I don't have a ready example, but here is a sketch how I would do it.
Transform the wasm to textual format:
```
wasm2wat canister.wasm -o canister.wat
```
There is also a rust library, if you want to formulate the test in rust. 
In the canister.wat, there is an export section, which looks something like this:
```
   ...
  (export "canister_query triple" (func $canister_query_triple))
  (export "canister_query const" (func $canister_query_const))
  (export "canister_update inc" (func $canister_update_inc))
  (export "canister_init" (func $canister_init))
  ...
```
Based on this format, you can write some filter/match to achieve your goals. 
Note that the string with the whitespace, not the $blah, is what you should match for.

Also note that methods annotated with "query" can always also be called as an update, and there are some special rules for composite queries.

-------------------------

mraszyk | 2024-04-30 08:56:28 UTC | #5

You can try to add a test for a candid file (similar to [this](https://github.com/dfinity/ic/blob/575cfc30421e0de0a5fa2762239197095f0f22ba/rs/nns/governance/canister/canister.rs#L1111)) and then a method is a query if and only if it is labeled as such in the candid file.

-------------------------

mraszyk | 2024-04-30 08:58:44 UTC | #6

[quote="peterparker, post:1, topic:30049"]
Is there a way to write, or does anyone have an example to share, a test that asserts whether an endpoint is set as `update` or `query` with PocketIC?
[/quote]

You can try calling the method as a query call and if it is an update method, the error message will say so.

-------------------------

peterparker | 2024-04-30 09:40:43 UTC | #7

Thanks for the suggestions!

-------------------------

mraszyk | 2024-04-30 09:42:14 UTC | #8

[quote="mraszyk, post:5, topic:30049"]
a method is a query if and only if it is labeled as such in the candid file
[/quote]

that would only work reliably though if you use ic_cdk macros to define the canister's public endpoints, if you use `#[export` and `#[candid_method` then the candid file relies on `#[candid_method` while the IC relies on `#[export`

-------------------------

