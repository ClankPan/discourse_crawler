ccelik97 | 2022-05-12 02:15:59 UTC | #1

Hi. I see that the source is open and it's on https://github.com/orgs/dfinity/repositories but why choose GitHub to store the source of the Internet Computer and in particular, NNS?

As a starting point it's understandable as GitHub is very popular at the moment but I'm wondering moving forward if the source code of the Internet Computer too will be hosted by truly decentralized means rather than by one single source code hosting company. If it's already being done in this manner (in case the repositories on GitHub are only for reference purposes) then excuse my ignorance but I'd really like to receive some explanations in this regard.

Also in case the source code that's being used to actually build the Internet Computer and upgrade the governance software isn't being taken from GitHub then I'd like know where it is as well.

-------------------------

GLdev | 2022-05-12 05:16:33 UTC | #2

[quote="ccelik97, post:1, topic:12906"]
Iâ€™m wondering moving forward if the source code of the Internet Computer too will be hosted by truly decentralized means rather than by one single source code hosting company.
[/quote]

Sure, but someone needs to create a software stack that is as easy to use, trusted, reliable, available, etc. as the current alternatives are. Decentralized doesn't mean anything if the software itself is not on par with what's available.

-------------------------

ccelik97 | 2022-05-12 06:16:55 UTC | #3

I don't think that it should be created by some*one*. Rather, the source code hosting should be a part of the chain, just like application canister hosting is. But I think before even attempting that, Internet Computer should have implemented a multi-level governance authority system (similarly to the proposed/under development idea) with the source hosting being the most trusted part of the chain so that the (sub)nodes can't override the government of the source concerning the entire chain.

I wonder if the idea of the source code (like, every distinct commit) being NFTs sounds too much of a wild idea to you but to me a change towards this direction is a must in order to ensure that the entirety of the development process will be at least as trustable as the running chain itself.

Edit: I just remember seeing a kind of relevant matter here https://github.com/cosmos/gaia/issues/1067 regarding the preservation of the governance related documentary and similarly to their proposal of making IPFS to store such documents, @paulyoung 's ICFS (https://github.com/paulyoung/icfs) could be used over here without experiencing Cosmos/Gaia's concerns over the preservation of such documentary because the assurance authority too would be implemented into Internet Computer itself if a multi-level governance system is implemented to begin with.

-------------------------

GLdev | 2022-05-12 06:27:55 UTC | #4

I think I see where you're coming from. If you're talking about traceability and ensuring that the replicas are running the code they say they are running, then I agree. This should happen, and I believe there have been efforts in this area. I know dfinity is working on improved reproducible build pipeline, and there are also some community efforts that already provide this service - i.e. matching some code in a repo with a canister hash, to make sure the code published is actually the code used by the replicas.

The issue with the initial question is that github provides much much more than simple displaying of the source code. So even if someone codes the features that you described, and the code can live on chain somehow in perpetuity, github will probably still be used, as it is one of the most mature products out there in this field, and the advantages of using it are huge.

-------------------------

ccelik97 | 2022-05-12 06:51:25 UTC | #5

[quote="GLdev, post:4, topic:12906"]
The issue with the initial question is that github provides much much more than simple displaying of the source code. So even if someone codes the features that you described, and the code can live on chain somehow in perpetuity, github will probably still be used, as it is one of the most mature products out there in this field, and the advantages of using it are huge.
[/quote]

No matter how advantageous may sound using someone else's established product for your new enterprise early on, depending on it to this extent will surely prove fatal in the event of conflict of interest between the two parties. My bet is similar to what my Spidey-Senses tell me: Microsoft (as in the United States of Microsoft) will want to intervene, if they haven't already. This is nothing to be taken this lightly of if Internet Computer is to truly remain distributed, open and transparent to all by all means.

-------------------------

skilesare | 2022-05-12 13:09:08 UTC | #6

Write a rust compiler in Motoko and we're in business.

-------------------------

ccelik97 | 2022-05-13 17:07:23 UTC | #8

[quote="skilesare, post:6, topic:12906, full:true"]
Write a rust compiler in Motoko
[/quote]

That sounds like a fun idea but I'm not sure if I'm following as I wonder: Can't Internet Computer be used to host it's own source code without doing that first?

-------------------------

kpeacock | 2022-05-13 17:26:11 UTC | #9

To be precise, we do not use GitHub at all for active development on the IC repo. It is there for open-sourcing and accepting PR's from the community, but all the build automation and pipelines are hosted on GitLab. 

Everyone on Dfinity would like to start using source control on the IC, but `git` is an awesome and flexible tool, and there are no `git` providers for the IC yet that give us anywhere the utility or reliability that will allow ~100 devs to work out of a single monorepo. Even if the source code was "hosted" in the IC as its canonical source, we'd still need tooling for build pipelines, comparing and approving PR's, running automated tests, and so on.

-------------------------

ccelik97 | 2022-05-13 19:02:01 UTC | #10

Thank you all for replying. Also I didn't know about the GitLab side of the things.

So this means that a GitLab-like collaboration environment & build pipeline is crucial for the core development and in order to what I'm wishing to happen, an alternative rivaling the likes of such must be built on the Internet Computer itself. All I was looking for is a clarification on your needs to achieve such a feat and whether you're open to this idea or not so I'm happy to hear that you are!

Also @kpeacock , are you hosting your own GitLab instance or are you using https://gitlab.com 's hosting?

-------------------------

kpeacock | 2022-05-16 16:38:57 UTC | #11

Dfinity runs a private gitlab instance. I don't actually know that much about it, since the sdk repos do actually operate in GitHub, and that's mostly what I work on. We have a whole internal developer experience in charge of the IC repo and gitlab, and from what I understand, their big project is to migrate over to Bazel as the primary build tool right now. 

I don't know what their list of necessary features would be, but at the very least it would include being able to compile Rust projects with deterministic reproducibility of wasm hashes, something that we've had to rely on Docker for until now

-------------------------

inviscidpixels | 2022-05-16 17:42:45 UTC | #12

A base use case for such a repo could start with formalizing a standard of token contracts' source code.

-------------------------

ccelik97 | 2022-05-17 23:38:05 UTC | #13

Hmm, the change towards Bazel as the build system sounds promising and I hope it'll be able to work on the sources hosted on the Internet Computer too in the future. I also hope the developments like ICFS will at least help in this regard.

-------------------------

jzxchiang | 2022-05-18 01:17:24 UTC | #14

I'm curious why Bazel was selected to be the build tool. Is that to build the IC replica docker container image?

-------------------------

bitdivine | 2022-11-02 07:41:38 UTC | #15

Re: Bazel:  It wasn't always so; dfinity used to build all the rust code with cargo and nix.  Bazel is just plain faster, a LOT faster.  Any complete stack hosted on the IC will need similar fast builds.  It might be that there are non-replicated builds on development branches but replicated builds for merge to main.

I believe that there is already a project that acts as "github on the IC".  In fact, I landed here when looking for it.  Anyone know where I might find it?

-------------------------

Seb | 2022-11-02 15:36:29 UTC | #17

Check out codebase by @paulyoung 
https://codebase.org/

-------------------------

