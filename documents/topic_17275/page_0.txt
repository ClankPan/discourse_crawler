ZenVoich | 2022-12-10 08:17:42 UTC | #1

Introducing MOPS - a package manager for Motoko with on-chain package registry.


MOPS was created as a simple and convenient alternative to the Vessel. With MOPS it is easier to manage dependencies and it has a simpler config.

You can easily install packages with just one command `mops i <package_name>`.

Recently, MOPS also supports installing packages from GitHub and vessel configuration (thanks to @tomijaga) 
`mops i https://github.com/dfinity/motoko-base`

On https://mops.one you can discover published packages.

[See How to publish package.](https://j4mwm-bqaaa-aaaam-qajbq-cai.ic0.app/#/docs/publish)
[See How to install package.](https://j4mwm-bqaaa-aaaam-qajbq-cai.ic0.app/#/docs/install)

Try it out. Publish your Motoko packages to MOPS!

-------------------------

Gekctek | 2022-12-10 16:21:22 UTC | #2

I'll be putting a few of my Motoko libraries on MOPS. Vessel works but my biggest concern right now is package discovery. It's really hard to figure out what exists without asking around.

-------------------------

cyberowl | 2022-12-11 03:12:05 UTC | #3

We might need to compile a list of all the libraries that are out there. I actually do really enjoy vessel. Would be even fine if it is a simple command line that searches vessel libs and returns their urls / github repos and such.

-------------------------

paulyoung | 2022-12-11 04:40:24 UTC | #4

[quote="Gekctek, post:2, topic:17275"]
Vessel works but my biggest concern right now is package discovery. It’s really hard to figure out what exists without asking around.
[/quote]

Since Vessel works with package sets I think the obvious place to look is in the package set itself.

https://github.com/dfinity/vessel-package-set

From looking at the commit history it seems that there haven’t been many contributions, but the good news is that anyone can contribute.

-------------------------

Gekctek | 2022-12-11 05:09:27 UTC | #5

Ya, ive seen the vessel github packages but there has to be better accessibility or only a few packages will end up in that list and its tedious to view.

I havent heard anyone talk about working on vessel, has anyone talked about it future development?

-------------------------

paulyoung | 2022-12-11 06:08:58 UTC | #6

I think the future of Vessel is being considered. Maybe @kpeacock or @rvanasa can share more.

-------------------------

domwoe | 2022-12-11 10:09:25 UTC | #7

[quote="cyberowl, post:3, topic:17275, full:true"]
We might need to compile a list of all the libraries that are out there. I actually do really enjoy vessel. Would be even fine if it is a simple command line that searches vessel libs and returns their urls / github repos and such.
[/quote]

There's also this: https://github.com/motoko-unofficial/awesome-motoko but it hasn't been updated a lot recently.

-------------------------

rvanasa | 2022-12-12 17:31:42 UTC | #8

I am personally highly supportive of this community-driven, on-chain package manager. 

From my end, I'll make sure that it's possible to use MOPS in the [Motoko VS Code extension](https://marketplace.visualstudio.com/items?itemName=dfinity-foundation.vscode-motoko) and perhaps additional developer tools over time.

-------------------------

rvanasa | 2022-12-13 00:13:28 UTC | #9

As of version `0.6.2`, the Motoko VS Code extension now includes basic support for MOPS packages!

 I also opened some PRs to increase the visibility of MOPS in the IC ecosystem:

- https://github.com/motoko-unofficial/awesome-motoko/pull/20
- https://github.com/dfinity/motoko/pull/3644
- https://github.com/dfinity/portal/pull/901

Cheers!

-------------------------

ZenVoich | 2022-12-13 07:13:07 UTC | #10

@rvanasa cool, thanks a lot!

-------------------------

Seb | 2022-12-14 08:15:30 UTC | #11

(Thanks to @cryptoschindler for the suggestion)

@ZenVoich would you be up for a presentation of MOPS during the next Motoko Bootcamp (16-22 January 2023); I would like to have this tool presented to the next cohort of Motoko dev.

-------------------------

timo | 2022-12-14 09:00:16 UTC | #12

[quote="rvanasa, post:9, topic:17275"]
VS Code extension now includes basic support for MOPS packages!
[/quote]

Are there instructions on how to use it from VS Code?

-------------------------

rvanasa | 2022-12-14 18:29:09 UTC | #13

[These instructions](https://j4mwm-bqaaa-aaaam-qajbq-cai.ic0.app/#/docs/install) should work. The extension will automatically detect the `mops.toml` file and update the type checker accordingly. 

I also looked into packaging MOPS directly in the extension (and including a user interface to set up a project, install dependencies, etc). This will eventually be possible after refactoring [ic-mops](https://npmjs.com/package/ic-mops) to work as a TypeScript library.

-------------------------

ZenVoich | 2022-12-16 07:14:08 UTC | #14

Yes. That would be great.

-------------------------

Zane | 2023-01-20 13:53:14 UTC | #15

How can I enable Mops to install packages from vessel.dhall?

-------------------------

ZenVoich | 2023-01-20 19:27:44 UTC | #16

When you run `mops init` first time, mops will migrate packages from `vessel.dhall` to `mops.toml`. Then you need to run `mops install` to install them.

-------------------------

ZenVoich | 2023-01-31 07:53:33 UTC | #17

# Overview of updates 31.01.2023
Update your cli tool to get new features:
```
npm i ic-mops -g
```
### Domain mops.one 
Now you can access http://mops.one without redirect. Also there is no more /#/ in the url:

Before `https://j4mwm-bqaaa-aaaam-qajbq-cai.ic0.app/#/package/base`

Now `https://mops.one/base`

### Search from cli
Use `mops search <search_text>`  to search for packages directly from the CLI.

![image|690x91](upload://vZjBFPQk8u1wDPXvfugCzbB8slB.png)

### Install specific package version
Use `mops add <pkg>@<ver>` to install specific package version:
For example:
```bash
mops add base@0.7.6
```
### Local dependencies support
You can link local deps by providing relative or absolute path to the package directory:

For example `mops.toml`:
```
lib = "../shared/lib"
```
Motoko code:
```
import Lib "mo:lib";
```
Path will be resolved to `../shared/lib/src`.
You can't publish a package with local dependencies.

### Cache
Now, when installing any package, mops will cache it on disk, so next time it will be installed faster from the disk cache!

## New packages published on mops
📦[icrc1](https://mops.one/icrc1) is a full implementation of the ICRC-1 fungible token standard
📦[time-consts](https://mops.one/time-consts) is a library with time constants to deal with nanoseconds
📦[ledger-types](https://mops.one/ledger-types) is a library with interface to interact with ICP ledger canister.
📦[candid_stringify](https://mops.one/candid_stringify) is a library to convert any Candid data to a string
📦[cbor](https://mops.one/cbor) is a library that is written in Motoko that enables the encoding and decoding of CBOR between bytes and a CBOR variant type
📦[candid](https://mops.one/candid) is a library that enables encoding/decoding of bytes to candid values.
📦[serde](https://mops.one/serde) is serialization and deserialization library for Motoko.
📦[itertools](https://mops.one/itertools)  is a library with utility functions and data types for creating efficient iterators in Motoko.
📦[xtended-numbers](https://mops.one/xtended-numbers)  is a library that extends on the Motoko base library for numbers. Maily focuses on encoding of numbers and 16/32 bit precision floats.

-------------------------

ZenVoich | 2023-04-06 07:41:44 UTC | #18

# New features in Mops


## Dev dependencies
Dev dependencies are not installed when someone installs your package.
Useful when you use some packages for testing only.

Example:
```shell
mops add test --dev
```
or in `mops.toml`
```
[dev-dependencies]
test = "1.0.0"
```


## New command `"mops test"`
Mops can run tests now.
More information https://forum.dfinity.org/t/motoko-unit-testing-with-mops/18510


## New command `"mops template"`
You can set up a GitHub workflow to run Motoko tests with just one command!

![image|634x72](upload://6NQQRP9xJkPyuCINVKXor0ghryT.png)


## Syntax highlighting

[mops.one](https://t.co/KBKR3ZoNDD) now has syntax highlighting on the package page!

## Package download trend
![image|501x126](upload://utkHmFnHiYrTMpWBp7Qg6to9L9D.png)


## Package Version History

Click on a version to view information about a specific version.

![image|580x499, 75%](upload://sKH9DKwR5gKVH2UiB46C3wfTt5k.jpeg)


## Package Dependencies
![image|690x490, 75%](upload://epQfQZfM88eFgAAuLlvh7RNJB0C.jpeg)


## Package Dependents
![image|670x500, 75%](upload://9TUa2D7t70AnnqMgMtQikVuntTR.jpeg)


# New packages published on mops
- [fuzz](https://mops.one/fuzz) - Motoko fuzzing library
- [maf](https://mops.one/maf) - Motoko async data deliveries
- [test](https://mops.one/test) - Motoko testing library to run tests with mops
- [sha3](https://mops.one/sha3) - Motoko Sha3/Keccak library
- [xml](https://mops.one/xml) - A library for encoding and decoding XML
- [bitbuffer](https://mops.one/bitbuffer) - A buffer for bit level and byte level manipulation
- [buffer-deque](https://mops.one/buffer-deque) - A Buffer with the functionality of a Deque for efficient insertion and deletion at both ends.
- [ic-certification](https://mops.one/ic-certification) - Certification and Canister Signatures
- [map](https://mops.one/map) - Stable hash maps for Motoko
- [merkle-patricia-trie](https://mops.one/merkle-patricia-trie) - A Merkle Patricia Trie implementation following the Ethereum specification

-------------------------

timo | 2023-05-08 20:05:22 UTC | #19

Does `mops install` do a replicated query or a normal query to download the code?

-------------------------

ZenVoich | 2023-05-09 06:54:34 UTC | #20

normal non-replicated query

-------------------------

timo | 2023-05-09 12:13:30 UTC | #21

Do we then need to include package hashes into mops to defend against malicious nodes? 

The mops canister could compute a hash of each released version and make it available through a replicated query. The local mops binary could then continue to retrieve the code through a non-replicated query and compare its hash against the hash retrieved by a replicated query.

-------------------------

Severin | 2023-05-09 12:18:58 UTC | #22

Assuming MOPS uses the default asset canister to host the packages then this verification is almost-free. The asset canister adds certification, but the receiving side has to do the checking. @NathanosDev would be the right person to talk to for this @ZenVoich

-------------------------

NathanosDev | 2023-05-09 12:34:36 UTC | #23

Unfortunately it looks like the backend is completely custom, so a custom certification would need to be added.

@timo's solution to use a replicated query to retrieve the package metadata and then use this to secure the query call that retrieves the actual package is interesting, but if the hash of each package is already calculated then you can save the extra replicated query call by putting it into a merkle tree using the [ic-certification](https://mops.one/ic-certification) package and then setting the root hash as the canisters [certified data](https://internetcomputer.org/docs/current/references/ic-interface-spec/#system-api-certified-data).

But then, as @severin mentioned the certification needs to be verified on the client side. Since the CLI is written in JavaScript, it can follow a similar approach to what the Service Worker used to do: https://github.com/dfinity/ic/blob/80951dd80ab036ae595012142556b37bb7dfabe7/typescript/service-worker/src/sw/validation.ts

-------------------------

ZenVoich | 2023-05-10 06:15:14 UTC | #24

Basically a package is downloaded only once to the global cache and then installed from there.

What if you get the hash of the package via a replicated query call, save it locally, and use the cli to check the hash of local files without using certified data?

If the package files and hashes are cached, then there is no need to make any requests to the canister.

-------------------------

timo | 2023-05-10 08:04:29 UTC | #25

What does "global cache" mean and where is it located on the filesystem?

-------------------------

ZenVoich | 2023-05-10 08:17:44 UTC | #26

Now it is `~/mops`, will be changed to `~/.cache/mops` in the future

-------------------------

NathanosDev | 2023-05-10 08:33:09 UTC | #27

This sounds good to me since the number of replicated queries will be low

-------------------------

timo | 2023-05-10 09:04:52 UTC | #28

[quote="ZenVoich, post:26, topic:17275, full:true"]
Now it is `~/mops`, will be changed to `~/.cache/mops` in the future
[/quote]

Thanks, I was looking for this. Currently, if you have a package `github_X@main` then mops doesn't detect new commits to that branch. Now I know which cache to delete because deleting `.mops/_github/X@main` in the project directory wasn't enough.

-------------------------

ZenVoich | 2023-05-10 09:18:07 UTC | #29

Also you can use `mops cache clean`

-------------------------

timo | 2023-05-16 07:51:42 UTC | #30

How do you count the number of downloads?

-------------------------

ZenVoich | 2023-05-16 12:29:18 UTC | #31

CLI notifies canister every time a package is installed(when there is no package cache in `.mops` directory)

-------------------------

timo | 2023-05-16 14:24:44 UTC | #32

So a CI workflow run will then most likely increase it.

-------------------------

ZenVoich | 2023-06-01 10:35:33 UTC | #33

# Anniversary update! 🎉
I started developing mops at the SUPERNOVA hackathon 1 year ago.
Since then there have been **49** packages published and **12k** downloads. I would like to thank everyone who uses mops and those who publish their packages on mops. For package authors, even more than thanks - read to the end ;)

Don't forget to update mops cli to get new features:

```
npm i ic-mops -g
```

## New command `"mops remove <pkg>"`
New cli command to remove package from `mops.toml` and cached files from `.mops` folder.

## User profile

Use `mops user set name <username>` to set your username (also github/twitter)

Example:
```
mops user set name zen
mops user set github ZenVoich
mops user set twitter mops_one
```

How it looks on the site:
![image|437x155, 50%](upload://a6QC5GtfdaruvFdkI5salnDlZLH.png)

Click on user name to search all user packages:
![image|580x500, 75%](upload://jannHfT0xabJhFFWQlBwll7qL6G.png)

## Private key encryption
Now you can encrypt the private key imported from dfx with a password.
If you have already imported the private key, you will need to re-import it in order to encrypt it.

## Package documentation

No extra steps required, just publish your package and the documentation will be generated and published as well.

![image|604x499](upload://gzC6pxA5v65wZccV2AkD6hmbXDt.png)


## New packages published on mops
- [certified-cache](https://mops.one/certified-cache) - A single interface that stores key-value pairs and certifies their hashes for use as certified variables or assets.
- [server](https://mops.one/server) - An express-like server for Motoko
- [star](https://mops.one/star) - A Motoko library for handling asynchronous and trappable behavior with the async* functions.
- [linked-list](https://mops.one/linked-list) - a doubly linked list with functions for node level access
- [assets](https://mops.one/assets) - Asset canister functionality for your canister
- [libsecp256k1](https://mops.one/libsecp256k1) - Motoko port of libsecp256k1
- [evm-txs](https://mops.one/evm-txs) - EVM transaction creation, encoding, and decoding in pure Motoko
- [vector](https://mops.one/vector) - Memory-efficient resizable array (replaces Buffer)
- [candy](https://mops.one/candy) - Library for Converting Types and Creating Workable Motoko Collections
- [kyc](https://mops.one/kyc) - library provides a client for interacting with icrc-17 kyc servers
- [origyn-nft](https://mops.one/origyn-nft) - The reference implementation for the ORIGYN NFT
- [prng](https://mops.one/prng) - Statistical pseudo-random number generators
- [ckbtc-types](https://mops.one/ckbtc-types) - Types and interfaces for interacting with ckBTC canisters(minter, ledger, index, archive)
- [stableheapbtreemap](https://mops.one/stableheapbtreemap) - An imperative BTreeMap that can persist across upgrades via a stable variable in heap memory
- [enumeration](https://mops.one/enumeration) - Add-only set of keys with numbering and two-way lookup.
- [splay](https://mops.one/splay) - Splay tree library


## Cycles Airdrop! 🛩️

Everyone who has published a package on mops is eligible to claim `15 TC` + `1 TC` for each published package!

A total of `~430 TC` will be distributed.

Snapshot was taken yesterday (31.05.2023). You must claim your airdrop within a month.

Check how many cycles you can get
```
mops airdrop check
```

Claim (cycles will be sent to specified canister)
```
mops airdrop claim <canister-id>
```

-------------------------

timo | 2023-07-05 11:29:04 UTC | #34

Does `mops install` pull in dependencies recursively?

-------------------------

ZenVoich | 2023-07-05 11:51:28 UTC | #35

Yes, it installs all transitive dependencies

-------------------------

timo | 2023-07-05 11:59:53 UTC | #36

Also through https/github links?

-------------------------

ZenVoich | 2023-07-05 12:05:53 UTC | #37

Yes, github dependencies too

-------------------------

ZenVoich | 2023-08-24 12:24:25 UTC | #38

# Update

## `mops init` prompt

`mops init` will ask you for package details and initialize the default package files(license, test, readme, .gitignore, github workflow)

![image|690x252, 75%](upload://bQAm0Exmcz7oIsNnZNYScAxcJ1S.png)

![image|690x409, 50%](upload://3QtwTbxqNwRVTb6Tey8BQ2UdWZk.png)

## New command - `mops bump`

New command helps you to bump your package version(updates `version = "x.x.x"` in mops.toml)

`mops bump major` - bump major part of version (**X**.y.z)
`mops bump minor` - bump minor part of version (x.**Y**.z)
`mops bump patch` - bump patch part of version (x.y.**Z**)

Running without the argument `mops bump` will show prompt:
![image|678x157](upload://hRdbfzsiSUMByZb9EfiMmxD3sRJ.png)

-------------------------

ZenVoich | 2023-08-31 07:43:11 UTC | #39

# Update

## 🆕 Package categories

Improved discoverability of Motoko packages on https://mops.one

![image|593x499](upload://rCLCwfhYlQ2tVIdAHIOO0epNbWf.png)


## 🆕 Package test stats
Package tests will be run on publish and attached to the package version

![image|592x500](upload://dz0dV8NrKY4J1peUbxxPHvdnr2T.png)

## 🆕 Package file stats
For newly published packages the total package size and number of files are displayed.

![image|690x306, 75%](upload://8AVfyrd43zD0ix27NOYgfTHfR3J.png)


## 🆕 New command - `mops outdated`

```
mops outdated
```

Outputs available dependency updates:
![image|341x144, 75%](upload://8M4r1b4Br7FI9Wp1GnfvsBpMwM2.png)

## 🆕 New command - `mops update`

Update all dependencies:
```sh
mops update
```

Update only a specific dependency:
```sh
mops update vector
```

## 🆕 New command - `mops sync`

Analyzes source code and:
- adds/installs missing packages that are used in the source code but are not listed in `mops.toml`
- removes unused packages listed in `mops.toml` but not imported in the source code

```shell
mops sync
```
![image|417x119](upload://aDxpYd0SozYIoMQwOw7Yqf0y3no.png)


## 📦 New packages published on mops
- [sha2](https://mops.one/sha2) - Optimized implementation of all SHA2 functions
- [rxmo](https://mops.one/rxmo) - RxMO is a library for reactive programming using Observables, to make it easier to compose asynchronous or callback-based code.
- [rxmodb](https://mops.one/rxmodb) - RxMoDb is a Motoko Database using Vector for its main storage and BTree for indexes.
- [swb](https://mops.one/swb) - Sliding window buffer with random access
- [deflate](https://mops.one/deflate) - Deflate compression and decompression algorithm with support for the GZIP file format
- [certified-http](https://mops.one/certified-http) - A single interface that stores key-value pairs and certifies their hashes for use as certified variables or assets.
- [candb](https://mops.one/candb) - candb is a flexible, performant, and horizontally scalable non-relational multi-canister data store built for the Internet Computer.
- [web-io](https://web-io) - set of modules for creating http requests and handling responses.
- [http-types](https://http-types) - Canister HTTP interface types used in `http_request` and `http_request_update`
- [backup](https://backup) - On-chain backup/restore system
- [rbac-motoko](https://rbac-motoko) - Role-Based Authentication Class
- [datetime](https://datetime) - A library for DateTime values and manipulation in Motoko
- [motoko-certified-assets](https://motoko-certified-assets) - Certified assets on Internet Computer

-------------------------

timo | 2023-09-17 19:29:27 UTC | #40

Is there (or should there be) a way to specify in mops.toml the minimal compiler version that a package requires?

-------------------------

ZenVoich | 2023-09-18 05:39:21 UTC | #41

Currently, there is no such feature, but would be nice to have. I will think about it!

-------------------------

timo | 2023-09-19 09:29:05 UTC | #42

Another question about dependencies. When I write in `mops.toml` for example
```
[dependencies]
base = "0.9.7"
```
and run `mops i` then that will download exactly that version (0.9.7) even if I already have a newer version (say 0.9.8) installed.

Now I am wondering what happens if I have a project that depends on two packages, A and B, both of which in turn depend on base but on different versions. Say A depends on 0.9.7 and B on 0.9.8. When I build this project then both base versions get installed and used. Does that increase the binary size because two copies of the same library get compiled into the wasm?

-------------------------

ZenVoich | 2023-09-19 10:18:16 UTC | #43

[quote="timo, post:42, topic:17275"]
Does that increase the binary size because two copies of the same library get compiled into the wasm?
[/quote]

No, there can be only one package resolved to specific name. So `base` will be resolved to `0.9.7`, you can run `mops sources` and see which package will actually be used in the build.

[quote="timo, post:42, topic:17275"]
both base versions get installed and used
[/quote]

both will be _downloaded_ but only one of them will be _used_. Probably I will move downloading and resolution out of local `.mops` cache dir to global cache dir, so `.mops` folder will remain simple.

-------------------------

infu | 2023-09-19 10:36:35 UTC | #44

[quote="ZenVoich, post:43, topic:17275"]
No, there can be only one package resolved to specific name.
[/quote]

That's strange. I made a tool two months ago that imports files based on their content hashes and it reduced the compiled binary with 20-30kb

-------------------------

ZenVoich | 2023-09-20 10:55:05 UTC | #45

## Update

## 🐌🚀 Reducing mops.one load time
Thanks to certification v2 and more aggresive caching, https://mops.one now loads much faster.

## 🆕 Package changelog

On package "Versions" tab now you can see what changed in each package version including:
1. Release notes from CHANGELOG.md
2. Dependencies changes
3. Tests changes

Dependency and test changes computed automatically.
Release notes parsed on `mops publish` from `CHANGELOG.md` file from packge version paragraph

For example `CHANGELOG.md`
```markdown
# Motoko compiler changelog

## 0.10.0 (2023-09-11)

* Added a new stable `Region` type of dynamically allocated, independently growable and
    isolated regions of IC stable memory (#580). See documentation.

* Exposed conversions between adjacent fixed-width types (#585).

## 0.9.8 (2023-08-11)

* motoko (`moc`)

  * Added numerical type conversions between adjacent fixed-width types (#4139).

  * Administrative: legacy-named release artefacts are no longer created (#4111).
...
```

When publishing package version `0.10.0`, mops will:
1. parse `CHANGELOG.md`
2. find header with our package version -> ## **0.10.0** (2023-09-11)
3. publish whole paragraph:
```
* Added a new stable `Region` type of dynamically allocated, independently growable and
    isolated regions of IC stable memory (#580). See documentation.

* Exposed conversions between adjacent fixed-width types (#585).
```

How it looks like:
![image|467x500, 100%](upload://6VlEZHEVOWosTtivOX0Ycmd6Evt.png)

## 🆕 Integration with VSCode Motoko extension

Added new command "Motoko: Import Mops Package...".

1. Hit `Ctrl+Shift+P` then type `mops` to find the command

2. Select "Import Mops Package..."

![image|690x120](upload://iJ1IBDPET1V3FVBmZFUzsmtk3kT.png)

3. Search for Motoko package

![image|690x223](upload://yHSlZCTSRdlsZwePqAlV2gdXD4b.png)

4. Select package and press `Enter`

The package will be installed and saved to the `mops.toml` file, then the package import line will be added to the currently open `*.mo` file.

-------------------------

ZhenyaUsenko | 2023-10-03 10:13:03 UTC | #46

Looks like README header links are not working properly (redirect to the Github not found page)

![image|690x390](upload://nW6wLf5NdEb7AfJWvp0PmPg9Q60.png)

Also, is there a way to fetch release notes from Github in addition to parsing CHANGELOG?

-------------------------

ZenVoich | 2023-10-03 10:37:08 UTC | #47

[quote="ZhenyaUsenko, post:46, topic:17275"]
Looks like README header links are not working properly (redirect to the Github not found page)
[/quote]

Thanks for the report, will be fixing that

[quote="ZhenyaUsenko, post:46, topic:17275"]
Also, is there a way to fetch release notes from Github in addition to parsing CHANGELOG?
[/quote]

I think it's feasible, I'll add it to the backlog 👍

-------------------------

ZenVoich | 2023-10-05 05:58:49 UTC | #48

- Fixed anchor links
- Replaced the markdown library with a faster one, opening [https://mops.one/map](https://mops.one/map) 4s -> 0.3s
- On package publish, if there are no CHANGELOG.md file, mops will fetch release notes from GitHub releases (mops cli 0.28.0)

-------------------------

ZhenyaUsenko | 2023-10-05 06:48:50 UTC | #49

That was quick! Thanks.

[quote="ZenVoich, post:48, topic:17275"]
if there are no CHANGELOG.md file, mops will fetch release notes from GitHub releases
[/quote]

So this will only affect new publications, existing versions won't receive release notes, will they?

-------------------------

ZenVoich | 2023-10-05 10:19:14 UTC | #50

[quote="ZhenyaUsenko, post:49, topic:17275"]
So this will only affect new publications, existing versions won’t receive release notes, will they?
[/quote]

Yes, new publications only, also you need to update mops cli to version `0.28.0`

-------------------------

ZenVoich | 2023-10-13 12:33:03 UTC | #51

## 🆕 Package badges

Now you can add mops badges to your package!

1. Click on the "Badges" button on the right panel of your package page

![image|493x500, 75%](upload://n7LmTAenFptnZJVHZhQ9XrNAtMx.png)

2. Copy the badge code in markdown format and add it to your `README.md` file

![image|690x389, 75%](upload://ghu7lCXA3Ii7Z862i2YStrVqwOT.png)

3. Success!

![image|577x500, 100%](upload://olUKxwBpjvT7g2QwtsyASXyqSny.png)

-------------------------

ilbert | 2023-10-18 11:15:20 UTC | #52

Hello @ZenVoich, I'm trying to publish the [IC WebSocket Motoko CDK](https://github.com/omnia-network/ic-websocket-cdk-mo) on mops from a GitHub action for the first time, but I'm getting a weird error:
```bash
Uploading files [:         ]
Error: Unauthorized
```

You can see the detailed logs at: https://github.com/omnia-network/ic-websocket-cdk-mo/actions/runs/6560001054/job/17816739459.

What am I missing?

-------------------------

ZenVoich | 2023-10-18 13:56:17 UTC | #53

Hi @ilbert

I suspect that in GitHub action `mops import-identity` does not complete because it asks for a password to encrypt identity.

I just added `--no-encrypt` flag to `mops import-identity` command. Please try this:
```sh
mops import-identity --no-encrypt -- "$(dfx identity export ...
```

-------------------------

ilbert | 2023-10-18 17:38:38 UTC | #54

:tada: It works perfectly, see:
https://github.com/omnia-network/ic-websocket-cdk-mo/actions/runs/6564513079/job/17831021480

@ZenVoich thanks a lot!

-------------------------

ilbert | 2023-10-26 18:18:25 UTC | #55

@ZenVoich I'm now getting an error when I try to run `mops publish` (including docs generation) in the same GitHub Action:
```bash
 dfx identity use action
  mops import-identity --no-encrypt -- "$(dfx identity export action)"
  mops publish
  echo "version=$(cat mops.toml | grep "version =" | cut -d\" -f2)" >> "$GITHUB_OUTPUT"
  shell: /usr/bin/bash -e {0}
  env:
    DFX_TELEMETRY_DISABLED: 1
    CARGO_REGISTRY_TOKEN: 
Using identity: "action".
Success
hurtj-3s4qx-bdvzf-7gsd4-6e4ts-2qiog-wpenq-uvw4x-tehho-2y3y3-sae
Publishing ic-websocket-cdk@0.2.0
Generating documentation...
node:events:495
      throw er; // Unhandled 'error' event
      ^

Error: spawn /home/runner/.cache/dfinity/versions/0.14.1/mo-doc ENOENT
    at ChildProcess._handle.onexit (node:internal/child_process:284:19)
    at onErrorNT (node:internal/child_process:477:16)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
Emitted 'error' event on ChildProcess instance at:
    at ChildProcess._handle.onexit (node:internal/child_process:290:12)
    at onErrorNT (node:internal/child_process:477:16)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  errno: -2,
  code: 'ENOENT',
  syscall: 'spawn /home/runner/.cache/dfinity/versions/0.14.1/mo-doc',
  path: '/home/runner/.cache/dfinity/versions/0.14.1/mo-doc',
  spawnargs: [
    '--source=/home/runner/work/ic-websocket-cdk-mo/ic-websocket-cdk-mo/src',
    '--output=.mops/.docs',
    '--format=adoc'
  ]
}

Node.js v18.18.2
Error: Process completed with exit code 1.
```
Run that failed: https://github.com/omnia-network/ic-websocket-cdk-mo/actions/runs/6657663768/job/18092835153.

If I run the command with `--no-docs`, it works.

Locally, it works with docs included.

-------------------------

ZenVoich | 2023-10-27 05:28:27 UTC | #56

Not sure why `mo-doc` from dfx is not there.
You can add this line before publish:
```yaml
      - name: install moc
        run: npx mocv use latest
```
This will install the latest `moc` and `mo-doc` so mops can use them.

-------------------------

ilbert | 2023-10-27 07:58:06 UTC | #57

I installed mocv in the same script of mops:
https://github.com/omnia-network/ic-websocket-cdk-mo/blob/faec1af65f759256f59d3fd64fdad45bbf8b5d9b/.github/workflows/release.yml#L33

But I keep getting the error, and I think that's because the script is looking for `mo-docs` at `/home/runner/.cache/dfinity/versions/0.14.1/mo-doc` path:
```
Error: spawn /home/runner/.cache/dfinity/versions/0.14.1/mo-doc ENOENT
```

-------------------------

ZenVoich | 2023-10-27 08:09:36 UTC | #58

[quote="ilbert, post:57, topic:17275"]
I installed mocv in the same script of mops:
[/quote]

You also need to run `mocv use latest` to take effect

```sh
npm i mocv -g
mocv use latest
```
or
```sh
npx mocv use latest
```

-------------------------

ilbert | 2023-10-27 08:46:51 UTC | #59

It worked now! Thanks a lot again ;)

-------------------------

skilesare | 2023-10-27 13:26:38 UTC | #60

HatTip to @ZenVoich who has provided amazing support for MOPS!

-------------------------

ilbert | 2023-10-29 15:16:28 UTC | #61

Is there a way to [unpublish](https://docs.npmjs.com/unpublishing-packages-from-the-registry) or [yank](https://doc.rust-lang.org/cargo/reference/publishing.html#cargo-yank) a specific version of the package from mops?

-------------------------

ZenVoich | 2023-10-29 15:47:29 UTC | #62

There is no such functionality yet, but I think it will be implemented in the future

-------------------------

ZenVoich | 2023-11-01 10:17:36 UTC | #63

## Update

## Transfer ownership

New command `mops transfer-ownership <principal>` will transfer ownership of the current package to the specified principal. After transfer you will no longer be able to publish this package.

##  GitHub dependency commit hash

Now when you add github package by `mops add https://github/...` mops will add commit hash to the package url. This will provide sustainable and reproducible builds, so new commits to a branch will not break your code.

How it looks like `<url>#<branch_or_tag>@<commit_hash>`

Also you can update commit hash to the latest with `mops update <package_name>`

## Mops Documentation

New Mops documentation site: https://docs.mops.one/

## 🚀 Benchmarking tool

Now Mops includes benchmarking tool `mops bench`.

Learn more here [https://docs.mops.one/cli/mops-bench](https://docs.mops.one/cli/mops-bench)
and here [https://mops.one/bench](https://mops.one/bench)

## :package: New packages published on mops

- [evm-proof-verifier](https://mops.one/evm-proof-verifier) - EVM Proof Verifier in Motoko
- [memory-region](https://mops.one/memory-region) - An abstraction over the Region type that supports reusing deallocated memory.
- [ic-websocket-cdk](https://mops.one/ic-websocket-cdk) - the Motoko implementation of IC WebSocket CDK
- [memory-buffer](https://mops.one/memory-buffer) - A persistent buffer implementation in motoko.

-------------------------

ilbert | 2023-11-02 08:16:31 UTC | #64

Would it be possible to delete a package and republish it with the **same name** and the **same versions** except last with the same identity?

-------------------------

ZenVoich | 2023-11-02 13:36:16 UTC | #65

I think it should not be possible to republish a deleted package. What case are you thinking about?

-------------------------

ilbert | 2023-11-02 13:39:42 UTC | #66

[quote="ilbert, post:61, topic:17275, full:true"]
Is there a way to [unpublish](https://docs.npmjs.com/unpublishing-packages-from-the-registry) or [yank](https://doc.rust-lang.org/cargo/reference/publishing.html#cargo-yank) a specific version of the package from mops?
[/quote]
In order to remove the version that I don't want to be public anymore, I could remove the whole package and republish it with all the previous versions except the version that I wanted to remove. But that's not possible as far as I understand.

-------------------------

ilbert | 2023-11-17 16:02:53 UTC | #67

@ZenVoich this class' description should appear as a bullet points list, but it's rendered as plain text. Should I use `*` for the bullets instead?
![docs screenshot|690x263](upload://z5ju1mSBG6nadWiUiMtCFdIFd4l.png)
*Screenshot source: [https://mops.one/ic-websocket-cdk/docs/lib#type.WsInitParams](https://mops.one/ic-websocket-cdk/docs/lib#type.WsInitParams).*

Source code reference:
https://github.com/omnia-network/ic-websocket-cdk-mo/blob/0ca6e28187f622898f98b472ac139985ee2c38ee/src/lib.mo#L1178-L1183

-------------------------

ilbert | 2023-11-17 17:21:26 UTC | #68

Also, is there a way to reference other functions by name in the docs? Something like https://doc.rust-lang.org/rustdoc/write-documentation/linking-to-items-by-name.html.

I know it may not be the right thread to ask these things...

-------------------------

ZenVoich | 2023-11-18 06:34:44 UTC | #69

[quote="ilbert, post:67, topic:17275"]
this class’ description should appear as a bullet points list, but it’s rendered as plain text. Should I use `*` for the bullets instead?
[/quote]

Yes, I think * should work. I see `base` package uses it

[quote="ilbert, post:68, topic:17275"]
Also, is there a way to reference other functions by name in the docs?
[/quote]

Not sure if `mo-doc` supports this - https://github.com/dfinity/motoko/issues/2352
Also related https://github.com/dfinity/motoko/issues/2350

-------------------------

ilbert | 2023-11-18 09:22:26 UTC | #70

[quote="ZenVoich, post:69, topic:17275"]
Yes, I think * should work. I see `base` package uses it
[/quote]

I see the base package uses `-` for bullet points, e.g. in:
https://github.com/dfinity/motoko-base/blob/3d0bcedbdaef7b83bb75e291f9c61be6205933b4/src/Random.mo#L10-L16

So I might just need to add an empty line before the list.

-------------------------

ZenVoich | 2023-12-26 08:38:46 UTC | #71

# Update

## 🚀 Toolchain Management

![image|268x136](upload://62NSh5OCm0yq2hYJiYFpoOu8ZVa.png)

Now you can specify moc/wasmtime/pocket-ic version for each project!

Initialize moc version management(run once):
```
mops toolchain init
```

Install specific `moc` version:
```
mops toolchain use moc 0.10.3
```

Update `moc` to the latest version:
```
mops toolchain update moc
```

Update all tools:
```
mops toolchain update
```

Lear more: https://docs.mops.one/cli/toolchain

## ⬆️ Tests page update

Tests tab on mops.one now supports nested tests.

Click on `[source]` link will open test source file on GitHub.

![image|550x485, 50%](upload://cYzOEQTfKqZkupOvteWuEzRB61B.png)

## ⬆️ Bench updates

- Added support for `pocket-ic` replica via `--replica pocket-ic` flag.
```
mops bench --replica pocket-ic
```

- The default garbage collector is now `--copying-gc` (was `--incremental-gc`)

- Colorized output for `mops bench --compare`

![image|690x238](upload://2MMVEfCL8nR6YVkc1pHZx3T4ghC.png)

## 🆕 Lockfile support

`mops.lock` is used to ensure integrity of dependencies, so that you can be sure that all dependencies have exactly the same source code as they had when the package author published them to the Mops Registry.

Learn more: https://docs.mops.one/mops.lock

## 📦 New packages in the mops registry
- [promtracker](https://mops.one/promtracker) - Motoko value tracker for prometheus
- [xrc-types](https://mops.one/xrc-types) - Exchange Rate Canister interface
- [account](https://mops.one/account) - A Motoko implementation of ICRC-1 and ICRC-7 Accounts
- [rep-indy-hash](https://mops.one/rep-indy-hash) - Representationally Independent Hash for motoko
- [icrc1-mo](https://mops.one/icrc1-mo) - icrc1 for motoko
- [icrc3-mo](https://mops.one/icrc3-mo) - icrc3 for motoko
- [icrc7-mo](https://mops.one/icrc7-mo) - icrc7 for motoko
- [icrc30-mo](https://mops.one/icrc30-mo) - icrc30 for motoko
- [augmented-btrees](https://mops.one/augmented-btrees) - Contains implementations of BTree variants, most notable the B+Tree

-------------------------

ZenVoich | 2024-02-01 06:38:01 UTC | #72

# Mops Update

## Package Code Explorer

Now you can see the actual source of the package published on mops registry!

![image|690x366](upload://2fksEB4h7PxnIVZuqgYuX7fY91.png)

For example base package source code: [https://mops.one/base/code](https://mops.one/base/code)

There is a new `[source]` links in the package documentation, click on it to jump to the source code of that class/function/variable/type.
![image|690x285, 75%](upload://byt5JwXDUpQETkPh34claOAqCFB.png)

## Local package's transitive dependencies

Mops now resolves nested dependencies for local packages too.

## Package Repository Verification

When publishing a package to the Mops Registry, mops canister will check if the package repository actually has a `mops.toml` file with specified package name. Therefore, it is no longer possible to publish other people's packages with a link to the original repository.

## GitHub action `setup-mops` 

https://github.com/ZenVoich/setup-mops

Super easy way to use mops in your GitHub actions, just add one step:
```
- uses: ZenVoich/setup-mops@v1
```

This also will cache mops packages, so subsequent actions are faster and prevent from http errors when you run a lot of concurrent actions.

Also you can use this action to publish a packge on mops, see example https://github.com/ZenVoich/setup-mops?tab=readme-ov-file#publish-a-package
or run `mops template` and select "GitHub Workflow to publish a package"
![image|637x249](upload://pA7OHuYHShTOeC5Po3Hs5rqd0NI.png)

-------------------------

ZenVoich | 2024-04-06 05:54:52 UTC | #73

# Mops Update

## Package benchmark results on mops.one

On `mops publish` package benchmarks are run and published with package.

You can see benchmark results on "Benchmarks" tab
![image|690x298, 100%](upload://mBhzoDgDoF1PdNu75KlFRfbsR5g.png)

Also you can see the difference in results between two versions in "Versions" tab

![image|597x500](upload://moaN3RCrjOiJdcRUvxcP4TJc8b1.png)

## Keep clean `.mops` folder

Now on `mops install` no intermediate packages installed in `.mops` directory, only final resolved versions of packages.

## Mops CLI on-chain

Now mops cli builds are distributed via on-chain storage!

Check out https://cli.mops.one

To install from on-chain storage use this command:
```
curl -fsSL cli.mops.one/install.sh | sh
```

## New command `mops self update`
Docs https://docs.mops.one/cli/mops-self-update

Use `mops self update` to update mops cli to the latest version (available since `0.41.0`)

## Package requirements
Docs https://docs.mops.one/mops.toml#requirements

Now packages can specify which `moc` version is required for this package.

Example mops.toml:
```
...
[requirements]
moc = "0.11.0"
```

The package requirements will be show on the package page:
![image|600x230, 50%](upload://fUDWjzJ42LIW6xei0is6CHmqApt.png)

When a user installs your package(as a transitive dependency too), Mops will check if the requirements are met and display a warning if they are not.

![image|690x69, 75%](upload://4C9a4qz6MFhO0Y9PBA74EWRQpD3.png)

-------------------------

timo | 2024-04-07 12:14:36 UTC | #74

Thanks  for the updates.

Some questions:

[quote="ZenVoich, post:73, topic:17275"]
Now mops cli builds are distributed via on-chain storage!
[/quote]

Does `ZenVoich/setup-mops@v1.2.0` use the on-chain version or something else? Shall we use `curl -fsSL cli.mops.one/install.sh | sh` in CI?

[quote="ZenVoich, post:73, topic:17275"]
Now packages can specify which `moc` version is required for this package.
[/quote]

Is it recommended to put in the `[requirements]` section the lowest `moc` version number that works? For the `[dependencies]` section my mental note was to put the highest version number. But here it's the lowest, or?

-------------------------

ZenVoich | 2024-04-08 10:32:13 UTC | #75

[quote="timo, post:74, topic:17275"]
Does `ZenVoich/setup-mops@v1.2.0` use the on-chain version or something else? Shall we use `curl -fsSL cli.mops.one/install.sh | sh` in CI?
[/quote]

At the moment it uses npm registry. Later I think I will change it to on-chain... 

Also I still continue publishing new releases to npm registry too. So no need to change CI scripts

-------------------------

ZenVoich | 2024-04-08 10:37:04 UTC | #76

[quote="timo, post:74, topic:17275"]
Is it recommended to put in the `[requirements]` section the lowest `moc` version number that works?
[/quote]

Yes. For example, if you are sure that moc version lower than 0.10.0 will not work with your package, set it to 0.10.0 (even if there are newer versions available)

-------------------------

timo | 2024-04-08 11:20:46 UTC | #77

Got it. Thanks. Just noting that this requirement could be introduced by the dependencies I use. Say for example my code works with any `base` dependency >= 0.9.0. Then I put
```
[dependency]
base  = "0.11.1"

[requirements]
moc = "0.10.0"
```
in mops.toml because `0.11.1` is the most recent base version. But it is `base 0.11.1` that has the `moc >= 0.10.0` requirement, not my code. My code may actually work with base 0.9.8 in which case I can make it
```
[dependency]
base  = "0.9.8"

[requirements]
moc = "0.9.0"
```
I guess the first version is still better even though it does not lead to the minimal moc version.

-------------------------

ZenVoich | 2024-07-31 08:22:04 UTC | #78

Check out the new blog post with Mops updates!

https://blog.mops.one/2024-07-30-updates

- Common nav bar
- Mops CLI updates
- Dependency version pinning
- GitHub Action update
- Documentation updates
- GitHub dependency name restrictions

-------------------------

