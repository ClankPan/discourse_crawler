saikatdas0790 | 2022-09-12 16:51:49 UTC | #1

I want to use the `cfg!` [macro](https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg-macro) to conditionally inject values depending on whether I'm running on dev or mainnet.

I imagine using `cfg` would be the best way to do this as environment variables are not available for the `wasm32-unknown-unknown` target as far as I'm able to figure out trying out the `std::env::var` module.

What's the easiest way to execute conditional code depending on what environment canisters are being run on? Thoughts?

-------------------------

ericswanson | 2022-09-13 08:49:59 UTC | #2

You should be able to use the `env!` macro, which is evaluated at compile time.  The `DFX_NETWORK` environment variable will always be set, typically to either `local` or `ic`.

-------------------------

saikatdas0790 | 2022-09-13 10:18:05 UTC | #3

Thank you. Will try this and report findings.

-------------------------

AdamS | 2022-09-13 19:42:34 UTC | #4

If you would like to create a cfg that corresponds to this environment variable, you can use a build script that prints `cargo:rustc-cfg=mainnet` (or `cargo:rustc-cfg=network=ic`, or similar) if the environment variable is set to `ic`.

https://doc.rust-lang.org/cargo/reference/build-scripts.html

-------------------------

arifpateldpk | 2022-09-14 08:15:50 UTC | #5

NYC< Thanks We Will Try Thisss

-------------------------

saikatdas0790 | 2022-09-17 17:41:36 UTC | #6

Adding to this answer, using the `env!` macro will not work as that will lead to a compiler error as shown below

![image|450x115](upload://5NYiUQECcWS3az1i0h6R35Y0qvG.png)

You will need to use the `option_env!` macro for this to work. Like this

![image|450x56](upload://wQeMtRbo6fIBKlhW6rbkBbKBkos.png)

-------------------------

