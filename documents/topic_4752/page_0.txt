PaulLiu | 2021-06-04 01:19:13 UTC | #1

I wrote a small sample showing how one can accepts cycles donation from ICP users.

Demo: https://k25co-pqaaa-aaaab-aaakq-cai.ic0.app/

Code: https://github.com/ninegua/tipjar

It showcases that the frontend code is free to create any identities and call into the ledger canister.

The current limitation is that the canister itself has no idea of how many cycles it has received from the user. Although the frontend can perhaps calculate it, the backend canister still cannot verify such claims with a proof. So it is only suitable for accepting donations, not payments.

-------------------------

skilesare | 2021-06-04 01:47:01 UTC | #2

This is awesome! Can you walk us through the flow a bit?

It looks like you 

1. Create a new Identity and put it in web storage.
2.  Then if I send ICP to that account it will detect it and call topup with your tipjar ID as the recipient of the cycles
3. This sends the dfx to the minting canister with the top up memo
4. Then you notify the minting canister of your transaction with the tipjar canister as your to_subaccount
5. Cycle minting canister gives you the cycles.

Awesome example. It cleared some things up for me. I thought the to_canister was a principal and to_subAccount had to be a sub account of that canister. I wish they had chosen different words. It is kind of confusing.

-------------------------

PaulLiu | 2021-06-04 02:11:18 UTC | #3

Your reading is correct :slight_smile:

-------------------------

