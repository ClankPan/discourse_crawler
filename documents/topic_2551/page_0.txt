Gabriel | 2021-04-21 12:38:41 UTC | #1

Hi, 

It's been a while since I haven't used vessel but I tried it yesterday. 

So first point:
In order to install https://github.com/dfinity/vessel/releases the only guide is this `Download a copy of the `vessel` binary [from the release page](https://github.com/dfinity/vessel/releases) or build one yourself` which is a bit poor. 
So in order to get it I had to run: 

1) `wget https://github.com/dfinity/vessel/releases/download/v0.6.1/vessel-linux64`
2) `chmod +x vessel-linux64`
3) `./vessel-linux64`

Simple enough but it would be good to be in the README

Second point:  
I noticed the files from the release are not .dmg or .deb so you can't install them. so in order to run vessel you have to keep a copy in your project root

So if you have more projects you need to keep a copy in each one of them

And the last point: 
Previously I had a `package-set.json` and a `vessel.json` but it seems that's not working anymore and you need a `package-set.dhall` and a `vessel.dhall` now.

That's fine but I can't make it work so my package-set.dhall is 

![set|370x500](upload://zjI1dVjf3y79LtnEFp1Xsnrrg0J.png) 
and my `vessel.dhall` is 

`
{
  dependencies = [ "base", "matchers" ],
  compiler = None Text
}
` 
but I get this error: 

![err|690x382](upload://Asuz9XnlU3VFyj7bAvlxHASeTXG.png) 

any help is appreciated

-------------------------

Ori | 2021-04-21 15:48:11 UTC | #2

That might be coming from the motoko-matchers package, which has a package-set.dhall itself. This will have a `let upstream = ...` line at the top where you’ll see the hash it’s checking against.

Did you run vessel init to generate the package-set.dhall for your project first? This should include an upstream entry pointing at kritzcreek’s package set repo instead, try that version and/or working your way up from there.

@kritzcreek

-------------------------

Gabriel | 2021-04-21 18:40:50 UTC | #3

Yeah that's what I did, I didn't even changed the files generated by init. 
Note: I'm on dfx `0.7.0-beta.3` so they might not be compatible yet

-------------------------

Gabriel | 2021-05-15 19:39:28 UTC | #4

Seems like this has been fixed with this PR https://github.com/dfinity/vessel/issues/28
Thanks @kritzcreek

-------------------------

Nuno | 2021-09-03 18:32:56 UTC | #5

I've done the 3 steps you mention on the post but getting the error `zsh: command not found: vessel` I'm on a mac. Any ideas how to fix it?

-------------------------

Gabriel | 2021-09-06 14:42:38 UTC | #6

what PATH did you used?

-------------------------

Nuno | 2021-09-06 16:39:34 UTC | #7

:thinking: I must have used the default, which one should I use?

-------------------------

coin_master | 2021-09-07 05:16:51 UTC | #8

You can just add the PATH to the existing one, for example `.profile` or `.zshrc` if you are using zsh.

-------------------------

Gabriel | 2021-09-07 19:42:32 UTC | #9

. For linux use:`$HOME/bin`
For osx: usr/local/bin

-------------------------

karim | 2022-02-19 11:43:43 UTC | #10

Let me slide into this real quick: I'm trying to deploy CAP as per this documentation: https://docs.cap.ooo/integrate-cap/motoko-sdk/

Running the command `dfx deploy cap-motoko-example --argument "(opt \"<Router ID>\")"` I'm being prompted with `The build step failed for canister 'rrkah-fqaaa-aaaaa-aaaaq-cai' with an embedded error: Failed to invoke the package tool "vessel" "source"
 the error was: No such file or directory (os error 2)`. 

I have downloaded the vessel-linux64 binary and I'm on Arch Linux. Running ./vessel-linux64 as @Gabriel suggests, doesn't install the package manager as I'm used to. I don't have any experience installing executables on Linux but usually I just type ./EXECUTABLE-NAME and it will run an install script. This is the dfx.json for CAP:

[details="Zusammenfassung"]

```
{
  "canisters": {
    "cap-motoko-example": {
      "main": "src/main.mo",
      "type": "motoko"
    }
  },
  "defaults": {
    "build": {
      "args": "",
      "packtool": "vessel source"
    }
  },
  "dfx": "0.8.4",
  "networks": {
    "local": {
      "bind": "127.0.0.1:8000",
      "type": "ephemeral"
    }
  },
  "version": 1
}
```
[/details]

What am I missing? Could somebody help me out please?

-------------------------

cryptoschindler | 2022-02-20 12:52:42 UTC | #11

Maybe this helps:

Rename `vessel-linux64` to `vessel`, make sure it's executable (`chmod +x vessel`) and move it to `usr/local/bin`.

-------------------------

Gabriel | 2022-02-20 14:58:38 UTC | #12

Yeah it's a bit confusing, I've created a PR here but it hasn't been approved: 
https://github.com/dfinity/vessel/pull/29

1. For Ubuntu in `$HOME/bin` RUN `wget https://github.com/dfinity/vessel/releases/download/v0.6.1/vessel-linux64` For OSX in `usr/local/bin` RUN: `wget https://github.com/dfinity/vessel/releases/download/v0.6.1/vessel-macos`
2. Rename vessel-linux64 to vessel eg: RUN `mv vessel-linux64 vessel`
3. Change permissions, `chmod +x vessel`

-------------------------

