Gekctek | 2024-03-06 16:39:23 UTC | #1

Is there a good way to self reference the actor id during initialization of values?

```
shared actor class TeamActor() : async Types.TeamActor = this {

  stable let team = TeamState.TeamState(Principal.fromActor(this)); // Error: `cannot use this before this has been defined`

}
```

-------------------------

Chad1999 | 2024-03-06 17:24:25 UTC | #2

Check your message for help

-------------------------

Gekctek | 2024-03-06 18:21:14 UTC | #3

My error message? Not sure if i understand

-------------------------

claudio | 2024-03-08 12:32:43 UTC | #4

[quote="Gekctek, post:1, topic:28172"]
`// Error: `cannot use this before this has been defined``
[/quote]

This is an annoying restriction. We are trying to lift it but for the moment, your best bet, if you can make it work, is to pass the principal in as an argument to the class, or lazily initialize it from a shared function, where this is considered `defined`.

Related issues:

https://github.com/dfinity/motoko/issues/4384
https://github.com/dfinity/motoko/issues/3718

-------------------------

claudio | 2024-03-08 23:14:58 UTC | #5



https://forum.dfinity.org/t/programmatic-import-in-motoko/7681/17?u=claudio links to an old PR that contains an example of doing this.

-------------------------

