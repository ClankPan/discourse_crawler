jamesbeadle | 2024-07-05 19:24:44 UTC | #1

Locally I'd like to list my proposals, which I can do:

```
async function listProposals(beforeProposal?: ProposalId) {
    const agent: any = await ActorFactory.getGovernanceAgent();
    if (process.env.DFX_NETWORK !== "ic") {
      await agent.fetchRootKey();
    }

    const principal: Principal = Principal.fromText(process.env.CANISTER_ID_SNS_GOVERNANCE ?? "");
    const { listProposals: governanceListProposals } = SnsGovernanceCanister.create({
      agent,
      canisterId: principal
    });

    const params: SnsListProposalsParams = {
      includeStatus: [selectedProposalStatus],
      limit: itemsPerPage,
      beforeProposal: beforeProposal,
      excludeType: getExcludedFunctionIds()
    };

    proposals = await governanceListProposals(params);
    console.log(proposals);
    filterProposals();
  }
```

provided I change this line:
 proposals = await governanceListProposals(params);
to 
 proposals = await governanceListProposals({certified: false});

How do I do the certified false and have the params?

-------------------------

peterparker | 2024-07-05 19:45:26 UTC | #2

You do not use TypeScript?

`certified` is part of the params for the function `listProposals`.

https://github.com/dfinity/ic-js/blob/941864ecb3d84561301cb1af7d1e36576407e4b2/packages/sns/src/types/governance.params.ts#L32

https://github.com/dfinity/ic-js/blob/941864ecb3d84561301cb1af7d1e36576407e4b2/packages/utils/src/types/query.params.ts#L4

-------------------------

peterparker | 2024-07-05 19:46:44 UTC | #3

To be fair the JSdocs of the function can be improved, agree.

https://github.com/dfinity/ic-js/blob/941864ecb3d84561301cb1af7d1e36576407e4b2/packages/sns/src/governance.canister.ts#L95

-------------------------

jamesbeadle | 2024-07-05 20:11:43 UTC | #4

Sorry mate, yeah I was using typescript but my problem was I just wasn't including all the statuses to actually show the proposals.

```

  let selectedProposalStatus = [0,1,2,3,4,5];

```

so i get them and am able to add certified false to the extended params

```


    const principal: Principal = Principal.fromText(process.env.CANISTER_ID_SNS_GOVERNANCE ?? "");
    const { listProposals: governanceListProposals } = SnsGovernanceCanister.create({
      agent,
      canisterId: principal
    });

    const params: SnsListProposalsParams = {
      includeStatus: selectedProposalStatus,
      limit: itemsPerPage,
      beforeProposal: beforeProposal,
      excludeType: getExcludedFunctionIds(),
      certified: false
    };

    proposals = await governanceListProposals(params);

```

-------------------------

