jorgenbuilder | 2022-01-16 00:01:04 UTC | #1

Call this one step in developing a Motoko language formatter / linter (not sure if there's active development on this elsewhere.) I find it useful to group imports hierarchically: base library imports -> third party imports -> project specific imports -> imports from the current module. Example:

```
// Before
import AccountIdentifier "mo:principal/AccountIdentifier";
import Array "mo:base/Array";
import Blob "mo:base/Blob";
import Buffer "mo:base/Buffer";
import Ext "mo:ext/Ext";
import HashMap "mo:base/HashMap";
import Iter "mo:base/Iter";
import Nat "mo:base/Nat";
import Nat32 "mo:base/Nat32";
import Prim "mo:prim";
import Result "mo:base/Result";
import Test "../Test";
import Text "mo:base/Text";
import Time "mo:base/Time";

// After
import Array "mo:base/Array";
import Blob "mo:base/Blob";
import Buffer "mo:base/Buffer";
import HashMap "mo:base/HashMap";
import Iter "mo:base/Iter";
import Nat "mo:base/Nat";
import Nat32 "mo:base/Nat32";
import Prim "mo:prim";
import Result "mo:base/Result";
import Text "mo:base/Text";
import Time "mo:base/Time";

import AccountIdentifier "mo:principal/AccountIdentifier";
import Ext "mo:ext/Ext";

import Test "../Test";

import Types "types"
```

This morning I hacked together a VS Code extension to do it automatically: https://marketplace.visualstudio.com/items?itemName=JorgenBuilder.motoko-formatter

*edit: changed the extension name and made it a language formatter*

-------------------------

saikatdas0790 | 2022-01-17 07:42:16 UTC | #2

Thank you for this @jorgenbuilder . Could this be added to the Motoko VSCode plugin as a toggleable feature? Would probably be more discoverable to new devs who dont follow the forum as closely.

-------------------------

heyuanxun | 2022-01-17 08:20:22 UTC | #3

Cool.This makes code beautiful

-------------------------

jorgenbuilder | 2022-01-17 18:03:06 UTC | #4

Technically simple, but there are some considerations (is the rule popular enough to be in the official extension, on/off by default, etc.) Still, that might actually be the best place for this functionality, because I don't currently have any plans on building a complete formatter. @kritzcreek what would your stance be if I were to PR this into https://github.com/dfinity/vscode-motoko?

-------------------------

jorgenbuilder | 2022-01-17 20:58:45 UTC | #5

Perhaps a PR should be made to https://smartcontracts.org/docs/language-guide/style.html

-------------------------

skilesare | 2022-01-17 22:13:50 UTC | #6

This is a great pattern and a great tool to enforce it!  I'll mess with the language and add it to https://icdevs.org/language_project/index.html.

-------------------------

