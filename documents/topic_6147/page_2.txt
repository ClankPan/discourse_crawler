lastmjs | 2022-03-05 15:24:05 UTC | #206

And please keep in mind, increasing the heap size is going to have the best developer experience and be a more general solution. Stable memory IMO is a confusing concept and I'm hoping we can eventually just get rid of it entirely. Orthogonal persistence should just work.

-------------------------

diegop | 2022-03-05 17:43:59 UTC | #207

Totally agree with this

-------------------------

Nick | 2022-03-06 00:11:41 UTC | #208

I agree. Orthogonal persistence is not *really* orthogonal if you are forced to manually shuffle data between "persistent memory" and "non-persistent memory".

-------------------------

Zane | 2022-03-06 00:56:30 UTC | #209

I'm not an expert on the matter, but is that like HDD vs RAM?

-------------------------

Nick | 2022-03-06 01:17:41 UTC | #210

We're going off-topic here, but yes, orthogonal persistence is *supposed* to free programmers from having to think about the difference between HDD and RAM. But the IC currently has a distinction between "stable memory" and "non-stable memory", which is *reminiscent* of the difference between HDD and RAM. The IC's approach is still an improvement over a traditional HDD interface though. Both stable and non-stable memory have a RAM-like interface, so you don't have to worry about the notion of a "file".

-------------------------

Zane | 2022-03-06 01:46:42 UTC | #211

I see, but if Dfinity were to abstract memory management even further wouldn't that be an issue? Many optimizations techniques nowadays take advantage of cache prediction and that can only be achieved if data is linearly stored in the RAM. If a programmer doesn't have control on where data is stored it would make it difficult to optimize operations on large sets of data. Wouldn't it?

-------------------------

Nick | 2022-03-06 02:03:34 UTC | #212

Yes, control over cache locality is important. The next level of abstraction would not be to reject the notion of RAM, it would be to offer only *one* kind of RAM, i.e. to expose only "memory", not "stable memory" and "non-stable memory". I believe this can be achieved with further infrastructural work. It will require high-level languages like Motoko to provide an automated "heap migration" service for occasions when the compiler needs to change how it encodes an app's state. Right now, developers are doing this migration manually, by moving their app's state into "stable memory", performing an upgrade, and then moving their app's state *out* of stable memory. I see no reason why this couldn't be automated.

-------------------------

Forreal | 2022-03-06 04:05:20 UTC | #213

Absolutely. I don't know if that has any legal implications in regards to securities. What's stopping the community from building a DAO that looks out for the protocol in terms of marketing?

-------------------------

gohan | 2022-03-07 17:29:26 UTC | #214

How are BIP32 derived Hierarchical Deterministic (HD) Wallet addresses generated for a canister as per the provided API?

-------------------------

dieter.sommer | 2022-03-07 15:57:13 UTC | #215

[quote="jzxchiang, post:205, topic:6147, full:true"]
[quote="dieter.sommer, post:204, topic:6147"]
We are now facing a challenge because of the huge amount of state that the feature requires and the way the data structures are currently implemented, which will take some additional time to overcome. We might need to make our stable hash map PoC that directly uses stable memory production ready in order to resolve our issues with memory.
[/quote]

This is an issue I think many face: how to store large amounts of data in stable memory.

Right now, I believe the per-canister stable memory limit is still at 8 GB. Also, I’m assuming you’re writing this in Rust instead of Motoko. Either way, the only way for a canister to take full advantage of the 8 GB is to directly store data in stable memory at a very low level (as opposed to using higher level abstractions like Motoko stable variables). It’s not ergonomic and more difficult to test.

I’m curious what kind of improvements you are making so that the stable hash map is production ready?
[/quote]

You are right with the 8GB limitations for canisters, but that does not apply here as we are working directly in the replica, and your other observations.

We are indeed using Rust and implementing this as part of the replica, and not a canister. This requires us to implement some extensions in the area of memory management, i.e., to allow using stable memory in replica code, much like in a canister. This requires some extensions to the replica, e.g., updates to the state manager.
Then we implement a data structure that transparently handles stable memory, i.e., abstract stable memory away from the programmer of the Bitcoin functionality. So we get the advantages of stable memory, but without the need to manage it manually. However, the stable data structure is not an easy thing to implement.

-------------------------

dieter.sommer | 2022-03-07 16:02:06 UTC | #216

[quote="Nick, post:212, topic:6147"]
I believe this can be achieved with further infrastructural work. It will require high-level languages like Motoko to provide an automated “heap migration” service for occasions when the compiler needs to change how it encodes an app’s state. Right now, developers are doing this migration manually, by moving their app’s state into “stable memory”, performing an upgrade, and then moving their app’s state *out* of stable memory.
[/quote]

This is an interesting topic of its own. Please not that the data representation can not only change when the compiler is updated, but can also change when the canister's source code changes, when a new version of a library is used, with a new runtime, or new tools. So there's many occasions when the state format may change, which creates some non-trivial challenges for an automated, transparent, migration.

-------------------------

Nick | 2022-03-08 00:47:05 UTC | #217

Yes, I'm sure it would be quite an endeavour. But the improvement to the developer experience would be enormous, and an excellent UX for blockchain development is crucial to convincing people to migrate from Web 2.0 :innocent:.

Anyway, this is off-topic. If anyone wants to discuss this further, you can start a new thread and tag me. :slightly_smiling_face:

-------------------------

goose | 2022-03-10 07:00:51 UTC | #218

Will the official offer wrapped bitcoin canister ？

-------------------------

Goku | 2022-03-15 03:45:04 UTC | #219

This would be very useful for implementing streamlined payment flows. Since the Internet Computer does not have a great transaction UI to begin with, we strongly recommended adding the option to create sub addresses / HD wallets. This makes it easier for end user applications to know whos balances should be updated.

-------------------------

ildefons | 2022-03-15 10:24:06 UTC | #220

Excuse me for the beginner question but it is hard to understand for me your reply. Where can I learn what does it mean "replica" and "state manager"? Are those processes running on each node? what is their functionality and how do they relate to a canister?

-------------------------

dieter.sommer | 2022-03-15 10:32:21 UTC | #221

Hi @ildefons 

A great resource to learn about the IC are our videos on YouTube. You could watch some of the videos related to the launch event: https://www.youtube.com/playlist?list=PLuhDt1vhGcrf4DgKZecU3ar_RA1cB0vUT

One specifically that will help explain things is the one about consensus in the above list.

Even better is the relatively new white paper here: https://dfinity.org/whitepaper.pdf
This is an excellent read, you can also skip more theoretical sections.

Hope that helps! :slight_smile:

-------------------------

ildefons | 2022-03-15 10:43:04 UTC | #222

[quote="ildefons, post:220, topic:6147"]
“replica” and “state manager”
[/quote]

Thank you for the reference.

-------------------------

dieter.sommer | 2022-03-15 15:54:25 UTC | #223


Let me provide a direct answer to your question in addition to the references.

* Replica: A replica is a node of the Internet Computer. A subnet comprises a number of nodes that form a replicated state machine.
* State manager: The state manager is a component at the Message Routing layer that is, among other things, responsible for handling aspects of replicated state: certification of state after each round (only parts such as the ingress history and the Xnet queues) and certification of the complete state (hundreds of GB currently) at each checkpointing interval (every some hundred blocks). Certification is done using BLS threshold signatures by the subnet. E.g., this allows for Xnet messages being authenticated towards other subnets and ingress responses towards end users who validate the signatures on the responses in the service worker in their browser.

Hope that helps!

-------------------------

ildefons | 2022-03-16 04:42:04 UTC | #224

This helps a lot. Thank you!

-------------------------

Mor | 2022-03-16 13:44:56 UTC | #225

Could someone explain why the deadlines are not met with 200 developers? this is causing damage to ICP which can be irreversible at some point. BTC integration was supposed to happen weeks ago. This can be validated through the roadmap. Totally off...

-------------------------

Zane | 2022-03-16 16:22:42 UTC | #226

That's the reality of software development, especially when a project does a lot of RnD and has to guarantee security of the system. To be honest as someone with a CS background I'm impressed how small the delays are.

-------------------------

Mor | 2022-03-16 16:27:38 UTC | #227

I think no one disagrees with the amount of work that is needed to be done for a such a an innovative project... but I think that they should be more careful about announcing plans and roadmaps.. at some point and after a year .. you know how much is needed for a task and etc... at least for my experience working on demanded projects

-------------------------

daijianlin | 2022-03-17 00:27:12 UTC | #228

Yes. Totally agree with you. Don't know what the 200 ppl are doing? Delay delay and delay again, don't know what they are doing, @dominicwilliams even have time to complain other projects all the time!!!

-------------------------

justmythoughts | 2022-03-17 04:52:58 UTC | #229

@Mor First off, are you aware with how an engineering organization works? There are multiple projects and roadmaps going on simultaneously, and Bitcoin just so happens to be one of them, albeit a very important project.

Any one of these projects being rushed and deployed prematurely could introduce a bug or worse a security vulnerability, which would kill the reputation of the IC. I’d rather the DFINITY engineering team go a couple months over than deliver a dud any day.

This happens all the time in software, and to this point DFINITY has delivered on every major milestone. If they’ve delayed, they post status updates and are transparent about it.

The Bitcoin Integration was supposed to be delivered last quarter, but looks like it’ll be delayed till next quarter, big whoop.

@daijianlin What is so important that you can’t wait a quarter for DFINITY to deliver a pivotal feature that has is expected to work flawlessly? What “delay delay delay” are you talking about, it’s only been one delay thus far? Have you ever worked as a software engineer? 

This stuff happens all the time from startups to Google/Amazon…be patient and go build something on the Internet Computer…the Bitcoin Integration will be ready for you when you finish your app.

-------------------------

Mor | 2022-03-17 05:09:29 UTC | #230

Yes, I know. I have my own startup company. This is why I am asking. I am not complaining about the amount of work, I am highlighting the fact that the announcements are off the charts. Titanium was announced on twitter that was finished few days ago when it was already finished on februray... Not so good marketing.. Just hoping on better planning. That's all. No need to be defensive, I think some criticism could be productive.

-------------------------

justmythoughts | 2022-03-17 05:48:54 UTC | #231


[quote="Mor, post:225, topic:6147"]
Could someone explain why the deadlines are not met with 200 developers? this is causing damage to ICP which can be irreversible at some point.
[/quote]

Totally agree with you that the marketing got ahead of itself, but the teeth of my response was directed at this comment of yours in the quote above. It’s a bit of a stretch in my opinion.

Just my thoughts - you’re free to critique, and if you hit your milestones 100% of the time that’s great - just giving a perspective from the other 90% of software engineers out there that run into roadblocks or delays from time to time - this includes other projects like Bitcoin and Ethereum btw.

-------------------------

Mor | 2022-03-17 05:54:45 UTC | #232

Probably, I was misunderstood. Sorry for that. The fault is never on the developers but on the management. This is what I wanted to highlight. Having such a great power of resources and minds and still giving a wrong picture outside. Have a nice day

-------------------------

tonynguyen | 2022-03-25 11:20:32 UTC | #233

what is the difference this integration with bitcoin on avalanche ?https://medium.com/avalancheavax/avalanche-bridge-to-add-native-support-for-bitcoin-expanding-opportunities-for-btc-in-avalanche-38b2314d6e7d

-------------------------

Goku | 2022-03-25 12:09:51 UTC | #234

I think it's important for both to understand the other sides here, because both are correct.

Dfinity has a more traditional engineering/CS culture, where success comes from doing things correctly that don't break.

Crypto has a more new age marketing/fomo culture, where success comes from doing things all the time to keep peoples attention.

Both need to accept these realities of the other, because the sweet spot lies right in the middle. Very few organizations can walk this line gracefully.

-------------------------

ajismyid | 2022-03-25 12:23:37 UTC | #235

BTC direct integration on ICP using threshold ECDSA, meaning you can move your bitcoin natively on its blockchain. Avalanche Bridge cannot do this.
https://medium.com/dfinity/bitcoin-smart-contracts-are-coming-to-internet-computer-defi-projects-dd6786078853

-------------------------

THLO | 2022-03-25 18:09:40 UTC | #236

Hi everyone!
Just a quick update: Up until now, we said that we'd expose the Bitcoin integration API through a virtual canister facade (called the "Bitcoin canister").
For technical reasons, we decided to make the API available through the (virtual) [management canister](https://smartcontracts.org/docs/interface-spec/index.html#ic-management-canister) instead.
This move doesn't really change much for developers: The only change other than having to invoke the functions on the management canister is that the function names now have a `bitcoin_` prefix.

I just wanted to mention that here in case you are surprised when reading (updated) material about the Bitcoin integration (such as the dedicated [wiki page](https://wiki.internetcomputer.org/wiki/Bitcoin_integration)) and notice that the Bitcoin canister is no longer mentioned.

-------------------------

tonynguyen | 2022-03-26 03:18:17 UTC | #237

Thank for the update. when can we use UI to send & receive BTC on the ICP wallet?

-------------------------

jzxchiang | 2022-03-26 05:37:58 UTC | #238

> what is the difference this integration with bitcoin on avalanche

I did a scan of the technical [overview](https://medium.com/avalancheavax/avalanche-bridge-secure-cross-chain-asset-transfers-using-intel-sgx-b04f5a4c7ad1) of the new Avalanche Bridge just now.

There are quite a few differences I've observed:

* Even with this new bridge, Avalanche smart contracts **cannot** natively hold Bitcoin. They have to go through the bridge to access BTC. This is in stark contrast with the IC, where canisters can natively hold Bitcoin. That means a canister can directly hold the private key to a Bitcoin address. There is no equivalent on Avalanche even after the launch of their bridge.

* It's quite expensive for IC canisters to directly transact with BTC. That's why DFINITY is building a wrapped Bitcoin ledger, where canisters can instead transact with wrapped BTC on the IC with much much lower fees and finality times. This is similar with Avalanche, where after transferring BTC across the bridge, smart contracts can transact with the wrapped BTC to build DeFi applications. I don't know which is faster or cheaper, but I'd be surprised if it wasn't the IC.

* In terms of implementation, the IC wrapped Bitcoin ledger is Just Another Canister, and can be made trustless like any other canister by removing its controllers. It inherits the security properties of the IC mainnet, and can easily be run on a more decentralized subnet with a larger number of nodes. Compare this with the new Avalanche bridge, which introduces a lot of additional complexity involving wardens and an Intel SGX enclave that are technically "off-chain" entities. It's a beast, and more complexity means more opportunities for hacks and loopholes.

* The Avalanche bridge only requires 3 out of 4 wardens to agree. The wardens are "trusted" operators, i.e. Ava Labs, Halborn, BwareLabs, and Avascan. Also, it's not clear to me who runs the Intel SGX enclave, which is a single point of failure for the bridge, it seems. On the IC, the wrapped Bitcoin ledger runs on Just Another Subnet, which is operated by node providers around the world. And if you don't want to go through the ledger, you can have your canisters directly hold BTC. You can pick.

* On Avalanche, the bridge [UI](https://bridge.avax.network/login) is hosted on Cloudflare. On IC, the NNS UI is hosted on the IC network. I assume the wrapped Bitcoin ledger, once complete, may also feature a UI hosted directly on the blockchain.

At the same time, most casual users don't care about these differences. They just want to move their assets. Only when there's a hack do they care...

-------------------------

tonynguyen | 2022-03-26 13:09:51 UTC | #239

thank you for your research.

-------------------------

THLO | 2022-03-28 07:52:02 UTC | #240

[quote="tonynguyen, post:237, topic:6147"]
when can we use UI to send & receive BTC on the ICP wallet?
[/quote]

Do you mean the [NNS dapp](https://nns.ic0.app/v2/)?
I'm not aware of any plans to integrate Bitcoin support. However, I'm fairly certain that we will see crypto wallets with Bitcoin support on the IC before long.

-------------------------

dieter.sommer | 2022-03-28 16:12:27 UTC | #241

[quote="jzxchiang, post:238, topic:6147"]
I did a scan of the technical [overview ](https://medium.com/avalancheavax/avalanche-bridge-secure-cross-chain-asset-transfers-using-intel-sgx-b04f5a4c7ad1) of the new Avalanche Bridge just now.
[/quote]

Thanks, @jzxchiang, for looking into the Avalanche bridge and providing your findings! Much appreciated!

-------------------------

dieter.sommer | 2022-03-28 16:26:57 UTC | #242

Regarding the long discussion above triggered by @Mor 's comment, let me also provide some clarification from the side of DFINITY.

Indeed, we are being delayed with the Bitcoin feature (including threshold ECDSA) and I agree that communication on this could have been more transparent. As others have mentioned above, not all of our developers are working on this feature, but the Bitcoin feature has a handful of core developers assigned to the Bitcoin feature and the threshold ECDSA feature, who work on the related aspects on the different layers of the protocol stack. The features is pretty complicated overall as it cuts through all layers of the protocol stack and we have experienced some complications that took extra time.

As others have mentioned, we need to get this feature right the first time we launch it with Bitcoin mainnet being enabled. Getting something major wrong with this would be detrimental for the IC at large. Imagine a bug in the threshold ECDSA implementation that allows people to extract the value protected with the threshold ECDSA key.

Thus, we are taking all necessary steps to ensure that our code is correct and sufficiently tested and reviewd and run with Bitcoin testnet for a sufficient amount of time before we launch it on mainnet. We are doing both internal and external security reviews by specialized companies to increase the assurance of correctness of the code.

All that said, I agree that communication could have been improved related to the delays, that's maybe something for me to take as feedback. But you can be assured that the Bitcoin integration team is working very hard to get this working and we are making pretty good progress.

Thanks to everybody who has contributed to this discussion and contributing their view on the reality of software engineering. The Bitcoin and threshold ECDSA features are indeed very innovative, complex, and large features that have had lots of unknowns that could (and did) cause delays in the engineering process.

-------------------------

dieter.sommer | 2022-03-28 16:44:56 UTC | #243

**Progress update**

We got the Bitcoin feature working end-to-end with the full IC stack integration, i.e., all the shortcuts have been removed. The Bitcoin functionality has been moved from a canister into the replica. In this process we have experienced some unexpected problems w.r.t. performance of the adapter and associated high latency for block requests. Those have partially been resolved, but still cause some extra unexpected engineering efforts on our side to fully address. Our team has done a great job so far addressing the issues and we expect the remaining difficulties with the Adapter integration to be fixed shortly. Many thanks to the engineers Rosti, @0x5279616e, and @ielashi for their collaborative effort on chasing down the issues.

In parallel, we have been working on a stable data structure, a StableBTreeMap, that allows to store the Bitcoin UTXOs in stable memory and have the data structure manage stable memory transparently. Thanks to @ielashi for his tremendous efforts on getting this part of the work done (besides the other aspects of the project he is working on). The next steps here are to finalize this data structure and enable the BTC functionality to use it for representing the Bitcoin UTXOs in stable memory.

The complications mentioned above are typical things you see on a project of the complexity and scale of the Bitcoin feature. Considering the complexity of the project, it is practically impossible to give a solid estimation upfront on a delivery timeline. So the learning for us here is to not announce concrete release timelines before we can be reasonably sure to meet them. This has been discussed and we removed concrete timelines from some of our future milestones to address this inherent uncertainty.

Let me thank our engineering team once more for their hard work and great progress in addressing issues and bringing the project forward toward completion!

-------------------------

jzxchiang | 2022-03-29 01:13:19 UTC | #244

> In parallel, we have been working on a stable data structure, a StableBTreeMap, that allows to store the Bitcoin UTXOs in stable memory and have the data structure manage stable memory transparently.

Is this data structure implemented in Motoko or Rust, and will it be open sourced once it is complete?

(I work with Motoko, so it would be really really awesome if StableBTreeMap was written in Motoko.)

Stable variables are insufficient as they still face the 4 GB canister heap limit due to serialization. A data structure that stores its contents directly in stable memory and that can thus take advantage of the full 300 GB would be huge for Motoko developers.

-------------------------

dieter.sommer | 2022-03-29 07:05:56 UTC | #245

[quote="jzxchiang, post:244, topic:6147"]
Is this data structure implemented in Motoko or Rust, and will it be open sourced once it is complete?
[/quote]

It is in Rust as we implement the Bitcoin functionality in Rust. It will definitely be open sourced as there will be interesting use cases for stable data structures.

[quote="jzxchiang, post:244, topic:6147"]
Stable variables are insufficient as they still face the 4 GB canister heap limit due to serialization. A data structure that stores its contents directly in stable memory and that can thus take advantage of the full 300 GB would be huge for Motoko developers.
[/quote]

Agreed! Simple stable variables mean you need to manually do all your stable memory management. Stable data structures that abstract the management of stable memory solve this problem and let you use a regular data structure that handles the stable memory in the background.

I wonder, if we had 64-bit Wasm heap some time in the future, would developers still want to operate on stable data structures or just keep everything in the heap and move in and out of stable memory in the pre- and post-upgrade hooks (i.e., use stable memory just for upgrades)? Deterministic time slicing should make it possible to have long-running calls which would be the case for transferring large amounts of heap to stable memory and back before and after upgrades.
Do you have an opinion on this? Just thinking whether it would make sense to further pursue work on stable structures particularly also for Motoko, e.g., as part of the grants program. Thanks already now for an opinion on this from your side!

-------------------------

JaMarco | 2022-04-08 10:16:57 UTC | #246

Anyone have any insight on how ICs BTC/ETH integrations are different/better/worse than these cross-chain solutions:

ThorChain: https://docs.thorchain.org/
Algorand State Proofs: https://medium.com/algorand/algorand-state-proofs-707d64038e35
Chainlink CCIP: https://chain.link/cross-chain
Cosmos IBC: https://tendermint.com/ibc/
LayerZero: https://www.businesswire.com/news/home/20220330005301/en/LayerZero-Labs-Raises-135-Million-to-Create-Omnichain-Crypto-Networks
Axelar Network: https://axelar.network/

-------------------------

Zane | 2022-04-01 01:38:45 UTC | #247

Differences with Thorchain are explained here: https://www.reddit.com/r/dfinity/comments/tr6wic/what_is_the_difference_between_canister_ecdsa_and/?utm_medium=android_app&utm_source=share

-------------------------

integral_wizard | 2022-04-01 04:08:07 UTC | #248

Have an idea how to get the Bitcoin Integration onto the big stage:
https://forum.dfinity.org/t/decentralized-bitcoin-bank-and-terra-collaboration/11829

-------------------------

icme | 2022-04-02 16:50:46 UTC | #249

[quote="dieter.sommer, post:245, topic:6147"]
Just thinking whether it would make sense to further pursue work on stable structures particularly also for Motoko, e.g., as part of the grants program.
[/quote]

@dieter.sommer 

I’ve started work converting making a few of the Motoko class based data structures to stable data structures [in the repos of this org](https://github.com/canscale). My grant project pretty much requires that all my data structures be stable. I have “build a stable BTree” in my roadmap backlog, but to save time just converted the RBTree library to a stable RBTree and am using that (it works great for where my project is at now, but the BTree will definitely scale better with increasing # of records). 

I’d be happy to review/transport your stable BTree library to Motoko, but one of the specific features I’m looking for in a BTree library is that it’s structured in such a way that it is easy to split based on the order of the BTree (for partitioning data/scaling out as the BTree grows towards the canister limit).

-------------------------

icme | 2022-04-02 17:12:15 UTC | #250

[quote="jzxchiang, post:244, topic:6147"]
A data structure that stores its contents directly in stable memory and that can thus take advantage of the full 300 GB would be huge for Motoko developers.
[/quote]

@jzxchiang 

Can you elaborate on this? I’m under the impression that stable or not, all Motoko canisters will run into this 4GB limit. The IC still uses canisters as the encapsulated storage/smart contract building block across a subnet, and without a specific data schema that would allow you to know which canister the data is listed on in this 300 GB “subnet/canister/whatever you want to call it”, performing operations on such a large data structure (CRUD operations) would be incredibly inefficient in terms of cycles and performance, searching all the canisters one by one.

@dieter.sommer 

I may have missed over this (the thread is quite long), but I’m curious exactly how all of the data related to this Bitcoin Integration is being stored on the IC (in multiple canisters, or the abstraction of a canister is being stretched just for this integration). In addition to describing it, do you have any diagrams showing the architecture and per-canister storage?

-------------------------

dieter.sommer | 2022-04-04 07:04:29 UTC | #251

[quote="icme, post:249, topic:6147"]
I’ve started work converting making a few of the Motoko class based data structures to stable data structures [in the repos of this org](https://github.com/canscale).
[/quote]

This is awesome! Thanks for sharing the repository for your stable data structures! I am sure this will help many others who need to use stable memory extensively.

[quote="icme, post:249, topic:6147"]
I’d be happy to review/transport your stable BTree library to Motoko, but one of the specific features I’m looking for in a BTree library is that it’s structured in such a way that it is easy to split based on the order of the BTree (for partitioning data/scaling out as the BTree grows towards the canister limit).
[/quote]

Ours is not yet open source, I think, but will be soon.

Just thinking whether it would make sense to start a forum topic on stable data structures to advertise to the community what we have and get further requirements and participation. What do you think?

-------------------------

dieter.sommer | 2022-04-04 07:18:13 UTC | #252

[quote="icme, post:250, topic:6147"]
I may have missed over this (the thread is quite long), but I’m curious exactly how all of the data related to this Bitcoin Integration is being stored on the IC (in multiple canisters, or the abstraction of a canister is being stretched just for this integration). In addition to describing it, do you have any diagrams showing the architecture and per-canister storage?
[/quote]

The full UTXO set is stored in the "BTC Canister", which is implemented as part of the replica. It's called canister as it is exposed as a management canister. We use the new StableBTreeMap to directly store the UTXO set in stable memory. As it is implemented as part of the replica, there are no limits to memory use, i.e., we could potentially use all of replicated state of the replica.

There are some talks around about the design of Bitcoin integration, other materials will be made open as well, but I think we don't have the slide set used in the talks public yet. Something to be done on our side...

[quote="icme, post:250, topic:6147"]
[quote="jzxchiang, post:244, topic:6147"]
A data structure that stores its contents directly in stable memory and that can thus take advantage of the full 300 GB would be huge for Motoko developers.
[/quote]

@jzxchiang

Can you elaborate on this? I’m under the impression that stable or not, all Motoko canisters will run into this 4GB limit.
[/quote]

As we use Wasm32, canister heaps are 32-bit and thus limited to 4GB. However, stable memory addressing has been upgraded to 64 bit, meaning that we can address all replicated state from one canister (in theory). Practically, there is currently an 8GB limit for stable memory per canister, but this is rather artificial and could be raised. The reason for the limit is to be conservative in the beginning and then raise the limit over time and possibly lift it entirely at some point. But increasing the 8GB or lifting the limit requires further testing etc. in order to have sufficient assurance that things work as intended with large stable memory allocations per canister.
You can use the stable memory besides the heap you use, it's not counting towards your heap.
Does that answer your question?
And now we are at 350GB replicated state per subnet already AFAIK. :-) This is growing with improvements we make in the IC protocol stack.

-------------------------

icme | 2022-04-04 13:32:37 UTC | #253

[quote="dieter.sommer, post:251, topic:6147"]
Just thinking whether it would make sense to start a forum topic on stable data structures to advertise to the community what we have and get further requirements and participation. What do you think?
[/quote]

I think that’s a great idea (and would limit the discussion in this topic to just Bitcoin integration 😅).

I definitely had a fair amount of questions regarding stability that Andreas Rossberg answered in [this post](https://forum.dfinity.org/t/clarification-on-stable-types-with-examples/11075), and I know it’s a major point of concern for developers.

One of the main issues here I see is not a lack of stable data structures themselves, but an understanding of what makes those data structures stable. Additionally, many of the motoko-base library data structures such as [HashMap.mo](https://github.com/dfinity/motoko-base/blob/master/src/HashMap.mo) were released as classes (to aid in programming style familiarity & adoption), but didn’t include any documentation or assurances about their stability in the library or code itself, or information how to make them stable, which I think created some of this confusion in the first place.

Once developers understand stability on the IC, it’s not that difficult to turn an unstable data structure into a stable one (I’m speaking purely from the perspective of a Motoko developer, so I can’t speak for the Rust developer’s experience with stability). So I’m not sure that a single forum topic would help any more than expanding the developer documentation. 

Specifically, I would add the following content to this section [https://smartcontracts.org/docs/language-guide/upgrades.html](https://smartcontracts.org/docs/language-guide/upgrades.html)

- Provide a link to [https://smartcontracts.org/docs/language-guide/language-manual.html#stability](https://smartcontracts.org/docs/language-guide/language-manual.html#stability), with some concrete language examples (in both Motoko and Rust), including some do’s and dont’s that showcase transformations of an unstable data structures into a stable data structures (i.e. transforming a class with instance variables and methods into a stable object and functions)
- Tie in information about how to use developer tooling (i.e. dfx, etc.) to safely check upgrade compatibility, and(feature request) perhaps even the variables that will remain stable (and any changes (like a git diff) to those stable variables. 


Maybe at the very least we move this discussion to a separate forum post. I definitely think asking the community about what type of functionality they’d want out of a BTree library would be beneficial.

-------------------------

jzxchiang | 2022-04-05 06:42:30 UTC | #254

> I wonder, if we had 64-bit Wasm heap some time in the future, would developers still want to operate on stable data structures or just keep everything in the heap and move in and out of stable memory in the pre- and post-upgrade hooks (i.e., use stable memory just for upgrades)?

I think it would really depend on the cycle costs of one versus the other. Personally, I like operating directly on stable data structures and keeping the canister upgrade process as simple as possible, but if it costs me 2x as many cycles I'd probably be less enthusiastic.

> Do you have an opinion on this? Just thinking whether it would make sense to further pursue work on stable structures particularly also for Motoko, e.g., as part of the grants program.

Yes! I know that I sorely need stable data structures, and I'm sure other developers need them too.

And I'm referring to a different kind of stable data structure than the kind @icme is working on. IIUC @icme is porting object-oriented data structures (like Motoko's `HashMap`) to a functional form that can be stored in a Motoko stable variable using the `stable` keyword.

That is different from the stable data structure that @dieter.sommer and his team are building, which directly stores data in stable memory without any serialization/deserialization (which is implicitly done when using stable variables).

> Just thinking whether it would make sense to start a forum topic on stable data structures to advertise to the community what we have and get further requirements and participation. What do you think?

I think this is a great idea. I suspect quite a few in the community will have thoughts on this. In some sense, this is an interesting alternative to BigMap: instead of scaling out using canisters, we can scale up using stable memory.

Relying on ExperimentalStableMemory in Motoko isn't ideal, as @claudio explains [here](https://forum.dfinity.org/t/increased-canister-smart-contract-memory/6148/117?u=jzxchiang).

In fact, another benefit of these types of stable data structures is that they can abstract over ExperimentalStableMemory, so that if we one day want to replace that library with a more fine-grained library that provides better memory isolation we can do so without breaking stable data structure users.

-------------------------

icme | 2022-04-05 07:23:48 UTC | #255

Thanks for the clarification, I you are correct that I was originally referring to porting these data structures to a form where they can be stored in a Motoko stable variable via `stable`. I misunderstood the path @dieter.sommer and his team were taking, and now understand this is then being done in order to use the full 8GB memory of the canister (roughly up to ~8GB).

A few follow up questions for @dieter.sommer. 

- Why did the team choose to directly store the data in stable memory throughout its lifecycle given the performance implications, when [serialization/deserialization is much more efficient](https://forum.dfinity.org/t/increased-canister-smart-contract-memory/6148/117)? Does the quote below apply differently to Rust than Motoko in terms of the performance tradeoffs of permanently storing this data in stable memory?
[quote="claudio, post:117, topic:6148"]
Also, be aware that the cost of accessing stable memory is quite high at the moment: even reads and writes of individual words require allocating space in the Wasm heap to do an expensive, particularly when small, bulk transfer from Wasm memory to stable memory, due to the peculiarities of the current System API.
[/quote]

- Why not attempt to scale out the UTXO set storage horizontally instead of vertically? 

- If the Bitcoin Integration team has chosen to scale vertically, what does this mean in terms of the IC roadmap for scaling (i.e. BigMap pushed back), and should application developers abandon horizontal scaling and follow suit by scaling vertically?

-------------------------

jzxchiang | 2022-04-13 06:16:52 UTC | #256

> * Why not attempt to scale out the UTXO set storage horizontally instead of vertically?
> * If the Bitcoin Integration team has chosen to scale vertically, what does this mean in terms of the IC roadmap for scaling (i.e. BigMap pushed back), and should application developers abandon horizontal scaling and follow suit by scaling vertically?

I have the same questions! (I like the way you frame vertical vs horizontal scaling here.)

-------------------------

JaMarco | 2022-04-19 16:59:56 UTC | #257

How does ICs integration method compare to Algorand State Proofs? https://www.reddit.com/r/CryptoCurrency/comments/t5wcvx/algorand_state_proofs_are_here_this_is_huge/

-------------------------

lastmjs | 2022-04-20 00:37:14 UTC | #258

It is my strong opinion currently that it's preferable to work with a large heap so that special stable data structures do not have to be created.

-------------------------

Bmarquez | 2022-04-25 02:49:05 UTC | #259

Hello, are there any updates on the progress with the bitcoin integration?

-------------------------

caolw | 2022-04-25 13:35:12 UTC | #260

Hello, are there any updates on the progress with the bitcoin integration?

-------------------------

Fatalerror | 2022-04-25 17:38:37 UTC | #261

Hello, are there any updates on the progress with the bitcoin integration?

-------------------------

diegop | 2022-04-26 23:01:17 UTC | #262

Good question. I have pinged the team to post an update.

-------------------------

dieter.sommer | 2022-04-27 06:39:57 UTC | #263

Dear community!

It has been some time since the last update on the Bitcoin feature. Thus, let me give you an update on the progress of the Bitcoin integration.

There has been excellent progress on the implementation front for this feature. The team has progressed the implementation of the StableBTreeMap, its integration in the replica code, and fixes of the Adapter so that we were able to sync an IC testnet with the Bitcoin testnet. :tada: So, the memory management with the StableBTreeMap, one of the large remaining items so far, is largely working. There have been some glitches observed, but, as we think, nothing too major.

The next steps now are to iron out some of the issues we have observed during these runs on the testnet and perform further runs in test environments to get sufficient confidence that everything works as intended. Then (This will be soon!) we will be ready for a first deployment on an IC mainnet subnet that we will observe and test for some time. Once the system has been confirmed to work as intended, we will open the feature up to to a public audience for testing (and developing against the API).

As a side task, another team is working on the SDK integration of the feature, i.e., managing the Bitcoin Adapter process from the SDK, including its configuration. This is crucial work that helps get the feature fully completed and allow people to conveniently implement canisters against the BTC Canister API.

-------------------------

GLdev | 2022-04-27 06:42:24 UTC | #264

[quote="dieter.sommer, post:263, topic:6147"]
we were able to sync an IC testnet with the Bitcoin testnet.
[/quote]

:tada: :tada: :tada: 

Wooo! Awesome job!

-------------------------

tonynguyen | 2022-04-27 07:21:34 UTC | #265

When all things of this feature will be done ? in Q2, Q3 or Q4?

-------------------------

dieter.sommer | 2022-04-27 07:52:39 UTC | #266

The Chromium (aka Satoshi Release) Milestone has been moved to end of May 2022. This feature as well as the threshold ECDSA feature (https://forum.dfinity.org/t/threshold-ecdsa-signatures/6152) are the essential parts of this milestone. The teams are working really hard on both of those features to meet the end-of-May timeline. To manage expectations: If everything works really well, we may meet this timeline, but there is a possibility of it slipping by some weeks. So Q2 (late May or June) is within very realistic reach and is clearly what we aim for, but if unknowns hit us and we lose time on things we have not been planning for, it may be Q3 (July).

Features of the size and complexity as the Bitcoin integration and threshold ECDSA are of exploratory nature and many difficulties have needed to be overcome during our implementation efforts. For this reason, they are just not as plannable as regular "commodity" software development, that's why we cannot give a definite deadline.

We will keep you all posted on our progress on the features and also give you updates on the timeline as we get closer to completion. Thank you all for your patience in awaiting the launch of the Bitcoin and threshold ECDSA features which will unlock a plethora of exciting use cases for the Internet Computer blockchain.

-------------------------

tonynguyen | 2022-04-27 08:45:24 UTC | #267

great to hear that. Hopefully, no delay.

-------------------------

dymayday | 2022-04-27 13:05:51 UTC | #268

[quote="dieter.sommer, post:263, topic:6147"]
StableBTreeMap
[/quote]

Is this what I think it is ?!?

Is this a way more convenient way to use the stable memory instead of using [ic_cdk::storage](https://docs.rs/ic-cdk/latest/ic_cdk/storage/index.html) or fiddling with bytes using [the stable api](https://docs.rs/ic-cdk/latest/ic_cdk/api/stable/index.html#functions) ??

If it is, out of joy, tears are starting to come to my eyes :face_holding_back_tears:

I can't wait to use it !

-------------------------

dieter.sommer | 2022-04-27 16:15:32 UTC | #269

[quote="dymayday, post:268, topic:6147"]
[quote="dieter.sommer, post:263, topic:6147"]
StableBTreeMap
[/quote]

Is this what I think it is ?!?

Is this a way more convenient way to use the stable memory instead of using [ic_cdk::storage](https://docs.rs/ic-cdk/latest/ic_cdk/storage/index.html) or fiddling with bytes using [the stable api](https://docs.rs/ic-cdk/latest/ic_cdk/api/stable/index.html#functions) ??
[/quote]

In short, yes. More details will follow in due time once its GA version will be open sourced.

[quote="dymayday, post:268, topic:6147"]
If it is, out of joy, tears are starting to come to my eyes :face_holding_back_tears:

[/quote]

:-)

-------------------------

Manu | 2022-05-02 19:23:16 UTC | #270

Exciting update: proposal [57849](https://dashboard.internetcomputer.org/proposal/57849) turned on BTC testnet sync on subnet `2fq7c`, so this is the first sign of BTC integration reaching mainnet! Note that you can't use this yet (it isn't responding to requests yet) but is mainly for us to see how this runs on mainnet and ensure everything works as expected.

-------------------------

JackN-code | 2022-05-05 06:04:37 UTC | #271

Might I ask what are the benefits of the bitcoin integration? Does it mean that IC app users can send and receive btc directly in their wallet? Thanks

-------------------------

jzxchiang | 2022-05-05 20:54:35 UTC | #272

Yes. Not only that, it means that BTC can now be controlled and programmed by a smart contract fully on-chain. This is not possible today.

-------------------------

CarbonDev | 2022-05-08 15:06:48 UTC | #273

Hello, I was wondering why the Bitcoin Canister is limited to only UTXO/balances data? Is other data not stored in the canister because of memory limits? Are there plans to provide more data in the future, such as past transactions? I think this would enhance the utility of the Bitcoin integration a lot.

-------------------------

RatherIcy | 2022-05-09 04:49:24 UTC | #274

I’m really curious what value this would actually bring to the network. You can wrap btc on icp, okay cool. I really hate the “unlocking a trillion dollars in liquidity” narrative it’s so misleading. 

Big bitcoin holders know ICP as a rugpull, why would they move liquidity here? To use on what defi platform exactly?

-------------------------

RatherIcy | 2022-05-09 04:47:12 UTC | #275

Fact is, the icp ecosystem is a confused mess right now with no defined future direction. “Integrate with everything” isn’t a sustainable design ethos. If anything, it shows a lack of confidence in your own network.

-------------------------

Yue | 2022-05-09 08:59:02 UTC | #276

最简单的说，它不需要单独的桥，它足够安全，这就够了

-------------------------

tonynguyen | 2022-05-09 08:15:50 UTC | #277

comment english please

-------------------------

mparikh | 2022-05-09 08:20:22 UTC | #278

No wrapping is necessary. Giving smart contracts to native BTC exposes a lot of different use cases which, for competive reasons, will become obvious when btc integration happens. 

Till then,well, just ride it out.

-------------------------

mparikh | 2022-05-09 08:25:32 UTC | #279

There is not much confusion on the roadmap. Sure it's long and does not, in part, take the directions/priorities that i would like to see.


I just see it as typical software development program with a few gosh-darn-its along the way. Oh and then this crypto thing is just hard ; especially trying things that have not been tried before.

I do see a lot of quality thought being put into the design etc

-------------------------

RatherIcy | 2022-05-09 10:20:50 UTC | #280

use cases like what? And who will care about it?

-------------------------

dieter.sommer | 2022-05-09 12:01:54 UTC | #281

[quote="CarbonDev, post:273, topic:6147"]
wondering why the Bitcoin Canister is limited to only UTXO/balances data? Is other data not stored in the canister because of memory limits? Are there plans to provide more data in the future, such as past transactions? I think this would enhance the utility of the Bitcoin integration a lot.
[/quote]

Only having the UTXO has been decided to be the goal for the first version. We definitely think that it is useful to store all transactions on one subnet in the future. Depending on efficiency of data representation, this would currently  consume roughly all of a subnet's storage. We did not want to launch the first version with such huge storage requirements as it would delay things further.

-------------------------

dieter.sommer | 2022-05-09 12:17:18 UTC | #282

[quote="RatherIcy, post:274, topic:6147"]
Big bitcoin holders know ICP as a rugpull, why would they move liquidity here? To use on what defi platform exactly?
[/quote]

There has been a lot of misinformation spread about the Internet Computer and its ICP token unfortunately by various entities who get paid for this. I am convinved that our path of doing world-class research and engineering and building the future platform for running decentralized services will succeed over time and the market will decide about the success of DeFi projects. Some of the world's best researchers, e.g., in the area of cryptography, are working on building the Internet Computer.

[quote="RatherIcy, post:275, topic:6147, full:true"]
Fact is, the icp ecosystem is a confused mess right now with no defined future direction. “Integrate with everything” isn’t a sustainable design ethos. If anything, it shows a lack of confidence in your own network.
[/quote]

That's quite an unfair statement. Granted, we were late with allowing canisters to transfer ICP because of being conservative for security reasons, but that has been resolved. We do not have a globally-agreed token standard yet, but a working group comprising the leading community members is currently addressing this.

Otherwise, we have essentially the only network that can handle DeFi with some amount of scale beyond what a single computer provides in terms of compute and storage capacity.

[quote="RatherIcy, post:280, topic:6147, full:true"]
use cases like what?
[/quote]

DEX use cases (order book-based, not only the simple AMMs), lending etc. You can do real-world DeFi much better on the IC than most other blockchains.

[quote="RatherIcy, post:280, topic:6147"]
And who will care about it?
[/quote]

Forward thinkers, maybe?

-------------------------

dieter.sommer | 2022-05-09 12:37:08 UTC | #283

**Status update:**
As you know, we have done a first sync of Bitcoin testnet on IC mainnet. During this, at some points the subnet stalled for a noticable duration. We could track down the behaviour to be caused by certain rare blocks on the Bitcoin testnet which have a transaction with 10s of thousands to 100K outpoints which causes the processing to run for an extended duration.

We are currently looking at potential solutions to address the issue.

-------------------------

mparikh | 2022-05-09 15:52:17 UTC | #284

This is EXACTLY what is needed. Precise engineering knowing where the peformance envelope will break (as opposed to "it compiles, let's ship it").
You WILL get a lot of flak if you decide to delay the launch of the integration. But most mature audience completely understands the need to get it right with billions of $ of liquidity at stake.

-------------------------

Jaouadtmg | 2022-05-10 05:30:22 UTC | #285

Well this integration didn't exist before so nobody will claim it is late, we should just don't care if it is "late". Do things properly at the quality required pace, no mistake here will be forgiven.

-------------------------

dieter.sommer | 2022-05-10 08:00:20 UTC | #286

Welcome to the forum, @Jaouadtmg!

Indeed, that is the right way to approach this.

-------------------------

manindra | 2022-05-16 06:39:09 UTC | #287

may i know the status as of today and ETA

-------------------------

dieter.sommer | 2022-05-17 21:31:07 UTC | #288

Welcome to the Internet Computer forum, @manindra!

See further above for the latest estimation on when the feature will be completed.

An interim update is that we have started to sync Bitcoin mainnet on a testnet and this is still in progress. Updates will follow once we have gained more insights on how this goes.

-------------------------

mparikh | 2022-05-17 21:42:37 UTC | #289

[quote="dieter.sommer, post:288, topic:6147"]
An interim update is that we have started to sync Bitcoin mainnet on a testnet
[/quote]

Nice! It will take substantial time to sync bitcoin mainnet, though.

-------------------------

THLO | 2022-05-18 07:54:38 UTC | #290

A small update from my side: We are also working on a *Bitcoin library* to support developers who are building canisters that make use of the direct Bitcoin integration.

The library will provide a range of functions (for example, to derive and manage Bitcoin addresses, keep track of UTXOs, and compose Bitcoin transactions) that should reduce development efforts considerably.

The plan is to have it ready around the time when the Bitcoin integration feature reaches "general availability". We will likely release a first incomplete version soon and then add features incrementally.
If that sounds interesting, stay tuned!   :slight_smile:

-------------------------

ildefons | 2022-05-18 22:49:25 UTC | #291

[quote="THLO, post:290, topic:6147"]
The plan is to have it ready around the time when the Bitcoin integration feature reaches “general availability”
[/quote]

In your opinion, when will be that milestone?

-------------------------

808mafia | 2022-05-19 01:14:21 UTC | #292

we desperately need to do something about price to reassure crypto community about icp, right now they see icp as a big vc scam and slow rugpull. I hope there will be signifigant marketing efforts round btc integ. lets market it as a new beginning, a rebirth of icp from the ashes 

pls do something

-------------------------

daijianlin | 2022-05-19 04:54:33 UTC | #293

I am curious about the team as well why they almost don't mention the integration thing, they don't have confidence regrading bitcoin integration or something else? Really don't understand what the marketing team is doing, seems that the marketing team is just looking around that don't have any contact with the development of the R&D team, at least the marketing should promote and drive more and more developers to join the development of ICP ecosystem. 

@diegop do you happen to know what the marketing team is doing? They may just send some emails to the old users like me?

-------------------------

diegop | 2022-05-19 04:45:21 UTC | #297

[quote="daijianlin, post:293, topic:6147"]
@diegop do you happen to know what the marketing team is doing?
[/quote]

I am not in the marketing team but I like to answer where I can. I do know they are working with @dieter.sommer on a communications strategy for the Bitcoin & threshold ECDSA release. Likely will include producing content videos as we all as distribution, PR outreach, and just generally making a big noise about it.

-------------------------

dieter.sommer | 2022-05-19 08:34:31 UTC | #298

Indeed, as @diegop mentions above, we are currently working out a communications strategy for this feature. This is broader than marketing as it includes items like educational videos to show the developers how the feature works and how the API can be used to build their own dApps. Also, press releases, tweets etc. will be part of the overall communications plan. Details of this plan are currently being worked out. It is important to time the marketing / communications well with the different stages of the availability of the feature (beta, GA) and not do it prematurely.
And, of course, I completely agree with a statement further above about the importance of communications for this feature.

-------------------------

daijianlin | 2022-05-19 09:23:25 UTC | #299

Wow, that's great!!! Thanks for the speedy reply, you and @diegop are so sweet to answer my question. Really looking forward to the bitcoin integration feature, which I believe is one of the biggest different one compare to other web3.0 solutions.

-------------------------

THLO | 2022-05-20 13:24:02 UTC | #305

[quote="ildefons, post:291, topic:6147"]
In your opinion, when will be that milestone?
[/quote]

This is more of a plan than an opinion:
If all goes well, syncing the Bitcoin blockchain and testing the state and API functions, other than sending transactions, should be completed in a matter of weeks. However, getting threshold ECDSA ready and deployed is currently estimated to take a few weeks longer, followed by another round of thorough testing. Adding up these weeks gives us a current estimate of July for general availability.

If unforeseen issues pop up, forcing us to delay the launch, we will post an updated estimate here.

-------------------------

Yue | 2022-05-20 14:49:06 UTC | #306

Is the integration roadmap with Bitcoin postponed again?

-------------------------

blockchain-x | 2022-05-21 05:08:26 UTC | #307

You are now syncing Bitcoin mainnet on a IC testnet, What's next? Syncing Bitcoin mainnet on the IC mainnet?
 How many small steps before general availability.

-------------------------

romulusp | 2022-05-21 17:22:11 UTC | #308

Can we skip to the parts when all icp holder are millionaires and icp is The internet ? Btw i dont want to skip life, just want that part to come sooner! 🤪

-------------------------

zire | 2022-05-22 06:04:05 UTC | #309

Thank you for your continued faith and support. We will not let you down. 

Feel free to join our Chinese Telegram group. Our Asia team is managing that directly. https://t.me/+WvTeCuQ_mglkNGY1 . We'll keep you updated on the progress of our roadmap and other ecosystem development news.

-------------------------

zire | 2022-05-22 06:11:48 UTC | #310

Hi there, In Asia for the Chinese crowd, we've been talking about BTC-ICP direct integration with the community a lot. 

https://twitter.com/herbertyang/status/1484781725847031808

-------------------------

THLO | 2022-05-23 17:16:58 UTC | #311

[quote="blockchain-x, post:307, topic:6147, full:true"]
You are now syncing Bitcoin mainnet on a IC testnet, What’s next? Syncing Bitcoin mainnet on the IC mainnet?
[/quote]

Exactly!

[quote]
How many small steps before general availability.
[/quote]

There are many steps - but not too many remaining.
After syncing and verifying the blockchain state, getting the threshold ECDSA feature ready and testing will be the biggest remaining task.

-------------------------

dieter.sommer | 2022-05-23 09:18:30 UTC | #312

[quote="Roman, post:300, topic:6147, full:true"]
Can we hope having an internal announcement before the public announcements, here or through the newsletter, to allow us to increase our number of ICP before pure speculators buy massively ICP once the announcement done, or would it be illegal @dieter.sommer ?
[/quote]

We can, following legal practice, only use public communication channels like press releases, forum posts, Twitter, blogs etc. to announce features.

[quote="Yue, post:306, topic:6147, full:true"]
Is the integration roadmap with Bitcoin postponed again?
[/quote]

We are actively working on it and making each step public on Twitter, the forum, and other comms channels.

-------------------------

dieter.sommer | 2022-05-23 09:31:40 UTC | #313

We have been making good progress with this feature in the recent weeks. Let me outline the next steps you can expect for this feature and threshold ECDSA, which both together allow for a full Bitcoin integration:
* The API for Bitcoin testnet being opened up to the public on IC mainnet (~late May, early June)
* Bitcoin mainnet being synced on IC mainnet (~late May, early June)
* Threshold ECDSA being activated on IC mainnet (on a 13-node subnet, not a subnet of the size for the production deployment) with a **test key** that will be deleted later on (~late May, early June)
Once the Bitcoin testnet API is open and threshold ECDSA is available with a test key, everything you need to develop dApps against is available in a testing environment.

DFINITY need to gain more operational experience on IC mainnet for both features before we can go live as everything needs to be bulletproof and we need high assurance of the correctness of both the feature before we allow everybody to store value with the feature. Such a conservative, security driven, approach should be in the interest of everybody interested in the feature. A lot of time now is being spent on assuring that everything is working as expected and ironing out minor issues in the code.

Further towards production, the following needs to be executed:
* Enabling the Bitcoin API for Bitcoin mainnet on IC mainnet
* Performing the full threshold ECDSA rollout on the NNS and second large subnet as explained in the following post: https://forum.dfinity.org/t/threshold-ecdsa-signatures/6152/163

Once those steps have been performed, people can switch their smart contracts over from the testing environment (Bitcoin testnet API, threshold ECDSA test key) over to the production environment (Bitcoin mainnet API, threshiold ECDSA prod key). We expect this around late June or first half of July if no unforeseen difficulties come up.

-------------------------

