kyliux | 2022-11-13 12:41:35 UTC | #526

Just make a proposal about it. People will agree with you I imagine.

-------------------------

pete-hun | 2022-11-13 13:40:00 UTC | #527

I agree with the above. I am not going to use a third party wallet instead of NNS just to hold my ETH there. If I could manage all my ETH (including tokens) in one place (NNS) it would be fantastic though and I would transfer everything I have on Ethereum blockchain to NNS. In my view it would also be beneficial to the whole ecosystem, because user engagement would grow exponentially.

-------------------------

timo | 2022-11-13 19:19:44 UTC | #528

What does it even mean to "hold BTC in the NNS"?

The NNS dapp is a software wallet, hosted on the IC and downloaded into your browser every time you open it, that leverages II to (simplified) equip it with the same key every time you download it and log in. Now that key can control assets in a canister such as ICP tokens in the ICP ledger (a canister) and bitcoin in the ckBTC ledger (another canister). The IC's Bitcoin integration means canisters can hold BTC. It doesn't mean the key that lives in your browser can hold BTC. There is one level of indirection.

So the straight-forward application is to integrate the NNS dapp with the ckBTC ledger. The flow is going to be something like this:
- get a Bitcoin deposit address displayed in the NNS dapp (the Bitcoin address being controlled by the ckBTC canister)
- use your normal Bitcoin wallet (or an exchange) to move BTC on the Bitcoin blockchain to the deposit address
- after N confirmations see balance in your NNS dapp shown as "ckBTC balance"
- move ckBTC around to other users at IC speed
- withdraw ckBTC by entering a destination BTC address into your NNS dapp, click send, and see BTC move on the Bitcoin blockchain to the destination address

So the experience of any step that causes Bitcoin move on the Bitcoin blockchain is exactly like in a native Bitcoin wallet. No difference, except that it says "ckBTC" instead of "BTC" next to your balance. Everything else is the same from a user experience perspective. You can use the NNS dapp to move BTC on the Bitcoin blockchain. Just temporarily while you hold them they are called "ckBTC". Other than that you won't notice a difference.

I postulate that the integration that people actually want who posted above is actually exactly the ckBTC integration that is coming.

Saying to want to hold Bitcoin "directly, not ckBTC" does not make sense. It it isn't possible. Bitcoin will be held by a canister and all we can have is a key that controls the entire canister or at least some assets in the canister. Because of this indirection we call them "ckBTC" and not "BTC". But the indirection will always be there.

The only other thing a user can do is to deploy his own canister, say a wallet canister, which operates exclusively for the user and have that wallet canister hold Bitcoin. Is that what people want and mean here? Replace the ckBTC canister? Then that wallet canister can trigger Bitcoin transaction on the Bitcoin blockchain. But I have problems seeing the benefit of doing so over a native Bitcoin wallet. If all you can do is move BTC on the Bitcoin blockchain then why not use a native wallet (or ckBTC with the NNS dapp)? Unless the wallet canister has sophisticated features programmed into it that can't easily be done by a native Bitcoin wallet, such as spending limits per time unit, second-party approvals, time-delayed withdrawals, whitelisted destination addresses, etc. Such things are nice but a little bit further away because such canisters have to be written first. When they are written then there are many question about a possible NNS integration. Should such personal canisters be integrated at all or is it not the job of the NNS dapp? If yes, then what feature set exposed by these sophisticated wallet canisters should the NNS dapp know about? Should the NNS dapp wait for a standard to be established on such wallet canisters? Etc. In any case, it seems way to early to think. about that.

-------------------------

gatsby_esp | 2022-11-13 19:27:29 UTC | #529

That's a great explanation Timo and the first time I hear it spoken in plain language. Thanks

-------------------------

Roman | 2022-11-13 21:10:32 UTC | #530

As usual. Marvelous explanation by @timo. It could be added to the [Internet Computet Wiki](https://wiki.internetcomputer.org/wiki/Internet_Computer_wiki) in its current state.  Thanks a lot üôè

-------------------------

passio | 2022-11-13 22:18:28 UTC | #531

Thank you for this explanation. I think what we still need now is a Core DEX allowing to swap BTC <-> ICP, and others SNS token. We need a core DEX, with a high level of security, no private team involved in it. This core DEX should have 0 fees, except fees required for transactions. There will be carnage if private entities control DEX and SWAP mechanism. We can let some private DEX exist, and some will probably offer some APY or advantages... But, we need a core DEX that we can trust, as a core mechanism. The core mechanism of a system should offer the most used features... The most useful feature, obviously, is to hold securely some tokens.. This what what have been done with NNS... The second most important is probably SNS and Bitcoin integration... But far, far, far, far, far beyond some features actually included in the roadmap, a secured SWAP mechanism is a priority. It must be a core functionality... ICP technology is unique, and more than any blockchain, it allows to do a Decentralized Exchange / swap mechanism as a core functionalitiy. 


I can participate to finance a proposal about a Core DEX, but i'm not enough english fluent to write it myself. We need a DEX, SWAP Mechanism as a core of ICP technology, like NNS. **dex.ic0.app** or **swap.ic0.app**

No matter how many token you integrate on ICP... It's useless if I can't securely swap them. The core swap mechanism is what will really bring liquidity on ICP...

-------------------------

dfisher | 2022-11-13 22:23:42 UTC | #532

How about this. I am a bitcoin holder and icp holder. I‚Äôd like to hold my bitcoin in the NNS dapp so I transfer it to the btc wallet associated with my NNS dapp. 

Now, I would like to send the bitcoin to somebody else. This other person doesn‚Äôt care about the IC. They don‚Äôt want to use the IC. They don‚Äôt have a IC wallet address. They cannot receive ckBTC. 

How do I send the BTC that is held in the NNS dApp directly to the person who only has a BTC address (not a ckBTC address)?

-------------------------

Ori | 2022-11-13 22:36:42 UTC | #533

@dfisher If I understand your intent correctly that‚Äôs this step:
[quote="timo, post:528, topic:6147"]
withdraw ckBTC by entering a destination BTC address into your NNS dapp
[/quote]

-------------------------

memetics | 2022-11-13 23:41:12 UTC | #534

Never too early üòâ thanks for the detailed explanation

-------------------------

dfisher | 2022-11-14 00:21:09 UTC | #535

Exactly. Ok thanks. This is fantastic news. Maybe there‚Äôs a difference between directly holding BTC vs ckBTC but I believe to the user the experience will be the same. 

As in, you can either ‚Äúwithdraw‚Äù BTC to any external BTC address or ‚Äútransfer‚Äù ckBTC to an external IC wallet. To the user it‚Äôll look like you can choose to transfer BTC to a BTC wallet or ckBTC to a IC wallet. 

This is amazing news and music to my ears! Hopefully will come out very quickly after the integration. 

Do we have a sense for timing on when it‚Äôll be integrated?

-------------------------

JaMarco | 2022-11-14 02:19:04 UTC | #536

[quote="dfisher, post:535, topic:6147"]
To the user it‚Äôll look like you can choose to transfer BTC to a BTC wallet or ckBTC to a IC wallet.
[/quote]
I'm not even sure why a user ever needs to see ckBTC. ckBTC could just be a backend implementation detail never exposed to the UI.

-------------------------

Denis | 2022-11-14 04:21:30 UTC | #537

[quote="timo, post:528, topic:6147"]
Saying to want to hold Bitcoin ‚Äúdirectly, not ckBTC‚Äù does not make sense. It it isn‚Äôt possible. Bitcoin will be held by a canister and all we can have is a key that controls the entire canister or at least some assets in the canister. Because of this indirection we call them ‚ÄúckBTC‚Äù and not ‚ÄúBTC‚Äù. But the indirection will always be there.
[/quote]

I apologise for being dense, because a bunch of people have understood this explanation and I have not, but I was under the impression that ckBTC was a wrapped token, ie, a 1:1 swap with BTC to allow for the faster transaction speeds on the IC chain. In other words, moving ckBTC on the IC chain does not move BTC on the BTC blockchain. If that is the case, there must be BTC held independently of ckBTC, right?
It is worth answering this even if it sounds stupid because I am pretty sure many others have the same misunderstanding I have.

-------------------------

kusiyo | 2022-11-14 04:52:46 UTC | #538

Thanks for your clarification. But I still have a little confusion.

There are three asset interaction problems here:
(1) BTC <-> ckBTC
(2) ckBTC <-> ckBTC
(3) BTC <-> BTC
It seems that the BTC integration has solved (1) and (2), but it is not clear whether it has also solved (3) directly, which should be easy because it is just a normal Bitcoin wallet function.

I think people are just hoping that the NNS app can also be used as a normal crypto wallet, i.e., everyone in the crypto world can just use the NNS app for all main coins they like (at least for BTC and ETH), whether they use ICP or not.

If (3) cannot be solved directly by the BTC integration (which should be easy), then there is an essential difference between BTC and ckBTC. For example, if the ckBTC canister goes wrong for whatever reason, then ckBTC in personal NNS accounts may go wrong, but BTC in personal NNS accounts will not go wrong because they are still in their personal BTC addresses.

-------------------------

gatsby_esp | 2022-11-14 10:34:03 UTC | #539

My conclusion is that 80% of the people investing in ICP still don't understand the scope of the main line of technological development, which is also the main marketing effort: Bitcoin integration.
This is a wake-up call for the growth and business team (Eva Oberholzer, etc.). Technology is as important as sales. If the user DOESN'T understand the product, they WON'T BUY IT.
Set up simple use cases, demos, previews of what nns will look like after integration. Use plain language, distance yourself from the software developer profile. 
Growth is about sharing and making the vision and advantages of each functionality understood by as many people as possible.
And as you can see, nobody visualises the final deliverable of the product.

-------------------------

Manu | 2022-11-14 10:38:27 UTC | #540

Hi everybody! I see my last comment caused quite some discussion :). I appreciate the feedback! 

First, I think it's very important to realize that BTC integration is not one big milestone and then suddenly everything is there. 
* Step 1 was releasing the test ECDSA key and BTC testnet access to get people building on top of it, which we released in August. 
* Step 2 will be a "production" ECDSA key and BTC mainnet, which allows all canister devs to build real applications. This is the milestone we're aiming to hit this month. 
* Then over time, I hope to see more and more canisters building on these new APIs. We are working on ckBTC, which we hope to have ready not long after step 2, and many others are already building on these APIs (eg Psychedelic with Plug and AstroX have previewed wallets building on the direct integration, and I believe InfinitySwap plans to do the same).    

@timo's [comment](https://forum.dfinity.org/t/direct-integration-with-bitcoin/6147/528?u=manu) explains our first plans for the NNS dapp very well, so the NNS dapp should let you deposit and withdraw native bitcoin, but then I imagine you mainly use it in ckBTC for quick transactions. We can of course build that out further to work more like a native BTC wallet as well, but we have to take things one at a time.

-------------------------

Manu | 2022-11-14 10:47:16 UTC | #541

[quote="kusiyo, post:538, topic:6147"]
It seems that the BTC integration has solved (1) and (2), but it is not clear whether it has also solved (3) directly, which should be easy because it is just a normal Bitcoin wallet function.
[/quote]
Yes, your understanding is right, this can definitely be built using the BTC integration. 

[quote="gatsby_esp, post:539, topic:6147"]
Technology is as important as sales. If the user DOESN‚ÄôT understand the product, they WON‚ÄôT BUY IT.
Set up simple use cases, demos, previews of what nns will look like after integration. Use plain language, distance yourself from the software developer profile.
Growth is about sharing and making the vision and advantages of each functionality understood by as many people as possible.
And as you can see, nobody visualises the final deliverable of the product.
[/quote]
This is a great point, I 100% agree. But to be clear, I think right now, we're working mainly on the low level canister APIs, so our target audience are developers. When there are nice user-facing dapps it will be much easier to convince a broader audience, so I expect more user-facing messaging at that point, does that make sense?

-------------------------

timo | 2022-11-14 11:08:27 UTC | #542

[quote="kusiyo, post:538, topic:6147"]
(3) BTC <-> BTC
It seems that the BTC integration has solved (1) and (2), but it is not clear whether it has also solved (3) directly, which should be easy because it is just a normal Bitcoin wallet function.
[/quote]

Can you describe in more detail your expectations around (3)? I understand you expect for example that in the user interface it says "BTC" next to the balance and not "ckBTC" or anything else, and that it says "Send" in a button and not "Withdraw". But what do you expect with respect to coin handling? Shall your outputs be segregated from other users, i.e. if you send BTC into your NNS dapp wallet and out again do you expect the same coins to go out? Or is it ok if they get mixed with the coins from other users?

In other words, is looking like a typical Bitcoin wallet enough or does it also have to behave exactly like one?

-------------------------

Nsk | 2022-11-14 13:26:20 UTC | #543

Correct me if I was wrong. For me, it seems like ckbtc is nothing much different from the normal wrapped btc on the other chain. Theoretically, we would still have to trust a third party contributor dfinity like the bridge on the other chain. Transferring native btc between icp wallet and btc wallet will still have to go through nns like the bridge on other chain.

Speaking about user experience, I'd say the ideal situation would be enabling users to withdraw btc from exchanges to the same address that we used to send our icp to. It would be nice if segregation is feasible as it sounds safer to me (as the word goes do not put eggs in one basket), but since i'm not the expert here so I do not really want to comment on the implementation part.

-------------------------

Azat | 2022-11-14 14:57:09 UTC | #545

Timo wanted to know in which cases a BTC <> BTC pair is needed if there is ckBTC <> BTC.
Just clarifying questions. Perhaps for users this is not so necessary.

-------------------------

Manu | 2022-11-14 15:08:42 UTC | #546

I think this is a very important question. In my view, ckBTC is *very* different than many other wrapped assets. The crucial difference is that in ckBTC, a canister smart contract (that builds on the native BTC integration) is responsible for minting and redeeming wrapped tokens, instead of having some centralized party handle the minting and redeeming. We just saw an example of the importance of this with soBTC on solana: apparently FTX played a very central role here, because you could only redeem your soBTC for real BTC there, which means that soBTC lost its value now. 

This should be impossible for ckBTC, because you deposit native BTC to a canister smart contract controlled BTC address to obtain ckBTCs. This canister, the "ckBTC minter", will hold one native BTC for every ckBTC it issues, and you can always use this canister to redeem your ckBTCs to get native BTC back. The ckBTC minter would be controlled by the NNS, so it can't suddenly stop / disappear.

-------------------------

singularity | 2022-11-14 15:10:25 UTC | #547

I think some users want to see IC doing BTC to BTC as well, just so that IC differentiates itself from other chains that can only do wrapped BTC, by demonstrating this breakthrough on NNS.

-------------------------

Manu | 2022-11-14 15:43:28 UTC | #548

[quote="Berg, post:544, topic:6147, full:true"]
Is this a joke reply or you‚Äôre serious? Please, consult someone before replying on sensitive matters, especially when Manu already tackled this question.
[/quote]

As @Azat said, I think Timo was just asking clarifying questions wrt what users exactly want, so let's try to keep things constructive and polite :). 

[quote="singularity, post:547, topic:6147, full:true"]
I think some users want to see IC doing BTC to BTC as well, just so that IC differentiates itself from other chains that can only do wrapped BTC, by demonstrating this breakthrough on NNS.
[/quote]
Yes of course, I agree that this should exist. I am very convinced that parties like Psychedelic/InfinitySwap/AstroX will build wallets that let you hold and transfer native BTC, but as I said, we can also see if we want to add this to the NNS dapp. It's just quite different from other tokens it will hold, because right now it's focused on supporting ICRC1 tokens, and native BTC is of course quite different.

-------------------------

hokosugi | 2022-11-14 21:23:34 UTC | #549

It looks to me like a bridge that the BTC wallet is not directly integrated into NNS and can only be handled in the form of ckBTC. t-ECDSA subnet is an independent subnet outside the NNS subnet (I could be wrong), but it has the same 34 nodes as NNS and the same equivalent security, right? And since the private key is supposed to be backed up at NNS, it is not too much to say that the private key is at NNS. The point is where the private key is located.Can you help users understand with this kind of explanation?

-------------------------

kusiyo | 2022-11-15 00:14:59 UTC | #550

My thought is simple: 
    The NNS app should be able to be used as a normal crypto wallet, i.e., to generate BTC (ETH) private keys and to send&receive real BTC (ETH) without any restriction.
As Manu demonstrates, there should be no technical difficulties here.

Suppose that one day the NNS app is suddenly banned by all the governments in the world and I suddenly cannot log in my NNS account anymore. Then my ckBTC (ckETH) in my NNS account may lose my control, but my BTC (ETH) in my NNS account will be okay (I just need another crypto wallet).

In sum: I hope that one day I can put all my crypto assets into the NNS app, and in that case I definitely hope that it should be as safe as possible.

In addition, if the NNS app can be used as a normal crypto wallet, then obviously it will attract many non-ICP coiners. In my opinion, this is such a good marketing strategy.

-------------------------

Azat | 2022-11-15 08:37:39 UTC | #551

I think if you turn IC into a crypto wallet, then:
1) there is a chance to stay behind Web3 competitors, because forces are spent not on the main direction.
2) attracting large capitals to wallets = attracting hackers.
3) develops only a Ponzi scheme, not an IC

A large decentralized ecosystem with many projects (entertainment, news, gaming, social networks) with a single authorization. I think this is what we should strive for.
Therefore, it is necessary to develop current projects and provide excellent opportunities for new projects.

p.s when I go to DSCVR, 95% of the content is cryptocurrency news and airdrops, it's upsetting.

-------------------------

gatsby_esp | 2022-11-15 09:39:08 UTC | #552

I agree.
And still haven't seen a plan to bring ICP strengths to the enterprise software sector to compite with traditional hosting clouds (AWS, Azure, etc.) and an accurate comparison with them. 
It is extremely important to address this matter soon because until then we will be just a platform for crypto bros. For instance, Ripple does not have ICP tech, but they have extremely good people at banking business and they've provided banks real solutions. IMO this is what ICP lacks.

-------------------------

klodi | 2022-11-15 15:54:44 UTC | #553

Thanks Timo and Manu for the explanations above. 

My takeaway from this discussion is that the general audience is still confused about the technicals of the Bitcoin Integration. I completely agree with @gatsby_esp here. If people are under impression that the integration is just another variation of a wrapped BTC token, they may overlook this amazing technology. 

That's why I think short educational videos could be very effective in explaining these key differences. Take a look at the Binance Academy; short and easily digestible videos which clearly explain the topic. I think not only would these videos help the general public to understand the technicals but it could also grab attention of developers, who @Manu said are the current target audience. I feel like a lot more people would watch a 3-4 minute long video rather than read 3-4 written pieces.

But this is more on the growth team than the R&D team. I just felt it was worth mentioning while the related discussions took place. I would love to hear more from Eva and others to make sure the Bitcoin Integration is heard by broader audience.

-------------------------

romulusp | 2022-11-15 16:36:57 UTC | #554

Thank you Klodi for this post, you pinpoint exactly my felling. As myself and  loot of people don't have technical knowledge and we are in need to know in common word what the hell is happening and what its mean. So, Eva please help us to understand and translate in common word  :slight_smile: 
Its was a long time when we didn't hear you voice.

-------------------------

saone-pt | 2022-11-15 18:31:08 UTC | #555

Hi folks, this is Eva. Thanks so much for your feedback - much appreciated. Give me some time to go through the entire thread and give you a detailed answer to some of your questions (1/2/3). We are also in the process of interviewing someone who can talk about BTC integration from a real use case perspective, how it differentiates from known L2 solutions, and the end user perspective/benefit. 

To add to @gatsby_esp's point about user adoption: The first question to always ask when defining a (marketing) strategy is what problem the product solves for users and, more importantly, whether they are aware of their problem. The (new) features of the IC (such as BTC integration) will hopefully drive project/product development. These projects will, respectively, already work on solving real live problems for different end user groups in the area of data privacy, transparency about e.g. source and use of funds, social and financial coordination/mobilization, accessibility etc. The success of these projects/products will be a real flywheel for (not only crypto) investors to look into ICP. 
Conditions are very tricky right now for crypto in general. So I agree with you, we should focus on the benefits and great technology and solve bigger problems than those of crypto investors - and talk about it in a way everybody understands.

-------------------------

jzxchiang | 2022-11-16 05:55:47 UTC | #556

Just throwing this out there: I wonder if anyone has any recommendations or thoughts about fiat-to-crypto on-ramps. In a world where BTC can be directly transacted with using IC-hosted dapps, I imagine many users who have never bought BTC will want to buy some to use on the dapp.

Asking them to create an account on Coinbase, buy it there, then transfer it to the dapp... that doesn't seem like a winning UX.

-------------------------

Berg | 2022-11-16 06:49:26 UTC | #557

Spot-on reply! Would appreciate you being more active on such user-facing topics more often!

-------------------------

JaMarco | 2022-11-16 15:15:00 UTC | #558

You can already pay with fiat using http outcalls https://twitter.com/icme_app/status/1583126850368606208

-------------------------

Inch_Deen | 2022-11-16 16:47:34 UTC | #559

then what' the time plan for BTC integration come out. it is postponed again and gain. Dfinity has claimed it will come in Sep, but it's nearly December now. We don't just want to see ur saying it will come. We need it to launch immediately. So what's the excat time for it coming out. Give community a excat answer.

-------------------------

smaug | 2022-11-16 16:54:58 UTC | #560

Asking for an exact time, sadly, won‚Äôt help things move along. We all want the Bitcoin integration to have happened yesterday. The more important issue is that it is done correctly. 

The delays are frustrating, especially to investors who have seen their investment move the wrong direction (I think that‚Äôs everybody). But we don‚Äôt want to create a pressure cooker environment where the only objective is haste.

-------------------------

Inch_Deen | 2022-11-16 17:03:23 UTC | #562

we must acknowledge we investment move the wrong direction, but it‚Äôs no use for complaint. We do not to give any pressure. If team can‚Äôt give plan then pls don‚Äôt post it on all kinds of medias to say how wonderful it is. Without hope then with lossing faith. Why don‚Äôt u can not do action like ETH who will give rough plan for any updating on their mainnet.

-------------------------

JaMarco | 2022-11-16 18:57:12 UTC | #563

[quote="smaug, post:560, topic:6147"]
The delays are frustrating, especially to investors who have seen their investment move the wrong direction (I think that‚Äôs everybody)
[/quote]
Ya'll do realize the btc integration release isn't going to pump up the icp price right?

-------------------------

singularity | 2022-11-16 21:00:41 UTC | #564

Price is down because of FTX manipulation of ICP. So it is actually good that Bitcoin integration is coming when FTX has been exposed.

-------------------------

hokosugi | 2022-11-16 21:14:54 UTC | #565

What about off-ramps, is the foundation discussing anything about off-ramps, it would be nice if the foundation could partner with a credit company to serve as a withdrawal function. Of course, I am well aware that there are many legal and other barriers that need to be cleared.

-------------------------

dieter.sommer | 2022-11-16 21:37:25 UTC | #566

Dear community

Here's an update regarding the Bitcoin canister implementation, with a focus on stable memory usage and another (solved) challenge.

Due to the memory requirements of the Bitcoin Mainnet canister, the available stable memory per canister on the IC has been increased first to 16, then to 32 GB some weeks back. This has been done IC wide, so everyone can benefit from this stable memory increase.

**Bitcoin Testnet canister**

The Bitcoin Testnet canister is making use of the increased memory limit already, currently using over 13 GB, and it has been working pretty smoothly so far.

**Bitcoin Mainnet canister**

The Bitcoin Mainnet state is currently around 29 GB in our data representation. We added additional indices to speed up the `get_balance` method. The additional data structures consume around 7 GB extra, so the overall memory requirements now are around 36 GB. This is over the 32 Gb limit we currently have on the IC.

We have been exploring different options on how to resolve this. Optimizing the data representation would bring us below 32 GB, but only slightly, so that we would run into the same problem again soon, add additional complexity, and get other disadvantages. Thus, we decided to take the easier path of increasing the stable memory limit from 32 GB to 48 GB. This gives us some headroom for the future to not immediately run into the same issue again with the growing Bitcoin UTXO size.

-------------------------

InsaneClownPosse | 2022-11-16 21:52:23 UTC | #567

Can we assume mainnet launch won't be ready in November?

-------------------------

dieter.sommer | 2022-11-16 22:12:28 UTC | #568

It would be too early to make this claim. We are definitely on a tight timeline, but if things work out, it is still possible that both Bitcoin and threshold ECDSA roll out in their GA releases at the end of November. But it's tight.

-------------------------

Choiseongin | 2022-11-17 01:14:16 UTC | #569

It's okay even next year.
There's nothing more to lose anyway.
Chase absolute perfection.

-------------------------

Sal_Paradise | 2022-11-17 08:27:36 UTC | #570

The whole market is in disarray, so IMO, I don't feel anything of this magnitude should be rushed. If it has to wait until next year until you're 100% happy then so be it. The community has to understand this integration will have minor effects on the price. The applications that are built from it, will. So if it doesn't work or breaks down, all the efforts are wasted, especially from the reputational level. Patience.

-------------------------

Jabberwocky | 2022-11-17 13:07:10 UTC | #573

If you don‚Äôt believe in this project then sell and never look back. Go buy matic or something and stop complaining. Your whole entire post history on the forum is just complaints. If you don‚Äôt like this project then and stop shitting up the board

-------------------------

plsak | 2022-11-17 13:38:19 UTC | #576

I guess it might be time for @diegop to step in, not sure...

-------------------------

Sal_Paradise | 2022-11-17 13:38:26 UTC | #577

If you think this integration is going to have any sort of meaning impact on the price of ICP, you're going to be sorely disappointed.

-------------------------

Jabberwocky | 2022-11-17 13:47:30 UTC | #578

Then keep far away from it. Everyone here this is a good example as to why the dev forums needs to be moved on chain and an internet identity should be required for log. This guys apart of the same group of people that literally troll this forum. The devs here can‚Äôt even tell and then take their responses seriously. Literally do not waste your time with these people.

-------------------------

Sabr | 2022-11-17 14:02:06 UTC | #582

[quote="Inch_Deen, post:575, topic:6147, full:true"]
how could u have face to say how good it is about icp, one shitcoin let veryone loss 99% of their money, let people keep far away from it is everyone‚Äôs duty. shut up your mouth.
[/quote]

If ICP is a "shitcoin" that "let veryone [sic] loss [sic] 99% of their money", then why are you so anxious about when a new technical feature will be released, especially since "it is everyone's duty" to "keep far away" from this investment? I'm having trouble finding some basic consistency in your logic here. 

As for those stupid enough to buy a pre-launch startup at a $300+ billion valuation with nowhere to go but down, I can only comment that they are well deserved recipients of the financial Darwin Award. Even at its currently depressed price of about $4, ICP still has an implied valuation of nearly $2 billion - a double unicorn, if you will. Keep in mind that we are in a bear market deep into a crypto winter with a rampant contagion of insolvency spreading across the entire crypto industry. Combine this with the fact that the IC has not even launched its SNS ecosystem yet, which is where its entire recurring revenue base (i.e., burned ICP) will ultimately come from. In this context, one could argue that a $2 billion valuation is still quite optimistic with a lot of potential downside.

-------------------------

Jabberwocky | 2022-11-17 14:28:21 UTC | #583

Your comment I originally replied to in literally complaining about the development time of a feature being released when they the devs state it‚Äôs done when it‚Äôs done.

-------------------------

Jabberwocky | 2022-11-17 14:30:59 UTC | #584

This coin is the most criticized coin to exist post launch day. Your criticisms aren‚Äôt even real criticisms you‚Äôre just complaining that a feature that has never been done before hasn‚Äôt been released yet and claim it‚Äôs never going to release. If you really think that why even pay attention and waste your time on this project at all?

-------------------------

Jabberwocky | 2022-11-17 14:31:56 UTC | #585

It‚Äôs pretty funny outing you people out.

-------------------------

diegop | 2022-11-17 17:34:19 UTC | #586

@Inch_Deen As a moderator of the forum, I ask you please change your tone. In particular:

1. Focus on the subject at hand. Most of your comments are not about about the BTC integration or threshold ECDSA.

2. Statements like:

> you will delay again and gain to increase stable limit from 48 to 64, then to 80, 96, 112‚Ä¶
> It won‚Äôt come out finally.
This comments implies that the BTC integration team is just pointlessly (perhaps even maliciously) looking for excuses. Instead of doing honest Research & Development as they work. I think that is unfair..

No need to delete your earlier comments (I have certainly said my fair share of nonsense on the internet, so I cannot cast stones), but can you please elevate your tones for future conversation?

-------------------------

diegop | 2022-11-17 20:56:35 UTC | #588

[quote="Inch_Deen, post:587, topic:6147"]
Who cares? I asked when it comes out? Your team delay again and again. Isn‚Äôt that tire? Waste customers? Don‚Äôt chart communities. Let people only say good words to ur team? I don‚Äôt care!!!
[/quote]

Maybe my writing was vague and fuzzy, but I think there may be a miscommunication

> I asked when it comes out?

To be fair, @dieter.sommer answered the exact question. What more were you looking for?

[quote="dieter.sommer, post:568, topic:6147, full:true"]
It would be too early to make this claim. We are definitely on a tight timeline, but if things work out, it is still possible that both Bitcoin and threshold ECDSA roll out in their GA releases at the end of November. But it‚Äôs tight.
[/quote]

> Your team delay again and again.

The team is doing research and development. They post updates on what they find, whether it be security, performance or other issues. I think it's worth reiterating that what they are doing has NEVER been done. It is a lot of testing and experimenting. Expectations need to be aligned.

> Waste customers? Don‚Äôt chart communities.

Not sure what this means, maybe you can clarify.

> Let people only say good words to ur team? I don‚Äôt care!!!

I am not saying that people should only say positive things. I am saying that people should only be respectful. There is plenty of criticism and questions not just for the team, but also amongst community members, and I just ask that it be respectful and reasonable.

I hope that makes sense.

-------------------------

InsaneClownPosse | 2022-11-17 23:02:21 UTC | #589

Is buying icp at $45 because of some larper on a basket weaving board just as bad as buying the launch? Say it ain't so

-------------------------

dieter.sommer | 2022-11-18 10:47:51 UTC | #590

The [recent progress update](https://forum.dfinity.org/t/direct-integration-with-bitcoin/6147/566) seems to have created quite some discussion of one form or the other. Thank you, @diegop, for having calmed down some of the voices. :-)

I would fully agree that the forum is not the place for comments of the style and tone of some recent examples see in this topic. There are other places for polemic like this, e.g., various Telegram groups. The forum is reserved for technical, strategy, and other *relevant* discussions related the topic, but not polemic comments.

The teams working on Bitcoin and threshold ECDSA are working their a**es off to get this feature out to the public. As most here know, it is just a little complex and thus requires some issues to be solved here and there. We have been discussing the complexities and challenges of the Bitcoin part of the integration. Please have a look at the [threshold ECDSA protocol](https://www.shoup.net/papers/2022-506.pdf) we are implementing, that's way beyond what any other blockchain project is even daring to touch. And there are challenges that need to be overcome here and there. So I hope this can also make clear to the critics here that this is exploratory work that may lead to challenges.

The most recent piece of work regarding threshold ECDSA is actually a request by the community for further strengthening its security by implementing IDKG key rotation, which is the only remaining blocker there.

The recent update mentioned that things are tight for an end-of-month release. End of November has been the goal since quite some time. Let me give you the details of our plan of how we can make the end-of-month release happen.

* Nov 14: Hotfix release implementing the increase of stable storage per canister to 48 GB.
* Nov 18: Have Bitcoin Mainnet canister working on a small subnet for now (manual install, not through NNS) to test the 48 GB limit and operation of the canister with the full storage amount for Mainnet.
* Nov 21: Hotfix release for IDKG key rotation for threshold ECDSA.
* Nov 23: All remaining changes for threshold ECDSA are included in the weekly release cut.
* Week of Nov 28:
  * Rollout of IDKG key rotation.
  * Install BTC Mainnet canister via NNS proposal
  * Upload BTC Mainnet state to canister
  * Create threshold ECDSA production key on a large subnet
  * Create a new app subnet with a high replication factor (~34 nodes) and re-share threshold ECDSA key to this subnet
* Have a party

As you can see, everything is on a critical path to get the feature done, that's why we mentioned the following:

[quote="dieter.sommer, post:568, topic:6147"]
We are definitely on a tight timeline, but if things work out, it is still possible that both Bitcoin and threshold ECDSA roll out in their GA releases at the end of November. But it‚Äôs tight.
[/quote]

We hope that the above can convince most of you that we do have a very clear plan for a rollout of the feature by end of the month, which can work out if there are no new challenges. If there are, it may add a delay, but no one can tell right now whether this will be the case. Let's hope for everything going smoothly and we all getting a shiny new feature for the IC!

-------------------------

mparikh | 2022-11-18 13:17:16 UTC | #591

Thank you, @dieter.sommer for the updates. 

Like I have mentioned in the past, it is far more important to have both BTC-Integration and T-ECSDA CORRECT RATHER than ON-TIME. Schedules are given by men/women. They can be broken.

 Broken trust (of code not working, buggy) is not easy to recover; especially with extremely shiny features. 

We are in the last lap; but to land this thing will take patience & perseverance. My only request is : don't listen to noise.

-------------------------

DHemingway | 2022-11-18 13:37:46 UTC | #592

The technical level and scope of work that is being performed by the teams working on these projects is something I could only dream of fully understanding. 
Thankfully there is an amazing team working hard on these projects and after implementation you can all enjoy a party for the hard work and dedication to the project that you so much deserve. 
Rooting for you all & so sorry that you have to endure negativity along the way, but I guess that is par for the course when you‚Äôre a brilliant team of innovators. Thank you and rooting for you.

-------------------------

Manu | 2022-11-18 14:04:42 UTC | #593

[quote="dieter.sommer, post:590, topic:6147"]
* Have a party
[/quote]

I'm looking forward to this part :grin:

I also want to again mention that what we're planning to release end of this month is really developer facing: it gives canister developers the APIs they need to build dapps that work with bitcoin / ECDSA. This is not directly user facing. So while I absolutely think this is going to be a big deal for the IC, I expect more of a slow and steady growth of cool new IC dapps that use BTC/ECDSA than a sudden big bang.  

DFINITY is building ckBTC (the "wrapped" BTC, but wrapped by a canister), building on the native BTC integration. This will not launch this month but later, but that will be something that end users can actually use for fast & cheap BTC transactions. Note that next week there is a public DFINITY Global R&D meeting that you all can join (register [here](https://internetcomputer.org/live-sessions)) where we will give a demo of the progress on ckBTC.

-------------------------

dieter.sommer | 2022-11-18 15:00:07 UTC | #594

[quote="mparikh, post:591, topic:6147"]
Like I have mentioned in the past, it is far more important to have both BTC-Integration and T-ECSDA CORRECT RATHER than ON-TIME. Schedules are given by men/women. They can be broken.

Broken trust (of code not working, buggy) is not easy to recover; especially with extremely shiny features.

We are in the last lap; but to land this thing will take patience & perseverance. My only request is : don‚Äôt listen to noise.
[/quote]

We agree to all of that and it's a pleasure to see that people understand the importance of this!

Security always comes first for features that wholly depend on security, like the Bitcoin integration. That's why some things have taken us longer. But now we are in the final lap and will be able to release shortly!

Thanks everybody for their patience. You won't be disappointed with what you will be able to do with this feature soon!

-------------------------

aSpace1 | 2022-11-18 15:16:31 UTC | #595

Thank you for the updates

-------------------------

dfisher | 2022-11-18 18:54:13 UTC | #596

Thanks so much for the frequent updates. I believe the community doesn't mind delays provided we are kept in the loop. We appreciate you guys working so hard!

-------------------------

Internationalwaters | 2022-11-19 01:29:15 UTC | #597

Hi, I have seen a paper you helped edit that said that ICOracle token (trading on the ic.lighthouse dex) will be needed for the Bitcoin smart contracts. Is this true or false.

-------------------------

icme | 2022-11-19 09:29:28 UTC | #598

Thanks for the updates Dieter!

Given the new index and the multiplier effect of that on the memory used, how long do you anticipate the 48GB will be able to hold the Bitcoin state until stable memory limits will need to be bumped again?

Also, instead of holding all of the state in a single canister and scaling vertically against hardware limitations, why not shard it horizontally? Imagining we get the new composite queries feature sooner rather than later and the Bitcoin integration is on its own subnet, wouldn‚Äôt this both help work around some of the current memory limitations and also improve the load scalability of the Bitcoin integration since the request load isn‚Äôt all then hitting a single canister?

We‚Äôve now gone from having just 8GB of stable memory for over a year to then 32GB and now 48GB pretty quickly, which is exciting but also makes me wonder if using the full 32GB and 48GB has been tested thoroughly to ensure there isn‚Äôt much performance degradation.

Back in April, I asked,

[quote="icme, post:255, topic:6147"]
Why not attempt to scale out the UTXO set storage horizontally instead of vertically?
[/quote]

What makes the team feel confident that vertically scaling the Bitcoin integration within a single canister is still the right long-term architectural decision?

-------------------------

cyberowl | 2022-11-19 11:02:38 UTC | #600

Do you happen to know if we have to do anything special in our code to take advantage of 32GB or is it just included without any changes. Currently using `mo:base/HashMap`

-------------------------

Manu | 2022-11-19 15:21:58 UTC | #601

You would need to use stable memory directly, so https://internetcomputer.org/docs/current/references/motoko-ref/experimentalstablememory/. If you have more questions I think https://forum.dfinity.org/t/motoko-stable-memory-in-2022/10433 would be a great place to ask.

-------------------------

Manu | 2022-11-19 15:28:05 UTC | #602

[quote="icme, post:598, topic:6147"]
What makes the team feel confident that vertically scaling the Bitcoin integration within a single canister is still the right long-term architectural decision?
[/quote]

That's a great question. We thought it was the right way to go for now. Scaling out to multiple canisters has advantages (more memory, can run concurrently) and disadvantages (clearly more complex to deal with multiple canisters). So we start with the simpler approach, and can always transition to a multi-canister approach in the future.

Note that the UTXO set doesn't grow super quickly https://www.blockchain.com/explorer/charts/utxo-count. In the last 3 years, it grew from 64M UTXOs to 85M, and we plan to grow the stable memory further, so I don't think the single canister approach will be a problem any time soon, if ever.

-------------------------

Tony89 | 2022-11-19 23:31:40 UTC | #603

[quote="icme, post:598, topic:6147"]
Thanks for the updates Dieter!
[/quote]

Thanks for the updates Dieter!üôèüèª‚ô•Ô∏è

-------------------------

CatPirate | 2022-11-20 06:28:24 UTC | #604

[quote="dieter.sommer, post:590, topic:6147"]
implementing IDKG key rotation, which is the only remaining blocker there.
[/quote]

could you please expand on what IDKG key rotation does?

-------------------------

Astrapolis-peasant | 2022-11-21 06:21:05 UTC | #605

All t-ecdsa addresses are new, why do we need to store historical utxos on chain? Just the related utxos would be sufficient

-------------------------

timo | 2022-11-21 07:52:49 UTC | #606

The Bitcoin canister, which tracks the UTXO set, does not know which addresses all the user canisters created and gave out. A user canister can create a deposit address in canister code and hand it out to a some other user who can then make a deposit into that address. Then the user canister later wants to be able to ask the Bitcoin canister about the balance in that address. If the Bitcoin canister did not have the entire UTXO set then it would not be able to answer. The addresses that user canisters create cannot be foreseen as they are chosen from a practically unbounded hierarchical address space.

-------------------------

Astrapolis-peasant | 2022-11-21 08:36:46 UTC | #607

How about notifying the Bitcoin Canister to cache the related utxo like light client

-------------------------

timo | 2022-11-21 09:04:04 UTC | #608

Seems to make for unnecessarily complicated programming and possibly even serious limitation. If a notification is required then the canister code can not directly answer a call with a deposit address. It has to do a round trip through the Bitcoin canister first, adding latency. If we notify the Bitcoin canister about an address only later then there is a race condition. Does the notification come in first or the deposit? If the latter then the deposit would get missed. Unless the Bitcoin canister gets a feature to query UTXOs that were created in the past from other Bitcoin nodes, which now complicates its code. It now has to be able to process Merkle proofs and the Bitcoin adapter has to get a new feature to make those queries. It just seems to get really messy. The serious limitation could be if deposit address are created outside (externally, off-chain), e.g. in frontend code or even in scenarios that are entirely offline, which are possible with HD-derivation. Then there is no way to notify the Bitcoin canister.

Notification also open an attack vector on the Bitcoin canister. I can now ask the Bitcoin canister to track millions of address that I never actually use.

-------------------------

Astrapolis-peasant | 2022-11-21 11:48:20 UTC | #609

Gotu. So how about only calculating the utxo for new addresses of the btc network. Considering snapshoting all existing addresses in a set, and only cache utxo for newly generated addresses. That would still cut all pre existing utxos

-------------------------

timo | 2022-11-21 13:46:13 UTC | #610

Good idea. I think that could work. Or could have worked if that path had been chosen earlier. From where the implementation stands now the fastet way to launch is propably not touching that aspect anymore and increasing the stable memory size instead (my guess, I can't speak for the team that is working on it).

A different aspect: over time I would certainly like to see the Bitcoin integration move into the opposite direction and store the entire Bitcoin blockchain, i.e. all historical transaction including spent outputs. Could be spread over multiple canisters. Then we would have a block explorer running on chain which is something that doesn't exist in the world. There simply are no decentralized block explorers, hence there are no trustless block explorers right now. Likewise, there are no trustless Bitcoin full nodes that SPV nodes can connect to. A decentralized Bitcoin full node on the IC would be hugely beneficial for the Bitcoin ecosystem. For example, for smartcards or IoT devices accepting Bitcoin. They can then just validate a single signature created by the IC subnet instead of having to validate Merkle proofs and proof-of-work header segments.

-------------------------

Manu | 2022-11-21 21:07:30 UTC | #611

See the [threshold ECDSA forum thread](https://forum.dfinity.org/t/threshold-ecdsa-signatures/6152/245?u=manu)

-------------------------

mymikemiller | 2022-11-23 18:04:14 UTC | #612

That Bitcoin to/from ckBTC demo in the Global R&D Meeting just now was fantastic. Does anyone know who gave that presentation, or where the demo code lives? I'm looking to integrate payments into my grant project at this exact moment and that code would be incredibly helpful!

The demo I'm talking about is the [ckBTC Minting Demo hosted on the IC here](https://n3lcv-waaaa-aaaag-qazsa-cai.ic0.app/), that lets you convert Bitcoin to/from ckBTC, which can be transferred easily/cheaply/quickly throughout the IC.

-------------------------

Manu | 2022-11-23 20:17:56 UTC | #613

Glad you liked the demo! The canister code is https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc, I don't think the front end is checked in as it's just for the demo, but I guess the backend is what you're most interested in?

-------------------------

mymikemiller | 2022-11-23 21:32:20 UTC | #614

I'm definitely interested most in the backend. But it looks like I might need to learn Rust; the rest of my codebase is in Motoko and that's where my experience lies. Any chance there will be a Motoko version of demo code? Or am I wrong when thinking that I would need to implement all the backend code you linked to in my own canisters, and maybe it's just a public canister on the IC somewhere that I would be interacting with, or maybe a library I could import with Vessel?

Either way, frontend code would be handy to see the usage of the backend canister during all the operations shown in the demo.

-------------------------

0rions | 2022-11-23 22:38:08 UTC | #615

Hi @mymikemiller, I am the one who gave the demo. Really happy to hear that you liked it :)
If you want I can make a repo with the frontend code, it's a react app. It may be a good starting point if you want to understand how to interact with the minter and the ledger. 
If don't know rust you can still interact with the minter using [minter.did](https://github.com/dfinity/ic/blob/master/rs/bitcoin/ckbtc/minter/ckbtc_minter.did). You just have to know the canister id and the did interface to interact with another canister from your canister. But probably that taking a look at the code will help you to understand.
We will probably not make a motoko version any soon. I will try to see where is the best place to share my code and keep you up to date.

-------------------------

mymikemiller | 2022-11-24 16:38:13 UTC | #616

Fantastic demo, @0rions! If I'm interpreting you correctly, I ought to be able to import your ic-ckbtc-minter canister by specifying its IC cid in an Actor's constructor like [this](https://forum.dfinity.org/t/when-is-import-canister-ic-canister-id-used/12618?u=mymikemiller), which also currently requires me to duplicate the canister's interface (i.e. there's no way to specify the .did file you linked to and have it infer the interface from that), then use its public functions like any of my local canisters, right? I've never imported a canister from the IC.

I believe that means I will need to provide my own implementation for local development since local canisters can't access IC canisters, and I could do that by compiling my own local canister from your above-linked [Rust source](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc), or at least by making a mock canister with the same interface as described [here](https://forum.dfinity.org/t/how-to-import-an-ic-deployed-canister-in-my-project-so-it-works-with-local-deployment/9875/2?u=mymikemiller).

The cid I would pass to the constructor when creating the ic-ckbtc-minter Actor is not the cid in the url you listed in the demo, [waaaa-aaaag-qazsa-cai](https://n3lcv-waaaa-aaaag-qazsa-cai.ic0.app/), though, since that's the cid for the frontend, right? What's the cid for the backend canister where the backend functions live?

-------------------------

Debodinho10 | 2022-11-24 06:59:38 UTC | #617

An amazing project which has a high futuristic growth potential, capable of moving to the moon

-------------------------

dfisher | 2022-11-28 02:21:41 UTC | #618

Hey Manu,

Has Dfinity given further thought as to how it wants to approach the Ethereum integration? It will be amazing when we can use ICP Dexes to do bitcoin <> eth swaps. Will create demand to burn cycles among folks who don‚Äôt even want to use icp!

-------------------------

ielashi | 2022-11-28 18:44:40 UTC | #619

Hey everyone, we‚Äôre happy to share that we are still on track to launch the Bitcoin integration this week. Since the Bitcoin mainnet canister will be under NNS control (just like existing NNS canisters and internet identity), the launch will consist of three NNS proposals, all in the topic of ‚Äúsystem canister management‚Äù:

1. A proposal to install an `uploader` canister. This is a canister that will be used to upload a precomputed state of the Bitcoin mainnet canister at a height of 764,684.

2. A proposal to upgrade the `uploader` canister to the Bitcoin mainnet canister. The canister will start syncing new blocks, but the endpoints of the canister will be disabled.

3. A proposal to enable the endpoints of the Bitcoin mainnet canister, making them accessible and concluding the launch.

### Why upload a precomputed state of the Bitcoin mainnet canister?

The alternative to precomputing the state of the canister would be to sync from genesis. However, a full sync of Bitcoin mainnet from genesis would take weeks. Precomputing the state offline, on the other hand, takes ~24 hours and uploading it takes ~12-18 hours.

### How can I verify the Wasm hash of the uploader canister and the bitcoin canister?

* Clone the [bitcoin-canister repo](https://github.com/dfinity/bitcoin-canister).
* Checkout the `launch` branch.
* Run `docker build -t canisters .` to build the canisters and output their Wasm hashes.

### How can I verify the state that will be uploaded?

We‚Äôll be uploading the state using what we call the [uploader canister](https://github.com/dfinity/bitcoin-canister/blob/launch/bootstrap/uploader/src/main.rs). Once the `uploader` canister is deployed, we can upload ‚Äúchunks‚Äù of the bitcoin canister‚Äôs state using ingress messages. The uploader canister is initialized with the hashes of each of these chunks to verify their correctness, meaning that the NNS still controls the state that will be uploaded. [Here](https://github.com/dfinity/bitcoin-canister/blob/launch/bootstrap/uploader/src/chunk_hashes.txt) you‚Äôll find the hashes of the chunks, which are [hard-coded](https://github.com/dfinity/bitcoin-canister/blob/launch/bootstrap/uploader/src/main.rs#L21) in the uploader canister.

If you‚Äôd like to compute the Bitcoin canister‚Äôs state for yourself to verify the correctness of these hashes, please follow the instructions [here](https://github.com/dfinity/bitcoin-canister/tree/launch/bootstrap), setting the `HEIGHT` to `764684`. Note that the computation takes around 24 hours. At different points in the computation process, the checksums of various files are emitted. If everything is working as expected, you should see the following checksums:

```
sha256sum unstable_blocks
c62e653e80c11c5463cfd24af8d26eef4392d6b9600ab6278d61f29f159c1e1a  unstable_blocks

sha256sum block_headers
b7047039bccb1eb81c7df97ba4dcd04ae6163277909bcded7789b73512e29544  block_headers

sha256sum utxodump.csv
ec09112894aad807b90f9991be76105e41e9038687b59dce5a1aaadcedf52ddc  utxodump.csv

sha256sum utxodump_shuffled.csv
9730fddcf70afc60bfb94d0bcddd82b2e807cf57842733176dec1d31b0dedc05  utxodump_shuffled.csv

sha256sum canister_state.bin
1cf90cc7abdd859be021f35e1066965b7d1f23add33ddc4650ff3d27663211ec  canister_state.bin
```

Once you‚Äôre done with the instructions, you‚Äôll have a file called `chunk_hashes.txt`, which should be identical to the hard-coded `chunk_hashes.txt` file in the `uploader` canister.

```
git switch launch   # switch to the launch branch.

# The chunk hashes you computed and the ones hard-coded in the uploader canister
# should be identical.
diff chunk_hashes.txt ./uploader/src/chunk_hashes.txt 
```

If you managed to recompute this state and verify its integrity, or if you tried but ran into issues, please let us know here!

-------------------------

Manu | 2022-11-28 15:18:10 UTC | #620

I am running the verification steps and will report back when it's done!

-------------------------

ielashi | 2022-11-28 17:43:42 UTC | #621

Quick update: we just submitted [proposal 94253](https://dashboard.internetcomputer.org/proposal/94253), the first of the three proposals mentioned in my previous post, that installs the `uploader` canister.

-------------------------

daijianlin | 2022-11-29 14:11:34 UTC | #622

Does this mean Bitcoin Integration is finally released after the proposal passes?

-------------------------

ielashi | 2022-11-29 14:13:24 UTC | #623

No, the first proposal will allow us to start uploading the bitcoin state. The Bitcoin integration will be considered released once all the three proposals I mention are submitted and passed.

-------------------------

icypee | 2022-11-30 22:27:29 UTC | #624

Why don‚Äôt you submit the proposals at the same time? Do we really have to wait 3 days for each proposal to pass (in total 9 days)?

-------------------------

Manu | 2022-11-30 21:42:26 UTC | #625

I managed to complete all the verification steps in an ubuntu VM on my laptop, and also landed on the initial canister state 
```
1cf90cc7abdd859be021f35e1066965b7d1f23add33ddc4650ff3d27663211ec canister_state.bin
```
It did take a long time to sync the full bitcoin blockchain and compute everything from it. I computed `unstable_blocks` and `block_headers` without issues. I did run into an issue with computing `utxodump.csv` and `utxodump_shuffled.csv`: it seems that `sort -n` is not fully deterministic and my result was slightly differently sorted than @ielashi's. I resolved this by downloading @ielashi's versions, and ensured that what I computed is equal to his versions after doing a `sort` (without the `-n`), such that I'm still entirely sure that it contains the right UTXOs. From that, I computed the expected `canister_state.bin`. 

We'll make @ielashi's `utxodump_shuffled.csv` available here, such that if anybody else runs into the `sort -n` issue, they can follow the same steps as I did to still verify the correctness of the initial state.

-------------------------

InsaneClownPosse | 2022-11-30 21:53:01 UTC | #626

Mooi dat een Nederlander betrokken is bij zo'n belangrijke operatie.

-------------------------

anonymous | 2022-12-01 07:40:21 UTC | #627

Truly hope cefi exchanges allow ckBTC deposits and withdrawals soon after it is live. I sent ICP to crypto.com earlier and it instantly arrived, like not more than 4 seconds later (not kidding). Imagine how insanely cool itd be doing that with bitcoin (even if its the wrapped version). So mindblowing to even think about it.

-------------------------

dsarlis | 2022-12-01 10:28:47 UTC | #628

@icypee Technically, we could submit all 3 proposals at once. However, they need to be executed in this particular order that has been listed by @ielashi. After being submitted, in theory these proposals could pass at any time, as long as the conditions are met. Therefore, it is the easiest to submit 1 by 1 and confirm that everything works as expected in between.

It's not necessary to wait 3 days for these proposals to be adopted. They follow the same pattern as other proposals that upgrade NNS canisters, like the governance canister, where the proposals will be adopted once the foundation votes. The first proposal has already been adopted and executed and we are now in the process of voting for the second proposal.

-------------------------

GLdev | 2022-12-01 11:25:06 UTC | #629

[quote="Manu, post:625, topic:6147"]
it seems that `sort -n` is not fully deterministic
[/quote]

IIRC it has to do with some LOCALE setting. I remember I had to sync my locale between machines when I ran into sort problems on some project.

I'd look into first setting ```export LC_ALL= <something>``` on both machines and comparing the result of ```sort -n```, as the likely solution to get deterministic sorting.

-------------------------

plsak | 2022-12-01 13:38:57 UTC | #630

To add more for current status, both of the `round 2` proposals seem executed, so we're probably waiting just for the last one :pray: :heart_eyes: :rocket:
https://dashboard.internetcomputer.org/proposal/94726
https://dashboard.internetcomputer.org/proposal/94741

![image|690x61](upload://c8JO7YI7XRWswBjkXHXIg2jxQzv.png)

-------------------------

WalterCheung | 2022-12-01 15:32:47 UTC | #631

Is it necessary for us to find another third-party contract auditor?

-------------------------

Time | 2022-12-02 05:07:01 UTC | #632

This long-awaited moment is finally coming. If the third proposal is passed, does it mean that the mainnet BTC integration has been completed?

-------------------------

diegop | 2022-12-02 05:36:50 UTC | #633

Tbh, I would say ‚Äúlaunched‚Äù or ‚Äúshipped‚Äù but ‚Äúcompleted‚Äù is not quite the right word because we expect lots of updates to improve once it‚Äôs shipped/launched. Team will not abandon BTC integration, but continue improving it.

But YES! the APIs for developers will be there after the proposal. Improving docs, performance, developer experience, etc‚Ä¶ will continue of course.

I think it‚Äôs fair to say ‚Äúthat launch will be complete‚Äù since functionality will be shipped.

Do you agree with that @dieter.sommer @Manu ?

-------------------------

icypee | 2022-12-02 13:17:28 UTC | #634

third proposal has been submitted it‚Äôs happening pee holders
proposal:94858

-------------------------

plsak | 2022-12-02 14:23:11 UTC | #635

Executed ! :clap: :clap: :fire:

![image|276x499](upload://7gGVZi2sMiAC1HxiPVqHaiV669b.png)

-------------------------

romulusp | 2022-12-02 15:10:36 UTC | #636

**Now is time to party** ! :champagne: :champagne: :champagne: :champagne:
 Tomorow eth integration :slight_smile:
And also we need some marketing. I hope we will reach cointelegraph this time and other major media

-------------------------

