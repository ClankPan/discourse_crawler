iBat | 2023-06-02 17:21:46 UTC | #1

Hi everyone!
I will describe this error, received following this guide:
I have downloaded locally the did and wasm files of identity and this is my dfx json:
    "internet_identity": {
      "type": "custom",
      "candid": "src/internet_identity/internet_identity.did",
      "wasm": "src/internet_identity/internet_identity_dev.wasm.gz",
      "remote": {
        "id": {
          "ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
        }
      },
      "frontend": {}
    },
I have put the files in those paths but running dfx deploy there is a problem with tha wasm file

I'm getting this error:
Error: The Replica returned an error: code 5, message: "Wasm module of canister rrkah-fqaaa-aaaaa-aaaaq-cai is not valid: Wasmtime failed to validate wasm module wasmtime::Module::validate() failed with Bad magic number (at offset 0)"
kcbat@kcbat-HP-Pavili

-------------------------

diegop | 2023-06-02 17:56:25 UTC | #2

thanks for taking the time to write this. Let me ping the II team folks to see who can help.

-------------------------

peterparker | 2023-06-02 18:32:40 UTC | #3

Try this instead of your dfx config:

```
"internet_identity": {
      "type": "custom",
      "candid": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity.did",
      "wasm": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity_dev.wasm.gz",
      "shrink": false,
      "remote": {
        "candid": "internet_identity.did",
        "id": {
          "ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
        }
      }
    },
```

It will automatically pull the last dev version of II.

Note: there is a tutorial / sample in II repo but I had above piece of code literally open, so was faster to just copy paste that particular part

-------------------------

infu | 2023-06-02 19:49:03 UTC | #4

I think that's the old approach.
Simply get the last dfx and run
`dfx start --clean`
`dfx nns install`

you will have Internet Identity and everything else

-------------------------

peterparker | 2023-06-02 20:51:33 UTC | #5

Depends what you try to achieve and what version of the canister you are looking for.

-------------------------

iBat | 2023-06-07 14:11:02 UTC | #6

Thanks a lot, it worked!

-------------------------

cyberowl | 2023-07-07 08:54:12 UTC | #7

Has anyone experienced this error. 

![Screenshot 2023-07-07 at 1.10.52 AM|690x496](upload://dO8L4KReLe0550KUQfMTIAB0rhM.jpeg)

It happens when I try to create an II locally. 

dfx 0.14.2
latest internet identity repo

I tried diff approaches including above:
![Screenshot 2023-07-07 at 1.53.46 AM|690x168](upload://as3HgEcErO5Hi3RwlXfOc1pFVIW.png)

-------------------------

peterparker | 2023-07-07 09:09:08 UTC | #8

I've seen stuffs but, I've never seen that particular error üòú.

Have you try to clean up your local dfx state (`dfx start --clean`) and redeploy? Same issue?

-------------------------

cyberowl | 2023-07-07 09:11:52 UTC | #9

Yeah did everything. Did clean install :frowning: did clean. Restarted machine. I guess I will keep digging.

-------------------------

peterparker | 2023-07-07 09:14:51 UTC | #10

As you mention v0.14.2, if you downgrade dfx, same issue?

-------------------------

cyberowl | 2023-07-07 09:21:33 UTC | #11

Hmm haven't tried that but will soon. I did upgrade everything.

-------------------------

cyberowl | 2023-07-07 09:50:09 UTC | #12

ok that works. downgraded to 14.1

-------------------------

peterparker | 2023-07-07 10:01:23 UTC | #13

Thanks for the feedback, I forward the information!

-------------------------

Gabriel | 2023-07-07 10:30:17 UTC | #14

yeah I get that on 14.2 and on 0.14.2-beta.2 as well. 
![Screenshot 2023-07-07 at 13.29.37|308x500](upload://86bHNwl5vxAGqNxyLdjJIIz1gcJ.jpeg)

-------------------------

Severin | 2023-07-10 08:33:48 UTC | #15

I tried to reproduce myself, and I found that the important factor is `dfx start` with 0.14.2. If that is run with 0.14.1 or lower it doesn't fail, no matter which version of dfx deploys it. Continuing to investigate...

-------------------------

berestovskyy | 2023-07-10 15:57:04 UTC | #16

hey folks,
I was able to reproduce the issue using the `dfx 0.14.2` using the snippet in this thread. At the same time both the `dfx nns install` and the II canister included into the `0.14.2` release work just fine for me.

For the latter I used the following `dfx.json` snippet:
```
    "internet_identity": {
      "type": "custom",
      "candid": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity.did",
      "wasm": "/Users/a/.cache/dfinity/versions/0.14.2/wasms/internet_identity_dev.wasm",
      "shrink": false,
      "remote": {
        "candid": "internet_identity.did",
        "id": {
          "ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
        }
      }
    },
```

It's a copy-paste of the snippet from this thread, just the WASM binary is from the `dfx 0.14.2` cache...

-------------------------

peterparker | 2023-07-10 16:26:06 UTC | #17

Have you try with a snippet that fetches the `.wasm.gz` from GitHub? When `dfx nns install` is not used, that's the most common way to embed II in project I think.

```
"internet_identity": {
			"type": "custom",
			"candid": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity.did",
			"wasm": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity_dev.wasm.gz",
			"shrink": false,
			"remote": {
				"id": {
					"ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
				}
			},
		},
```

-------------------------

berestovskyy | 2023-07-10 16:39:29 UTC | #18

That's exactly what I used and it didn't work for me, while the `dfx 0.14.2` WASM binary (i.e. `"wasm": "/Users/a/.cache/dfinity/versions/0.14.2/wasms/internet_identity_dev.wasm",`) seems to work just fine.

-------------------------

peterparker | 2023-07-10 17:05:02 UTC | #19

Ah interesting, so `dfx start` with a `.wasm.gz` does not work but, works with `.wasm`.

Wasn't the support for gzipped wasm recently added to dfx? Can there be a conflict there?

-------------------------

berestovskyy | 2023-07-10 17:54:02 UTC | #20

Sorry for the confusion. I never stated that the gzipped WASM is the issue. And in fact I just verified, it does not.

The `dfx` release `0.14.2` ships with an older II WASM binary (version `2022-07-11`) and it works just fine. The first failing II version is `2023-04-28`, i.e. `2023-04-12` still works fine:

```
    "internet_identity": {
      "type": "custom",
      "candid": "https://github.com/dfinity/internet-identity/releases/latest/download/internet_identity.did",
      "wasm": "https://github.com/dfinity/internet-identity/releases/download/release-2023-04-12/internet_identity_dev.wasm.gz",
      "shrink": false,
      "remote": {
        "candid": "internet_identity.did",
        "id": {
          "ic": "rdmx6-jaaaa-aaaaa-aaadq-cai"
        }
      }
    },
```

This is the last working II for me on the `dfx 0.14.2`...

-------------------------

peterparker | 2023-07-10 20:31:40 UTC | #21

Thanks for the feedback, indeed I can reproduce the issue with dfx 0.14.2 and `.wasm.gz` as well.
However cannot confirm if it works with `2023-04-12` release or not because I get another error which should probably be ignored in this debugging.

-------------------------

cyberowl | 2023-07-11 07:24:23 UTC | #22

![Screenshot 2023-07-11 at 12.22.22 AM|529x500](upload://fORWC2lVXJ8I1PsWTRvFQ2MKp5d.png)
![Screenshot 2023-07-11 at 12.23.09 AM|690x102](upload://a23WhtGivmdnUxwOi4eB1SK3wAW.png)
![Screenshot 2023-07-11 at 12.23.44 AM|690x161](upload://dzyvtZSaWdaJILwt5VXJXwVFy49.png)

Even with this setup getting the following errors.

-------------------------

ericswanson | 2023-07-13 22:29:43 UTC | #23

We've released (not yet promoted) dfx 0.14.3-beta.0 to address this issue.

It incorporates release candidate replica at commit 0ab9178c6684f122ae713928b3664c33a697e9c4.  One relevant change is the removal of openssl as a dependency from signature verification.

```
DFX_VERSION=0.14.3-beta.0 sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"
```

-------------------------

cyberowl | 2023-07-14 04:01:37 UTC | #24

![Screenshot 2023-07-13 at 9.00.51 PM|690x367](upload://bAmVKkgOTd5HGCeBtROTgqYQmZe.png)

That worked. Now I just need to figure out what is causing the image to not display.

Thank you.

-------------------------

rabbithole | 2023-09-26 11:00:06 UTC | #25

[quote="ericswanson, post:23, topic:20417"]
We‚Äôve released (not yet promoted) dfx 0.14.3-beta.0 to address this issue.
[/quote]
Do I understand correctly that this problem is also fixed in dfx 0.15.0?
I've used different versions of the `internet_identity_dev.wasm`, but when I **re**-authenticate, my requests are returned with an error.
![–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2023-09-26 –≤ 14.34.55|690x137](upload://fxLXhvIEY1mvq7qzTMR8zCHEKFZ.png)
Frontend and II are on different ports. Any ideas?

-------------------------

frederikrothenberger | 2023-09-26 12:04:38 UTC | #26

@rabbithole: Which version of II are you using specifically?

If it is older than [release-2023-08-28](https://github.com/dfinity/internet-identity/releases/tag/release-2023-08-28), it might be affected by [this bug](https://forum.dfinity.org/t/upgrade-agent-js-to-resolve-a-chrome-issue/22364).

-------------------------

rabbithole | 2023-09-26 12:30:52 UTC | #27

[quote="frederikrothenberger, post:26, topic:20417"]
@rabbithole: Which version of II are you using specifically?
[/quote]
I tried last versions:

* [release-2023-09-22](https://github.com/dfinity/internet-identity/releases/tag/release-2023-09-22)
* [release-2023-09-08](https://github.com/dfinity/internet-identity/releases/tag/release-2023-09-08)

and old [release-2022-07-11](https://github.com/dfinity/internet-identity/releases/tag/release-2022-07-11) which is used in the `nns` extension.

-------------------------

frederikrothenberger | 2023-09-26 12:33:52 UTC | #28

@rabbithole: Is your code opensource? What are the reproduction steps? Which browser are you using?

I'd like to reproduce the issue on my machine in order to debug it.

-------------------------

rabbithole | 2023-09-26 13:18:16 UTC | #29

[quote="frederikrothenberger, post:28, topic:20417"]
@rabbithole: Is your code opensource? What are the reproduction steps? Which browser are you using?
[/quote]

My code is open source, I'm working on [this branch](https://github.com/rabbithole-app/rabbithole/tree/feature/cycles-manager). I'm not sure if you should waste your time on this, but if you decide to do it, then:
1) you need to [deploy](https://github.com/rabbithole-app/rabbithole/tree/feature/cycles-manager#deploy-locally) the project using the script `./scripts/deploy.sh`
2) run `yarn start` and open [localhost:4200](http://localhost:4200)
3) register by creating a user canister and profile. After creating an invoice copy account id and
```
dfx ledger transfer --amount 0.05 <ACCOUNT_ID> --memo 0 --fee 0
```
4) Sign in
5) Sign out (click on the avatar in the upper right corner and select the Sign out menu item)
![–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2023-09-26 –≤ 18.01.31|468x499](upload://kJzQ2rHM8guDHLPDHSbcQCtQAvB.png)
6) Open dev tools and sign in again without reloading the page

I'm sure I made a mistake somewhere, so again, you don't have to waste your time on this. After all, I did not create the minimum code to reproduce the error outside of my project.

P.S. the error occurs when calling [actor methods](https://github.com/rabbithole-app/rabbithole/blob/c8cf17684694c8cacb959b25fb05499ad7245438/src/app/core/workers/core.worker.ts#L307C59-L307C59). Although `Actor` contains the correct identity.

-------------------------

peterparker | 2023-09-26 13:25:14 UTC | #30

Are you using the same `authClient` object after signing out or are you destroying it or re-creating a new AuthClient on next login?

If you don't, that might be the issue.

In my dapps, like in Juno, I generally let this comment for my future self:

```
// This fix a "sign in -> sign out -> sign in again" flow without window reload.
authClient = null;
```

For example: https://github.com/buildwithjuno/juno/blob/82a67686a5d507ac71ed6fa707dce552f077079a/src/frontend/src/lib/stores/auth.store.ts#L77C1-L77C1

This is required I think because the `authClient` keeps stuff in memory or so.

Side notes: two days ago we discovered a bug in Agent-js when signing out in Safari. At least in the dapps I've tested, Safari seems to block the next sign-in (sign-in -> sign-out -> sign-in -> Safari blocks popup). The team will have a look at the issue but meanwhile it's also safe to reload the window after sign-out.

-------------------------

rabbithole | 2023-09-26 13:40:31 UTC | #31

[quote="peterparker, post:30, topic:20417"]
Are you using the same `authClient` object after signing out or are you destroying it or re-creating a new AuthClient on next login?
[/quote]
I create the authClient once in the main thread before loading the application [here](https://github.com/rabbithole-app/rabbithole/blob/c8cf17684694c8cacb959b25fb05499ad7245438/src/main.ts#L55), but in the worker I just read the IndexDB store. Thanks for the tip!

-------------------------

peterparker | 2023-09-26 14:05:48 UTC | #32

[quote="rabbithole, post:31, topic:20417"]
I create the authClient once in the main thread before loading the application [here](https://github.com/rabbithole-app/rabbithole/blob/c8cf17684694c8cacb959b25fb05499ad7245438/src/main.ts#L55), but in the worker I just read the IndexDB store. Thanks for the tip!
[/quote]

Gotcha, yeah then it is not the same issue. Have you try, just for debugging purpose, to add a `window.location.reload()` after the sign-out? do you still face the same issue or it solves it?

-------------------------

rabbithole | 2023-09-26 18:09:34 UTC | #33

[quote="peterparker, post:32, topic:20417"]
Have you try, just for debugging purpose, to add a `window.location.reload()` after the sign-out? do you still face the same issue or it solves it?
[/quote]
Reloading the page solves any problems, but I was interested in solving the problem without reloading :slightly_smiling_face: The fact is that I also could not make a full-fledged PWA due to a conflict between service workers (angular and IC), so I have to rely on caching in the browser.

I'll try resetting `authClient` and if that doesn't help, I'll add a page reload on sign out.

-------------------------

peterparker | 2023-09-26 19:23:51 UTC | #34

[quote="rabbithole, post:33, topic:20417"]
Reloading the page solves any problems,
[/quote]

That's good to know. It means that something is in cache and that clearing it resolves the issue.

So yeah try to reset `authClient`, it it is not enough, double check if there is not another store that should be cleaned and maybe even "manually" reset some indexeddb collections.

But yeah if reloading resolve the issue it means something remains in cache after sign-out.

Makes sense?

-------------------------

rabbithole | 2023-09-27 09:25:00 UTC | #35

[quote="peterparker, post:34, topic:20417"]
So yeah try to reset `authClient`
[/quote]
I recreated `authClient` when signed out and that [solved](https://github.com/rabbithole-app/rabbithole/commit/0018f8a446554aa30ee1d384e372bbead9d48b27) the problem. It seems to me that this point needs to be described somewhere in the `@dfinity/auth-client` documentation, because I read that `authClient` is created for the entire application once (unfortunately I can't find the link).

-------------------------

peterparker | 2023-09-27 09:44:45 UTC | #36

Great to hear it solved it!!!

Not sure if and where it is documented. If I reckon correctly somewhere on the forum in another thread I raised the same question / observation but, was answered it was a design choice. @kpeacock can probably provides more context.

-------------------------

kpeacock | 2023-09-28 15:47:11 UTC | #37

It's not a rule per se - more of a design goal that it is intended to work that way. If the `logout` method isn't working, I'd say there's a bug here worth investigating

-------------------------

kpeacock | 2023-10-03 15:44:34 UTC | #38

For what it's worth, I have repeatable login and logout flows for several frontend frameworks working in my https://github.com/krpeacock/auth-client-demo project. I don't know specifically what's causing your problem, but perhaps you can compare how your approach differs

-------------------------

peterparker | 2023-10-03 17:09:28 UTC | #39

I debugged the issue further as I can also reproduce the problem on my side. I found one race condition due to the my web worker accessing the identity imperatively. I made the mistake to assume that the agent identity was either null or not null where in reality the agent identity is either anonymous or authenticated.

That said, once I added extra guards for this, I still managed to reproduce the issue by sign-in with Anchor 10001, signout without setting the auth client to null and sign in with 10000. It might be another race condition though as I cannot reproduce the issue with a sample repo.

-------------------------

