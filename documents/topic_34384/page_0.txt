Dracian | 2024-08-22 12:22:41 UTC | #1

What I want is to authenticate users using a passkey(without using Internet Identity). So How can I create a rust canister that will allow users to log in to my application using a passkey and then I can verify it using the verification canister?

Also, I want to know how Intenet Identity implements it.

-------------------------

frederikrothenberger | 2024-08-22 12:46:42 UTC | #2

Hi @Dracian 

The Internet Computer supports passkeys / WebAuthn natively (see [here](https://internetcomputer.org/docs/current/references/ic-interface-spec/#webauthn)). This means you don't have to do much, simply sign canister calls using the [WebAuthn `navigator.credentials.get` function](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion).

The [agent NPM package](https://www.npmjs.com/package/@dfinity/agent) provided by DFINITY comes with a nice [WebAuthnIdentity](https://agent-js.icp.xyz/identity/classes/WebAuthnIdentity.html) to do exactly that.

Note: this would then result in the user having to interact with the passkey on every single `sign` operation. To avoid that, you can create DelegationIdentity that allows signing with a ephemeral key-pair generated in the browser and sign that using a passkey operation, like Internet Identity does it here: https://github.com/dfinity/internet-identity/blob/09e9544c739bfc2c807d64ac553f5cff1728a329/src/frontend/src/utils/iiConnection.ts#L403
(simply supply your `WebAuthnIdentity` as the `identity` parameter).

I hope this helps.

-------------------------

Dracian | 2024-08-28 11:58:04 UTC | #3

This Helps, But What i need is a way to verify those webauthn signatures on chain, I am assuming this is some sort of RSA encryption so how do I verify it.

-------------------------

frederikrothenberger | 2024-08-28 12:03:03 UTC | #4

If you need to verify generic WebAuthn signatures, you can use [this package](https://github.com/dfinity/ic/tree/master/rs/crypto/standalone-sig-verifier) inside a rust canister. It supports WebAuthn with `RS256` and `ES256`.

Note: Ingress messages are automatically verified by the platform itself. If the goal is to sign ICP transactions with WebAuthn, you do _not_ need to verify the signatures yourself.

-------------------------

