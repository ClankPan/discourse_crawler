unknown84502 | 2023-11-17 07:32:46 UTC | #1

Hello Community,

I'm relatively new to DApp development and I've hit a roadblock. I'm trying to connect my frontend to the backend of my DApp, and I've run into an error that I can't seem to figure out. 

Issue Details:
When I attempt to connect my frontend to the backend, I receive the following error in my console:

Here's the error output for reference:
```
ERROR
Server returned an error:
Code: 400 ()
Body: subnet_not_found

AgentHTTPResponseError<http://localhost:8080/index.js:322:9
_requestAndRetry<http://localhost:8080/index.js:711:15
... (additional error lines) ...
```
![image|690x388](upload://yPsEf2gfUP8OeEqxVbgnAa3doTk.png)

Thank you all in advance for your support and understanding.

-------------------------

Severin | 2023-11-17 09:25:35 UTC | #2

Can you show the output of `dfx start` with debug output? That would be `dfx start --clean -vv`

-------------------------

unknown84502 | 2023-11-17 09:30:16 UTC | #3

![image|690x309](upload://lxdBr1uRKPHu2c5b0UoDrug9DPD.png)

when i enter dfx deploy then
```
Uncaught (in promise) Error: Invalid certificate: Invalid signature from replica 3emtc-qvxqg-2q7y6-n5jwy-if4ky-3mjz2-ucgaf-hdh3v-46opc-vz5vj-3qe signed query.
    AgentError http://127.0.0.1:4943/index.js:2438
    CertificateVerificationError http://127.0.0.1:4943/index.js:1909
    node_modules dfinity/agent/lib/esm/agent/http/index.js/HttpAgent/</<@http://127.0.0.1:4943/index.js:532
    node_modules dfinity/agent/lib/esm/agent/http/index.js/HttpAgent/<@http://127.0.0.1:4943/index.js:494
    query http://127.0.0.1:4943/index.js:789

```
its coming

-------------------------

Severin | 2023-11-17 09:33:09 UTC | #4

https://forum.dfinity.org/t/invalid-certificate-invalid-signature-from-replica-signed-query-no-matching-node-key-found/24724/5?u=severin

-------------------------

unknown84502 | 2023-11-17 09:44:07 UTC | #5

how can i set this one `{verifyQuerySignatures: false}`

-------------------------

Severin | 2023-11-17 12:18:48 UTC | #6

Like this: https://github.com/dfinity/agent-js/pull/784/files#diff-2ca1a4ed09213c2b9e11e1fb7be304493580d7c9196eee76441251d4ee69d242R13-R18

-------------------------

unknown84502 | 2023-11-17 14:11:36 UTC | #7

i got that sir,
my problem is where can i get that file to edit 
or need to add directly in the js file

-------------------------

kdmars0168 | 2023-11-18 07:31:23 UTC | #8

I am facing exactly the same issue. Would love to know in which file do I have to make the change as you suggested?

-------------------------

Ishmael-Chepsoi | 2023-11-20 03:52:32 UTC | #9

Experiencing the same problem:
ERROR
Server returned an error:
  Code: 400 ()
  Body: subnet_not_found


AgentHTTPResponseError: Server returned an error:
  Code: 400 ()
  Body: subnet_not_found


    at HttpAgent._requestAndRetry (http://localhost:8080/index.js:711:15)
    at async HttpAgent._requestAndRetry (http://localhost:8080/index.js:709:20)
    at async HttpAgent._requestAndRetry (http://localhost:8080/index.js:709:20)
    at async HttpAgent._requestAndRetry (http://localhost:8080/index.js:709:20)
    at async makeQuery (http://localhost:8080/index.js:748:30)
    at async Promise.all (index 0)
    at async HttpAgent.query (http://localhost:8080/index.js:769:39)
    at async caller (http://localhost:8080/index.js:199:28)
    at async HTMLFormElement.<anonymous> (http://localhost:8080/index.js:21530:20)

-------------------------

Severin | 2023-11-20 10:04:18 UTC | #10

`verifyQuerySignatures: false` goes into the option object that you feed into `HttpAgent()`

-------------------------

Ishmael-Chepsoi | 2023-11-22 15:16:19 UTC | #11

I have tried it without success. 
![image|690x331](upload://6DCz1YRO6Gt9o6oUYWIx1UQxrv3.jpeg)


This occur in this context:
![Screenshot 2023-11-22 181537|690x293](upload://qpSQolh609X639CHqTOfhITpZV8.png)

-------------------------

Severin | 2023-11-22 15:22:43 UTC | #12

:slightly_frowning_face: I'm at the end of my JS skills. @peterparker do you maybe know the next step to try?

-------------------------

unknown84502 | 2023-11-22 15:23:04 UTC | #13

bro try using dfx 0.15.2-beta.2

-------------------------

peterparker | 2023-11-22 15:53:40 UTC | #14

there is a sample repo I can checkout to try to reproduce the issue?

-------------------------

Ishmael-Chepsoi | 2023-11-22 18:30:07 UTC | #15

dfx upgrade gives version: 0.15.1 as the latest.

-------------------------

unknown84502 | 2023-11-22 18:32:24 UTC | #16

`DFX_VERSION=0.15.2-beta.2 sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"`

try this bro

-------------------------

Ishmael-Chepsoi | 2023-11-23 03:21:13 UTC | #17

dfx start --clean
Running dfx start for version 0.15.2-beta.2
Using the default definition for the 'local' shared network because My_Directory/.config/dfx/networks.json does not exist.
My_Directory/.cache/dfinity/versions/0.15.2-beta.2/ic-https-outcalls-adapter: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory

-------------------------

Ishmael-Chepsoi | 2023-11-24 04:13:27 UTC | #18

**Change your auto generated package.json dependensies:**

"dependencies": {
    "@dfinity/agent": "^0.20.1",
    "@dfinity/candid": "^0.20.1",
    "@dfinity/principal": "^0.20.1"
  }


**To a lower versions as follows:**
  "dependencies": {
    "@dfinity/agent": "^0.17.0",
    "@dfinity/candid": "^0.17.0",
    "@dfinity/principal": "^0.17.0",
    "react": "^18.2.0"
  }





**Then rerun the *npm i* this should work**

-------------------------

mohammadazeemwani | 2023-11-26 04:14:14 UTC | #19

downgrading the dependencies is working fine

-------------------------

peterparker | 2023-12-01 16:10:57 UTC | #20

Can't believe that I land on that same problem too...

Agent-js v0.19.3 + dfx 0.15.1

> mr: Server returned an error:
  Code: 400 ()
  Body: subnet_not_found


    at t._requestAndRetry (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1723:11)
    at async t._requestAndRetry (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1722:55)
    at async t._requestAndRetry (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1722:55)
    at async t._requestAndRetry (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1722:55)
    at async t.query (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1731:29)
    at async a (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:1961:144)
    at async Gi (http://localhost:5173/node_modules/.vite/deps/@junobuild_core.js?v=70ccfa5d:2706:31)
    at async Promise.all (index 1)
    at async sync (http://localhost:5173/src/lib/workers/worker.ts?type=module&worker_file:63:33)
    at async execute (http://localhost:5173/src/lib/workers/worker.ts?type=module&worker_file:31:31)

-------------------------

peterparker | 2023-12-01 16:34:22 UTC | #21

Alright, solved. So the issue `subnet_not_found` error was thrown because I was (unexpectedly) performing a call against mainnet while my identity was generated and meant for the local replica.

-------------------------

AliSci | 2024-01-16 08:22:21 UTC | #22

I am facing the same issue but even without my frontend canister still facing it when I try to open the `CANDID UI` I tried this https://forum.dfinity.org/t/dfx-warn-you-seem-to-be-running-an-outdated-version-of-dfx-but-i-have-latest-version-installed-0-12-1/18554/10?u=alisci nothgin was working I also tried using node16
info
- dfx 0.15.3
- macos m1
- node v20.10.0
- cargo 1.77.0-nightly (84976cd69 2024-01-12)
- rustup 1.26.0 (5af9b9484 2023-04-05)
This is the version for the rustup toolchain manager, not the rustc compiler.
 The currently active `rustc` version is `rustc 1.77.0-nightly (714b29a17 2024-01-15)`

-------------------------

Severin | 2024-01-17 09:59:48 UTC | #23

That sounds very weird... is it possible that your dfx.json pins an older dfx version? What is the output of `dfx start --clean -vv`?

-------------------------

marcpp | 2024-06-13 19:54:52 UTC | #25

Hey David,

I'm running into the same issue (400 subnet_not_found) while using the [approve](https://www.npmjs.com/package/@dfinity/ledger-icrc#gear-approve) method of the ledger-icrc library.

[quote="peterparker, post:21, topic:24752"]
the issue `subnet_not_found` error was thrown because I was (unexpectedly) performing a call against mainnet while my identity was generated and meant for the local replica.
[/quote]

I feel like I could be doing the same mistake without knowing it. Here's my code:

```
import { IcrcLedgerCanister } from "@dfinity/ledger-icrc";

...

export default function Profile() {
    const { actor } = useActor();

    ...

    const { approve } = IcrcLedgerCanister.create({
        actor,
        canisterId: process.env.CANISTER_ID_ICP_LEDGER,
    });

    let approveArgs = {
          spender: {
              owner : Principal.fromText(principal),
              subaccount: []
          },
          amount: 1000000000000,
          expected_allowance: 100000000,
          fee: 10000
      }

      const data = await approve(approveArgs);
      console.log("data");
```

(`process.env.CANISTER_ID_ICP_LEDGER` outputs bkyz2-fmaaa-aaaaa-qaaaq-cai, my local icp ledger canister)

Am I missing a something?

Cheers!

-------------------------

peterparker | 2024-06-14 04:50:24 UTC | #26

```
const { actor } = useActor();

    ...

    const { approve } = IcrcLedgerCanister.create({
        actor,
        canisterId: process.env.CANISTER_ID_ICP_LEDGER,
    });
```

Not sure what `actor` is, but that's not a valid parameter here. On the contrary, you could pass an `agent` to create an `IcrcLedgerCanister` object. If you don't, it falls back to an agent for mainnet. I am guessing that's the reason why you get the error mentioned in this thread.

-------------------------

marcpp | 2024-06-14 07:42:35 UTC | #27

`actor` is basically my canister (I'm using [ic-use-actor](https://www.npmjs.com/package/ic-use-actor) library).

Using an `agent` like so..
```
const agent = await createAgent({
    identity,
    //host: HOST,
});

const { approve } = IcrcLedgerCanister.create({
    agent,
    canisterId: process.env.CANISTER_ID_ICP_LEDGER,
});

let approveArgs = {
    spender: {
        owner : Principal.fromText(principal),
        subaccount: []
    },
    amount: 1000000000000,
    expected_allowance: 100000000,
    fee: 10000
}

const data = await approve(approveArgs);
console.log(data);
```

..I'm gettting a `Invalid certificate: Signature verification` failed error. Any idea how to solve this one? (I was getting this error a few days ago - [see here](https://forum.dfinity.org/t/invalid-certificate-signature-verification-failed-when-using-dfinity-ledger-icrc/31159/5?u=marcpp) - this is why I tried to get creative and tried using `actor`)

-------------------------

peterparker | 2024-06-14 09:53:37 UTC | #28

```
const agent = await createAgent({
    identity,
    //host: HOST,
});
```

If you want to develop locally, you should create an agent that fetches `fetchRootKey`. You might also need to adjust `host` even though I guess you are using dfx and also guessing that agent-js default value is tailored for it but, not sure. I always set the value locally.

-------------------------

