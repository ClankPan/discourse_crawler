chenyan | 2021-07-19 22:46:01 UTC | #1

We are excited to announce Motoko Playground: https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/

The Motoko playground allows users to build and deploy Motoko canisters directly in the browser,
without downloading SDK, setting up a local dev environment, and without a wallet.

The code is also open sourced at https://github.com/dfinity/motoko-playground

We plan on adding many more features to make playground a full-featured web IDE for the Internet Computer. Community contributions are highly welcomed!

-------------------------

nomeata | 2021-07-20 07:44:18 UTC | #2

Very impressive stuff!

-------------------------

coin_master | 2021-07-20 09:05:11 UTC | #3

Thanks for the tool it's really helpful.
I have a question, how can one add new file?

-------------------------

dpdp | 2021-07-20 09:15:33 UTC | #4

Congrats :clap: 

Would there be a Rust version of that playground?

-------------------------

lshoo | 2021-07-20 10:08:00 UTC | #5

Great, thanks!
Looking forward to deploying Playground to the test network and interacting with other apps!

-------------------------

haruxx | 2021-07-20 11:40:26 UTC | #6

Really cool! I tried it and it is really smooth!

-------------------------

chenyan | 2021-07-20 16:34:19 UTC | #7

> I have a question, how can one add new file?

Not yet, we have an issue for this. For now, you can import files from github

> Would there be a Rust version of that playground?

Rust works very differently from Motoko, so it will probably be a whole new project. But we can easily support users to upload arbitrary Wasm modules, so that you can compile Rust code locally and upload.

-------------------------

chenyan | 2021-07-29 01:46:22 UTC | #8

We add a "Save & Share" button so that you can save your work in the Motoko Playground to our backend canister. It's also useful for people asking Motoko questions in the forum, where they can share the playground links instead of pasting code snippets.

-------------------------

shawndotey | 2021-07-30 18:51:35 UTC | #9

In regards to the full-featured web IDE, has anyone had a look at [VS Code in the browser](https://github.com/cdr/code-server)? I understand that the core editor itself is [monaco](https://microsoft.github.io/monaco-editor/) but I wonder if we can integrate into a well established, web based, full featured, open source IDE. It seems the [GitHub Project Selection], [Save & Share], [Deploy] and other features could be integrated into a fork of [that](https://github.com/cdr/code-server) project. Another feature could include a "simplified", beginner friendly mode. It would look similar to the current project but can also switch to a "normal" mode, which would just be the full featured browser-based Visual Studio Code IDE. 

Any thoughts?

-------------------------

kpeacock | 2021-07-30 19:01:09 UTC | #10

I think that, plus a nice Github Action integration could be a totally viable workflow

-------------------------

chenyan | 2021-07-30 19:28:49 UTC | #11

Could be. But that means we need to host the IDE on a cloud VM instead of IC. The IC can only run WebAssembly, not docker images. Our focus is to provide features that are unique to the IC, such as deployment, canister interaction, cycles, while adding some convenience features, such as code sharing, when resource permitting. The community is free to port the code to any platforms they like.

-------------------------

shawndotey | 2021-08-02 17:34:51 UTC | #12

I see. Thank you for the clarity, moving to a cloud VM seems counter productive.

-------------------------

chenyan | 2021-08-10 00:55:05 UTC | #13

We just add canister profiling in Motoko playground. You can now count the number of Wasm instructions executed for each update call, including the number of instructions spent in garbage collection. Thanks to our recent improvements in GC, the GC cost is significantly reduced!

-------------------------

flyq | 2021-08-10 04:04:11 UTC | #14

[quote="lshoo, post:5, topic:5994"]
Looking forward to deploying Playground to the test network and interacting with other apps!
[/quote]

is there any test network?

-------------------------

flyq | 2021-08-10 04:06:47 UTC | #15

[quote="chenyan, post:8, topic:5994, full:true"]
We add a “Save & Share” button so that you can save your work in the Motoko Playground to our backend canister. It’s also useful for people asking Motoko questions in the forum, where they can share the playground links instead of pasting code snippets.
[/quote]

Yes!!!!!

the stupid forum often failed when pasting code:
https://forum.dfinity.org/t/i-cant-reply-some-topics-somtimes/4082

-------------------------

lshoo | 2021-08-16 09:38:52 UTC | #16

I'm not found any network, Looking forward to future

-------------------------

rbole | 2022-10-05 11:27:44 UTC | #17

Hi, only a quick question, how long are the files stored, when using the Save & Share Button ?

Thanks

-------------------------

chenyan | 2022-10-05 17:20:58 UTC | #18

Indefinitely. Not sure what to do when we reach the wasm memory limit, but we are still far away from the limit.

-------------------------

rbole | 2022-10-05 17:43:39 UTC | #19

ok, thanks for your answer.

We plan to publish our internal IC course and I would like to integrate the motoko playground like gitpod or stackblitz for coding examples.

Is there a simple way to use the playground with several example github repos?

-------------------------

chenyan | 2022-10-05 18:10:58 UTC | #20

You can import from github via query parameters. For example, `https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/?git=dfinity/examples&branch=master&dir=motoko/counter/src`

We also allow `postMessage` from another website to transfer code directly to the playground: https://github.com/dfinity/motoko-playground#editor-integrations

-------------------------

rbole | 2022-10-06 06:48:23 UTC | #21

[quote="chenyan, post:20, topic:5994"]
You can import from github via query parameters. For example, `https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/?git=dfinity/examples&branch=master&dir=motoko/counter/src`
[/quote]

Thank you very much, this is working.

-------------------------

