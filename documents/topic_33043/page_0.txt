dev_rel | 2024-07-11 06:33:46 UTC | #1

# **Relation Graph :the graph DB run in Canister**

## **Project highlights**

Relation is a web3 social graph deployed on Dfinity. In this release, we have published and open-sourced the Relation Graph and the Unified Identity Authentication module.

Relation Graph is a graph database deployed in a Canister, allowing developers to lower the data processing threshold for Dapps when building large-scale applications. This increases the development efficiency of Dapps and enables developers to focus on implementing business logic.

Unified Identity Authentication integrates different web3 login methods and uses Canisters for signature verification. This service simplifies the process for developers to build a basic user system on Dfinity.

## **Features**

relation-graph is a graph database library implementing the [SPARQL](https://www.w3.org/TR/sparql11-overview/) standard.

Its goal is to provide a compliant, safe and fast graph database.

It also provides a set of utility functions for reading, writing, and processing RDF files.

relation-graph implements the following specifications:

* [SPARQL 1.1 Query](https://www.w3.org/TR/sparql11-query/), [SPARQL 1.1 Update](https://www.w3.org/TR/sparql11-update/), and [SPARQL 1.1 Federated Query](https://www.w3.org/TR/sparql11-federated-query/).

* [Turtle](https://www.w3.org/TR/turtle/), [TriG](https://www.w3.org/TR/trig/), [N-Triples](https://www.w3.org/TR/n-triples/), [N-Quads](https://www.w3.org/TR/n-quads/), and [RDF XML](https://www.w3.org/TR/rdf-syntax-grammar/) RDF serialization formats for both data ingestion and retrieval using the [Rio library](https://github.com/oxigraph/rio).

* [SPARQL Query Results XML Format](http://www.w3.org/TR/rdf-sparql-XMLres/), [SPARQL 1.1 Query Results JSON Format](https://www.w3.org/TR/sparql11-results-json/) and [SPARQL 1.1 Query Results CSV and TSV Formats](https://www.w3.org/TR/sparql11-results-csv-tsv/).

## **How to install**

### Prerequisite

```shell

rustup target add wasm32-unknown-unknown

# install SDK

sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

```

### Run

```shell

dfx start --clean --background

dfx deploy

```

## **Usage Example**

here is a demo that a graph database run in canister

https://github.com/relationlabs/relation-graph-ic/tree/main/relation-graph-demo

## **Documentation**

https://github.com/relationlabs/relation-graph-ic/tree/main

## **License**

MIT License

## **Resources**

Base schema: https://github.com/relationlabs/relation-graph-ic/blob/main/base.ttl

## **Future Plans**

We aim to leverage the underlying technology of Relation Graph and collaborate with the community to collectively build a base schema. This effort will help standardize the data storage structure for social projects in the Dfinity community, enabling interoperability among social projects within Dfinity.

-------------------------

