spencer | 2021-12-02 03:06:34 UTC | #1

Is it possible to pass a default constructor argument for my canister into dfx.json, so that when I simply call dfx deploy, that argument is passed in without specifying it?

Example: 
    "mycanister":{
      "main":"src/mycanister.mo",
      "type":"motoko",
      "argument":"(12345)"
    }

Is this something that could be added in the future?

-------------------------

gajendraks | 2022-02-24 06:39:08 UTC | #2

Do we have a documentation on all the possible entries of dfx.json and what we can achieve with different entries in dfx.json.

Please can someone point us to the documentation/resource if any?

-------------------------

paulyoung | 2022-02-24 08:29:46 UTC | #3

@chiedo was also looking and found this.

https://forum.dfinity.org/t/questions-around-dfx-json-and-request-for-improved-dfx-json-docs/10462/3?u=paulyoung

-------------------------

gajendraks | 2022-02-24 16:54:58 UTC | #4

I agree that document(https://smartcontracts.org/docs/developers-guide/tutorials/custom-frontend.html#_review_the_default_configuration) helps.

But it describes less number of options out of all the options that can be passed to dfx.json
I need info about the all the options.

Thanks

-------------------------

paulyoung | 2022-02-24 20:09:04 UTC | #5

I don’t think it’s documented but you should be able to figure it out from here:

https://github.com/dfinity/sdk/blob/458abd206c30ecd98e5448e35803ddfbd1344063/src/dfx/src/config/dfinity.rs#L169-L176

-------------------------

gajendraks | 2022-02-25 00:54:32 UTC | #6

This helps, thank you.
But please someone document as it helps many.

-------------------------

skilesare | 2023-01-21 16:18:00 UTC | #7

Did we ever figure out exactly what the argument looks like and if this works?  And can it be specified by network?

-------------------------

Severin | 2023-01-23 08:56:06 UTC | #8

I just had a glance over the definition, and I have to disappoint you. There is an `argument` field per canister (defined [here](https://github.com/dfinity/sdk/blob/master/src/dfx/src/config/dfinity.rs#L137-L139)), but it says `This field defines an additional argument to pass to the Motoko compiler when building the canister.` and it can't be specified per network.

-------------------------

icaten | 2023-01-24 02:13:12 UTC | #9

While not quite what was asked, the [zx](https://github.com/google/zx) "CLI devops scripting" tool might be useful to do this and some other things (like automatically switch which system-wide `networks.json` configuration is used (@jorgenbuilder)).

Eg: 

`dfxd.mjs`
```
#!/usr/bin/env z
import { argv, chalk } from "zx";
import { spawnSync } from "child_process"

console.info(chalk.bgBlue("restarting dfx clean"))
// stop currently any currently running 
await $`dfx stop`
// can be done other ways (https://github.com/google/zx/discussions/371)
spawnSync(
    'dfx',
    ['start', '--clean', '--background'],
    { 
        detached: true,
        stdio: 'ignore' // if you want to send output elsewhere
    }
)

if (argv.argDeploy) {
    console.info(chalk.bgGreen("\ndeploying with arg!\n"))
    await $`dfx depoy acanister --argument '( record { invokePerpetualProtocol = true; numOfDerivations = 1_001; etc etc } )'`
} else {
    console.info(chalk.bgCyan("\nnot deploying with arg!\n"))
    await $`dfx deploy acanister`
}

console.info(chalk.bgBlue("\nCanister deployed...\n"))
```

And in a console:

`> $zx ./dfxd.mjs --argDeploy`

If you do end up using zx, [be aware](https://github.com/google/zx/issues/547) it does its own string escaping which will definitely interfere if you want to use template literals to build compound expressions involving dfx. A simple way to bypass this is add:

`$.quote = (...all) => all`
 
To the top of your script.

-------------------------

Dustin | 2023-08-09 14:53:23 UTC | #10

Is there by now an option available to specify deploy arguments in the dfx.json file? Something like what was described [here](https://forum.dfinity.org/t/deployment-arguments-via-dfx-json/9702).

-------------------------

Severin | 2023-08-10 08:19:31 UTC | #11

No, still not available

-------------------------

lastmjs | 2024-03-02 00:12:15 UTC | #12

Linking, is this available now or planned? The comment above mine makes it sound like this functionality is available: https://forum.dfinity.org/t/deployment-arguments-via-dfx-json/9702/6?u=lastmjs

-------------------------

Severin | 2024-03-04 12:30:48 UTC | #13

As of 0.17.0 [it is available](https://github.com/dfinity/sdk/blob/master/CHANGELOG.md#feat-init_arg-in-dfxjson) as `canisters.<canister name>.init_arg`

-------------------------

ZenVoich | 2024-03-04 12:46:15 UTC | #14

Would be useful to have `init_arg_file` as well https://github.com/dfinity/sdk/discussions/3619

-------------------------

