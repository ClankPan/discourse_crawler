saikatdas0790 | 2022-01-20 09:06:38 UTC | #1

I noticed the addition of this to the docs website
https://smartcontracts.org/docs/language-guide/heartbeats.html

Anyone with practical experience with the rust counterpart knows how frequently this is called? I noticed this in the interface spec

![image|690x104](upload://776tPY42FiR89bY9qdSo4QxSqsj.png)

I'm trying to execute something every minute. What would the corresponding Motoko code look like?

-------------------------

claudio | 2022-01-20 10:56:53 UTC | #2

You should be able to adapt this example to do what you want, by looking at the time the hearbeat is invoked.

https://smartcontracts.org/docs/language-guide/heartbeats.html

-------------------------

saikatdas0790 | 2022-01-20 10:59:01 UTC | #3

Right, that was my question. On mainnet, should I expect the function to run once every second? That way i can set a check for n >= 60, and if the condition is met, set n to 0 and execute my logic, otherwise just increment n

-------------------------

claudio | 2022-01-20 11:11:53 UTC | #4

You can't rely on the hearbeat running every second.

I think it would be better to use `Time.now()` to record the time of the last hearbeat and see if this hearbeat needs to do work.

-------------------------

skilesare | 2022-01-20 12:15:24 UTC | #5

Is heartbeat live in motoko on main net now?

-------------------------

Icdev2dev | 2022-01-20 15:29:24 UTC | #6

Is Time.now() in Motoko calling ic0.time? Not very familiar with Motoko

Otherwise wouldn't Time.now() introduce local non -determinizm when used to make decisions in execution?

 At least that is what I got from @akhilesh.singhania recent video cast on YouTube. @nomeata suggests here([quote="nomeata, post:4, topic:9268"]
You can use `ic0.time` to get a suitable timestamp (but careful, don’t assume it to be_strictly_ monotonous – but that should be the same for a system clock with low resolution)
[/quote]
)

-------------------------

skilesare | 2022-01-20 18:55:18 UTC | #7

It is the time of the block which the proposer sets and validators endorse.

-------------------------

skilesare | 2022-01-20 18:56:51 UTC | #8

https://forum.dfinity.org/t/time-docs-and/3058/5

-------------------------

jzxchiang | 2022-01-21 07:37:19 UTC | #9

Yeah, Time.now() [calls](https://github.com/dfinity/motoko/blob/2c999571c1610ae15ff23f6db569a2e5ea2357e4/src/codegen/compile.ml#L3656) ic0.time.

-------------------------

nomeata | 2022-01-21 09:56:18 UTC | #10

@Icdev2dev, you seem to be repeatedly worried about non-determinism creeping in if canisters do the wrong thing (here, in the discussion of stable memory). Rest assured: Canisters run in a carefully constructed sandbox, and _nothing_ they can do can endanger determinism. (Else the whole IC would fall apart, and it it hasn’t, yet, right, so Q.E.D.)

-------------------------

Icdev2dev | 2022-01-21 16:26:59 UTC | #11

Thanks, @nomeata for the reassurance! Yes, I WAS worried. Your words have put this to rest.

-------------------------

