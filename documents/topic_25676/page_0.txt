kristofer | 2023-12-18 12:19:52 UTC | #1

In the `init()` of a canister, I set up a random number generator, like this:

```Rust
    ic_cdk_timers::set_timer(Duration::ZERO, || {
        ic_cdk::spawn(async {
            let (seed,): ([u8; 32],) =
                ic_cdk::call(Principal::management_canister(), "raw_rand", ())
                    .await
                    .unwrap();
            RNG.with_borrow_mut(|rng| *rng = Some(ChaCha20Rng::from_seed(seed)));
        })
    });
```

Now I want to test this canister using pocket-ic. RNG don't seem to be initialized though. Is it the case that pocket-ic doesn't support timers and/or management canister calls?

@michael-weigelt

-------------------------

mraszyk | 2023-12-18 12:35:23 UTC | #2

PocketIC supports timer and mgmt canister calls, but you need to call tick() a few times to see the effects (on the IC mainnet, it'd also take a few rounds of execution to see the effects). In case, the timer has a positive duration, you might also need to advance time on PocketIC to trigger the timer.

-------------------------

gravity_vi | 2024-01-15 09:15:33 UTC | #3

We are facing kind of similar issue with pocket_ic. Does anyone have an idea how to resolve this?
https://forum.dfinity.org/t/pocketic-testing-canisters-in-python/22490/2?u=gravity_vi

-------------------------

