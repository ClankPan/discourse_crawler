diegop | 2021-08-17 22:47:21 UTC | #1

**Community Submission for DFINITY Foundation’s Roadmap.**

Have an idea to propose?

For now, as patterns emerge, we are keeping the process lightweight:

1. Please submit in this thread any suggestions and recommendations
2. Like or comment on ideas you like
3. @ililic and I will collate and collect the most popular ideas

When this becomes unwieldly, we will iterate on process.

-------------------------

wang | 2021-08-16 19:49:08 UTC | #2

Should we submit requests in this thread, or create new threads under the Roadmap category?

Do we signal support for a request by liking the post? Is there a way to list the most supported requests?

-------------------------

diegop | 2021-08-16 21:48:19 UTC | #3

> Should we submit requests in this thread, or create new threads under the Roadmap category?

I was thinking of submitting in this thread and then branching off. But I am more than ready to iterate off that if it becomes a mess.

> Do we signal support for a request by liking the post?

Yes, let's start with that. I will edit the post to communicate that is the low-hanging fruit.

> Is there a way to list the most supported requests?

Yup, we can sort topic by liked: https://forum.dfinity.org/c/roadmap/29/l/top

-------------------------

wang | 2021-08-16 20:03:21 UTC | #4

Support Candid interfaces for all NNS canisters (eg. some ledger and registry functions are only available with protobuf)

-------------------------

wang | 2021-08-16 20:03:34 UTC | #5

Inter-canister query calls

-------------------------

wang | 2021-08-16 20:05:42 UTC | #6

[Make more canister data publicly available on-chain](https://forum.dfinity.org/t/canister-controller-and-cycle-balance-need-to-be-public/5591)

-------------------------

wang | 2021-08-16 20:06:59 UTC | #7

Motoko and Rust feature parity (support more of the system API)

-------------------------

wang | 2021-08-16 20:09:22 UTC | #8

Extend the Motoko base library - crypto, hashing, text manipulation, decimals, ...

-------------------------

skilesare | 2021-08-16 20:28:29 UTC | #9

Allow canisters to control neurons.

-------------------------

wpb | 2021-08-17 00:04:27 UTC | #10

I appreciate that Dfinity is providing this mechanism for community submissions.  This is awesome.  I am concerned that you will get a lot of requests and it will become difficult to follow the conversation/submission using this tool.  Looking forward to seeing how it develops.  When we post, are you wanting us to offer ideas that Dfinity then goes and develops further or do you want us to make thoroughly researched proposals that include value statements, justification, etc?

-------------------------

lastmjs | 2021-08-16 21:46:50 UTC | #11

Please add node shuffling to the list of proposals. Periodically swapping out the node members of a subnet may be critical to thwarting attacks from node operators, and would help the Internet Computer to obtain a sort of global security, as security would become a network effect as more nodes are added to the network. Right now adding more nodes to the network does not make the network as a whole more secure, those nodes only increase the security of the subnets they are being added to.

My discussions about node shuffling:

* https://www.reddit.com/r/dfinity/comments/nerppg/ama_we_are_manu_paul_and_diego_we_have_worked/gyjbylp?utm_source=share&utm_medium=web2x&context=3
* https://twitter.com/lastmjs/status/1403425190873346053?s=20
* https://twitter.com/lastmjs/status/1411337383816138762?s=20
* https://twitter.com/lastmjs/status/1398269467226894342?s=20
* https://twitter.com/lastmjs/status/1401909505147953156?s=20
* https://twitter.com/lastmjs/status/1422611180938481666?s=20
* https://twitter.com/lastmjs/status/1421072171858898947?s=20
* https://twitter.com/lastmjs/status/1391952829527597057?s=20
* https://twitter.com/lastmjs/status/1420708476918157318?s=20

-------------------------

lastmjs | 2021-08-16 21:52:01 UTC | #12

Consider creating an Internet Computer Improvement Proposal process (IIP).

I really love the discussion and input that is being fostered in the forum right now, and as time goes on I think adopting a more formal process such as the [BIP](https://github.com/bitcoin/bips) or [EIP](https://github.com/ethereum/EIPs) processes would lead to a lot of positive outcomes.

I really like the name IIP (Internet Computer Improvement Proposal).

-------------------------

lastmjs | 2021-08-16 22:06:14 UTC | #13

Consider adding the x.509 certificate authority stuff Dominic has been discussing.

-------------------------

lastmjs | 2021-08-16 22:07:11 UTC | #14

Consider adding a change to the tokenomics of the NNS that would incentivize neurons to gain followers. See here for more details: https://twitter.com/lastmjs/status/1416017178147627015?s=20

-------------------------

lastmjs | 2021-09-10 15:52:23 UTC | #15

Consider adding social recovery to the Internet Identity. It would be excellent for users to create their own personal trust networks, allowing other IIs to have the power to regenerate lost IIs or have other powers, controlled by the creator of the II.

The fact that II cryptographic information is only stored on locally-owned devices is quite scary...one natural disaster, one bad encounter on the street, etc could result in a lost II. It needs to be decentralized.

-------------------------

lastmjs | 2021-08-16 22:13:16 UTC | #16

Consider adding a large-scale and ongoing bug bounty program. I believe DFINITY now has a responsible security vulnerability disclosure process, which is one excellent step in the right direction. But I think DFINITY should also allocate a large amount of funds towards rewarding those who responsibly disclose security vulnerabilities. I think this program warrants multiple millions of dollars towards responsible disclosure.

I am not confident the system is secure when it has only been looked over by members of the Foundation, or those close to them (I assume this has been the case, I could be wrong).

-------------------------

lastmjs | 2021-08-16 22:17:30 UTC | #17

Consider putting resources towards (possibly through grants) bringing the vast ecosystem of web developers to the IC through excellent JavaScript/TypeScript support. This could be achieved in multiple ways:

* AssemblyScript CDK
* Compilation of V8 to WebAssembly, essentially creating a Node.js for the Internet Computer

I don't think the network effects of the web should be underestimated, and JavaScript/TypeScript is the language of the web.

Imagine the floodgates of developers that would come if they could simply bring all of their current JavaScript knowledge and tooling directly to the IC. Having to learn Motoko, Rust, or C/C++ is a major hindrance.

-------------------------

neeboo | 2021-08-16 23:00:40 UTC | #18

Bech32 Address for wallets and exchages

-------------------------

ayjayem | 2021-08-17 00:55:26 UTC | #19

Many thanks to the Dfinity team for taking this step toward more inclusive governance! All the proposals suggested here so far sound to me like excellent ideas.

Needless to say, many of the ideas floated in recent weeks for future development are very exciting - the Service Nervous System, direct integrations with Bitcoin/Ethereum, Endorphin, etc. But for what it's worth, I think that the priorities right now should be security first, reducing barriers to developer adoption second, governance third, and the more exciting differentiators later. With that in mind, special +1 to the following proposals here, in order of preference:

**1. Security**
a. Node shuffling
b. Bug bounty program

**2. Developer Adoption**
a. JavaScript/TypeScript support
b. Motoko base library extension
c. Inter-canister query calls

**3. Governance**
a. IC Improvement Proposal process
b. Incentivizing neurons to gain followers

-------------------------

wang | 2021-08-17 01:50:03 UTC | #20

Message scheduler. I have heard that this is in the works, but would like to see more details.

-------------------------

wang | 2021-08-17 01:51:08 UTC | #21

Motoko autoformatter. Opinionated, with minimal configuration, with VS Code integration.

-------------------------

nomeata | 2021-08-17 12:27:19 UTC | #22

 Staying on top of WebAssembly evolution (multi-value, multi-memory, reference types) would be nice.

-------------------------

senior.joinu | 2021-08-17 12:43:43 UTC | #23

I think we could all greatly benefit from Internet Identity improvement in terms of cross-canister integration. Right now there is no way to login to different apps preserving the same identity, but there are a lot of use cases when it is a requirement.

-------------------------

lastmjs | 2021-08-17 14:02:43 UTC | #24

I echo the desire to put security first

-------------------------

singularity | 2021-08-17 17:40:48 UTC | #25

Consider organising idea submission and brainstorming on IdeaScale. Example is cardanocataly.st, but varying it to suit how NNS voting works.
Also, consider developing a replacement for Uber, that different communities can create their own driver ecosystems on out-of-the-box, probably with their own community token for their own governance, and beating Uber in terms of how much the driver goes home with.

-------------------------

diegop | 2021-08-17 23:34:50 UTC | #26

[quote="lastmjs, post:12, topic:6175"]
Consider creating an Internet Computer Improvement Proposal process (IIP).
[/quote]

That is our general intent.

-------------------------

diegop | 2021-08-17 23:36:37 UTC | #27

I agree @ayjayem . Thank you for being patient ;)

-------------------------

diegop | 2021-08-17 23:38:23 UTC | #28

[quote="nomeata, post:22, topic:6175, full:true"]
Staying on top of WebAssembly evolution (multi-value, multi-memory, reference types) would be nice.
[/quote]

Great point, Joachim.

-------------------------

diegop | 2021-08-17 23:38:52 UTC | #29

[quote="senior.joinu, post:23, topic:6175"]
think we could all greatly benefit from Internet Identity improvement in terms of cross-canister integration
[/quote]

Very reasonable and I agree

-------------------------

LightningLad91 | 2021-08-19 16:23:49 UTC | #30

These are all great proposals.

I have an idea for a small proposal and that would be to add the cycle_dao neuron ID to the auto-populated list of neurons in the NNS app.

-------------------------

nomeata | 2021-08-22 11:21:53 UTC | #31

Is this a good space for “small”, technical proposals as well?

If so, I’d like to get “Canisters can make calls from `canister_init` and `canister_post_upgrade`” on the way.

What are the steps from graduating from a comment here to a full thread or even listing on https://dfinity.org/roadmap/?

-------------------------

levi | 2021-08-22 17:39:59 UTC | #32

I don’t know how much priority this should be but some time I think there should be: a formal-publish of a correct interface specification for the ledger and at the same time the full functionality of the ledger in the candid.

-------------------------

witter | 2021-08-23 02:01:58 UTC | #33

https://github.com/dfinity/motoko/issues/2703

-------------------------

witter | 2021-08-23 02:13:57 UTC | #34

2. Inter-canister query calls (lower-level query api support like ic_cdk::api::call::call() and call_raw )
3. rust actor class support like [Motoko](https://sdk.dfinity.org/docs/language-guide/actor-classes.html). 
4. Motoko vscode plugin, support code formatting

-------------------------

witter | 2021-08-23 02:14:38 UTC | #35

5. Dfinity testnet for developers

-------------------------

ccyanxyz | 2021-08-23 05:58:15 UTC | #36

Vanity URLs, canister ids are hard to remember.

-------------------------

ayjayem | 2021-08-23 14:51:22 UTC | #37

Some simple means of validating that canister code is what it is asserted to be, like Etherscan on Ethereum.

Essential in decentralized services to be able to trust that you're interacting with what you expect to be.

-------------------------

diegop | 2021-08-23 21:44:25 UTC | #38

[quote="ccyanxyz, post:36, topic:6175, full:true"]
Vanity URLs, canister ids are hard to remember.
[/quote]

You should know that is currently here: https://forum.dfinity.org/t/custom-domains-for-ic0-app-community-consideration/6162 ;)

-------------------------

diegop | 2021-08-23 21:47:21 UTC | #39

Hey Megathread folks,

Last week we seeded the different threads and are still iterating off that. I will continue to seed convos as well as work with the teams.

This week, we will start the process of spinning off threads/suggestions from the current list. Thank you for being patient as I get my feet wet in this. I realize some things are more baked than others.

Fwiw, it would help if people heart or like the suggestions they like the most.

-------------------------

jzxchiang | 2021-08-24 06:31:50 UTC | #40

[quote="wang, post:5, topic:6175, full:true"]
Inter-canister query calls
[/quote]


I upvoted this but I wanted to highlight how great this would be! Would simplify things a lot in terms of canister architecture. (Although I'm sure the implementation details might not be as trivial as some may think.)

-------------------------

ccyanxyz | 2021-08-25 16:31:44 UTC | #41

Please scale subnets: 

https://forum.dfinity.org/t/canister-return-504-too-much-traffic-on-subnet/6704

-------------------------

Maxfinity | 2021-08-25 18:18:11 UTC | #42

Just had a conversation with @lastmjs . Would be great if dfx could start a replica with all the main canisters - the ledger, governance, management etc installed for local testing. Otherwise testing complex canisters locally is quite difficult. I think this should be high up on the priority list.

-------------------------

integral_wizard | 2021-08-25 18:38:27 UTC | #43

The current NNS is not a safe sustainable governance system in the long-term. As long as it is purely POS based, it is subject to manipulation and rug pull. Through any type of fraud and/or collaboration of whales, it is possible to propose and accept a network killing proposal and effectively clean out neurons (AFAIK you could propose and alter anything). And even in best cases, this will only create (deserved) FUD over who has control, until the system inevitably adopts a better approach.

I propose to look towards a more thorough and community based governance system, like 1hive has proposed. Something like the Gardens concept, 
gardens. substack. com/p/introducing-gardens

-------------------------

zire | 2021-08-26 09:19:35 UTC | #44

Hi @diegop Many developers express need for a testnet. Any suggestion?

-------------------------

anthonymq | 2021-08-26 12:55:32 UTC | #45

Hi,
Is it possible to work on canister upgrade data migration ? (https://forum.dfinity.org/t/questions-about-data-structures-and-migrations/822)
Also intercanister query calls.
Cheers

-------------------------

skilesare | 2021-08-26 17:41:51 UTC | #46

This should be released ***before*** "canisters can hold ICP" is activated.  We need a testnet version that enables(or gets rid of the whitelist) holding ICP so that we can test those services.

-------------------------

diegop | 2021-08-27 04:39:39 UTC | #47

[quote="witter, post:35, topic:6175, full:true"]
5. Dfinity testnet for developers
[/quote]

You are certainly not the first to ask for this. Can I ask the intent to make sure I am not missing any? Do you mean you want a subnet where you can deploy canisters without having to pay? If so, that is actually one of the intent by the cycles faucet from Fleek (you get free cycles so you can deploy to any subnet): 

https://medium.com/dfinity/cycles-faucet-free-cycles-to-build-on-the-internet-computer-789166a95140

-------------------------

diegop | 2021-08-27 04:44:34 UTC | #48


[quote="witter, post:34, topic:6175"]
* Inter-canister query calls (lower-level query api support like ic_cdk::api::call::call() and call_raw )
[/quote]
Stay Tuned :slight_smile: This is currently the most requested feature and the Foundation has listened. 

[quote="witter, post:34, topic:6175"]
* rust actor class support like [Motoko](https://sdk.dfinity.org/docs/language-guide/actor-classes.html).
[/quote]
this thread MAY answer your question (or it may not), depending in your intent: https://forum.dfinity.org/t/rust-version-of-actor-class/6712

Can you let me know.

[quote="witter, post:34, topic:6175"]
* Motoko vscode plugin, support code formatting
[/quote]
I think you wrote (understandably) in quick shorthand, so just to make sure I follow:

1. We do have a VS Code plugin: https://marketplace.visualstudio.com/items?itemName=dfinity-foundation.vscode-motoko 

2. I think you are saying that you would like better code formatting. Any example of what you'd like may be helpful. This may be super trivial or complex depending on a bit of more context. 

cc @kritzcreek (who worked in the VS code plugin)

-------------------------

diegop | 2021-08-27 04:45:34 UTC | #49

[quote="Maxfinity, post:42, topic:6175, full:true"]
Just had a conversation with @lastmjs . Would be great if dfx could start a replica with all the main canisters - the ledger, governance, management etc installed for local testing. Otherwise testing complex canisters locally is quite difficult. I think this should be high up on the priority list.
[/quote]

Very reasonable. FWIW, This has always been our intent, but we got pulled into different directions and more urgent matters. Glad to know folks would find it helpful

-------------------------

diegop | 2021-08-27 04:47:46 UTC | #50

[quote="zire, post:44, topic:6175, full:true"]
Hi @diegop Many developers express need for a testnet. Any suggestion?
[/quote]

Yes, I do have one actually.

(linking to my latest comment in this thread)

https://forum.dfinity.org/t/megathread-community-submissions-for-dfinity-foundation-s-roadmap/6175/47?u=diegop

https://medium.com/dfinity/cycles-faucet-free-cycles-to-build-on-the-internet-computer-789166a95140

Would this work? or am i missing some nuance?

-------------------------

diegop | 2021-08-27 04:48:29 UTC | #51

[quote="ccyanxyz, post:41, topic:6175"]
Please scale subnets:
[/quote]

Goodness me, yes, please.

-------------------------

wang | 2021-08-27 11:56:27 UTC | #52

The usecase of a testnet is to have well, a testing environment, where ICP and cycle value is basically 0. This allows developers to test NNS integrations (eg. ledger and governance) without fear of losing money. This also allows us to test integrations with other services (eg. DeFi apps) before launching on mainnet.

This is in addition to a *local* dfx environment that includes all NNS canisters. Both are desirable to have.

-------------------------

diegop | 2021-08-27 14:28:11 UTC | #53

Ah yes of course. I totally forgot that when I replied last night. One not just needs toy cycles but also toy ICP to test defi and toy NNS. To be honest, I had heard that but totally blanked late night when I replied. 

Apologies, folks. Makes sense.

-------------------------

Maxfinity | 2021-08-27 18:15:50 UTC | #54

[quote="diegop, post:49, topic:6175"]
Very reasonable. FWIW, This has always been our intent, but we got pulled into different directions and more urgent matters. Glad to know folks would find it helpful
[/quote]

Good to know you consider it a priority.

-------------------------

diegop | 2021-08-27 20:57:41 UTC | #55

Hey folks!

**Re: Inter canister query calls**

Following up on the update from this week: 

https://forum.dfinity.org/t/roadmap-update-for-week-of-aug-23/6688

[quote="diegop, post:1, topic:6688"]
* We will start forking new threads from the Megathread this week!
[/quote]

**We are spinning off this week one of the most desired features from the Roadmap:** *Inter Canister Query Calls* :trumpet: :trumpet: :boom:

You can see the thread here: https://forum.dfinity.org/t/inter-canister-query-calls-community-consideration/6754 

Thank you to everyone who has been incredibly active in the thread. We really appreciate it and are greatly humbled by so many smart people dedicating time into this project that some of us have spent years on.

Whether you have spent years or minutes learning about the Internet Computer, I salute you :bowing_man:
 
Please expect other suggestions to spin-off and become prioritize, but in the meantime, don't miss out on the action going on in https://forum.dfinity.org/t/increased-canister-storage/6148/56

-------------------------

diegop | 2021-08-27 21:19:03 UTC | #56

cc @witter @wang who were among those who suggested it.

-------------------------

lastmjs | 2021-08-27 22:29:58 UTC | #57

I agree with everyone talking about testnets, I think we need an environment, possibly completely separate from the IC for security reasons, that doesn't store things of monetary or other value. A real playground like the Ethereum testnets

-------------------------

paulyoung | 2021-09-11 00:25:17 UTC | #58

Edit: moved to: https://forum.dfinity.org/t/make-http-gateway-spec-public-open-source/6999?u=paulyoung

***

I would like to propose that the [HTTP Gateway spec](https://forum.dfinity.org/t/asset-canister-source-code/6431/3?u=paulyoung) be made public/open source along with a process for proposing updates to the spec.

-------------------------

paulyoung | 2021-09-11 00:24:26 UTC | #59

Edit: moved to https://forum.dfinity.org/t/upgrade-http-request-calls-from-query-to-update-upon-canisters-request/7000?u=paulyoung

***

I would also like to propose that my PR to upgrade HTTP request calls from `query` to `update` (upon canister's request) be considered for merging, with some feedback about anything that may be blocking it.

https://github.com/dfinity/agent-rs/pull/195

-------------------------

levi | 2021-08-28 23:18:49 UTC | #60

I say choosing to make a http-request into an update call is a portant one. 

Also bout a test-net, personal ly I don’t see the need for a testnet besides a local one. I don’t even use the local one most of the time I am testing on the main net bc that’s where the code will run anyway.

-------------------------

nomeata | 2021-08-29 08:20:09 UTC | #61

I support @paulyoung 's proposal. It's a small and relatively simple change to an isolated component (the HTTP gateway and the service worker), but unblocks a whole new class of services to be run on the IC.

-------------------------

Blobby | 2021-08-29 13:11:51 UTC | #62

I think you meant ICIP not IIP , so we would have ICIP vs EIP or BIP

-------------------------

Blobby | 2021-08-29 13:53:29 UTC | #63

I thought that Dfinity was going to be creating a user friendly UI to allow anyone to easily claim their seed or airdrop tokens. The current technical requirements are a significant barrier and it seems that it would be a basic requirement to create such a UI. It seems extremely unfair that non technical donors are just left to wait endlessly to be able to access their tokens. 

Sadly it appears there is no plan to do so unless I have missed an announcement. In which case I propose that we add that as an item here. it is a relatively minor point and probably may be overlooked, but it’s really more than a nice to have item it’s almost a core requirement that should have been implemented on launch. Maybe this UI will have many other uses and benefits beyond just claiming.

Further exacerbating this issue are the rumours that unclaimed seed round tokens will be swept up. November was even mentioned as a date. I find this hard to believe since this action combined with the technical barriers presented to non technical donors mentioned above would be akin to theft.

-------------------------

nomeata | 2021-08-29 16:32:45 UTC | #64

Here is another feature I’d like to get on the way, if possible:

## Certified queries

Our update calls are nicely certified by the system. The canister doesn’t have to do anything, and all these calls are signed by the subnet. This is not the case for query calls, which are pretty much insecure by default. Yes, in some cases canisters can use certified variables to fix that, but it’s not always possible, and even if it is, it is fairly non-trivial. So as @senior.joinu rightfully asks: [“why don’t we make this safe by default”](https://forum.dfinity.org/t/why-did-they-choose-to-make-variable-certification-optional/6785).

A very vague design was discussed internally once, in the document [“Certified variables”](https://docs.google.com/document/d/1dpV6vv92nqdW8ZMCLFH1YrQ1gte6s7Ba8HIPjRcs3Hw/view) (only internally visible, found the link in my browser history).

@diegop, do you have the authority to allow me to re-share my thoughts on the implementation publicly that I wrote into that document back then? I am not sure whether any of that might be considered a “secret” that I must not discuss publicly. But maybe it's fine if the implementation is hashed out internally only, as long as we outsiders get the feature eventually :)

It would be good to get this on the roadmap, as I think “secure queries by default” beholds the Internet Computer better than what we have right now. The current query methods could still be provided **opt-in** for those developers who made a deliberate choice.

Also, I think this can help with [Inter-canister query calls](https://forum.dfinity.org/t/inter-canister-query-calls-community-consideration/6754); it _might_ be the necessary solution for the question of “what do do with calls from query methods when in replicated state”. So it might be timely to discuss this variant too.

-------------------------

jzxchiang | 2021-08-29 19:03:32 UTC | #65

[quote="paulyoung, post:59, topic:6175"]
https://github.com/dfinity/agent-rs/pull/195
[/quote]

Agreed! It'd also be nice if that spec could support streaming uploads as well as streaming downloads, only the latter of which it currently supports.

-------------------------

jzxchiang | 2021-08-29 18:37:32 UTC | #66

Would also be really helpful if `dfx` could be open sourced.

-----

Another thing: it'd speed up local development if the web server that's bundled with `dfx` by default could be replaced with `icx-proxy` so that the dev environment is more similar to prod.

The current `dfx` web server constantly [hangs](https://forum.dfinity.org/t/multiple-calls-queries-to-canister-blocks-them-all-from-sending-back-the-response/6406/7?u=jzxchiang) in high throughput scenarios. Also, it doesn't support `http_request`, making it really tough to test.

-------------------------

lastmjs | 2021-08-30 13:19:50 UTC | #67

No I meant IIP, I think it works best, the first I stands for Internet Computer

-------------------------

diegop | 2021-08-31 04:14:47 UTC | #68

[quote="Blobby, post:63, topic:6175"]
I thought that Dfinity was going to be creating a user friendly UI to allow anyone to easily claim their seed or airdrop tokens. The current technical requirements are a significant barrier and it seems that it would be a basic requirement to create such a UI.
[/quote]

Fwiw, we are working on a solution that is both **safe** and easier. The current best path is that Non-technical seed round folks should use the ledger nano app (in development for months, out soon). That’s the best safe way for them to claim their neurons. 

To your point what I just said has not been communicated very well. Point well taken. I have told the team this.

-------------------------

diegop | 2021-08-31 04:15:55 UTC | #69

[quote="nomeata, post:64, topic:6175"]
@diegop, do you have the authority to allow me to re-share my thoughts on the implementation publicly that I wrote into that document back then? I
[/quote]

I am not sure i do to be honest, but i know who does and I will ask them today.

-------------------------

diegop | 2021-08-31 04:16:56 UTC | #70

[quote="jzxchiang, post:66, topic:6175"]
Would also be really helpful if `dfx` could be open sourced.
[/quote]

Good point. This is actually happening very soon. I need to find out what status of this is. Last week it was "should be out soon", so I will ask SDX team

-------------------------

diegop | 2021-08-31 04:17:41 UTC | #71

[quote="jzxchiang, post:66, topic:6175"]
Another thing: it’d speed up local development if the web server that’s bundled with `dfx` by default could be replaced with `icx-proxy` so that the dev environment is more similar to prod.

The current `dfx` web server constantly [hangs](https://forum.dfinity.org/t/multiple-calls-queries-to-canister-blocks-them-all-from-sending-back-the-response/6406/7) in high throughput scenarios. Also, it doesn’t support `http_request` , making it really tough to test.
[/quote]

Great point. This may be "a thing" or a simple feature someone can knock out. Let me ask them.

-------------------------

Blobby | 2021-08-31 06:11:45 UTC | #72

This is great to hear. A ledger nano app would be a huge help and also far better for making easy to keep funds secured. So apologies for assuming the worst and thanks for letting us know the situation.

-------------------------

Maxfinity | 2021-08-31 10:53:02 UTC | #73

Linked from the main thread to @skilesare, who  does a great job of explaining the issue. This is a request to add original_caller()  in inter-canister calls to enable third party-composable services, which will be really important for DEFI and authorisation in other composable services.

@diegop

-------------------------

Maxfinity | 2021-08-31 11:03:09 UTC | #74

https://forum.dfinity.org/t/request-inter-canister-calls-add-original-caller/6796/7?u=maxfinity

-------------------------

ComputerInternetMan | 2021-09-01 17:45:26 UTC | #75

MVNO API ….

In telephony, a CFA or time slot w/ ability to collocate/scale.

Just tell us where to meet ya.

All the tools & the underutilized tariffs are there on the terrestrial side.  

Am happy to be informed as to what real tangible opportunity in the IC system trumps this one.

Every client facing business plan in telecom/tech is about obtaining access and maintaining access to the client.

That is what this opportunity is ( it supercharges thousands of disparate business plans ) … oh including yours … yes I am talking to you … and you… all of you. All of your plans would get an octane boost  from this.

-------------------------

ComputerInternetMan | 2021-09-01 18:17:58 UTC | #76

You have built the world’s switchboard.

Asynchronous hoot ‘n holler is the easy part. 

Let’s go.

-------------------------

paulyoung | 2021-09-11 00:22:56 UTC | #77

Edit: moved to https://forum.dfinity.org/t/idempotent-egress-messages-e-g-send-an-email/6998?u=paulyoung

***

I propose that the Internet Computer provide a way to send some sort of idempotent egress messages. In practice, this would likely be a HTTP request to some external infrastructure.

One use case for this that comes up often is to allow canisters to send email.

@diegop explains some challenges with doing this here: https://www.reddit.com/r/dfinity/comments/p0ndzh/can_the_icp_host_email_apps/h88eg78/?utm_source=share&utm_medium=ios_app&utm_name=iossmf&context=3

I propose that those concerns be addressed by the following process:

1. A canister makes a new system API call that is the equivalent of “Please make a HTTP request to X” (specifying appropriate payload, headers, etc)
2. The “subnet” (perhaps every node, perhaps every node until some acknowledgement response is received) makes the HTTP request
3. The receiver is configured to treat incoming HTTP requests as idempotent, using a request ID as an idempotency token. 
4. The receiver, depending on the nature of the action, can decide whether to take action once N requests with the same request ID have been received. For something harmless, it may perform the action when receiving the first message and do nothing when receiving subsequent requests with the same request ID. For added security, it may choose to only perform the action after receiving N requests with the same request ID.

In this scenario the receiver is the one actually sending the email, and it is up to them if and when to do so.

I’m sure there is a lot more nuance to this but I hope this straw man proposal isn’t a bad place to start.

-------------------------

paulyoung | 2021-09-03 08:01:45 UTC | #78

Of course, it would be great if the canister could be informed of the response to the HTTP request (or some kind of acknowledgement that it was received)

i.e. the email was successfully sent

We would need to employ idempotency in a similar way for responses/acknowledgements as well.

See also: the Two Generals’ Problem

-------------------------

flyq | 2021-09-06 03:54:57 UTC | #79

Remove the limits of notify in Ledger canister:

https://github.com/dfinity/ic/blob/master/rs/rosetta-api/ledger_canister/src/main.rs#L247-L251

There is a scenario where Alice transfers the ICP to Bob according to canister C's request. At this time, Alice called the send function in the Ledger canister. 

Now Alice wants to tell canister C that she has completed this behavior, and call notify in Ledger canister to let the Ledger canister notify the C canister, but it cannot succeed because the Ledger canister requires the transfer target and the notification target to be the same.

Of course, this will bring some risks, but if you do relevant checks in the receiver canister, you can avoid these risks.

-------------------------

flyq | 2021-09-06 03:57:38 UTC | #80

[quote="flyq, post:79, topic:6175"]
Remove the limits of notify in Ledger canister:

https://github.com/dfinity/ic/blob/master/rs/rosetta-api/ledger_canister/src/main.rs#L247-L251
[/quote]
Just remove the restriction of `to`

-------------------------

apotheosis | 2021-09-10 16:40:48 UTC | #81

What are we doing about SEO? Sites within the IC will want to be findable by the old internet. Can we return the raw files to bots and allow them to read them normally at the boundary level?

For example: User A wants to make a cool newsletter site using ICME but notices it never appears on Google Search. Even if he puts in an extremely specific exact search. His newsletter is unnoticed by the general population. He may consider putting it back into the old web just to get the normal SEO.

I propose this be a high target item on the roadmap. Not as just dev. But as someone who understands real world problems that big tech is eating up. Um, um. 🍲

-------------------------

paulyoung | 2021-09-11 13:46:49 UTC | #82

That seems to be in the control of the individuals and services providing those web pages rather than the network itself.

-------------------------

integral_wizard | 2021-09-11 10:07:38 UTC | #83

A proposal to dig deeper into our strategy to increase our decentralized fleet size.
https://forum.dfinity.org/t/the-fleet-problem-of-internet-computer/7159

-------------------------

jzxchiang | 2021-09-13 06:52:58 UTC | #84

I wonder how we could leverage the community to help design and implement software changes to the IC.

On-chain governance in the form of the NNS is unique to the IC, and could help the network evolve much faster than other blockchains. (Look how long it's taking for ETH 2.0.)

I'd bet there are quite a few of us who would be willing to help actually write the Rust code to add features to the IC. Being bottlenecked by the DFINITY Foundation on all of these large-scale changes doesn't seem to be sustainable (or fast enough) in the long term. If we have a more formalized reward system and proposal review process for decentralized source code contributions, I think this could be a huge advantage for the IC.

-------------------------

paulyoung | 2021-09-13 08:01:23 UTC | #85

Well, as you know, in one of my proposals I did actually write the code to implement the proposed change.

https://forum.dfinity.org/t/upgrade-http-request-calls-from-query-to-update-upon-canisters-request/7000?u=paulyoung

I agree that there may be a bottleneck with waiting on the DFINITY foundation to implement features that are voted upon. However, in this situation I think the bottleneck is not in the implementation, so I also agree that an improved process around proposing changes is needed.

-------------------------

nomeata | 2021-09-13 09:10:53 UTC | #86

[quote="jzxchiang, post:84, topic:6175"]
On-chain governance in the form of the NNS is unique to the IC
[/quote]

Is it really unique? I understand that Tezos has had on-chain governance, including changing the core protocol and code in an on-chain governance-driven way, long before the IC existed?

But yes, a discussion on how the design and development can be _actually_ community-owned is very welcome IMHO :-)

-------------------------

lastmjs | 2021-09-13 15:27:47 UTC | #87

One easy first step could be to allow pull requests here: https://github.com/dfinity/ic

-------------------------

lastmjs | 2021-09-13 15:30:32 UTC | #88

A good next target seems to be open sourcing all code with each repository accepting pull requests from DFINITY and the community. If we can get to that point we'll be in a good position to allow individuals, companies, DAOs, etc to start contributing.

-------------------------

jzxchiang | 2021-09-13 23:14:23 UTC | #89

Having a tighter link between pull requests and NNS proposals would be nice too.

For example, a PR can't be merged until its associated proposal is voted on and approved.

-------------------------

flyq | 2021-09-15 05:38:13 UTC | #90

The canister needs more detailed permission control. For example, the `controller` can upgrade the code and view the canister status; the `observer` cannot upgrade the code, but can only view the canister status.

Use a canister to manage the canisters of different users, just to get the status of these canisters, you need this function.

-------------------------

diegop | 2021-09-28 03:35:18 UTC | #91

[quote="flyq, post:90, topic:6175"]
The canister needs more detailed permission control.
[/quote]

I agree with you. This will be key for not just SNS but just in having canisters updated by multiple devs.

-------------------------

tbg | 2021-10-15 14:25:26 UTC | #92

There are any specific road map or initiative regarding FOOD

-------------------------

diegop | 2021-10-20 04:04:24 UTC | #93

At the risk of embarrassing myself, I have to ask: I am not sure what "FOOD" means. is that the new way of saying FUD on the interwebs or something completely different? :slight_smile:

-------------------------

Fulco | 2021-10-20 11:13:00 UTC | #94

I have seen at least two threads about opening up more information from canisters to other canisters.

https://forum.dfinity.org/t/canister-controller-and-cycle-balance-need-to-be-public/5591 (10 likes in this thread) 

and here as well:

https://forum.dfinity.org/t/getting-a-canisters-controller-on-chain/7531 

would love to see this considered. It is especially important if you are doing something with DAO's like I am currently

-------------------------

flyq | 2021-10-21 07:16:49 UTC | #95

[quote="Fulco, post:94, topic:6175"]
would love to see this considered. It is especially important if you are doing something with DAO’s like I am currently
[/quote]

Yes

https://forum.dfinity.org/t/megathread-community-submissions-for-dfinity-foundation-s-roadmap/6175/90

-------------------------

joaquincuelho | 2022-03-18 07:31:00 UTC | #96

Hi everyone, 


I'm not an expert on the ICP ecosystem yet but yes in the blockchain. 
This is my first review after completed the staking process and the following neurons> 

I don't very know if the followees are verified teams and if someone could create one as a ICP holder. 
In that case for a staking period of 7+ years I see some kind of risk associated, for both 
parts the token holder and the ICP ecosystem, since I know 
this neurons has a lot of power. 

What about to make a partnership with VeChain for the verification process? 
They're solving real world challenges for the Carbon footprint, Web3, DAO and Sustainability and they have strong partnerships in the quality audits. 

And also a way to see all of this verified token holders on a list. 



Kind regards
Joaquin

-------------------------

jglassemc2 | 2024-01-20 02:12:15 UTC | #97

Hello everyone,

I've been pondering a concept that might sound unconventional and is still in the early stages of thought. I'm not entirely sure if it's feasible, so I'd greatly appreciate your insights or corrections if I'm off track. The idea revolves around embedding a subnet within a subnet.

**Concept Overview:** Imagine a basic subnet comprising five nodes. What if one of these nodes is replaced with another subnet, also consisting of five nodes? This structure would potentially influence the consensus mechanism of the parent subnet, as consensus in the child subnet would impact the parent's decision-making process.

**Potential Implications:**

1. **Increased Security:** By adding layers, the network might become more resilient to attacks or failures by virtue of having more independent nodes.
2. **Asymmetric Consortium Subnets:** This could be particularly beneficial in scenarios where consortiums involve both large and small companies. Small companies could manage their subnets, which then act as individual nodes in a larger subnet controlled by more influential corporations. This arrangement could balance power and participation, maintaining engagement and trust in the network.
3. **Weakened Security / Higher Tolerance:** This structure could allow a higher percentage of nodes to disconnect without disrupting the update process. For instance, if we abstract this idea to a 13-node subnet where each node is replaced by a 5-node subnet, the calculation for tolerance could be 4 * (5) + 9 * (1) / 13 * 5 = 44.6%. Although that make updates easier, that has the exact impact on lowering the percent of bad actors required to push a malicious update to 55.4%.  
4. **Slower Consensus:** Updates which require updates from another subnet would take more time.

**Seeking Feedback:** This idea is still in its nascent stage and might have overlooked complexities or technical challenges. What are your thoughts on this? Could this nested subnet approach be a viable way to enhance the network, or are there fundamental flaws in this thinking? Any feedback, criticisms, or further ideas would be greatly appreciated.

-------------------------

