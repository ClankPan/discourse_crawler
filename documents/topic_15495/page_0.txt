mindfulanon | 2022-09-18 13:38:41 UTC | #1

Hello everyone, 

im trying to deploy a token contract https://github.com/ccyanxyz/motoko-token/blob/master/src/token.mo on the internet computer. When using:

```
dfx canister call token transfer "($OWNER, 10)"
```
This error comes up: 
```
Error: Failed update call.
Caused by: Failed update call.
The Replica returned an error: code 5, message: "Canister trapped explicitly: assertion failed at main.mo:27.9-27.28"
```

Can anyone help me with that? Thanks in advance!

-------------------------

cryptoschindler | 2022-09-18 15:11:44 UTC | #2

Looks like you have to call `initialize` first.

https://github.com/ccyanxyz/motoko-token/blob/322829d806905980c2555fb1c615b61cfaaf5d46/src/token.mo#L15

-------------------------

mindfulanon | 2022-09-22 18:40:20 UTC | #3

I did not put in my code but only the repository. I have declared all variables and I thought that should work directly with the deploy. The problem still exists even if I call the init function again in the UI or via the terminal. The init function gives me the same error. Its working offline but not online.

-------------------------

cryptoschindler | 2022-09-23 11:38:48 UTC | #4

By offline I assume you mean locally?

If you want to call your canister that is deployed to the mainnet, use the following flag

```
dfx canister call --network ic token transfer "($OWNER, 10)"
```

Make sure you called `initalize` before as well. Calling `initialize` more then once is supposed to throw an error, so that's expected. See the `assert` statement:
https://github.com/ccyanxyz/motoko-token/blob/322829d806905980c2555fb1c615b61cfaaf5d46/src/token.mo#L16

-------------------------

mindfulanon | 2022-09-24 19:45:40 UTC | #5

Yes i mean locally. 

So i called initialize only once and it still throws an error and it doesnt initialize my variables:


 ```
dfx canister --network ic call token initialize '("test", "dasda", 3124141, 0)'

dfx canister --network ic call token transfer "($OWNER, 10)"
```
It returns

 ```
Error: Failed update call.
Caused by: Failed update call.
  The Replica returned an error: code 5, message: "Canister trapped explicitly: assertion failed at main.mo:17.9-17.37"
```

When i use
 ``` dfx canister --network ic call token name ```

It returns 

 ```("")```

When i use 

 ```dfx canister call token name```

It returns the name

 ```("test")```

-------------------------

cryptoschindler | 2022-09-25 08:39:42 UTC | #6

can you try the following, note that this will delete all state in your production canister!

```
dfx deploy --network ic --mode reinstall

dfx canister --network ic call token initialize '("test token", "tt", 0, 1000)'

// should return "test token"
dfx canister --network ic call token name

// should remove 10 tokens from the calling identity and add 10 to $OWNER 
dfx canister --network ic call token transfer "($OWNER, 10)"
```

for your call to initalize i think you mixed up the position for the decimals and the total supply.

-------------------------

mindfulanon | 2022-09-29 13:32:21 UTC | #7

I dont know why but it didnt work. Im trying a different github project now because this seems more advanced as well: https://github.com/rocklabs-io/ic-token

Now im getting this error: 
![grafik|690x118](upload://aUhvPsDCYy9yX4NpYEr86PtQp4s.png)

So i paste a picture in base64 code but didnt work as well
![grafik|558x500](upload://oTOh4JbfxrFxYQZquTlPqSUUpVW.png)

This happens to me when I make the last step in the read me (https://github.com/rocklabs-io/ic-token/blob/main/README.md) 

I looked on the solutions here on the forum but they didnt help me

@cryptoschindler

-------------------------

cryptoschindler | 2022-09-30 10:10:52 UTC | #8

I don't think you have to escape the double quotes with a backslash because you are using single quotes to encapsulate the argument, this should be the reason for the candid parser error you are seeing.

-------------------------

mindfulanon | 2022-10-02 11:58:16 UTC | #9

First I wanted to thank you so much for the help you give me! The whole thing worked after your hint. 

I am currently deploying an Extandable Token. https://github.com/ICPSwap-Labs/extendable-token/blob/main/examples/erc20.mo 

I have now deployed the token live. Now I wonder how I can add an image to the token? With the DIP-20 token it was easy with the parameters with base64 but here I don't understand it. Do you know how I can implement this?

@cryptoschindler

-------------------------

cryptoschindler | 2022-10-03 06:52:41 UTC | #10

There's no specification of the encoding of the symbol as far as I can see :confused:

-------------------------

mindfulanon | 2022-10-04 18:03:15 UTC | #11

That's right I saw it then too. That's why I wanted to continue with this one: https://github.com/ICPSwap-Labs/extendable-token/blob/main/examples/standard.mo

I managed to import the modules mo:cap and mo:ic-commons. However, now I have 3 more errors:


![3|690x358](upload://kwDyKMdo3kBU7FiLXHa8FMJWxp7.png)

 @cryptoschindler

-------------------------

cryptoschindler | 2022-10-04 16:21:11 UTC | #12

I'm not sure what you are trying to do, but the VSCode extension basically tells you what the problem is. You are for example trying to use `TokenIdentifier`, but there is no definition of what that is. You can either import the type from another module or redefine it.

-------------------------

mindfulanon | 2022-10-04 18:06:26 UTC | #13

Yes, you are right thank you! The only thing i cant solve is this error above (i edited the picture). I dont understand where i need to implement this.I declared this type. 
```
    type TransferRequest = ExtCore.TransferRequest;
```
I dont know what im missing

-------------------------

cryptoschindler | 2022-10-04 19:16:03 UTC | #14

Again the compiler is your friend and basically tells you that the nonce field you are referring to in the `transfer.nonce` does not exist in the type `TransferRequest`. And indeed, when you check the type definition you can see that it's missing

https://github.com/ICPSwap-Labs/extendable-token/blob/072c87be5332c73cb5b674490611d071c7c76024/motoko/ext/Core.mo#L44

You can either implement it yourself or open an issue in the repository. I haven't checked it thoroughly but it looks like a bug that it's missing.

-------------------------

mindfulanon | 2022-10-19 13:18:21 UTC | #15

I have implemented it now, thank you. Now I don't have any errors in the code and I was able to deploy it locally. Unfortunately just not on the right network with --network ic 

I get this error:

![grafik|690x215](upload://1TNIQYTeexWHfgBAqflxS1w0eat.png)

Im using this query 

```
dfx deploy --network=ic --wallet="mpza4-jiowq-w3pxl-4qxoc-iy4lo-aq4o2-si3cl-nghcq-mmmyi-ftri6-3qe" --argument='("TOKEN", "$TOKEN", 2, 100000:nat, principal "principal id i removed for forum")' --with-cycles 1500000000000

```
Canister ID of my wallet 
```
dfx identity --network ic get-wallet 

hoysn-3aaaa-aaaan-qazqa-cai
```

Principal ID of my wallet 
```
dfx identity --network ic get-principal
moztx-lv47l-qf53e-miy6s-pcp2k-6k5ya-xbsw2-mvxvy-vsmd6-k5kqj-cae
```
Status of my canister
```
Canister status call result for standard.
Status: Running
Controllers: moztx-lv47l-qf53e-miy6s-pcp2k-6k5ya-xbsw2-mvxvy-vsmd6-k5kqj-cae
Memory allocation: 0
Compute allocation: 0
Freezing threshold: 2_592_000
Memory Size: Nat(8056313)
Balance: 2_025_410_846_708 Cycles
Module hash: 0xbb001d1ebff044ba43c060956859f614963d05c77bd778468fce4de095fe8f92
```

I tried out a lot and looked in the forum but nothing helped. What do I have to do to solve the error? If you need more informations let me know.

-------------------------

Severin | 2022-10-19 14:59:13 UTC | #16

You have to pass your wallet's canister ID into the `--wallet` flag

-------------------------

cryptoschindler | 2022-10-19 18:19:34 UTC | #17

I looking at the controllers of the canister I think he should omit the wallet flag entirely as it looks like his idenity is already the sole controller of the canister.

-------------------------

mindfulanon | 2022-10-19 19:02:11 UTC | #18

I tried `--wallet` with canister ID already and it didn't work.

Omitting the flag has helped me. This error followed

![x|690x83](upload://n1Y3qjvwLRMx6XJF4vZPOicbuq0.png)


I could solve it with
```
dfx canister --network ic install --mode reinstall --argument='("TOKEN", "$TOKEN", 2, 100000:nat, principal "principal id i removed for forum")' standard
```

It finally worked. Many thanks!

-------------------------

mindfulanon | 2022-10-20 14:53:40 UTC | #19

The only thing I still have problems with is the setLogo() function 

```
dfx canister --network=ic call standard setLogo '("")'.
```

The function expects a text parameter.

I have tried it now like this: 

```
dfx canister --network=ic call standard setLogo '("data:image/png;base64, base64code")' 
dfx canister --network=ic call standard setLogo '("1.png")
dfx canister --network=ic call standard setLogo '("../1.png")
dfx canister --network=ic call standard setLogo '("imagehosturl")
```

I do not get any error. On ICScan the text is shown but  when I want to add my token to plug wallet it still doesn't show a logo.

Truly my last question now. What am I doing wrong?

-------------------------

cryptoschindler | 2022-10-21 09:31:25 UTC | #20

https://github.com/Psychedelic/DIP721/blob/develop/spec.md

Base64 encoded text should be fine. IDK if plug surfaces the logo from the canister or if it comes from DAB. Maybe @oss

-------------------------

