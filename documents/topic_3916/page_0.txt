Litzi | 2021-05-17 18:23:07 UTC | #1

After staking some Neurons, these popped in my mind:

1. When staking neurons, the counter for current balance doesn't update
2. The Slider doesn't listen to the keyboard. Would also help to have a number input field to precisely adjust the dissolve period. Even better would be if it had some snapping points like 6M 12M 2Y, etc.
3. What are the hours for?
4. Why not turning it upside down: Giving a Neuron ID and then select for which topics to follow. Currently If I want to follow one specific Neuron on all topics I have to input it 10 times. Maybe it's just because I'm using it wrong :slight_smile: 
5. There is no input validation. You can put whatever you want into the Followee Address.
6. In general, UI and usability is very laggy. It crashes regularly when heavy used.

-------------------------

coin_master | 2021-05-19 04:39:42 UTC | #2

I agree with you, the UI on the app is not optimal and there's a lot of improvement to be made.
I am a frontend engineer and happy to help, please @ililic let me know if I can support

-------------------------

dani | 2021-11-05 22:09:47 UTC | #3

I agree this UI can use some improvements. I'd like to add to the list:

1. outline is disabled, making keyboard navigation hard
2. selecting text is disabled on a lot of places

I was just looking into the stack used in the front-end. It seems that Flutter is used. I'm not familiar with Flutter, but the DOM looks very weird: the entire UI is a canvas. I'd say that if you'd use regular web technologies like HTML you get accessibility out of the box, much easier. But perhaps I'm missing some important point here

It also appears that further development has stagnated: https://github.com/dfinity/nns-dapp/graphs/contributors

-------------------------

ielashi | 2021-11-06 13:57:47 UTC | #4

I've been helping out with the NNS dapp from time to time. I certainly agree there's a lot to be desired. The original developers of the dapp chose Flutter, and we've come to realize that is not what we want, partially because of what @dani pointed out, and we're looking into frontend resources to help with a potential rewrite with something like Svelte or React.

-------------------------

dani | 2021-11-06 15:08:16 UTC | #5

Good to hear that it's still on the radar!

Replicating current UI any of those frameworks in stead of Flutter would vastly improve a11y and UX.

-------------------------

jzxchiang | 2021-11-08 06:15:52 UTC | #6

Can you elaborate on why Flutter didn't work out as expected?

-------------------------

saikatdas0790 | 2021-11-08 09:16:56 UTC | #7

I'd be happy to contribute if looking at Svelte.

-------------------------

ielashi | 2021-11-08 13:45:20 UTC | #8

Absolutely. Here's the thinking around why we'd justify a rewrite at this point:

* **Interoperability with the IC frontend tools.** All the IC frontend libraries that are published to date are written in TS. We managed to create a bridge between these TS tools and Dart, but that bridge is not type safe and has continuously been a source of bugs in production. The proper solution here would to be have Dart ports for all these tools.
* **Testing**. Using a CanvasKit renderer prevents from using testing tools that rely on the DOM, like Selenium, for end-to-end integration tests. We did explore replacing the CanvasKit renderer with the HTML renderer, but even that resulted in a strange DOM and bizarre UI issues.
* **Team experience**. Likely some of the above issues are amplified because the current team aren't Flutter experts, and so moving to standard web technologies would be more aligned with the experience of the team (and the experience of FE developers at large).

Note that this isn't a general critique of Flutter/Dart, but more of a critique of using Flutter/Dart for our specific use-case. Would be happy to hear your perspectives if you think there's a better path forward.

-------------------------

jzxchiang | 2021-11-08 22:05:14 UTC | #9

Awesome, thanks for the detail.

I am not an expert in Flutter by any means. However, I do know that @neeboo's team at AstroX has been building an incredible [agent-dart](https://forum.dfinity.org/t/dart-flutter-agent-dart-updates-v0-1-16-flutter-web-supported/5614) library, but it might be more specific to native mobile than web.

Will the NNS dapp ever be a native mobile app? I noticed that it's a PWA on my Android phone.

-------------------------

ielashi | 2021-11-09 16:48:01 UTC | #10

Thanks for the note. I would say a native mobile app is inevitable long term, but it's not something we're planning/prioritizing at the moment - our immediate priority is having a rock solid web interface first. Also, keep in mind that there's nothing stopping the community from building such an app if there's a strong interest :slight_smile:

-------------------------

saikatdas0790 | 2021-11-10 09:29:01 UTC | #11

The current NNS app is laggy in some places like the voting tab on a 16 core 32 gig desktop.

A native web app with PWA functionality would go a long way.

The current app is everything rendered in a canvas element.ðŸ˜•

-------------------------

