e274426380 | 2023-08-23 03:29:07 UTC | #1

neuron.listProposals is used to query for proposals, but when I enter the request parameter to use Unknown, no proposals are returned.
This is the first time I've used an official dev kit and I'm not too familiar with the corresponding types, but what exactly does **Unknown** mean? Shouldn't it mean select all?
![image|430x60](upload://90I5AHX5lL8amTO2vTYG2y6uRTe.png)
  
```
      const listType: ListProposalsRequest = {
            limit: 100,
            beforeProposal: undefined,
            includeRewardStatus:[ProposalRewardStatus.Unknown],
            excludeTopic:[Topic.Unspecified],
            includeStatus: [ProposalStatus.Unknown],
        };
```
When I changed 
**ProposalRewardStatus.Unknown** =>**ProposalRewardStatus.AcceptVotes**
**ProposalStatus.Unknown** => **ProposalStatus.Open**, 
I finally got 2 proposals and it was consistent with what I found on the official NNS website.
I just don't quite understand what Unknown actually stands for

-------------------------

peterparker | 2023-08-23 04:47:29 UTC | #2

I don't exactly remember what's `Unknown` but, I can share that we exclude such flags in NNS dapp.

`Unknown` are available in the lib to reflect the `enum` of the governance canister code - for example [https://github.com/dfinity/ic/blob/bd646cf9385531f0b390b3d3d1f902d90b0c4a15/rs/nns/governance/src/gen/ic_nns_governance.pb.v1.rs#L3542](https://github.com/dfinity/ic/blob/bd646cf9385531f0b390b3d3d1f902d90b0c4a15/rs/nns/governance/src/gen/ic_nns_governance.pb.v1.rs#L3542) - but, practically we do not use it those in the frontend.

-------------------------

e274426380 | 2023-08-23 07:26:46 UTC | #3

OH, I see, maybe the ic-js library hasn't been updated in this regard, the type is like this in ic-js.

```
export declare enum ProposalRewardStatus {
    Unknown = 0,
    AcceptVotes = 1,
    ReadyToSettle = 2,
    Settled = 3,
    Ineligible = 4
}
```
Uknown has been changed to Unspecified in the rust library.
I wonder if there are still developers who maintain the ic-js library?

-------------------------

peterparker | 2023-08-23 07:50:52 UTC | #4

[quote="e274426380, post:3, topic:22330"]
OH, I see, maybe the ic-js library hasnâ€™t been updated in this regard
[/quote]

Most probably we indeed did not rename "Unknown" to "Unspecified" in the js lib, correct. As I said we do not use this value anyway in NNS dapp.

[quote="e274426380, post:3, topic:22330"]
I wonder if there are still developers who maintain the ic-js library?
[/quote]

We, the gix team at DFINITY, are maintaining the ic-js libraries and are using those in NNS dapp.
e.g. last commit was provided by me and merged last week.

-------------------------

e274426380 | 2023-08-23 08:04:09 UTC | #5

[quote="e274426380, post:3, topic:22330"]
`Unknown `
[/quote]

Thanks for the reply, so is this an error?
Speaking from my actual experience of using Unknown without returning any results, it's likely that there is some error with this type.

-------------------------

peterparker | 2023-08-23 08:15:49 UTC | #6

[quote="e274426380, post:5, topic:22330"]
Thanks for the reply, so is this an error?
[/quote]

No, I don't think so. It's a name of a JS enum, what's really matter is it's value - i.e. 0.

```
export enum ProposalRewardStatus {
  Unknown = 0,
  ...
```

-------------------------

peterparker | 2023-08-23 08:30:36 UTC | #7

That said, don't get me wrong. I'm not against renaming `Unknown` to `Unspecified` ðŸ˜‰

-------------------------

e274426380 | 2023-08-23 08:40:50 UTC | #8

Ok, I see what you mean, but why is it that no object is returned when I set the value to ProposalRewardStatus.Unknown, when it should be set to 0 it should return all of them!

-------------------------

peterparker | 2023-08-23 08:57:17 UTC | #9

[quote="e274426380, post:8, topic:22330"]
when it should be set to 0 it should return all of them!
[/quote]

I don't think that's how it works. By requesting `Unspecified / Unknown` you request those proposals that are set as `Unspecified / Unknown` . So it returns none because there aren't such types.

Try with `[]` to get all.

-------------------------

e274426380 | 2023-08-23 11:04:35 UTC | #10

:wink:It does work. That was an oversight on my part.

-------------------------

peterparker | 2023-08-23 11:05:27 UTC | #11

Glad to hear it work out, thanks for the feedback.

-------------------------

