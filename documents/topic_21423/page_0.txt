haida | 2023-07-16 07:32:23 UTC | #1

https://github.com/dfinity/examples/tree/master/motoko/ledger-transfer


```
export IC_VERSION=dd3a710b03bd3ae10368a91b255571d012d1ec2f
curl -o ledger.wasm.gz "https://download.dfinity.systems/ic/$IC_VERSION/canisters/ledger-canister_notify-method.wasm.gz"
gunzip ledger.wasm.gz
curl -o ledger.private.did "https://raw.githubusercontent.com/dfinity/ic/$IC_VERSION/rs/rosetta-api/ledger.did"
```

Some link addresses in it have expired, and my parameters are better and the latest IC_VERSION, but dfx deploy ledger --argument xxx, the argument has changed,
In the end I tried a lot of adjustments but couldn't deploy successfully locally!

Can you help us update a new usable demo?

-------------------------

haida | 2023-07-16 07:37:33 UTC | #2

It seems that the argument rules of the new version have changed, and various errors still appear after trying to adjust. It took me a lot of time and made me very painful. I hope you can help me.
Thanks!

-------------------------

Severin | 2023-07-17 09:47:11 UTC | #3

I got it to install with `dfx canister install ledger --argument "(variant {Init = record { token_name = \"NAME\"; token_symbol = \"SYMB\"; transfer_fee = 1000000; metadata = vec {}; minting_account = record {owner = principal \"$(dfx --identity minter identity get-principal)\";}; initial_balances = vec {}; archive_options = record {num_blocks_to_archive = 1000000; trigger_threshold = 1000000; controller_id = principal \"$(dfx identity get-principal)\"}; }})"`

-------------------------

haida | 2023-07-17 12:49:14 UTC | #4

Error reportingï¼š
```
Error: Failed to install wasm module to canister 'ledger'.
Caused by: Failed to install wasm module to canister 'ledger'.
  Failed during wasm installation call: The replica returned a replica error: Replica Error: reject code CanisterError, reject message Canister bkyz2-fmaaa-aaaaa-qaaaq-cai trapped explicitly: Unable to decode init argument.
Decode as new init returned the error No more values on the wire, the expected type variant {
  Upgrade : opt record {
    maximum_number_of_accounts : opt nat64;
    icrc1_minting_account : opt record {
      owner : principal;
      subaccount : opt vec nat8;
    };
  };
  Init : record {
    send_whitelist : vec principal;
    token_symbol : opt text;
    transfer_fee : opt record { e8s : nat64 };
    minting_account : text;
    transaction_window : opt record { secs : nat64; nanos : nat32 };
    max_message_size_bytes : opt nat64;
    icrc1_minting_account : opt record {
      owner : principal;
      subaccount : opt vec nat8;
    };
    archive_options : opt record {
      num_blocks_to_archive : nat64;
      max_transactions_per_response : opt nat64;
      trigger_threshold : nat64;
      max_message_size_bytes : opt nat64;
      cycles_for_archive_creation : opt nat64;
      node_max_memory_size_bytes : opt nat64;
      controller_id : principal;
    };
    initial_values : vec record { text; record { e8s : nat64 } };
    token_name : opt text;
  };
} is not opt, reserved or null
Decode as old init returned the error No more values on the wire, the expected type record {
  send_whitelist : vec principal;
  token_symbol : opt text;
  transfer_fee : opt record { e8s : nat64 };
  minting_account : text;
  transaction_window : opt record { secs : nat64; nanos : nat32 };
  max_message_size_bytes : opt nat64;
  icrc1_minting_account : opt record {
    owner : principal;
    subaccount : opt vec nat8;
  };
  archive_options : opt record {
    num_blocks_to_archive : nat64;
    max_transactions_per_response : opt nat64;
    trigger_threshold : nat64;
    max_message_size_bytes : opt nat64;
    cycles_for_archive_creation : opt nat64;
    node_max_memory_size_bytes : opt nat64;
    controller_id : principal;
  };
  initial_values : vec record { text; record { e8s : nat64 } };
  token_name : opt text;
} is not opt, reserved or null, error code None
```

-------------------------

benji | 2023-07-17 12:52:27 UTC | #5

If you use the latest ledger implementation, then some init parameters have changed and you'd need to adjust accordingly.

-------------------------

Severin | 2023-07-17 12:53:24 UTC | #6

I'm using this ledger version:
```
    "ledger": {
      "type": "custom",
      "candid": "https://raw.githubusercontent.com/dfinity/ic/a17247bd86c7aa4e87742bf74d108614580f216d/rs/rosetta-api/icrc1/ledger/ledger.did",
      "wasm": "https://download.dfinity.systems/ic/a17247bd86c7aa4e87742bf74d108614580f216d/canisters/ic-icrc1-ledger.wasm.gz",
      "remote": {
        "id": {
          "ic": "ryjl3-tyaaa-aaaaa-aaaba-cai"
        }
      }
```

-------------------------

haida | 2023-07-17 14:05:47 UTC | #7

Thank you! Successfully deployed!

But the 'transfer' interface function is no longer available, has it been replaced with 'icrc1_transfer' now?

```
service : (ledger_arg : LedgerArg) -> {
    icrc1_name : () -> (text) query;
    icrc1_symbol : () -> (text) query;
    icrc1_decimals : () -> (nat8) query;
    icrc1_metadata : () -> (vec record { text; MetadataValue }) query;
    icrc1_total_supply : () -> (Tokens) query;
    icrc1_fee : () -> (Tokens) query;
    icrc1_minting_account : () -> (opt Account) query;
    icrc1_balance_of : (Account) -> (Tokens) query;
    icrc1_transfer : (TransferArg) -> (TransferResult);
    icrc1_supported_standards : () -> (vec record { name : text; url : text }) query;
    get_transactions : (GetTransactionsRequest) -> (GetTransactionsResponse) query;
    get_blocks : (GetBlocksArgs) -> (GetBlocksResponse) query;  
    get_data_certificate : () -> (DataCertificate) query;    
}
```

-------------------------

Severin | 2023-07-17 14:37:36 UTC | #8

Yes. I suggest you use the icrc1_transfer, but I _think_ the original 'transfer' function may still be in the wasm, even though it's not advertised anymore

-------------------------

haida | 2023-07-19 02:35:09 UTC | #9

[quote="Severin, post:6, topic:21423"]
```
      "remote": {
        "id": {
          "ic": "ryjl3-tyaaa-aaaaa-aaaba-cai"
        }
```
[/quote]
Regarding the "remote" in the configuration, I know it should be the ledger IC address, but how do I switch to call the ic ledger or the local ledger?
Or is it deployed to the IC network to automatically point to the ic ledger?

-------------------------

Severin | 2023-07-19 06:44:29 UTC | #10

[quote="haida, post:9, topic:21423"]
Or is it deployed to the IC network to automatically point to the ic ledger?
[/quote]

Correct. `dfx build` injects environment variables corresponding to the selected network's canister ids, which the compiler(s) will pick up and hard-code into the wasm

-------------------------

