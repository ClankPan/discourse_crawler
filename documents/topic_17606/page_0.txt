Manu | 2023-01-30 12:58:41 UTC | #1

Hi everybody!

We have talked about "chain-key Bitcoin" aka ckBTC in a previous [forum thread](https://forum.dfinity.org/t/feedback-wanted-wrapped-bitcoin-ledger-on-the-internet-computer/10681) which led to motion proposal https://dashboard.internetcomputer.org/proposal/50135. The motion proposal was accepted and DFINITY has been busy building ckBTC. I am starting a new forum topic here  to talk about the implementation of ckBTC.

**What is ckBTC?**
- Canister smart contracts on the IC can hold real bitcoin, on the bitcoin blockchain, by building on https://forum.dfinity.org/t/threshold-ecdsa-signatures/6152 and https://forum.dfinity.org/t/direct-integration-with-bitcoin/6147. The strength of this approach is that one only needs to trust the ICP and the BTC networks for this integration, and no intermediate parties.  However, as this is real bitcoin, one also has the downsides of bitcoin, meaning that transactions are relatively slow and expensive. 
- ckBTC can be seen as wrapped bitcoin, but it is wrapped by a canister smart contract that builds on the direct bitcoin integration. That means that ckBTC is a token native to the Internet Computer, meaning it can be transferred quickly and with low fees, while being securely backed by real bitcoin on the Bitcoin blockchain. The planned fee for ckBTC transactions is 0.0000001 ckBTC, the equivalent of 10 satoshi.
- Users can use the "ckBTC minter" canister smart contract to deposit real bitcoin (on the bitcoin blockchain) to their personal deposit address, and receive an equal amount of ckBTC (minus fees). Similarly, users can use the ckBTC minter canister to return ckBTC tokens, and receive an equal amount of real bitcoin on a specified bitcoin address (again, minus fees). 
- ckBTC follows the [ICRC-1 token standard](https://github.com/dfinity/ICRC-1). 
- ckBTC will be owned by the Network Nervous System (NNS), meaning upgrades to the canisters can only be done with approval of the NNS, there is no individual party controlling the canisters. 
- ckBTC will be fully transparent: users will be able to see exactly how much bitcoin the ckBTC minter holds, as it will show all the bitcoin UTXOs that it holds. Similarly, one can see the supply of ckBTC tokens, and ensure that all ckBTC is always backed by BTC.
 
**When will ckBTC be available?**
We are planning to release ckBTC in early 2023.

-------------------------

Manu | 2022-12-22 14:10:33 UTC | #2

We have installed a test version of ckBTC called **ckTESTBTC** on mainnet! This is the code of ckBTC, but it wraps testnet bitcoin instead of real bitcoin. You can help test this, and developers can use this to test integrating with ckBTC. Note that we don't have a nice front-end for this yet, so you'll need to use some `dfx` commands. Here are the things you can do today with ckTESTBTC.

**Step 1: send testnet bitcoin to your deposit address**
You can clone the [ic repository](https://github.com/dfinity/ic), and `cd` to `ic/rs/bitcoin/ckbtc/testnet/`. This directory has the right canister_ids.json file:
```
{
  "index": {
    "ic": "mm444-5iaaa-aaaar-qaabq-cai"
  },
  "ledger": {
    "ic": "mc6ru-gyaaa-aaaar-qaaaq-cai"
  },
  "minter": {
    "ic": "ml52i-qqaaa-aaaar-qaaba-cai"
  }
}
```
From this directory, you can run the commands as outlined in the ["Bitcoin to ckBTC" section of the README](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter#bitcoin-to-ckbtc). You can use a bitcoin testnet faucet (eg https://bitcoinfaucet.uo1.net/) to send testnet bitcoin to your deposit address. The ckTESTBTC waits for 3 confirmations, so you have to wait some time between sending the testbtc and calling "update_balance".

**Step 2: transact in ckTESTBTC**
Now that you have ckTESTBTC, you can send it around quickly and for low fees. The [Bitfinity wallet](https://wallet.infinityswap.one/) by infinityswap already supports ICRC-1 tokens, so you can for example set that up. If you go that path, you have to click "import token", choose "custom", and enter the ledger canister id "mc6ru-gyaaa-aaaar-qaaaq-cai" with "ICRC1" as token standard.

You can send ckTESTBTC to a different address using 
```
dfx canister --network ic call ledger icrc1_transfer "(record { to = record { owner = principal \"PRINCIPAL\" }; amount = AMOUNT; })"
```
Note that the amount should be specified in 10^-8 ckTESTBTC (ie, the equivalent of satoshis). 

**Step 3: redeem ckTESTBTC to obtain testnet BTC**
If you have ckTESTBTC and you want to trade it in for testnet bitcoin, you can follow the steps in the ["ckBTC to Bitcoin" section of the README](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter#ckbtc-to-bitcoin).

**Other things to check out** 
The minter exposes a [dashboard](https://ml52i-qqaaa-aaaar-qaaba-cai.raw.ic0.app/dashboard) that exposes what the minter is doing, which operations are ongoing, and which UTXOs are controlled by the minter. You can use this to convince yourself that all ckTESTBTC is backed by testnet bitcoin. You can obtain the total supply of ckTESTBTC by calling:
```
dfx canister --network ic call ledger icrc1_total_supply
```
You can compare the resulting number with the total amount of testnet bitcoin held by the minter as shown on the dashboard. 


**Feedback**
Please use this forum thread to let us know if you run into any problems or if you have questions about ckBTC.

-------------------------

Jonathan | 2022-12-22 18:26:39 UTC | #3

Thanks for the updates, @Manu!

What happens to the BTC that is accumulated due to the ckBTC exchange fees?

-------------------------

Manu | 2022-12-22 18:39:23 UTC | #4

That's a great question. For now, nothing. In future upgrades to ckBTC we can do something with these, and one thing that definitely would make sense is to let small amounts be transferred out such that they can be used to pay the cycles of these canisters. When there would be even more BTC accumulated due to fees that exceeds what is needed to pay for cycles, one idea i had is that we could move those out into an account that uses it to buy ICPs and burn the ICPs, such that it's for the good of the ICP holders. Do you have any suggestions @Jonathan? 

And to be clear, all these ideas would need to come in the form of upgrades to the ckBTC canisters that are approved by the NNS, no individual can access those underlying BTCs.

-------------------------

FranHefner | 2022-12-22 21:16:35 UTC | #5

[quote="Manu, post:4, topic:17606, full:true"]
That’s a great question. For now, nothing. In future upgrades to ckBTC we can do something with these, and one thing that definitely would make sense is to let small amounts be transferred out such that they can be used to pay the cycles of these canisters. When there would be even more BTC accumulated due to fees that exceeds what is needed to pay for cycles, one idea i had is that we could move those out into an account that uses it to buy ICPs and burn the ICPs, such that it’s for the good of the ICP holders. Do you have any suggestions @Jonathan?

And to be clear, all these ideas would need to come in the form of upgrades to the ckBTC canisters that are approved by the NNS, no individual can access those underlying BTCs.
[/quote]

I like the idea, I think we should have more ICP burn sources. . This would help create deflationary pressure. In addition to contributing to the integration of DEFI in bitcoin, it would provide extra value by burning ICP, benefiting all of us who financed the project, buying and holding ICP.

-------------------------

Jonathan | 2022-12-22 23:31:29 UTC | #6

@Manu, I think your idea helps to balance the ecosystem.

Increased value of BTC:ICP
-> more ICP burned from (ck)BTC tx
-> increased value of ICP

I like that, but I'll follow up if I have other suggestions.

-------------------------

cyaolong | 2022-12-23 01:06:39 UTC | #7

I have tried to add cktestbtc to ME wallet and it succeeded, using the following canister ID: mc6ru-gyaaa-aaaar-qaaaq-cai
![图片|225x500](upload://zl8hYiewxPXrLF9Anqt04Vj5AI7.jpeg)

-------------------------

jzxchiang | 2022-12-23 02:08:39 UTC | #8

> In future upgrades to ckBTC we can do something with these, and one thing that definitely would make sense is to let small amounts be transferred out such that they can be used to pay the cycles of these canisters.

I thought NNS canisters (including ckBTC) don't need to pay for cycles.

-------------------------

Manu | 2022-12-23 08:33:09 UTC | #9

Good question! The term "NNS Canister" is not entirely precise, I think it's used for both canisters that run on system subnets, and for canisters that are controlled by the NNS.
- if a canister runs on a `system` subnet (as shown [here](https://dashboard.internetcomputer.org/subnets)), they do not cost cycles. 
- a canister that is *controlled* by the NNS but does not run on a system subnet, the canister pays cycles as usual

The canisters of ckTESTBTC run on the new [fiduciary subnet](https://forum.dfinity.org/t/introducing-the-first-fiduciary-subnet/17594) ([pzp6e](https://dashboard.internetcomputer.org/subnet/pzp6e-ekpqk-3c5x7-2h6so-njoeq-mt45d-h3h6c-q3mxf-vpeq5-fk5o7-yae)), so this canister does pay cycles. Even more so than on other subnets, because it's a larger subnet. We plan on running the real ckBTC on the same subnet.

-------------------------

NVHiep0208 | 2023-01-03 08:19:54 UTC | #10

I've just learned about this bitcoin integration. So, I don't know if it is possible to swap between BTC vs ICP through ckBTC.So, if it can, how can I do it pls? Thanks

-------------------------

Severin | 2023-01-04 10:39:56 UTC | #11

You'll have to go through exchanges to swap ckBTC to ICP. But AFAIK there's no ckBTC for mainnet bitcoin yet, so you'll have to be patient for some more time

-------------------------

THLO | 2023-01-04 15:36:32 UTC | #12

[quote="Severin, post:11, topic:17606"]
But AFAIK there’s no ckBTC for mainnet bitcoin yet
[/quote]

Correct, ckBTC is still under development and not available yet.

While trading ICP for BTC and vice versa is already possible technically, DEXs do not support this trading pair yet (as far as I know).

-------------------------

kpeacock | 2023-01-11 00:36:31 UTC | #13

I still think that the naming breakdown should be 
`ckBTC` - "chain key Bitcoin" that makes updates on the Bitcoin ledger with "real" Bitcoin
`wBTC` - "wrapped Bitcoin" a standard naming convention for a token on another blockchain

So, an ICRC-1 token would be `wBTC`, which could be burned for `ckBTC`. Any blockchain can wrap Bitcoin, but `ckBTC` should describe what is uniquely possible on the IC - making updates natively on the Bitcoin blockchain

-------------------------

Manu | 2023-01-11 13:08:51 UTC | #14

But what would `ckBTC` refer to exactly then? If it's the token, it's just BTC, so I think it would be misleading to name it anything other than `BTC`. 

For naming the "wrapped" token, this was named in https://forum.dfinity.org/t/feedback-wanted-wrapped-bitcoin-ledger-on-the-internet-computer/10681, I would be a bit hesitant to change it so late in the process. Wrt `wBTC`, I think that has the downside that other tokens are already called wBTC, most notably wrapped BTC on ETH, so I would prefer a more unique name.

-------------------------

Damirbek1997 | 2023-01-11 15:36:12 UTC | #16

hello,i have a quastion,how to mint new tokens with ckbtc?

-------------------------

kpeacock | 2023-01-11 17:24:28 UTC | #17

`ckBTC` would refer to BTC that is securely held and transferred by a smart contract, rather than an individual's wallet.

I think that using the name `wBTC` for wrapped tokens is actually a gesture of good faith to other communities, particularly Ethereum. It's important to use like terminology where features are in fact similar, and using a ledger to trade new tokens that are backed by a balance of BTC is called `wBTC` in the rest of the crypto ecosystem

edit: I do see the issue where it may be hard to list IC `wBTC` on traditional exchanges.  However, it does seem like there is a pattern of simply using the original ticker and associating the platform with a suffixed number https://www.forbes.com/digital-assets/assets/bitcoin-[polygon]-(btc)-btc11/?sh=3c5b4ef94278

-------------------------

Manu | 2023-01-11 17:33:09 UTC | #18

Welcome to the forum @Damirbek1997! The real ckBTC is not live yet, but ckTESTBTC is live (which wraps testnet bitcoin). You can find the instructions on how to use that in an [earlier post](https://forum.dfinity.org/t/chain-key-bitcoin-ckbtc-bitcoin-wrapped-by-a-smart-contract/17606/2?u=manu). We don't have a nice font-end yet though, so it's all on the command line for now.

-------------------------

Manu | 2023-01-11 17:41:17 UTC | #19

[quote="kpeacock, post:17, topic:17606"]
`ckBTC` would refer to BTC that is securely held and transferred by a smart contract, rather than an individual’s wallet.
[/quote]

But isn't how the token is held irrelevant? An ICP is an ICP irrespective of whether I hold it in a ledger nano or the FE dapp via II right? Calling real bitcoin held by canisters ckBTC sounds a bit like calling ICP held via II something like `iiICP`.

-------------------------

Denis | 2023-01-11 18:39:57 UTC | #20

There could be wrapped BTC on the IC without BTC integration, correct? Should such wrapped BTC not have a separate designation so as not to be confused with ckBTC which is a direct product of BTC integration?

-------------------------

Damirbek1997 | 2023-01-11 21:40:33 UTC | #21

Thank you, I too am glad to be part of the internet community 
I read your post about ckbtc canister, searched ckbtcTest repositories, didn't find information about minting, is it possible to implement minting at all?

-------------------------

Manu | 2023-01-12 08:54:21 UTC | #22

I'm not 100% sure i understand your question correctly. What I meant earlier is that you can follow my [earlier post](https://forum.dfinity.org/t/chain-key-bitcoin-ckbtc-bitcoin-wrapped-by-a-smart-contract/17606/2) (which links to the [README](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter#bitcoin-to-ckbtc)) to send testnet bitcoin to the ckTESTBTC minter, and the ckTESTBTC minter will in return mint new ckTESTBTC for you. Does that answer your question, or are you looking for something else?

-------------------------

singularity | 2023-01-13 15:54:18 UTC | #23

Yea, call it BTC, because that is what it is. When you are on Binance you see BTC when it is BTC, and not binBTC.

-------------------------

anonymous | 2023-01-15 22:25:01 UTC | #24

I kind of agree with this. When looking at other blockchains (especially their explorers), wrapped Bitcoin is only labelled as Bitcoin (BTC), not Example Bitcoin (eBTC) or anything like that.

It would indeed be extremely nice if we just called it Bitcoin (BTC) and nothing more, but perhaps people could get confused? Then again, people don't seem to be confused on other chains.

-------------------------

blabagastered | 2023-01-15 23:21:42 UTC | #25

The reason calling ckBTC just BTC would be misleading is that ckBTC is an ICRC token, native to the IC, that does not exist in the bitcoin network.

There are many distinctions that can be made but the most basic one is the one between native vs (synthetic) representation.

BTC is a token native to the bitcoin network, ETH and ERC20s are tokens native to the Ethereum network, ICP and ICRCs are tokens native to the Internet Computer network.

BTC is native bitcoin that exists only on the bitcoin network. The IC can hold and move these without having to itself exist on the bitcoin network, just like you and I can without us having to exist on the bitcoin network. One can recognise this asset, BTC, in part in the fact it can only do ~7 transactions per second, has 10 minute confirmation times, shows its transactions in bitcoin block explorers, can be held and handled by bitcoin wallets, etc. 

All other representations of BTC, including wBTC (ERC20), renBTC (ERC20), BTC.b (Avalanche ERC20 or OFT), ckBTC (ICRC), and so on, are representations of BTC that are not native to the bitcoin network.

The IC can hold and handle BTC, and it can hold and handle ckBTC. One exists on the bitcoin network, the other exists on the IC network.

The process of achieving that tokenisation or representation can and does vary greatly, but that's another matter. In particular, ckBTC is an important innovation, the closest existing parallel probably being renBTC, but none is literally and exactly BTC.

To the extent that the rest of the crypto ecosystem pays attention to ckBTC, officially calling it simply BTC runs the risk of inciting ridicule, accusations of unwarranted grandiosity, and even raise questions, in the eyes of the broader crypto community, especially on a first-sight basis, about the technical literacy or degree of familiarity the team may have regarding the existing context in which it has created this important innovation.

It would also make it very difficult to distinguish in language between when an IC dapp is dealing with or referring to BTC vs when it's dealing with ckBTC, both of which can be handled by IC canisters, leading by necessity to informal and possibly a proliferation of fragmented renaming to account for the  practical and really ontological differences between those assets.

-------------------------

Roman | 2023-01-15 23:22:18 UTC | #26

I agree, yet I see the following risk that we must not underestimate : by deciding to call it only « BTC », newcomers on IC or crypto beginners all having heard about a direct integration could try to send BTC directly from a Bitcoin address to their CkBTC address.

So if we call it only BTC, we will have to multiply the warnings and disclaimers behind any CkBTC address : « Don’t send Bitcoin BTC to this address ».

This UX aspect will have to be addressed systematically, in a way or another.

In your example, no need to distinguish the ICP held with a Ledger Nano and those held with II (calling the first one nICP and the second one iiICP) because both are on the IC, whereas BTC and CkBTC won’t be. So the distinction, not justified in the first case, can be justified in the second.

-------------------------

cryptoschindler | 2023-01-16 11:11:08 UTC | #27

is there a `wasm` and `did` file available for download for local deployment, just like for the ledger?

-------------------------

singularity | 2023-01-16 20:04:58 UTC | #28

IC will have ckBTC and wrapped BTC . ckBTC won't be icrc, it will be real Bitcoin on the Bitcoin chain.

-------------------------

blabagastered | 2023-01-17 06:07:40 UTC | #29


[quote="Manu, post:1, topic:17606"]
* ckBTC follows the [ICRC-1 token standard ](https://github.com/dfinity/ICRC-1).
[/quote]

[quote="singularity, post:28, topic:17606"]
ckBTC won’t be icrc
[/quote]

This is precisely the sort of reason why we need two names for two assets.

To be clear, @singularity, the IC can handle (transfer, hold, etc) "real" BTC, but ckBTC is not that. They are two separate things.

-------------------------

kpeacock | 2023-01-19 18:10:02 UTC | #32

I think I can accept real BTC and ckBTC as our two ways of referring to it. We're going to have do do some real work in terms of user education to make the terms clear, though

-------------------------

THLO | 2023-01-24 10:24:29 UTC | #33

As we're getting closer to launching ckBTC, it makes sense to provide more detail about cycle management.
Since the ckBTC ledger and minter are hosted on an [application subnet](https://dashboard.internetcomputer.org/subnet/pzp6e-ekpqk-3c5x7-2h6so-njoeq-mt45d-h3h6c-q3mxf-vpeq5-fk5o7-yae), the canisters consume cycles. Naturally, we want both canisters to be self-sustainable; however, we don't want to charge cycles for the endpoints to make ckBTC as easy to use as possible.

Our approach is the following: There is a 0.0000001 ckBTC (10 "ckSatoshi") fee for ckBTC transfers. As there are more and more ckBTC transfers over time, the ckBTC minter will hold an increasingly large surplus of BTC.
Additionally, there is a small BTC fee when retrieving BTC (and burning the same amount of ckBTC) to cover the relatively high cost of getting the required signatures and sending the signed transaction to the Bitcoin network. The fee depends on the number of inputs and outputs of the transaction (you can check the source code [here](https://github.com/dfinity/ic/blob/c730ce914de29c2a4b23c56121cca02a367f1bc4/rs/bitcoin/ckbtc/minter/src/lib.rs#L652)).
This additional fee is typically small compared to the Bitcoin miner fee, which is deducted from the requested amount as well.

The ckBTC canisters are initially loaded with a large number of cycles, which should sustain their operations for quite some time. The long-term plan is to use the accumulated surplus to top up the canisters, (automatically) selling BTC on DEXs to obtain the required cycles.

-------------------------

dfisher | 2023-01-25 18:00:09 UTC | #34

Thanks the the updates guys. Will ckBTC be available in the NNS dApp when it rolls out or ever?

-------------------------

dieter.sommer | 2023-01-25 18:13:59 UTC | #35

Something vaguely related: We have often been calling ckBTC an "advanced form of *wrapped* Bitcoin" or the like. But talking to various people, it seems that using the term "wrapping" may be misleading and people coming from traditional blockchains may immediately think that this involves an intermediary like a bridge to perform the wrapping without even reading any further. When reading through the definitions of the first few hits for a Web search on "wrapped tokens", it becomes clear that they all explicitly refer to an intermediary, i.e., bridge, when defining what wrapping is.

Thus, we think that it is better to avoid using the term "wrapping" in the future altogether in the context of ckBTC. It is better to explain it as an analogue of Bitcoin on the Internet Computer blockchain, based on the native Bitcoin integration and particularly chain-key ECDSA signing, which gives the token its name. This should help avoid any ambiguities and particularly misleading people coming from more traditional blockchains.

-------------------------

nlh | 2023-01-26 03:37:41 UTC | #36

Hi everyone. I have some questions that I hope you can help me address. I'll be very grateful if you can use simple terms that even a layman can at least partially understand.
1. What are the key differences between ckBTC and Bitcoin Integration? And why do we need both of them?
2. What are the key differences/pros between ckBTC and wrapped BTC (on Ethereum network for example)?
3. For BTC integration, the assumption is that when a transaction is done/finalized (with BTC "integrated") in the Internet Computer network, that transaction is also done/finalized in Bitcoin network. Is that assumption correct? And if the answer is YES, how does it really work when we all know that the Bitcoin network is much less efficient (esp. in terms of transaction speed and finality) than the Internet Computer network?
Look forward to your feedback. Many thanks.

-------------------------

lastmjs | 2023-01-26 04:01:19 UTC | #37

[quote="Manu, post:1, topic:17606"]
ckBTC will be owned by the Network Nervous System (NNS), meaning upgrades to the canisters can only be done with approval of the NNS, there is no individual party controlling the canisters.
[/quote]

How will upgrades be performed? What proposal topics or NNS functions will be used?

I'm trying to ascertain how decentralized the upgrades to ckBTC will be. If proposal topics or functions are used which DFINITY has a lot of voting power behind, then we can consider DFINITY as a sole operator practically speaking. I think we should avoid that.

-------------------------

free | 2023-01-26 06:35:28 UTC | #38

[quote="nlh, post:36, topic:17606"]
2. What are the key differences/pros between ckBTC and wrapped BTC (on Ethereum network for example)?
[/quote]
Wrapped BTC means that one single person (or a group of people) have direct access to the BTC wallet that the wrapped Bitcoin refers to. E.g. I create a smart contract that manages a wrapped Bitcoin token; you transfer your Bitcoin to my wallet; and I give you wrapped Bitcoin in exchange; later on, you hope that if you give me wrapped Bitcoin I will transfer you actual Bitcoin out of my wallet.

With ckBTC, it is an IC canister that holds the underlying Bitcoin and issues the ckBTC. If said canister is blackholed (i.e. is no longer controlled by anyone and can no longer be upgraded); or owned by a DAO; then no single person or group has direct access to the wallet. The only middleman as it were is this canister. And the IC. So it's smart contracts all the way down. (o:

[quote="nlh, post:36, topic:17606"]
3. For BTC integration, the assumption is that when a transaction is done/finalized (with BTC “integrated”) in the Internet Computer network, that transaction is also done/finalized in Bitcoin network. Is that assumption correct?
[/quote]

It is not accurate, no. When ckBTC exchanges hands, only the ckBTC ledger (maintained on the IC) is updated. I.e. there's a canister on the IC that pools all the underlying Bitcoin; and maintains a ledger of who owns how much ckBTC (or equivalently, how much of the underlying Bitcoin). This works exactly the same way as wrapped Bitcoin on other networks. It's only when you want to convert your ckBTC into actual BTC that a transaction on the Bitcoin network must happen (a transfer from the canister's Bitcoin wallet to yours).

-------------------------

Severin | 2023-01-26 07:36:16 UTC | #39

[quote="nlh, post:36, topic:17606"]
What are the key differences between ckBTC and Bitcoin Integration? And why do we need both of them?
[/quote]

Bitcoin Integration makes it possible for canisters to control and transact with Bitcoin. ckBTC builds on top of that and exposes an ICRC-1-compliant interface to transact with Bitcoin on the IC. Without Bitcoin Integration ckBTC would not be possible without bridges. Without ckBTC the Bitcoin transactions on the IC would be as expensive and slow as normal Bitcoin transactions (read: impossible to provide a solid user experience).

-------------------------

Manu | 2023-01-26 09:18:56 UTC | #40

[quote="lastmjs, post:37, topic:17606"]
How will upgrades be performed? What proposal topics or NNS functions will be used?
[/quote]

It will be in topic `System Canister Management`, so the same as NNS canisters and the Bitcoin canister are upgraded.

-------------------------

nlh | 2023-01-26 11:55:16 UTC | #41

Thanks @free and @Severin for the response.

For Q(1), does it mean that there are actually 2 ways to transact BTC on the Internet Computer network: directly via Bitcoin Integration and indirectly via ckBTC (a "wrapped" version of BTC)?

For Q(2), does it mean that the ckBTC Canister will eventually be controlled by a DAO (as I don't think it makes sense if it is "blackholed"?
---> If the answer is YES, what makes this ckBTC Canister "more secured" than a conventional bridge (that can issue wrapped BTC) controlled by a DAO?

Look forward to your reply. Many thanks.

-------------------------

free | 2023-01-26 12:38:41 UTC | #42

[quote="nlh, post:41, topic:17606"]
what makes this ckBTC Canister “more secured” than a conventional bridge (that can issue wrapped BTC) controlled by a DAO?
[/quote]

The fact that no human has direct access to the Bitcoin wallet. Regardless of whether the bridge is controlled by one person or by a DAO, the private key to the Bitcoin account is held in some device (whether a computer, Ledger device, etc.) somewhere. Whoever has or gains access to said device/wallet, has access to all the BTC within it.

With bitcoin held by an IC canister, the secret key to the Bitcoin wallet is not held by any one IC replica / server. Every transaction is threshold signed by a two thirds majority of a 28-replica subnet. Intuitively, each of said replicas provides a piece of the signature and you need 19 pieces to put together a valid, signed transaction.

-------------------------

Severin | 2023-01-26 12:40:24 UTC | #43

[quote="nlh, post:41, topic:17606"]
does it mean that there are actually 2 ways to transact BTC on the Internet Computer network: directly via Bitcoin Integration and indirectly via ckBTC (a “wrapped” version of BTC)?
[/quote]

Yes, and it is possible for other canisters to offer the same functionality as ckBTC.

[quote="nlh, post:41, topic:17606"]
does it mean that the ckBTC Canister will eventually be controlled by a DAO (as I don’t think it makes sense if it is “blackholed”?
[/quote]

Yes, AFAIK it will be controlled by the NNS, which is a DAO itself.

-------------------------

THLO | 2023-01-27 15:58:04 UTC | #44

The [ckBTC minter](https://dashboard.internetcomputer.org/canister/mqygn-kiaaa-aaaar-qaadq-cai) and the [ckBTC ledger](https://dashboard.internetcomputer.org/canister/mxzaz-hqaaa-aaaar-qaada-cai) are already controlled by the NNS (more specifically, by the [NNS root canister](https://dashboard.internetcomputer.org/canister/r7inp-6aaaa-aaaaa-aaabq-cai)).

This **does not** mean that the functionality is ready yet. Once it is ready, proposals will be required to make ckBTC available.

-------------------------

nlh | 2023-01-27 17:34:10 UTC | #45

Thanks @free and @Severin for the answers. I get a much better understanding (hence appreciation) about BTC integration and ckBTC now.
It's gonna be an exciting time for the IC network and crypto as a whole.

-------------------------

Manu | 2023-02-01 08:56:15 UTC | #46

Now that proposal https://dashboard.internetcomputer.org/proposal/105128 passed, the index canister is also installed, so all ckBTC canisters are now in place. 

The mainnet ckBTC canister ids are:
```
{
  "index": {
    "ic": "n5wcd-faaaa-aaaar-qaaea-cai"
  },
  "ledger": {
    "ic": "mxzaz-hqaaa-aaaar-qaada-cai"
  },
  "minter": {
    "ic": "mqygn-kiaaa-aaaar-qaadq-cai"
  }
}
```
Note that converting BTC to ckBTC is still restricted to only one principal controlled by DFINITY, but everything else is live.

-------------------------

gatsby_esp | 2023-02-01 10:18:50 UTC | #47

[quote="Manu, post:46, topic:17606"]
`mqygn-kiaaa-aaaar-qaadq-cai`
[/quote]

What is the URL to access the minter?

-------------------------

Severin | 2023-02-01 10:54:58 UTC | #48

https://mqygn-kiaaa-aaaar-qaadq-cai.raw.ic0.app/dashboard

-------------------------

Manu | 2023-02-01 21:27:31 UTC | #49

The ckBTC canisters are now all installed, and the first ckBTC has been minted after depositing BTC today! Some useful links to follow the activity: 
* You can query the total supply of ckBTC here https://dashboard.internetcomputer.org/canister/mxzaz-hqaaa-aaaar-qaada-cai. 
* IC Lighthouse has a nice explorer for ICRC-1 tokens: https://637g5-siaaa-aaaaj-aasja-cai.raw.ic0.app/token/mxzaz-hqaaa-aaaar-qaada-cai
* The minter dashboard at https://mqygn-kiaaa-aaaar-qaadq-cai.raw.ic0.app/dashboard. 

Note that converting BTC into ckBTC is still restricted for now. This will be lifted with a future proposal.

-------------------------

Time | 2023-02-02 10:26:56 UTC | #50

When can we officially trade CKBTC?

-------------------------

anonymous | 2023-02-02 17:40:16 UTC | #51

[quote="Manu, post:1, topic:17606"]
ckBTC can be seen as wrapped bitcoin, but it is wrapped by a canister smart contract that builds on the direct bitcoin integration.
[/quote]

Might need to have this edited as it would come across as contradictory?

-------------------------

lastmjs | 2023-02-03 18:55:40 UTC | #52

Isn't this a common understanding of wrapped assets? WETH for example on Ethereum.

-------------------------

Manu | 2023-02-14 16:19:46 UTC | #53

A few members of the community have expressed some concerns about ckBTC whitelisting for minting. This post is to bring some clarity around DFINITY’s ckBTC rollout strategy.

Summary:

* ckBTC is a “digital twin” of BTC implemented by two main canisters:
  * The ckBTC ledger canister (fully launched)
  * The ckBTC minter canister (semi-launched)
* [Documentation](https://internetcomputer.org/docs/current/developer-docs/integrations/bitcoin/ckbtc) & [code](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter) of both ckBTC and minter canister are publically available.
* ckBTC follows the ICRC-1 fungible token standard. So anyone can receive, hold and send ckBTC (including the NNS FE dapp).
* ckBTC is freely transferable, so anyone can purchase or sell ckBTC on DEXs such as [ICDex](https://637g5-siaaa-aaaaj-aasja-cai.raw.ic0.app/token/mxzaz-hqaaa-aaaar-qaada-cai).
* It is possible today via dfx for anyone to redeem their ckBTC for BTC on the Bitcoin network (note redeeming ckBTC for BTC has BTC network fees). A more user-friendly UI in the NNS FE dapp is coming soon.
* The sole limitation today: only DFINITY is currently whitelisted to convert BTC to ckBTC
  * This is to allow a more gradual and controlled rollout of ckBTC and limit financial risk in this first phase.
  * When the NNS removes whitelisting, the rollout will be complete.
  * Anyone can continue to send testBTC to the ckTESTBTC canister to issue ckTESTBTC for development purposes.

Timeline:

* Dec 22, 2022: ck-TEST-BTC was made available to the public
* Jan 27, 2023: voting initiated for ckBTC canister on the NNS
* Feb 1, 2023: first ckBTC issued in the amount of 0.001
* Feb 3, 2023: 1.5 BTC converted to ckBTC by DFINITY
* Feb 8, 2023: ckBTC available on NNS FE
* **In the coming weeks, ckBTC conversion will be made available to the public**

**Integrating ckBTC into a dapp**

The ckBTC ledger is fully launched and ready to be integrated into dapps on the Internet Computer today. As ckBTC uses the ICRC-1 standard, implementation is fairly straightforward.

However, as with any other token with value there are risks involved, so developers should incorporate ckBTC with caution. To enable developers to safely develop and test ckBTC applications, ck-TEST-BTC will remain available for anyone to test in dapps before launching with ckBTC. We encourage developers to take advantage of the ckTESTBTC canister as it is technically equivalent to the real ckBTC canister, except it uses testBTC.

**Whitelisting ckBTC minting & initial rollout**

ckBTC is not a token created by DFINITY but is a digital twin of BTC with 1:1 equivalent value. This is ensured by anyone being able to redeem ckBTC for BTC on the BTC network and also conversely convert BTC to ckBTC.

However to control risk, the release of ckBTC follows a staggered and controlled rollout. As a first step, a DFINITY principal was whitelisted to issue an initial batch of ckBTC before opening up ckBTC issuance to the public.

To stress test and to prime the wider ecosystem for ckBTC adoption, we wanted to get ckBTC into the hands of as many end users as possible. To this goal we selected a limited number of projects, based on user metrics and the capacity to implement ckBTC into their in-dapp wallets to help distribute ckBTC to their end users via fun and engaging promotional activities (not an airdrop). We selected a diversity of dapps from various categories such as GameFi, SocFi and DeFi to help.

As the ICP community has shown great enthusiasm for the BTC Integration and ckBTC, whitelisting was a way to launch ckBTC in a controlled way in production. Sending ckBTC for the teams to distribute onwards was a way to involve the community and provide initial liquidity. If there are other projects in the ecosystem who are planning to develop ckBTC use cases, and broaden the user base of ckBTC, we are happy to learn more about how we can help your launch.

We are happy to see the hype around BTC Integration and ckBTC, and look forward to more dapps integrating ckBTC. Feel free to reach out to us with your feedback and technical questions.

Happy Hacking!

See documentation: https://internetcomputer.org/docs/current/developer-docs/integrations/bitcoin/ckbtc

-------------------------

Manu | 2023-02-16 14:58:13 UTC | #54

Small correction: I wrote that "It is possible today via dfx for anyone to redeem their ckBTC for BTC on the Bitcoin network" in the previous post, but this was incorrect, this is currently also restricted to a single DFINITY-controlled principal. Proposal https://dashboard.internetcomputer.org/proposal/107903 will make it so that everybody can convert ckBTC into BTC. Sorry for the confusion!

-------------------------

Manu | 2023-02-17 12:13:14 UTC | #55

Proposal https://dashboard.internetcomputer.org/proposal/107903 has been executed and now anybody can convert ckBTC into BTC.

-------------------------

anonymous | 2023-02-17 13:13:48 UTC | #56

Where exactly to go for this? I'm on the NNS but don't see an option to convert it over.

-------------------------

Manu | 2023-02-17 13:51:29 UTC | #57

Currently, you have to use the command line and `dfx` for this, see the steps at https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter#ckbtc-to-bitcoin. The plan is that the NNS FE dapp will also support this flow in the coming weeks, which would be a bit more user friendly.

-------------------------

octalmage | 2023-02-18 20:25:27 UTC | #61

```
(
  variant {
    Err = variant {
      TemporarilyUnavailable = "BTC deposits are temporarily restricted"
    }
  },
)
```

I'm assuming this is on purpose?

Edit: I might have misunderstood your post, ckBTC to BTC is open for public, but minting is still restricted? Thanks!

-------------------------

anonymous | 2023-02-18 21:53:36 UTC | #63

Yeah, BTC to ckBTC minting is still restricted, according to his post.

[quote="Manu, post:53, topic:17606"]
The sole limitation today: only DFINITY is currently whitelisted to convert BTC to ckBTC

* This is to allow a more gradual and controlled rollout of ckBTC and limit financial risk in this first phase.
* When the NNS removes whitelisting, the rollout will be complete.
[/quote]

-------------------------

qqqdendi | 2023-02-18 22:04:12 UTC | #64

Hello everyone,

I am facing an issue while trying to build and deploy canisters locally. The canisters are building successfully, but I am having trouble deploying the "minter" and "ledger" canisters.

When I try to deploy the "minter" canister, I am getting the following error message: "Error: Failed while trying to deploy canisters. Caused by: Failed while trying to deploy canisters. Failed while trying to install all canisters. Failed to install wasm module to canister 'minter'. Failed to create argument blob. Invalid data: Unable to serialize Candid values: record field mode not found."

Similarly, when I try to deploy the "ledger" canister, I am seeing the following error message: "Error: Failed while trying to deploy canisters. Caused by: Failed while trying to deploy canisters. Failed while trying to install all canisters. Failed to install wasm module to canister 'ledger'. Failed to create argument blob. Invalid data: Unable to serialize Candid values: type mismatch: record { token_symbol = "ckTESTBTC"; transfer_fee = 10; metadata = vec {}; minting_account = record { owner = principal "ml52i-qqaaa-aaaar-qaaba-cai" }; initial_balances = vec {}; archive_options = record { num_blocks_to_archive = 1000; trigger_threshold = 2000; max_message_size_bytes = null : null; cycles_for_archive_creation = opt 1000000000000; node_max_memory_size_bytes = opt 3221225472; controller_id = principal "mf7xa-laaaa-aaaar-qaaaa-cai"; }; token_name = "Chain key testnet Bitcoin"; } cannot be of type variant { Upgrade : opt UpgradeArgs; Init : InitArgs }."

The "index" and "archive" canisters deploy and work fine, but the "minter" and "ledger" canisters are not deploying and giving the error message that the wasm file is missing, even though I can see it in the ".dfx" directory.

I have tried reinstalling the canisters and clearing the cache, but the issue persists.

-------------------------

Manu | 2023-02-20 12:37:23 UTC | #65

This sounds like it may be an issue with the install args, are you passing install arguments? See [here](https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/testnet) how we installed the ckTESTBTC canisters.

-------------------------

qqqdendi | 2023-02-22 11:08:36 UTC | #66

I did everything the same way as in that file, I deployed with the same arguments.

-------------------------

Manu | 2023-02-26 13:04:10 UTC | #68

Hey @DGDG, thanks for the ping. Could you provide more detail? Do you know which tx exactly were taking longer? Which parts of the dashboard aren't updating? Is there anything that you think is currently not up to date? 

One thing that I could imagine is that some retrieve BTC requests took longer because the minter had no UTXOs available. If you make a retrieve BTC request now, that uses one UTXO, and because the minter uses super conservative settings waiting for 72 confirmations, the "change" only comes back to the minter after a long time. So currently it can be the case that a retrieve BTC request has to wait for UTXOs to become available. This problem would go away if the minter uses less conservative settings  or if it has more UTXOs.

-------------------------

Manu | 2023-02-26 13:20:02 UTC | #69

I had a quick look at the logs and it looks like this indeed happened for two transactions:
```
P1	1677331938146480076	rs/bitcoin/ckbtc/minter/src/updates/retrieve_btc.rs:136	accepted a retrieve btc request for 0.0031696 BTC to address 1K7BSJbuXxaNVqqkui6N8TA3dJjiuqQCYL (block_index = 14404)
P1	1677345568273247995	rs/bitcoin/ckbtc/minter/src/lib.rs:275	[heartbeat]: signing a new transaction: 0200000001f32cb3c7efa348932e0abc02b11caa0cf52f9dff70e498639d8f942daedcf91f0100000000fdffffff0271ca0400000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac78a9e402000000001600147c86615657a15740439efbc942d8296ed12c034f00000000
P1	1677345576413379841	rs/bitcoin/ckbtc/minter/src/lib.rs:307	[heartbeat]: sending a signed transaction 02000000000101f32cb3c7efa348932e0abc02b11caa0cf52f9dff70e498639d8f942daedcf91f0100000000fdffffff0271ca0400000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac78a9e402000000001600147c86615657a15740439efbc942d8296ed12c034f02483045022100b7fb4ab52b62c6cc4c24305ee9ba37eef54a24bd48e36f30a0d01377e92013c30220649b1ad296c2110a7186acb5daa93060f76729849b01190c37de133470b34dc8012102d631cd2a1f63dbb42614c70a08313715fd86343c53d87195dc5bd8cd17cc186e00000000
P1	1677345613289796731	rs/bitcoin/ckbtc/minter/src/lib.rs:314	[heartbeat]: successfully sent transaction 971a64dd9268b867f45d93611cbfdb88f1219b0f050131c21611eaee8ecfc875
```
Which had almost 4 hours between the request and a submitted tx, and
```
P1	1677347432380678643	rs/bitcoin/ckbtc/minter/src/updates/retrieve_btc.rs:136	accepted a retrieve btc request for 0.00231448 BTC to address 1K7BSJbuXxaNVqqkui6N8TA3dJjiuqQCYL (block_index = 14430)
P1	1677359160939521049	rs/bitcoin/ckbtc/minter/src/lib.rs:275	[heartbeat]: signing a new transaction: 02000000017b186e598cceb55a1fddf9ece287dbde75962a027dbc7b53d0f5e89f41669f6f0100000000fdffffff02f87e0300000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac326aeb05000000001600147c86615657a15740439efbc942d8296ed12c034f00000000
P1	1677359169353777472	rs/bitcoin/ckbtc/minter/src/lib.rs:307	[heartbeat]: sending a signed transaction 020000000001017b186e598cceb55a1fddf9ece287dbde75962a027dbc7b53d0f5e89f41669f6f0100000000fdffffff02f87e0300000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac326aeb05000000001600147c86615657a15740439efbc942d8296ed12c034f02473044022008f16b7b6167307c2e9002ffe5c641d6e75d68532f8a64d8e5cea8875e6a46ca02204fdb9b9d07775870b9a4a285033baa1f9898f4c84530282e81e7ff48b41e884c012102d631cd2a1f63dbb42614c70a08313715fd86343c53d87195dc5bd8cd17cc186e00000000
P1	1677359180186257758	rs/bitcoin/ckbtc/minter/src/lib.rs:314	[heartbeat]: successfully sent transaction 954bbc8c83a225ed9ce4534c5a4b4cee4880795681ab2fb6b3201f816bb1b572
````
which had took just over 3 hours for the BTC tx to be submitted. 

Then the following ones were fast again, probably because the change from older withdrawals came back again:
```
P1	1677382509178690453	rs/bitcoin/ckbtc/minter/src/updates/retrieve_btc.rs:136	accepted a retrieve btc request for 0.0044295 BTC to address 1K7BSJbuXxaNVqqkui6N8TA3dJjiuqQCYL (block_index = 14474)
P1	1677383118853268679	rs/bitcoin/ckbtc/minter/src/lib.rs:275	[heartbeat]: signing a new transaction: 0200000001efcbefd1872ed83b8c6beed4d6185de627481104f9d2ca6dd5c9768ddcc862e60100000000fdffffff02dbb50600000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac02acd705000000001600147c86615657a15740439efbc942d8296ed12c034f00000000
P1	1677383127043626433	rs/bitcoin/ckbtc/minter/src/lib.rs:307	[heartbeat]: sending a signed transaction 02000000000101efcbefd1872ed83b8c6beed4d6185de627481104f9d2ca6dd5c9768ddcc862e60100000000fdffffff02dbb50600000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888ac02acd705000000001600147c86615657a15740439efbc942d8296ed12c034f02473044022070c1099a001b2a8528252c1b2fa6262a96a25a6021c2271893902d7453f9b6e202205b4daa2e73df50ee56a8ab0b36f6ac848f016acc914ad4038792544a3baf4555012102d631cd2a1f63dbb42614c70a08313715fd86343c53d87195dc5bd8cd17cc186e00000000
P1	1677383137014163160	rs/bitcoin/ckbtc/minter/src/lib.rs:314	[heartbeat]: successfully sent transaction ba41f9c8d71f0fb9227479c24b0625bc6eeff196800701039787bb982f744bcf
P1	1677405816795606063	rs/bitcoin/ckbtc/minter/src/updates/retrieve_btc.rs:136	accepted a retrieve btc request for 0.00934589 BTC to address 1K7BSJbuXxaNVqqkui6N8TA3dJjiuqQCYL (block_index = 14641)
P1	1677406429646151732	rs/bitcoin/ckbtc/minter/src/lib.rs:275	[heartbeat]: signing a new transaction: 020000000175c8cf8eeeea1116c23101050f9b21f188dbbf1c61935df467b86892dd641a970100000000fdffffff0259360e00000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888acf367d602000000001600147c86615657a15740439efbc942d8296ed12c034f00000000
P1	1677406437799278184	rs/bitcoin/ckbtc/minter/src/lib.rs:307	[heartbeat]: sending a signed transaction 0200000000010175c8cf8eeeea1116c23101050f9b21f188dbbf1c61935df467b86892dd641a970100000000fdffffff0259360e00000000001976a914c69d78bd1c8ce61f4ee5cdb5a4a4c284482409a888acf367d602000000001600147c86615657a15740439efbc942d8296ed12c034f02483045022100bbce87d7c1c185a5137dec08f93ccba3f6d6daaf73f1bb9df0ba722122a4f4ab02202452f619d57ec0708f2e9e585500e9aeee18f7ec787d8d8d68c36bfd42f0f1f4012102d631cd2a1f63dbb42614c70a08313715fd86343c53d87195dc5bd8cd17cc186e00000000
P1	1677406447180035519	rs/bitcoin/ckbtc/minter/src/lib.rs:314	[heartbeat]: successfully sent transaction 5245572a2b6a900d990d49c21c1f334a469fd0804c3208161ac49d86507bfe37
```

-------------------------

cryptoschindler | 2023-03-03 10:42:52 UTC | #70

The minter deploy arguments actually changed, and the README for the test canisters is outdated as of now.

For the minter, make sure you add the `mode` key to the record. This is an example deploy argument
```
dfx deploy minter --argument "(record {btc_network = variant { Regtest };ledger_id = principal \"$LEDGERID\"; ecdsa_key_name = \"dfx_test_key\";retrieve_btc_min_amount = 5_000;max_time_in_queue_nanos = 420_000_000_000; mode = variant {GeneralAvailability}})"
```


For the ledger, make sure you wrap the record with a variant (`Init` to deploy). This is an example deploy argument:
```
dfx deploy ledger --argument "(variant {Init = record {minting_account = record { owner = principal \"$MINTERID\" };transfer_fee = 0;token_symbol = \"ckBTC\";token_name = \"Token ckBTC\";metadata = vec {};initial_balances = vec {};archive_options = record {num_blocks_to_archive = 10_000;trigger_threshold = 20_000;cycles_for_archive_creation = opt 4_000_000_000_000;controller_id = principal \"$PRINCIPAL\";};}})"
```

obviously the env variables have to be present for the above to work. 

The above also assumes you downloaded the dids and wasm using the latest blessed replica hash (`1612a202d030faa496e1694eed98be4179fca856` at the time of writing). You can find the latest one [here](https://dashboard.internetcomputer.org/releases).
The following commands offer a way to download the dids and wasms for this release, `IC_VERSION` can be replaced by the hash of a different blessed replica version:
```
export IC_VERSION=1612a202d030faa496e1694eed98be4179fca856
curl -o wasm/ledger_canister.wasm.gz "https://download.dfinity.systems/ic/$IC_VERSION/canisters/ic-icrc1-ledger.wasm.gz"
curl -o did/ledger.did "https://raw.githubusercontent.com/dfinity/ic/$IC_VERSION/rs/rosetta-api/icrc1/ledger/icrc1.did"
gunzip wasm/ledger_canister.wasm.gz
curl -o wasm/ckbtc_minter.wasm.gz "https://download.dfinity.systems/ic/$IC_VERSION/canisters/ic-ckbtc-minter.wasm.gz"
gunzip wasm/ckbtc_minter.wasm.gz
curl -o did/minter.did "https://raw.githubusercontent.com/dfinity/ic/$IC_VERSION/rs/bitcoin/ckbtc/minter/ckbtc_minter.did"
```
Those are the deploy arguments for the [minter](https://github.com/dfinity/ic/blob/1612a202d030faa496e1694eed98be4179fca856/rs/bitcoin/ckbtc/minter/ckbtc_minter.did#L83) and [ledger](https://github.com/dfinity/ic/blob/1612a202d030faa496e1694eed98be4179fca856/rs/rosetta-api/icrc1/ledger/icrc1.did#L72) for that `IC_VERSION`.

-------------------------

peterparker | 2023-03-02 17:36:06 UTC | #71

In NNS-dapp for local development purpose and for the time being (until we automate things), I've got a script to download the wasms and one to deploy locally. It's inherited from the work of my colleague Léo (💪). So if it can help here:

Download: [https://github.com/dfinity/nns-dapp/blob/main/scripts/ckbtc/download-ckbtc](https://github.com/dfinity/nns-dapp/blob/main/scripts/ckbtc/download-ckbtc)

Deploy: [https://github.com/dfinity/nns-dapp/blob/main/scripts/ckbtc/deploy-ckbtc](https://github.com/dfinity/nns-dapp/blob/main/scripts/ckbtc/deploy-ckbtc)

There is also a bit of badly documented comments about the deployment there [https://github.com/dfinity/nns-dapp/blob/main/HACKING.md#ckbtc-deployment](https://github.com/dfinity/nns-dapp/blob/main/HACKING.md#ckbtc-deployment)

Again, just few notes and scripts I use to develop until we got things tight up but, hope it can help.

-------------------------

Manu | 2023-03-02 18:20:17 UTC | #72

thanks a lot @cryptoschindler and @peterparker!

-------------------------

octalmage | 2023-03-04 07:01:55 UTC | #73



Any ETA on BTC to ckBTC opening to the general public? 

Thanks!

-------------------------

qqqdendi | 2023-03-05 20:06:05 UTC | #74

thank you,it is works!)

-------------------------

cymqqqq | 2023-03-14 08:10:58 UTC | #75

hi there, I want to ask a question:
can we use ckbtc in our project now?
I know that there are some problems for btc->ckbtc.

-------------------------

Manu | 2023-03-14 09:17:37 UTC | #76

Correct, users cannot yet convert BTC into ckBTC (see https://forum.dfinity.org/t/ckbtc-and-kyt-compliance/18754 for more context). However, your project can already support ckBTC transactions, just like eg openchat and dscvr already support tipping in ckBTC.

-------------------------

CatPirate | 2023-03-14 09:39:24 UTC | #77

@Manu whom do I talk to if i want to use this feature? does dfinity provide customer support? it acts like a web2 company with icp token as its security

-------------------------

Manu | 2023-03-14 09:50:17 UTC | #78

ckBTC consists of some NNS-controlled canister smart contracts, so you can just start using it without asking anybody :). If you run into technical problems, I think this forum thread is a great place to ask questions.

-------------------------

CatPirate | 2023-03-14 15:58:06 UTC | #79

But few builders in my dms telling me that DFINITY is providing 24/7 direct customer support outside dev forums. This is the worst Security I have ever bought.

-------------------------

robert_t | 2023-03-14 16:09:48 UTC | #80

I followed the discussion on KYT - and you can see my thoughts on that from my comment... but are we now saying that this is "context" because it plays a part in deciding when to allow others to mint ckBTC? 

Personally, I don't think this should be a blocker, for the same reason that I don't think the protocol should get involved in implementing KYT... but you can refer to my comment in the relevant thread to pick that up. It's out of context here ;-)

-------------------------

THLO | 2023-03-15 13:41:59 UTC | #81

Yes, the KYT topic is one of the open items that need to be addressed before the minting process can be opened up to everybody.

Just to be clear: KYT functionality will be exposed at the canister level and not implemented at the (Internet Computer) protocol level.

-------------------------

Dustin | 2023-03-20 12:35:09 UTC | #84

Is there a place to see the amount of ckBTC that has been issued?

-------------------------

Severin | 2023-03-20 13:24:31 UTC | #85

You can use the ckTESTBTC dashboard [here](https://ml52i-qqaaa-aaaar-qaaba-cai.raw.ic0.app/dashboard) or the ckBTC dashboard [here](https://mqygn-kiaaa-aaaar-qaadq-cai.raw.ic0.app/dashboard)

-------------------------

Dustin | 2023-03-20 12:47:48 UTC | #86

Thanks! It's showing testnet at the moment. Is there one for mainnet as well?

-------------------------

Severin | 2023-03-20 13:25:10 UTC | #87

Oh, right, that's testnet, sorry. I added mainnet in my above message

-------------------------

FOX | 2023-03-27 13:36:49 UTC | #88

https://forum.dfinity.org/t/ckbtc-and-kyt-compliance/18754/460

I believe that some discussion has been exhausted regarding the implementation of KYT.
Is the Foundation currently preparing a proposal?

-------------------------

THLO | 2023-03-28 12:52:05 UTC | #89

[quote="FOX, post:88, topic:17606"]
Is the Foundation currently preparing a proposal?
[/quote]

Yes, proposals to move this forward (and opening up minting) are in the works.

-------------------------

Manu | 2023-03-29 09:34:13 UTC | #90

Hello everybody! 

DFINITY will submit three proposals today, which matches the outcome of the discussion wrt ckBTC & KYT (https://forum.dfinity.org/t/ckbtc-and-kyt-compliance/18754/414). 

1. First, to install this Chainalysis KYT canister without any principals that can set API keys. This will let everybody review the Chainalysis KYT canister code.
2. Second, a proposal sets an initial list of principals that can provide API keys. This proposal will contain Toniq's principal. Anybody else that is willing to obtain a chainalysis subscription and perform the role of providing API keys can submit a proposal similar to this to add their own principal (and feel free to ask for help here). 
3. Third, a proposal to upgrade the ckBTC minter to use this KYT canister and enable BTC → ckBTC conversions. This proposal will also reduce the required confirmations from 72 to 12.

We will share the proposals here and I hope everybody takes the time to vote!

-------------------------

bob11 | 2023-03-29 15:19:32 UTC | #91

For verification purposes, this is the Toniq principal that will be included in the proposal.

pzc5r-ctmyf-4menu-zt2d3-y57i4-hodcg-dfvpi-bfj3w-7jqef-d7s35-xqe

-------------------------

theguy | 2023-03-29 20:09:09 UTC | #92

Do we have finalisation on the rewards model for API providers?

-------------------------

Manu | 2023-03-30 13:20:59 UTC | #93

The proposals have now been submitted:
1. Install the KYT canister https://dashboard.internetcomputer.org/proposal/115468
2. Update to configuration of the KYT canister https://dashboard.internetcomputer.org/proposal/115470
3. Upgrade the ckBTC minter https://dashboard.internetcomputer.org/proposal/115473

Please vote and help spread the word! If you have any clarifying questions or need help verifying certain parts of the proposals, please don't hesitate to ask in this thread.

-------------------------

Manu | 2023-03-30 13:57:39 UTC | #94

Yes, proposal https://dashboard.internetcomputer.org/proposal/115473 proposes to set a fee of 2000 sat (currently ~0.57 USD) for a KYT request. You can see this fee being set in the upgrade args. This fee can of course be changed with future NNS proposals.

-------------------------

timo | 2023-03-31 04:47:49 UTC | #95

Why was a reduction in the number of confirmations mixed in with the KYT introduction? Does the presence of KYT make it safer in any way to accept less confirmations?

-------------------------

Manu | 2023-03-31 11:25:36 UTC | #96

We've been meaning to reduce the min confirmations anyway, but now was a good time because it mainly affects how long converting BTC into ckBTC takes, and this proposal opens up that conversion.

-------------------------

theguy | 2023-03-31 13:14:47 UTC | #97

Part of the problem with how the whole governance and DAO release structure works 

Someone will feel strongly about a component of a change 

To be done right, every small part would be put to motion and change proposals 

Then you're left with overhead, bureaucracy and lack of delivery 

Perhaps the lesson is, there is a time and a place for DAOs, and it might not be at early stages, and maybe one for builders to keep in mind

-------------------------

FOX | 2023-04-04 00:49:54 UTC | #98

Anyway, congratulations on the successful completion of the update.
Now it seems to be possible to wrap with ICLight House, is it safe to do a test money transfer?

-------------------------

octalmage | 2023-04-06 01:44:44 UTC | #99

I don't think it's ready yet, I'm getting the following error: 

```
(
  variant {
    Err = variant {
      TemporarilyUnavailable = "Failed to call KYT canister: management call \'fetch_utxo_alerts\' failed: canister error: IC0503: Canister pjihx-aaaaa-aaaar-qaaka-cai trapped explicitly: Panicked at \'failed to register transfer: (SysTransient, \"Couldn\'t send message\")\', rs/bitcoin/ckbtc/kyt/src/main.rs:643:6"
    }
  },
)
```

-------------------------

Sormarler | 2023-04-06 02:00:05 UTC | #100

Have you tried it with a different wallet?

-------------------------

octalmage | 2023-04-06 02:14:59 UTC | #101

Two different wallets. One on cli, and one using plug wallet and the iclighthouse interface. Same error on both.

Would love to build with ckBTC but the current onchain liquidity is not sufficient and ckBTC isn’t cheap to acquire. Hoping it’s usable soon.

-------------------------

Severin | 2023-04-06 07:07:22 UTC | #102

[quote="octalmage, post:99, topic:17606"]
`SysTransient, \"Couldn\'t send message\"`
[/quote]

I don't know if this is the case here, but in dfx the most common cause of this error is when the canister doesn't have the amount of cycles available that should be attached to the call. I'll notify the team

-------------------------

Severin | 2023-04-06 07:19:27 UTC | #103

Team confirmed it was because of low cycles balance. The canister is topped up and should work again as intended

-------------------------

dfisher | 2023-04-06 18:00:30 UTC | #104

I’ll just leave this right here and ya’ll can draw your own conclusions 

https://www.wsj.com/articles/decentralized-cryptocurrency-markets-threaten-u-s-national-security-treasury-says-d9dd324f

-------------------------

anonymous | 2023-04-06 18:31:03 UTC | #105

Anything that they don't control is a threat. Anyway, I'm guessing KYT will be favorable to them.

-------------------------

bytesun | 2023-04-07 00:59:09 UTC | #106

Base on DID （https://dashboard.internetcomputer.org/canister/mqygn-kiaaa-aaaar-qaadq-cai）,  the response of update_balance is 
```
type UtxoStatus = variant {
    // The minter ignored this UTXO because UTXO's value is too small to pay
    // the KYT fees. This state is final, retrying [update_balance] call will
    // have no effect on this UTXO.
    ValueTooSmall : Utxo;
    // The KYT provider considered this UTXO to be tained. This UTXO state is
    // final, retrying [update_balance] call will have no effect on this UTXO.
    Tainted : Utxo;
    // The UTXO passed the KYT check, but the minter failed to mint ckBTC
    // because the Ledger was unavailable. Retrying the [update_balance] call
    // should eventually advance the UTXO to the [Minted] state.
    Checked : Utxo;
    // The UTXO passed the KYT check, and ckBTC has been minted.
    Minted : record {
        block_index : nat64;
        minted_amount : nat64;
        utxo : Utxo;
    };
};
```
I got below response, which I don't understand, anyone can help?
> (
>   variant {
>     3_456_837 = variant {
>       3_041_074_078 = record {
>         1_790_128_894 = 12 : nat32;
>         1_987_561_304 = null;
>       }
>     }
>   },
> )

-------------------------

alexshelkov | 2023-04-07 10:55:26 UTC | #107

So we was able to make the BTC work in the [wallet](https://chrome.google.com/webstore/detail/bitfinity-wallet/jnldfbidonfeldmalbflbmlebbipcnle), if somebody wants to give it a try.

-------------------------

lastmjs | 2023-04-07 18:10:44 UTC | #108

I think part of the solution here, potentially, is to deploy canisters that aren't controlled by the NNS.

I think this is an extremely important issue, retaining write permissions to canisters like ckBTC may implicate these AML laws.

-------------------------

Severin | 2023-04-11 08:00:06 UTC | #109

If you download the candid interface and give it to `dfx canister call` using `--candid path/to/can.did`, it'll decode the fields for you

-------------------------

bytesun | 2023-04-12 02:13:20 UTC | #110

thank you! now I got:
> (
>   variant {
>     Err = variant {
>       NoNewUtxos = record {
>         required_confirmations = 12 : nat32;
>         current_confirmations = null;
>       }
>     }
>   },
> )

don't why no confirms

-------------------------

