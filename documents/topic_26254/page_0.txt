VladK1997 | 2024-01-06 01:58:04 UTC | #1

Hi for everyone. I have an issue, in my vue application I have import ic-vetkd-utils, and got error `" Text decoder is not a constructor"`. I tried to additionally import **text-encoding** before **ic-vetkd-utils** but error still appear. 
![image|690x58](upload://4zWAdufIZpuOC3JfLBX4hG2zngd.png)

-------------------------

NathanosDev | 2024-01-06 03:08:02 UTC | #2

TextDecoder is a native browser API: https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder
You shouldn't need any polyfill for this. `text-encoding` is deprecated and no longer maintained, as of 5 years ago.

What browser are you using?

-------------------------

VladK1997 | 2024-01-06 17:51:45 UTC | #3

Google Chrome Version 120.0.6099.199 (Official Build) (64-bit)

-------------------------

NathanosDev | 2024-01-06 23:37:22 UTC | #4

That's really strange... Unless you're doing some server-side rendering or something, I can't think of any reason why that would happen.

Have you tried creating a new project to reproduce the issue in isolation from your main project? If you do that and you still have the issue, please share and I can take look at it.

-------------------------

VladK1997 | 2024-01-07 02:17:44 UTC | #5

```
<script setup lang="ts">
import HelloWorld from './components/HelloWorld.vue'

import * as vetkd from "ic-vetkd-utils";


const hex_decode = (hexString: any) => {
  if (!hexString) return;
  return Uint8Array.from(
      hexString.match(/.{1,2}/g).map((byte: any) => parseInt(byte, 16))
  );
};
const hex_encode = (bytes: any) =>
    bytes.reduce(
        (str: string, byte: any) => str + byte.toString(16).padStart(2, "0"),
        ""
    );

async function ibe_encrypt({
  actor,
  message,
  principal,
}: {
  actor: any;
  message: string;
  principal: any;
}): Promise<any> {
  const pk_bytes_hex = await actor.ibe_encryption_key();

  const message_encoded = new TextEncoder().encode(message);
  const seed = window.crypto.getRandomValues(new Uint8Array(32));

  const ibe_ciphertext = vetkd.IBECiphertext.encrypt(
      hex_decode(pk_bytes_hex),
      principal.toUint8Array(),
      message_encoded,
      seed
  );
  return hex_encode(ibe_ciphertext.serialize());
}

async function ibe_decrypt({
  actor,
  ibe_ciphertext_hex,
  principal,
}: {
  actor: any;
  ibe_ciphertext_hex: string;
  principal: any;
}) {
  const tsk_seed = window.crypto.getRandomValues(new Uint8Array(32));
  const tsk = new vetkd.TransportSecretKey(tsk_seed);
  const ek_bytes_hex = await actor.encrypted_ibe_decryption_key_for_caller(tsk.public_key());
  const pk_bytes_hex = await actor.ibe_encryption_key();

  const k_bytes = tsk.decrypt(
      hex_decode(ek_bytes_hex),
      hex_decode(pk_bytes_hex),
      principal.toUint8Array()
  );

  const ibe_ciphertext = vetkd.IBECiphertext.deserialize(
      hex_decode(ibe_ciphertext_hex)
  );
  const ibe_plaintext = ibe_ciphertext.decrypt(k_bytes);
  return new TextDecoder().decode(ibe_plaintext);
}

</script>

```

-------------------------

VladK1997 | 2024-01-07 02:18:51 UTC | #6

same issue
![image|690x93](upload://nX8lVxuqk0OFnUuPCajY3zbsoFQ.jpeg)

-------------------------

VladK1997 | 2024-01-07 02:20:35 UTC | #7

I created new vite vue ts application, install ic-vetkd-utils, add code from dfinity suggestions repo

-------------------------

VladK1997 | 2024-01-07 02:24:48 UTC | #8

```
{
  "name": "vet-keys",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vue-tsc && vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "ic-vetkd-utils": "^0.2.1",
    "vue": "^3.3.11"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^4.5.2",
    "typescript": "^5.2.2",
    "vite": "^5.0.8",
    "vue-tsc": "^1.8.25"
  }
}

```

-------------------------

NathanosDev | 2024-01-08 09:29:47 UTC | #9

Could you publish the new project to reproduce on GitHub and share it?

-------------------------

VladK1997 | 2024-01-08 19:46:40 UTC | #10

https://github.com/VladK1997/vet-keys

-------------------------

NathanosDev | 2024-01-09 10:16:36 UTC | #11

Thanks for sharing.

The issue seems to be that `ic-vetkd-utils` is built to work on NodeJS, not the browser. @b3hr4d would you consider updating this package to be built with `wasm-pack build --release --target web` instead of `wasm-pack build --release`?

In the meantime, if you want to work around your issue, you could build the package yourself. I've opened a PR against your repo demonstrating how to do that: https://github.com/VladK1997/vet-keys/pull/1

You'll need [wasm-pack](https://github.com/rustwasm/wasm-pack), [Rust](https://www.rust-lang.org/), and [pnpm](https://pnpm.io/) installed to be able to build it.

Run this to build it:
```
pnpm -F vetkd-utils build
```

And then `pnpm dev` to run your dev server as usual.

-------------------------

b3hr4d | 2024-01-09 16:26:03 UTC | #12

[quote="NathanosDev, post:11, topic:26254"]
wasm-pack build --release --target web
[/quote]

Done [https://www.npmjs.com/package/ic-vetkd-utils](https://www.npmjs.com/package/ic-vetkd-utils)
Btw I didn't test it yet.

-------------------------

VladK1997 | 2024-01-14 13:40:22 UTC | #13

Thak you, I will try and than notify)

-------------------------

VladK1997 | 2024-01-22 02:57:13 UTC | #14

![image|690x83](upload://epVrDjV6InBd3aU6pd2w5nFtSXy.png)

-------------------------

b3hr4d | 2024-01-23 08:55:37 UTC | #15

can you show the exact operation?

-------------------------

NathanosDev | 2024-01-23 09:39:27 UTC | #16

This is because of the PNPM workspace protocol, I guess you took the changes from my branch here: https://github.com/VladK1997/vet-keys/pull/1/files#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519R12. You need to run install with PNPM instead of NPM for that to work, but if you're using the updated library now then you can revert those changes and stick with NPM.

-------------------------

