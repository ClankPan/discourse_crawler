diegop | 2021-08-19 21:48:45 UTC | #1

**Summary**

The Internet Computer does not have an official Token standard. It is up to the Internet Computer community to discuss and propose a preferred Token standard.

**Status** 
Community Consideration

**What you can do to help**

* Ask questions
* Propose ideas

**Key people involved** 

@ililic 

**Relevant Background** 

- Previous thread: https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694/61

-------------------------

jsyu_09 | 2021-08-17 01:56:59 UTC | #2

I think this is also a very important matter

-------------------------

link2020 | 2021-08-17 09:48:18 UTC | #3

That's great! It's finally time to talk about it!
Please speed up the process!
:grinning: :grinning: :grinning:

-------------------------

diegop | 2021-08-23 21:54:00 UTC | #4

Hey folks,

I wanted to let folks know (specially @senior.joinu who definitely put time and effort) that Igor Lilic (@ililic ) will be the person who manages this thread from the Foundation side. This project is clearly very early compared to other much more baked ones (see [Increased Canister Storage)](https://forum.dfinity.org/t/increased-canister-storage/6148/13), but I wanted to let people that I am working to get every thread spinning, engaged, and with the same clarity as the more baked ones.

In the meantime... please feel free to discuss, tell the community what you agree/disagree on from prioritization to implementatoin.

-------------------------

witter | 2021-08-24 02:45:56 UTC | #5

[quote="diegop, post:4, topic:6158"]
I wanted to let folks know (specially @senior.joinu who definitely put time and effort) that Igor Lilic (@ililic ) will be the person who manages this thread from the Foundation side. This project is clearly very early compared to other much more baked ones (see [Increased Canister Storage)](https://forum.dfinity.org/t/increased-canister-storage/6148/13), but I wanted to let people that I am working to get every thread spinning, engaged, and with the same clarity as the more baked ones.

In the meantime… please feel free to discuss, tell the community what you agree/disagree on from prioritization to implementatoin.
[/quote]

I implemented a token standard (Rust & Motoko) and did a lot of my own thinking.

https://github.com/Deland-Labs/dfinity-fungible-token-standard

Of course, before implementing this token standard, I referred to a lot of existing codes, especially some discussions [thoughts-on-the-token-standard](https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694), which gave me a lot of help. Thanks @senior.joinu very much.

## References

-[1] [Dfinity Developer Center: Canister interface](https://sdk.dfinity.org/docs/interface-spec/index.html#system-api-imports)

-[2] [Dfinity Forum: thoughts-on-the-token-standard](https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694)

-[3] [Toniq-Labs: ic-fungible-token](https://github.com/Toniq-Labs/ic-fungible-token)

-[4] [SuddenlyHazel: Token-Standard](https://github.com/SuddenlyHazel/token-standard/pull/1)

-[5] [Dfinance-tech: ic-token](https://github.com/dfinance-tech/ic-token)

-[6] [Plug: Token-Standard](https://github.com/Psychedelic/standards)

-[7] [Ethereum: EIPS-EIP20 & EIP667 & EIP777 & EIP1820](https://github.com/ethereum/EIPs)

-[8] [Candid](https://github.com/dfinity/candid/)

-[9] [Why are ERC20 allowances necessary?](https://kalis.me/unlimited-erc20-allowances/)

-[10] [sudograph](https://github.com/sudograph/sudograph)

-[11] [Dfinity Self Describing Standard](https://github.com/Deland-Labs/dfinity-self-describing-standard)

-------------------------

BeckyLU | 2021-08-24 02:55:21 UTC | #6

Great job, @witter !

-------------------------

link2020 | 2021-09-01 11:08:55 UTC | #7

Before the Fungible Token standard, I think this is more important. The Identity system needs to add an option to choose whether to use the same(unified) address(Principal ID) or a different address(Principal ID). https://forum.dfinity.org/t/the-identity-system-needs-to-add-an-option-to-choose-whether-to-use-the-same-unified-address-principal-id-or-a-different-address-principal-id/6868

-------------------------

lastmjs | 2021-09-02 13:44:46 UTC | #8

I agree this seems like a major issue that needs to be solved.

-------------------------

ccyanxyz | 2021-09-13 13:56:52 UTC | #9

We wrote a spec regarding fungible token standard together with [Daniel](https://github.com/ferencdg) from fleek: https://github.com/dfinance-tech/ic-token/blob/main/spec.md, it preserves the core interfaces of ERC20, we also added fee logic for update calls, storage for history txs, and corresponding query interfaces. Review suggestions are welcomed. :slight_smile:

-------------------------

witter | 2021-10-06 12:56:29 UTC | #10

Dfinity Fungible Token Standard updates:
1. Transaction ID: u128→String，Unique Transaction ID
2. Add support for auto-scaling storage (with a fallback strategy) for transaction history
Leave your comments & advices to make it better.

https://github.com/Deland-Labs/dfinity-fungible-token-standard

-------------------------

witter | 2021-10-07 10:28:25 UTC | #11

 
Auto-Scaling Storage (ATSS) for Dfinity Fungible Token Standard(DFT) details:

1. When will the ATSS be created?

    - Create the first ATSS when the DFT's transactions (txs) > 2000. It means that no ATSS will be created before the DFT's txs > 2000 to save cycles . (for example : you deploy a DFT for test)

    - Create the next ATSS when the current ATSS's storage size is not enough to store 1000 txs.

2. What's the fallback strategy?
    If the creation of the ATSS fails, the txs will be stored in the DFT, txs will be moved to ATSS when the creation is successful.
    Possible reasons for failure:
      - Not enough cycles balance to create ATSS.
      - Other unknown reason. 

Leave your comments & advices to make it better.

-------------------------

witter | 2021-10-08 13:14:13 UTC | #12

updates summary:
https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694/85?u=witter
https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694/86?u=witter
https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694/87?u=witter

-------------------------

link2020 | 2021-10-15 07:58:24 UTC | #13

Questions about the account
https://forum.dfinity.org/t/questions-about-the-account/7934

1)Unify the Account system, somewhat resembling the Ethereum Account Model, where users can use Account IDs to store ICP tokens, other fungible tokens, and NFTs.

2)Unify the generation rules or settings of the third-party wallets.

3)Build more functions for Internet Identity and NNS, such as a) The canisters can get the Account ID information of a user’s ICP with the authorization by the user; b) NNS can act as a third-party and render the authorization of the transfer of ICP, thereby supporting more token standards.

-------------------------

witter | 2021-11-05 08:59:46 UTC | #14

The document is released : https://dft.delandlabs.com/

It is recommended to understand auto-scaling storage:
https://dft.delandlabs.com/AutoScalingStorage

-------------------------

witter | 2022-01-18 02:37:56 UTC | #15

Dfinity Fungible Token Standard v0.1.3 Released

https://medium.com/@DelandLabs/dfinity-fungible-token-standard-v0-1-3-released-6f8c9da85ec3

-------------------------

witter | 2022-01-26 13:30:25 UTC | #16

Dfinity Fungible Token Standard v0.2.1 Released
# Detail
https://forum.dfinity.org/t/thoughts-on-the-token-standard/4694/132?u=witter

-------------------------

chiedo | 2022-02-13 01:10:28 UTC | #17

Not sure if this thread is still live but if it is, what still needs to happen to arrive at fungible token standards? And is there a better place to get a big picture understanding of the various suggestions?

-------------------------

jzxchiang | 2022-02-14 07:57:28 UTC | #18

Things have definitely evolved since then.

For one, the Sonic DEX launched last month, and they use the [DIP20](https://github.com/Psychedelic/DIP20) standard.

Other DEXs like InfinitySwap are planning to launch soon, and I believe many of them are developing their own independent token standards.

At the same time, the [SNS](https://forum.dfinity.org/t/open-governance-canister-for-sns-design-proposal/10224/20) project (being developed by DFINITY) also requires a ledger canister, and the design of that should be coming out soon, as it's slated for a Q1 2022 release. Needless to say, a ledger canister design is essentially a token standard.

So yeah, a lot of work on this front, but no clear "winning standard" that the community has coalesced around.

-------------------------

witter | 2022-03-29 15:23:05 UTC | #19

**Dfinity Fungible Token Standard  v0.4.0 is released**
this release contains a large number of automated integration test cases to verify the reliability of the code. As the infrastructure of DEFI, reliability and security are the most important things
https://github.com/Deland-Labs/dfinity-fungible-token-standard/releases/tag/v0.4.0

-------------------------

witter | 2022-04-19 12:03:38 UTC | #20

The name has been changed to fungible-token-standard :slight_smile:
**v0.5.0 is released**
Major Updates.

1. Blockchain support for Token, integration of the ledger design, interface optimization design
2. TokenHolder type changed to AccountIdentifier to ensure that Principal receipts and default AccountIdentifier are consistent
3. Use bincode serialization to optimize the size of stored data
4. Auto-scaling failure and archiving failure of the fallback policy optimization
5. Remove nonce, use transaction hash to do better anti-duplication
6. Auto-scaling storage optimization

https://github.com/Deland-Labs/fungible-token-standard/releases/tag/v0.5.0

-------------------------

daijianlin | 2022-05-02 01:33:36 UTC | #21

Great job, thanks for contributing to the community. Hope other teams could share here also.

-------------------------

witter | 2022-05-26 13:54:35 UTC | #22

Hi,**DFT (fungible-token-standard) v0.6.0** released:
Major Updates:
1. Code refactoring & optimization for easier expansion
2. Built-in implementation of mineable & burnable & batchTransfer & batchMint configurable extensions
3. More unit tests (coverage 85%)
4. Re-support notify @RmbRT 
5. Auto-scaling storage optimization & unit tests

full changes:
https://github.com/Deland-Labs/fungible-token-standard/releases/tag/v0.6.0

document:
https://dft.delandlabs.com

-------------------------

witter | 2022-05-26 14:29:33 UTC | #23


detail: 
https://dft.delandlabs.com/Notification
[quote="witter, post:22, topic:6158"]
Re-support notify
[/quote]

-------------------------

