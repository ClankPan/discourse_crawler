flyq | 2021-03-03 08:02:24 UTC | #1

I'm learning the account model of canister.
I run [whoami example](https://github.com/dfinity/examples/blob/master/motoko/whoami/src/Main.mo#L5)，and read [Principals and caller identification](https://sdk.dfinity.org/docs/language-guide/caller-id.html).

My question is how canister get the `message.caller` when I run `dfx canister call whoami whoami`. In other blockchain system, the message.caller is getted by the signature. For different callers have different signature, the blockchain system can get the different caller.  

Is there any other information about this?

-------------------------

Ori | 2021-03-03 08:27:25 UTC | #2

There’s a brief overview of it here, along with another example of its usage: https://sdk.dfinity.org/docs/developers-guide/tutorials/access-control.html

-------------------------

flyq | 2021-03-08 03:04:29 UTC | #3

I init the actor with the initializer
```motoko
shared({ caller = initializer }) actor class TestCaller() {
    private stable let owner_ : Principal = initializer;

    public query func owner() : async Principal {
    	return owner_;
    };
    public shared({ caller }) func callerPrincipal() : async Principal {
        return caller;
    };
};
```
In dfx v0.6.23, the owner_ will be the my default account's Principal.

and I upgrade dfx to v0.6.24 today, and in dfx v0.6.24, the owner_ will be the wallet canister's id, for detail: [0.6.24 release note](https://sdk.dfinity.org/docs/release-notes/0.6.24-rn.html#_dfx).

This is the demo:
```shell
$ dfx canister  create testcaller
Creating canister "testcaller"...
Creating the canister using the wallet canister...
Creating a wallet canister on the local network.
The wallet canister on the "local" network for user "default" is "rwlgt-iiaaa-aaaaa-aaaaa-cai"
"testcaller" canister created with canister id: "rrkah-fqaaa-aaaaa-aaaaq-cai"

$ dfx canister call testcaller owner
(principal "rwlgt-iiaaa-aaaaa-aaaaa-cai")

$ dfx canister call testcaller callerPrincipal
(principal "l73xb-uaoom-uk6vy-yjmwy-ffdjj-tfbbn-wlsve-xxy7i-5d27t-6yh3t-fqe")
```


So how to get the default account's Principal when init the constructor, except input as a argument?

-------------------------

enzo | 2021-03-09 01:36:10 UTC | #4

You can get the owner by passing it as an installation argument. I've updated the whoami example to reflect this. You probably want something like this: 

```
actor class TestCaller(arg : Principal) {
    public query func owner() : async Principal {
    	return arg;
    };
};
```
and then install with 
```
dfx canister install --argument='(principal "...")'
```

-------------------------

flyq | 2021-03-09 01:57:22 UTC | #5

Yes, passing it as an installation argument can solve it.

-------------------------

