DaveyEbb | 2022-06-05 11:46:14 UTC | #1

I have cloned the 'basic-dao' dapp from the Rust examples https://github.com/dfinity/examples/tree/master/rust/basic_dao and have followed the instructions in the README file using the terminal interface and a local dfx replica. Every works fine until the didc encode instruction:
`didc encode '(record { transfer_fee = opt record { amount_e8s = 20_000:nat64; }; })' -f blob`
The -f argument is not recognised:
`error: Found argument '-f' which wasn't expected, or isn't valid in this context`
Tried it without the argument:
`error: Found argument 'blob' which wasn't expected, or isn't valid in this context`
I can't find any detailed documentation on didc - just some dead links from 2020.
We would like to build some front-end functionality around this basic DAO backend.
Any suggestions as to a solution for the basic-dao example? 
Is there documentation for didc anywhere?
Any help greatly appreciated.

-------------------------

coin_master | 2022-06-05 19:55:54 UTC | #2

Have you tried didc —help ? Probably this is the most up to date documentation you can get.
Also don’t know if this helpful but there’s an implementation of the basic dao in typescript and we used JavaScript to invoke didc, check the test file.

https://github.com/demergent-labs/azle/pull/161/files

The PR still in review but it can unblock you for now.

-------------------------

chenyan | 2022-06-05 20:32:33 UTC | #3

You are probably using a very old version of didc. Please download the latest binary from https://github.com/dfinity/candid/releases or build from master.

-------------------------

DaveyEbb | 2022-06-06 06:20:41 UTC | #4

Thanks, @chenyan - you put your finger on it. I was using an old version of didc. I downloaded the latest from dfinity/candid and the basic-dao example now works perfectly.

-------------------------

DaveyEbb | 2022-06-06 06:24:35 UTC | #5

Thanks @coin-master. I solved the didc problem but this repo looks very useful for figuring out the front-end build.

-------------------------

