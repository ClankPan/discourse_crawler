qwertytrewq | 2023-05-16 19:27:53 UTC | #1

I need to generate a sequence of random (pseudorandom do suit) strings in such a way that the probability of two strings in the sequence being the same is negligible.

So, how to obtain a sequence of pseudorandoms?

https://internetcomputer.org/docs/current/motoko/main/base/Random tells something sophisticated about entropy. But I don't need entropy, because pseudorandomness is enough for my purpose.

-------------------------

skilesare | 2023-05-16 19:33:18 UTC | #2

Check out the UUID and ULID libraries:  https://github.com/aviate-labs/ulid.mo

Perhaps they meet your requirements? I think they have a pseudorandom path.

-------------------------

qwertytrewq | 2023-05-17 03:32:21 UTC | #3

It is unclear what `ULID.MonotonicEntropy`  does with entropy and how to run it to obtain a pseudo-random sequence.

-------------------------

timo | 2023-05-17 04:48:14 UTC | #4

We have a Prng library here: https://github.com/research-ag/motoko-lib/blob/main/src/Prng.mo

It provides SFC64 which is a known generator that is also part of numpy. The output is compatible with numpy.

It produces a sequence of Nat64 and you have to convert that to a string yourself. If it is a common use case then we could add that to the library (output as Text or Blob) for convenience.

-------------------------

timo | 2023-05-21 07:05:57 UTC | #5

We published the Prng library on Mops now: https://mops.one/prng

It would be nice to add convenience functions to generate random values of other types than only Nat64. Hence the question what was the original requirement for the pseudo-random strings? Where they Blob or Text and what was the required character set?

-------------------------

qwertytrewq | 2023-05-21 08:50:47 UTC | #6

Your `Prng` type is not usable for my purposes, because it is not a stable type.

It is `Text` in any character set.

-------------------------

timo | 2023-05-21 10:34:37 UTC | #7

You wish to persist the Prng’s internal state across updates? Or why does the generator itself have to be stable?

-------------------------

timo | 2023-05-21 10:36:14 UTC | #8

[quote="qwertytrewq, post:6, topic:20038"]
It is `Text` in any character set.
[/quote]

Does that mean you don’t care what the character set is or that you would like to be able to supply an arbitrary character set to the generator?

-------------------------

qwertytrewq | 2023-05-21 12:32:24 UTC | #9

Yes. I want to persist Prng’s internal state across updates.

-------------------------

qwertytrewq | 2023-05-21 12:34:40 UTC | #10

I want to store results of the generator in `Text` DB keys in such a way that lexicographical order of keys matches order of the random numbers. The charset does not matter (except of, maybe, for debugging is better to use UTF-8 or even ASCII).

-------------------------

