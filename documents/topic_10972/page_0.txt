Luis | 2022-02-21 15:44:54 UTC | #1

Dear IC Community,

we are happy to announce [a new replica version ](https://github.com/dfinity/ic/tree/b2081feeb1ff0a0772aef90aa8fe4f49d9c06504) that will get proposed to be elected within the next 72 hours. 
The latest improvements already gave us the confidence to again enable sandboxing. Nevertheless this rollout will again need two versions whereby one will have sandboxing disabled for subnets with workloads that need further investigation.
The release notes are as follows:

```
* Consensus: Implement GetECDSAPublicKey
* Consensus: Implement SignWithECDSA
* Consensus: Stubs For Canister HTTP Request Types
* Crypto: Add CLIB implementation of tECDSA verify_transcript
* Crypto: Add openings for Threshold ECDSA
* Crypto: Add serialization tests for tECDSA CLIB types
* Crypto: Implement tECDSA verify_complaint for IDKM+CSP
* Crypto: Upgrade k256 and p256 crates
* Execution: Add Bitcoin method stubs to the replica
* Execution: Add feature flag for Bitcoin testnet
* Execution: Add LTO profiles for canister_sanbox and sandbox_launcher
* Execution: Add more sandbox process metrics
* Execution: Enable canister sandboxing on Linux
* Execution: Extract the Bitcoin state into a separate module
* Execution: Fix backtrace compilation warnings II
* Execution: Fix wasm metadata initialization in ExecutionState
* Execution: Guard against near OOM errors in Motoko canisters
* Execution: Launcher process for spawning sandboxes
* Execution: Minor refactoring of the Bitcoin Canister
* Execution: Set the sandbox process eviction delay to 60 seconds
* Execution: Simplify BlockForest
* Execution: Upgrade Wasmtime to version 0.33.0
* IDX: update Rust toolchain to 1.58
* L2/Message Routing: ledger: remove dependency on yansi
* L2/Message Routing: speedup ledger archive upgrades
* Message Routing: Fix potential short writes in state sync
* Message Routing: Improved state sync metrics
* Networking: Add code that will be shared across adaptes that establishes the unix domain socket connection
* Networking: Add the systemd configuration files for starting up the BTC adapter
* Networking: Rebrand the /rs/base crates into /rs/async_utils
* Networking: Remove redundant code when a message is sent across to the processing thread
* Networking: Stop reporting unused transport metrics that produce large amounts of data
* Networking: The BTC RPC server uses the first systemd socket for listening
* Networking: Use a single thread pool with 6 threads for adverts instead of a dedicated event loop per flow
* Networking: Use spawn instead of spawn_block when the http handler is being initialized
* Node: Gradually increase subnet to maximum size while sending large volume of update calls
* Node: Report sandbox call history on crash
* Orchestrator: Finish non-NNS subnet replays when a new registry version is required
* Orchestrator: Orchestrator component rustdocs
* Orchestrator: Refactoring of the async task orchestration
* Various bugfixes and test updates
```

-------------------------

Luis | 2022-02-21 16:02:53 UTC | #2

And off we go with [the regular](https://dashboard.internetcomputer.org/proposal/45982) and the [disabled sandboxing version](https://dashboard.internetcomputer.org/proposal/45984).

-------------------------

Luis | 2022-02-26 06:53:29 UTC | #3

The rollout enabling sandboxing again for almost all subnets went very well and will be completed on Monday by updating the NNS subnet. [The release notes for the next replica version are ready.](https://forum.dfinity.org/t/release-notes-for-new-replica-version-c3027/11145)

-------------------------

Luis | 2022-03-01 09:53:15 UTC | #4

The rollout was successfully completed yesterday by [updating the NNS subnet](https://dashboard.internetcomputer.org/proposal/47309).

-------------------------

Luis | 2022-03-01 12:46:08 UTC | #5

[We observed some anomalies](https://status.internetcomputer.org/incidents/cg0wk08hw6fd) with the latest release in our highly loaded `pjljw` subnet. To address that we needed to patch our latest release and rerun all qualification tests. We are reducing the drops of the finalization rate on some subnets, such as `pjljw` , by preventing multiple expensive update messages to happen in a single round. 
[The proposal to elect the patched version is out](https://dashboard.internetcomputer.org/proposal/47472).

-------------------------

