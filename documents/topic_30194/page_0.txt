vxyagr | 2024-05-01 00:36:32 UTC | #1

Hi, we are currently wrapping ICRC-1 to add rebase-able feature

currently we are adjusting "balance_of" function based on the ICRC-1 repo (https://github.com/dfinity/ICRC-1/blob/main/ref/ICRC1.mo)

balance_of(PID) = shares[PID] * totalPooledCKBTC / totalShares
with shares = how much BTC initially invested by the user

we are going to build it manually on local and they deploy this custom ICRC-1.
my question is, what is the best approach to do this? or are we already on the right track?
or is there any other recommended way? (i didnt find any other way hence the question)

-------------------------

jennifertran | 2024-05-02 07:44:05 UTC | #2

How would you then manage the total supply with `icrc1_total_supply` without actually burning the tokens?

-------------------------

vxyagr | 2024-05-02 08:09:14 UTC | #3

there is another function to rebase the supply every certain period (24 hours in our case), could be burn or mint

-------------------------

skilesare | 2024-05-02 14:25:36 UTC | #4

You may have more success extending https://github.com/PanIndustrial-Org/ICRC_fungible as it is specifically set up to do whiz-bang things like you are attempting. You'll also get ICRC 3 and 4.  Iâ€™ll be happy to help you out however I can. In this instance, instead of calling the `await ICRC.balance_of` function you can write your own return function. The referenced icrc1.mo library will also give you good handles to write a mint/burn timer process to adjust your supply.

I walk through the whole library and set up here: https://www.youtube.com/playlist?list=PLuQrY06IeLwNUgGbGdH9rggewQnaaQHjR

-------------------------

