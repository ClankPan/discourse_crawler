skilesare | 2021-06-14 21:57:08 UTC | #1

Are there cycle limits on preupgrade and postupgrade? I would imagine that large hashmaps, lists, etc being output to an array will take some significant cycles once they get pretty large.  Likewise, loading a few hundred thousand items out of an array into a HashMap will take some time as well.

-------------------------

prithvi | 2021-06-15 19:11:16 UTC | #2

The cycles limits are enforced at the message level not at the pre/post upgrade canister method level. You can find the definition here:
https://github.com/dfinity/ic/blob/master/rs/config/src/subnet_config.rs#L11

If you have inefficient serialization/deserialization of your stable memory data in those pre/post hooks, you can hit the execution message limit. If you hit this limit, your state will not be committed (it'll roll back) but the cycles that've been consumed will be deducted from your canister's cycle balance.

-------------------------

skilesare | 2021-06-15 20:40:34 UTC | #3

Thanks!

Do you know where we can find that execution limit?

-------------------------

prithvi | 2021-06-15 22:26:44 UTC | #4

You can find some of the execution limits in the file I linked above, there are subnet type specific limits defined in there.

-------------------------

alexeychirkov | 2022-01-05 10:00:45 UTC | #5

Does it mean that if my canister hits a limit and preupgrade method will never succeed - I will never be able to "upgrade" my canister? The only way to change the code will be "reinstall"?

-------------------------

nomeata | 2022-01-05 10:32:17 UTC | #6

Correct – let me shamelessly plug my [canister audit advice](https://www.joachim-breitner.de/blog/788-How_to_audit_an_Internet_Computer_canister) about the risks related to canister upgrades.

-------------------------

alexeychirkov | 2022-01-05 14:09:52 UTC | #7

Thank for sharing a link.

What about `MAX_INSTRUCTIONS_PER_INSTALL_CODE ` constant?

I thought that "pre/post upgrade" uses `MAX_INSTRUCTIONS_PER_INSTALL_CODE ` but not `MAX_INSTRUCTIONS_PER_MESSAGE `...

Please clarify this question...

-------------------------

nomeata | 2022-01-06 12:51:09 UTC | #8

[quote="alexeychirkov, post:7, topic:5188"]
I thought that “pre/post upgrade” uses `MAX_INSTRUCTIONS_PER_INSTALL_CODE ` but not `MAX_INSTRUCTIONS_PER_MESSAGE ` …
[/quote]

I believe you are right. The constant for that is here:

https://github.com/dfinity/ic/blob/65cc15f3337da9d5d712a076c0d5140d41ebc2e0/rs/config/src/subnet_config.rs#L39

-------------------------

jzxchiang | 2022-01-07 07:42:22 UTC | #9

[quote="nomeata, post:6, topic:5188"]
canister audit advice
[/quote]

It's a little disappointing to read that Motoko stable variables are not recommended for use due to:

* Motoko serializing stable variables into the main wasm memory before copying the bytes into stable memory (thus making a 4 GB canister memory limit more like 2 GB)
* the aforementioned instruction limit on the pre-upgrade and post-upgrade hooks

I'm really hoping these will be addressed soon, as Motoko stable variables are the first place new IC developers turn to having read the docs.

-------------------------

