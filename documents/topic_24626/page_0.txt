kayicp | 2023-11-13 02:39:42 UTC | #1

Hi how should the ledger handle the `icrc2_transfer_from` method if the `spender`'s `expires_at` was set and it's before the current time (ie expired)?

i ask because on 
https://github.com/dfinity/ICRC-1/blob/main/standards/ICRC-2/README.md
the `expires_at` was only handled during `icrc2_approve` method with the possibility of `#Expired : { ledger_time : nat64 }` error.

![image|690x495](upload://jYQqpHkYODYaBE0vxgZwuiVmxeF.png)

while `icrc2_transfer_from` does not have that error.

![image|690x425](upload://wFEo9jaQEshabsOZVcmacgMOSRn.png)

should I handle it this way?
![image|690x125](upload://b0hBKWh377XGkrjTKjI1eWOjqC7.png)

-------------------------

roman-kashitsyn | 2023-11-13 09:45:08 UTC | #2

When the approval expires, the ledger treats it as if it never existed (the DFINITY implementation actively prunes expired approvals from memory, for example). So the `icrc2_transfer_from` method should return the `InsufficientAllowance` error when the approval expires.

Also note that the `GenericError` variant is reserved for future refinements of the standard, not for the implementors to return custom errors.

-------------------------

