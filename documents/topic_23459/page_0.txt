MalithHatananchchige | 2023-10-02 15:02:57 UTC | #1

Hi 
I built a static site that is optimized to 1.3Mb total download. I can go down to 800Kb. This includes images, CSS and JS all optimized. To my surprise when you deploy on the ICP canister it adds another couple of MB bringing the total to 2.3MB. Even then The load time is 4.77s, and the ideal scenario is under 800ms to 1second response time. What could be the reason for this ? I have attached two screenshots

1. ICP canister. 2.4Mb load time 4.77 seconds
2. apple.com: 10Mb load time 800ms

 
![Screenshot 2023-10-02 at 8.27.50 PM|690x356](upload://3Nyxqok0cbc2c3R8bvqmHeY2NUu.jpeg)
![Screenshot 2023-10-02 at 8.27.29 PM|690x361](upload://d7nfOeD34zTtRQ2WHYgLt6aedoN.png)

-------------------------

peterparker | 2023-10-02 15:06:20 UTC | #2

What's your canister ID on mainnet?

-------------------------

MalithHatananchchige | 2023-10-02 15:07:51 UTC | #3

Canister ID : dlxdc-paaaa-aaaal-ac4gq-cai

-------------------------

peterparker | 2023-10-02 15:29:02 UTC | #4

[quote="MalithHatananchchige, post:3, topic:23459, full:true"]
Canister ID : dlxdc-paaaa-aaaal-ac4gq-cai
[/quote]

Oh, you deployed it with my project Juno (üëç).

[quote="MalithHatananchchige, post:1, topic:23459"]
I built a static site that is optimized to 1.3Mb total download. ... What could be the reason for this ?
[/quote]

Most likely, the extra bytes in your website's download size are due to the "service worker." This piece of code is downloaded first when you access your website and is injected into the page. Once in place, it begins downloading the actual resources of your website and double-checking that everything is certified and free from corruption. In other words, it verifies that there are no malicious nodes in the network.

This has been the standard pattern, but it's worth noting that just last week, it was announced that the foundation is working on removing this service worker pattern to improve speed and user experience, among other things. You can find more details here üëâ https://internetcomputer.org/blog/features/deprecating-the-service-worker

To confirm that only 1.3 MB are indeed downloaded, I used a so-called `.raw.` domain where no service worker is fetched. While it's not recommended to use such a domain as it's less secure, it can be useful in this specific situation üëâ https://dlxdc-paaaa-aaaal-ac4gq-cai.raw.icp0.io/

Finally, I ran a Lighthouse test on your website using this domain, and it indeed showed good performance. So, it could either be an issue with the dapp, although your chunking and assets seem fine, or it might be that the IC was a bit slower at the time of the test. Alternatively, it's possible that the code of the canister is not optimized enough. However, I should mention that when I ran a Lighthouse test against the [juno.build](https://juno.build) website (built with Docusaurus hosted on Juno too), it yielded good results. While it's possible that the canister code could be improved, it appears to perform well I think.

Does that make sense? Sounds good?

![Capture d‚ÄôeÃÅcran 2023-10-02 aÃÄ 17.18.58|690x463](upload://jYTYKasDZk5ZtZbK0Z4Tobw8dyK.jpeg)
![Capture d‚ÄôeÃÅcran 2023-10-02 aÃÄ 17.20.51|690x463](upload://ikgZ6FZLAVOU1nLOWQOojh45Wh0.jpeg)

-------------------------

peterparker | 2023-10-02 15:28:12 UTC | #5

Btw. your website looks really great üëç

-------------------------

MalithHatananchchige | 2023-10-03 15:40:49 UTC | #6

[quote="peterparker, post:4, topic:23459"]
it was announced that the foundation is working on removing this service worker pattern to improve speed and user experience, among other things. You can find more details here
[/quote]

That's really good news. You are getting better results. I think it might be a node issue. From what I understand the boundary node will route the closest node ? Mine should be Singapore since the the subnet has it. I'm usually a optimize freak so will try out different things on how I can optimize on IC. Anyway thanks for all the info

[quote="peterparker, post:5, topic:23459"]
your website looks really great :+1:
[/quote]

Thank you :smiley:

-------------------------

peterparker | 2023-10-03 15:44:28 UTC | #7

I guess so too that the BN route to closest node but, only my understanding might be inaccurate. Let me know if you find any cool optimization scheme!

-------------------------

NathanosDev | 2023-10-03 16:32:28 UTC | #8

You will be routed to the closest boundary node, but the boundary node will route to any replica on the subnet, not the closest one.

-------------------------

MalithHatananchchige | 2023-10-03 16:46:56 UTC | #9

Anyway to debug which node it connects to ?

-------------------------

NathanosDev | 2023-10-03 19:13:37 UTC | #10

The responses are signed by the replicas now so you could check that signature, I'm not sure if it helps though. The boundary nodes will do a round-robin approach for all replicas on the subnet. So you should be getting a response from a different replica every time you make a call.

-------------------------

free | 2023-10-04 10:50:08 UTC | #11

[quote="MalithHatananchchige, post:6, topic:23459"]
That‚Äôs really good news. You are getting better results. I think it might be a node issue. From what I understand the boundary node will route the closest node ? Mine should be Singapore since the the subnet has it. I‚Äôm usually a optimize freak so will try out different things on how I can optimize on IC. Anyway thanks for all the info
[/quote]

Boundary nodes will route every request to a randomly picked replica. This is by design, as in the case of a dishonest replica you don't want to be forced (by the boundary node) to talk to it.

This definitely adds latency, but it is a necessary tradeoff (unless someone implements a mechanism to detect dishonest replicas and use that information to route around them).

-------------------------

