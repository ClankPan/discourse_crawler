sat | 2022-05-16 12:23:49 UTC | #1

Hello there! 

we are happy to announce that voting is now open for [a new IC release](https://github.com/dfinity/ic/tree/rc--2022-05-15_18-31).
The NNS proposal is here: [Internet Computer Network Status](https://dashboard.internetcomputer.org/proposal/60222).

There are lots of exciting new features and bugfixes. Here is a more complete list of changes:
```
Consensus: BatchPayloadBuilder refactor
Consensus: Refactor transcript and signature builders
Consensus: Start ECDSA with summary block
Crypto: Log peer address on TLS server handshake error in HTTP handler
Crypto: Update admin with new ssh key
Execution: Add a logger to bitcoin component directly
Execution: Add counter error for scheduler and canister invariants
Execution: Add cycles invariant round
Execution: Bitcoin: Add metrics for chain height, utxos and address to outpoints
Execution: Bitcoin: Remove contains_key check in UtxoSet.
Execution: Bitcoin: Rename 'bitcoin_testnet' in ReplicatedState to 'bitcoin'
Execution: Bitcoin: Update pagination api for get_utxos
Execution: Ensure Bitcoin payload builder respects the invariants of the payload building interface
Execution: Increase instruction limit for install_code messages on verified subnets
Execution: Refactor Heartbeat for Deterministic Time Slicing
Message Routing: Add 2MiB boundary to inducted payload size metric
Message Routing: Additional load_checkpoint metrics
Message Routing: Changed how IngressStatus is defined
Message Routing: Reduce subnet message memory limit to 25 GB
Networking: clap v2 to v3
Networking: move receive body to async utils
Networking: Rename internal query to anonymous query
Networking: Reorganization of firewall mutation code, new test for the mutations
Node: Add new node operator to SetupOS mapping table
Node: Ensure HostOS is logging to serial and regular console
Node: Fix remaining sandbox policy issues
Node: HostOS CI improvements
Node: Reboot in extra step to avoid flakes
Node: SELinux policy fixes for pcscd
Node: Set dependency on artifacts build
Runtime: Add System API Complexity setters and getters
Runtime: Fix WSL build by avoiding usage of memfd_create
Runtime: Implement aborting paused execution in the sandbox process
Runtime: Implement per-message CPU complexity limit
Runtime: Increase MAX_FUNCTIONS to 7K and MAX_GLOBALS to 300
Runtime: Move complexity into overhead submodule
Runtime: Unify on_canister_result in execute_callback paths
Various bug fixes and test updates
```

And a complete list of changes can of course be found on github.
Please comment here if you have any questions or comments.

-------------------------

