krunalshoppiko | 2023-05-16 15:51:39 UTC | #1

I want to create an Object from an array it is possible?

```
let array = ["name", "Tiger","age", "20"];

I want to make below kind of dynamic object from array. name as a key and Tiger as a value.

let Obj = {name = "Tiger"; age = 20;}
It is possible?

// let arraySize :Nat = array.size() - 1;
  // var counter :Nat= 0;
  // for (element in array.keys()) {
  //     if(counter <= arraySize){
  //       let subArray = Array.subArray<Text>(array, counter,2);
  //       Debug.print(debug_show(subArray)); 
  //           Below is the loop output
  //         ["name", "Tiger"]
  //         ["age", "20"]
  //     };
  //     counter += 2;            
  //   };
```

-------------------------

h1teshtr1path1 | 2023-05-16 15:59:59 UTC | #2

I don't think it's possible. You can try using JSON instead of motoko objects.

-------------------------

krunalshoppiko | 2023-05-16 16:06:44 UTC | #3

I tried JSON but it is not working. how to Parse JSON.stringify value in motoko?

-------------------------

Gekctek | 2023-05-16 16:46:46 UTC | #4

This seems to be a general issue with the lack of reflection in Motoko right now. The serialization libraries out there also suffer from this where you cant deserialize into a custom type with the exception of `from_candid(candidValue)`. 
If you know the Obj structure and its static then you can get away with it but anything dynamic seems to be an issue right now. https://forum.dfinity.org/t/motoko-wishlist/18804/8?u=gekctek

-------------------------

h1teshtr1path1 | 2023-05-16 17:38:34 UTC | #5

https://github.com/aviate-labs/json.mo
I find this good. You can make your own functions and facilitate according to requirements

-------------------------

skilesare | 2023-05-16 19:43:17 UTC | #6

Check out candy library.  It has a multi-type array:

https://mops.one/candy

```
let array = #Array([#Text("name"), #Text("Tiger"),#Text("age"), #Nat("20")]);

//or more likely you want

let map : CandyTypes.CandyShared = #Map([
     ((#Text("name"),#Text("Tiger")),
     ((#Text("age"), #Nat(20))
]);

//Cast it to a Candy and you even get look ups:

let map2 = CandyTypes.unshare(map);

let #Nat(age) = Map.get(map2, CandyTypes.candyMapHashTool, #Text("age")) else return #err("anerror");
```

-------------------------

krunalshoppiko | 2023-05-17 08:15:09 UTC | #7

I tried this it's give me this kind of Text output.

```
{"givenName": "John", "familyName": "Doe", "favNumber": 5}
```
how to convert into motoko object?

-------------------------

h1teshtr1path1 | 2023-05-17 09:24:03 UTC | #8

hey dynamic motoko objects are not possible at time. So maybe you can switch to use JSON instead.

-------------------------

