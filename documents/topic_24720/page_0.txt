ildefons | 2023-11-15 17:58:36 UTC | #1

Does it exist `ic_cdk::api::instruction_counter` in Motoko? If not, is it somehow possible toretrieve " the number of instructions that the canister executed since the last entry point"?

-------------------------

h1teshtr1path1 | 2023-11-15 18:17:17 UTC | #2

https://internetcomputer.org/docs/current/motoko/main/base/ExperimentalInternetComputer#function-countinstructions
May be this is what you are looking for ?

-------------------------

claudio | 2023-11-15 19:39:25 UTC | #3

That function will let you measure the instruction cost of some synchronous code only.

The implementation is here and uses performanceCounter(0), which is reset on entry but also after every await.

https://github.com/dfinity/motoko-base/blob/master/src/ExperimentalInternetComputer.mo

There is a new performance counter (pass 1, not 0), that (should) let you measure instructions across awaits too.

Beware, I have not tried this yet.

-------------------------

ildefons | 2023-11-20 12:18:25 UTC | #4

My canister method takes ~18 Million instructions. What is the maximum number of cycles that can be executed within one consensu round?

-------------------------

Severin | 2023-11-20 12:29:39 UTC | #5

You can go up to 20B instructions. It is configured [here](https://github.com/dfinity/ic/blob/master/rs/config/src/subnet_config.rs#L18). Install/upgrade messages have more generous limits

-------------------------

