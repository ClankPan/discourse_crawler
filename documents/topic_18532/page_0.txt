nikola-milosa | 2023-02-17 16:18:09 UTC | #1

Hello there!

we are happy to announce that voting is now open for [a new IC release](https://github.com/dfinity/ic/tree/rc--2023-02-15_18-31).
The NNS proposal is here: [IC NNS Proposal 108153](https://dashboard.internetcomputer.org/proposal/108153).

Here is a summary of the changes since the last release:
* [[7d99a7cf1](https://github.com/dfinity/ic/commit/7d99a7cf1)]  Consensus: chore: remove warning from ckBTC minter readme
* [[89afbae90](https://github.com/dfinity/ic/commit/89afbae90)]  Consensus: feat: Delay CUP verification during catch up to give node a chance to recompute state
* [[294e0d3f5](https://github.com/dfinity/ic/commit/294e0d3f5)]  Consensus: feat: Hard bound on amount of ongoing signatures in ECDSA summary block
* [[d14361f99](https://github.com/dfinity/ic/commit/d14361f99)]  Consensus: feat: Return CanisterError on signature request timeouts to distinguish error cases
* [[be4589b89](https://github.com/dfinity/ic/commit/be4589b89)]  Crypto: create criterion benchmarks for the crypto component's iccsa verification
* [[f1f38ac1e](https://github.com/dfinity/ic/commit/f1f38ac1e)]  Crypto: feat: Reduce RPC calls in check_keys_with_registry
* [[ad7e1cdc0](https://github.com/dfinity/ic/commit/ad7e1cdc0)]  Crypto: feat: skeleton for checking public and secret key stores at vault level
* [[75813e029](https://github.com/dfinity/ic/commit/75813e029)]  Crypto: perf: remove unnecessary cloning of Arcs to the registry client
* [[88b34483f](https://github.com/dfinity/ic/commit/88b34483f)]  Execution: perf: Optimize removing heartbeat and timer canister tasks as well as applying priority credit
* [[7743ec37d](https://github.com/dfinity/ic/commit/7743ec37d)]  Message Routing: fix: Disallow double pruning of leaves
* [[a0a8697d0](https://github.com/dfinity/ic/commit/a0a8697d0)]  Message Routing: fix: Loopback stream is inducted within the DSM
* [[f5411b6cc](https://github.com/dfinity/ic/commit/f5411b6cc)]  Message Routing: fix: Reduce number of archived checkpoints
* [[ae2d33f16](https://github.com/dfinity/ic/commit/ae2d33f16)]  Networking/Node: Get on the HostOS and install the SEV certs on the GuestOS.
* [[2276c2fc1](https://github.com/dfinity/ic/commit/2276c2fc1)]  Networking/Node: Support using a node provider private key ("virtual" HSM) for IC join
* [[6ad2e2ace](https://github.com/dfinity/ic/commit/6ad2e2ace)]  Networking/Node: Up uuid to 1.3.0
* [[6a7133257](https://github.com/dfinity/ic/commit/6a7133257)]  Networking: [Monitoring Canister] Define Report type and implement Signable trait
* [[aead5d9ee](https://github.com/dfinity/ic/commit/aead5d9ee)]  Networking: [Monitoring Canister] Create Crypto Component and Get Node ID
* [[3e25750ba](https://github.com/dfinity/ic/commit/3e25750ba)]  Networking: [Monitoring Canister] Create canister client
* [[58e835e9c](https://github.com/dfinity/ic/commit/58e835e9c)]  Networking: chore: instead of using a shared vector for pending artifacts, send directly the unvalidated artifacts that need to be processed.
* [[1693c5523](https://github.com/dfinity/ic/commit/1693c5523)]  Networking: chore: move the ArtifactKind implementation until rs/types/types.
* [[aaabf156c](https://github.com/dfinity/ic/commit/aaabf156c)]  Networking: feat: Propage subnet type to http outcall adapter
* [[75e9c74a8](https://github.com/dfinity/ic/commit/75e9c74a8)]  Networking: feat: Configure http outcalls adapter with socks proxy
* [[9ce778654](https://github.com/dfinity/ic/commit/9ce778654)]  Node: SetupOS hotfixes
* [[8cec93530](https://github.com/dfinity/ic/commit/8cec93530)]  Runtime: Enable round complexity limit
* [[db39f93cf](https://github.com/dfinity/ic/commit/db39f93cf)]  Runtime: Ignore new injected globals
* [[7bef71668](https://github.com/dfinity/ic/commit/7bef71668)]  Runtime: Respect dirty pages limits in native stable writes
* [[af345b21d](https://github.com/dfinity/ic/commit/af345b21d)]  Runtime: Simplify dirty page limit error message
* [[9ce53c4a9](https://github.com/dfinity/ic/commit/9ce53c4a9)]  Runtime: Stable API panics with Wasm-native stable memory
* Various tech-debt management: code refactoring, docs, bug fixes, test updates

# IC-OS Verification

To build and verify the IC-OS disk image, run:

```
# From https://github.com/dfinity/ic#building-the-code
# This process requires Mac/Linux/WSL2, Git and Podman on your machine.
git clone https://github.com/dfinity/ic
cd ic
git fetch origin
git checkout 12c2666942f952d23a6baddda76d5ecaf279cb0d
if ./gitlab-ci/container/build-ic.sh -i ; then
    wget -c https://download.dfinity.systems/ic/12c2666942f952d23a6baddda76d5ecaf279cb0d/guest-os/update-img/update-img.tar.gz
    shasum -a 256 artifacts/icos/update-img.tar.gz update-img.tar.gz
else
    echo "IC-OS build failed. Verification unsuccessful." >&2
fi
```

The two SHA256 sums printed above from a) the downloaded CDN image and b) the locally built image,
must be identical, and must match the SHA256 from the payload of the NNS proposal.

-------------------------

