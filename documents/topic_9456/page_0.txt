coin_master | 2021-12-09 14:25:34 UTC | #1

Hello,

**How to generate an identity using my local private keys and use it in agent-js to match the one generated by `dfx`**?

I am trying to use my local private keys to generate my identity to interact with an asset canister.
[Link to the code here](https://github.com/tarek-eg/asset-canister-uploader/blob/c8144aa83bd40e23a2c6aa4a744881bd87ca3adf/upload.ts#L11)

I am deploying my local canister with my `default` local identity and want to call that canister from a nodejs script with the same identity.
I am initializing the agent-js identity like this:
```
const initIdentity = () => {
  const buffer = readFileSync(process.env.PATH_TO_PRIVATE_KEY!);
  const key = buffer.toString("utf-8");
  const privateKey = createHash("sha256").update(key).digest("base64");

  const secp = Secp256k1KeyIdentity.fromSecretKey(
    Buffer.from(privateKey, "base64"),
  );
  return secp;
};

const identity = initIdentity();
const principal = identity.getPrincipal();
async function upload() {
  const agent = new HttpAgent({
    identity,
    fetch,
    host,
  });
}
```
But when I run my script to store an asset I get this error
```
Reject code: 4
Reject text: Caller is not authorized
```
And when logging the caller principal in my canister it's indeed a different one than my `default` principal.

I just noticed that `Secp256k1KeyIdentity` is not the right algorithm maybe `Ed25519KeyIdentity,`?
But I don't know which one `dfx` is using and I can't find an example.

References to other projects that trying to do the same
https://github.com/deckgo/deckdeckgo/blob/6d5942dc70baf0f8a98c5e22380f947ad94994a8/canisters/scripts/ic.installcode.mjs#L30

https://github.com/lastmjs/ethereum-archival-canister/blob/7fb613e14c1968b00832f0ce5c09fa7956d9d837/importers/utilities.ts#L73


I have tried both but none is working for me so far.

-------------------------

peterparker | 2021-12-08 16:15:13 UTC | #2

Thanks for the detailed post. Same to me (related [thread](https://forum.dfinity.org/t/using-dfinity-agent-in-node-js/6169/24?u=peterparker)), it's also one of my blocking issue.

-------------------------

coin_master | 2021-12-08 20:38:48 UTC | #3

Thanks that's exactly the same topic,
I searched for any related topic before creating this one but nothing showed up.
Your repo is a great source for inspiration :slight_smile:

-------------------------

peterparker | 2021-12-09 06:30:20 UTC | #4

[quote="coin_master, post:3, topic:9456"]
Your repo is a great source for inspiration
[/quote]

üòäüôè

[quote="coin_master, post:3, topic:9456"]
Thanks that‚Äôs exactly the same topic,
[/quote]

Cool to notice in the other [post](https://forum.dfinity.org/t/using-dfinity-agent-in-node-js/6169/32?u=peterparker) that things are now moving, thanks for updating the subject!

-------------------------

coin_master | 2022-06-08 12:16:42 UTC | #5

This issue have been resolved in another thread
https://forum.dfinity.org/t/using-dfinity-agent-in-node-js/6169/50#steps-1

-------------------------

