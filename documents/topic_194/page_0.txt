cryptoschindler | 2019-11-17 19:00:52 UTC | #1

this is a small video i made for beginners to get the sdk to run under windows. its the first time for me to do something like this so i would appreciate your feedback :slight_smile:
i know the audio is a bit off and the video is longer than necessary :smiley:  
if you have topics you want to cover via video make sure to hit me up and ill add them to the mission control youtube channel!

https://youtu.be/V6QKwePTITc

-------------------------

andrew | 2019-11-17 20:57:11 UTC | #2

this was great, nice tutorial @cryptoschindler

-------------------------

rckprtr | 2019-11-17 21:58:24 UTC | #3


I use Windows 10 and you can do this without a VM.

Install Windows Subsystem Linux 2 Ubuntu:
https://docs.microsoft.com/en-us/windows/wsl/wsl2-install


Install Visual Studio 2 Insiders which allows you to code in your Windows 10 Environment to your Ubuntu Environment.  VSCode Insiders is a different application then VSCode, so your default VSCode should remain unchanged.
https://code.visualstudio.com/insiders/

* Open a Command Prompt [Windows]
* Type `wsl` and now you should be in the Ubuntu Terminal
* Install Dfinity `sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"`
or follow https://sdk.dfinity.org/developers-guide/quickstart.html
* cd into `hello` project.
* type `code .` which should open a VS Insider window.
* Open a new Terminal in VSCode Insiders and type `dfx start`
* Open another Terminal and install/run `hello` project

Note: When you open a terminal within VSCode Insiders, it should be in the same path as your `hello` project.

-------------------------

cryptoschindler | 2019-11-18 00:07:50 UTC | #4

oh wow, thanks for sharing this! sure makes things a lot easier :thinking:

-------------------------

Ori | 2019-11-18 00:47:30 UTC | #5

Excellent video! 

Virtualbox is still a good catch-all solution across all Windows versions. 

Yes Windows 10 users can use WSL if they like. But depending on how frugal you are with updates you might not have it on Windows 10 Home yet. 

Some might like being able to dump a VM and start again too.

-------------------------

Ori | 2019-11-18 00:44:34 UTC | #6

Great guide. VSCode might have WSL integration in the main release now, so you may not need the insider build? Worth a check.

-------------------------

rckprtr | 2019-11-18 01:15:30 UTC | #7

Good conversation to start.

-------------------------

EdmundDFN | 2019-11-18 03:35:48 UTC | #8

Epic tutorial!!! Thanks for sharing @cryptoschindler

-------------------------

Alexey | 2019-11-18 05:27:41 UTC | #9

Thanks, Moritz :wave: You definitely have YouTube blogger skills :+1: Nice English and explanation of SDK running.

-------------------------

Ori | 2019-11-18 15:41:38 UTC | #10

Ok, so the main release of VSCode lets you do this now too (you might need to close VSCode after the first run and then run code . again). So thanks Rick, between these two guides all Windows devs should be covered.

You'll know you're connected when you can see WSL at the bottom left of the VSCode application window. You can always start and manage WSL connections from here too.

-------------------------

dukakis | 2019-11-19 23:32:47 UTC | #11

Thanks for your contributions @cryptoschindler

-------------------------

cryptoschindler | 2019-11-24 20:24:33 UTC | #12

if you dont want to go through the installation process of the virtual machine, you can just download a virtualbox image instead! 

check out this very handy project :slight_smile:
 https://www.osboxes.org/virtualbox-images/

make sure to read their FAQ for the username and password of the installation!

-------------------------

Ori | 2021-10-13 08:06:22 UTC | #13

A very clear step by step guide to getting Windows Subsystem for Linux set up and connected to VSCode (you can skip the python bit in the middle):

https://code.visualstudio.com/docs/remote/wsl-tutorial

Edit: link updated

-------------------------

Ori | 2021-06-02 07:35:47 UTC | #14

So for new readers here, there are 2 good options for Windows users:

- Installing Ubuntu on a VM using VirtualBox (all Windows versions).
- Installing Windows Subsystem for Linux and connecting to it with VSCode (Windows 10).

You can then install the DFINITY Canister SDK on the command line (terminal) in either of these.

-------------------------

Ori | 2020-04-27 22:02:27 UTC | #15

You might be getting errors with canister installs on WSL version 1 (the current non-insider build). It seems that the VSCode WSL server holds onto files while open. Killing the server frees the files up and canister installs run fine then, you can do this by closing the WSL connection from the bottom left of VSCode.

WSL v2 is in the next public Windows 10 build, expected in the next few weeks, which hopefully should resolve this.

-------------------------

senior.joinu | 2020-05-05 21:58:55 UTC | #16

This is also possible to create dfx docker container and use it everywhere you need.

1. Download dfx's `install.sh`
2. Remove or comment these lines from it (explained below):
```
    #need_cmd sudo
    #if ! confirm_license; then
    #    echo "Please accept the license to continue."
    #    exit
    #fi
```
3. Make a Dockerfile with something like this:
```
FROM ubuntu:18.04

RUN apt-get update
RUN apt-get install curl -y

COPY install.sh install.sh
RUN sh install.sh

WORKDIR /root/dfx
ENTRYPOINT ["/usr/local/bin/dfx"]
```
4. Then just use `docker run` with correct mounting 

Unfortunately, to make it work, we should remove lines responsible for showing the license agreement, which we are not allowed to remove legally. So please, don't use this method unless you know what are you doing. Why should we remove these lines? Because the agreement is interactive but docker doesn't support interactive build. So we are absolutely not allowed to share a docker image like this.
Maybe, it is possible to make legally correct docker image by including licence agreement process into Dockerfile itself (each time you run the container you should accept the agreement). This approach makes the license agreement a little annoying, but let's anyone use dfx under any system supporting docker and also keeps it's legal strength IMO.

I'm not a lawyer, just saying that from technical point of view this can be achieved easily.

-------------------------

zhugepangpang | 2020-05-06 12:58:00 UTC | #17

I'm ready to start learning！

-------------------------

Ori | 2020-06-01 11:22:54 UTC | #18

The latest public Windows 10 release resolves this (version 2004) by supporting WSL v2. 

A guide to installing WSL v2 is here: https://docs.microsoft.com/en-us/windows/wsl/install-win10

-------------------------

atom | 2020-08-25 20:55:46 UTC | #19

Thank you, it was really useful! :slight_smile:

-------------------------

Jessica | 2021-06-03 23:30:40 UTC | #20

I am so happy I found this post I think it’s going to be easier on me to install everything now .  Thank u

-------------------------

nerdoutcj | 2021-06-04 00:18:27 UTC | #21

Just make sure you work off the Linux home location. There are some issues when the location of the projects is on the mounted drives mapped to the Windows home location.

See https://forum.dfinity.org/t/trouble-with-local-development-on-wsl2/4688


C.J

-------------------------

Ori | 2021-06-04 09:42:34 UTC | #22

Note @nerdoutcj ’s comment, that’s tripped a few people up. I’ll also cross post this in case you missed it. Between these posts you should be covered.
[https://forum.dfinity.org/t/native-windows-support/1241/2?u=ori](https://forum.dfinity.org/t/native-windows-support/1241/2?u=ori)

-------------------------

