qwertytrewq | 2024-06-02 23:23:56 UTC | #1

Why doesn't `dfinity/ic` project have GitHub Issues? Due to lack of them, I ask here.

I have unclear error messages like the following, that I can't understand:
`The replica returned a rejection error: reject code CanisterReject, reject message Connecting to local.vporton.name failed: Failed to directly connect: error sending request for url (https://local.vporton.name:8443/), error code None`

Please, modify https://github.com/dfinity/ic/blob/master/rs/https_outcalls/adapter/src/rpc_server.rs in such a way to show `e.source()` source of the error (e.g. in parentheses after general error description, if `e.source()` isn't null, or like this). Please, also show the chain of all sources of the error like `e.source().unwrap().source()`, etc.

It is important for my development of [Joining Proxy](https://github.com/vporton/joining-proxy-rust), the software that joins all 13 calls of HTTP outcalls into one call to a centralized server (such as to OpenAI API), reducing amount paid and increasing traffic throughput.

Above I listed an error that I can't understand. I would fix `dfinity/ic` by myself, but sadly `cargo check` fails on my installation, so I can't check what is compilable and what isn't.

It is important to bring here oracles and all other kinds of centralized APIs. Please, help me in this task, by addressing this issue. I hope for a release of new `dfinity/ic` with this feature soon.

Oh, also a recommendation: You can create a trait with a method `.full_source()` or like named that will display error with the entire chain of sources, in order to avoid repetitive handling of errors sources.

-------------------------

qwertytrewq | 2024-06-04 07:30:02 UTC | #2

Remark: I solved the problem due to which I needed this urgently. I no more need this urgently.

-------------------------

