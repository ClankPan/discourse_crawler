harshbaz | 2023-09-11 11:23:46 UTC | #1

When viewing a neuron on NNS dapp, the `get_neuron` request is sent to fetch the details of the neuron. But the request payload contains an array of number for the neuron ID instead of string ID:

![Shot 2023-09-11 at 16.52.16|688x499](upload://mMQ0brKdPQ50ReBs1LeE68pxOTU.jpeg)

How can I do thing conversion manually in JS?

-------------------------

sea-snake | 2023-09-11 11:53:05 UTC | #2

These numbers are the same as the blob in your other forum post: https://forum.dfinity.org/t/convert-idl-blob-to-string/22944/1

In Candid a `vec nat8` is the same as a `blob`. Each number represents a value between 0 and 255, which is a byte within an array of bytes.

Looking at the NNS screenshot, the id looks like a hexadecimal string for these bytes.

In JS you could convert decimals to hex like this:
```
const hexString = yourByteNumberArray.map(byte => byte.toString(16).padStart(2, '0')).join('');
```

The other way around would be:
```
const byteNumberArray = hexString.match(/.{1,2}/g).map(hex => parseInt(hex, 16));
```

-------------------------

peterparker | 2023-09-11 14:08:12 UTC | #3

You find these kind of utilities used by NNS dapp in `@dfinity/utils` (https://github.com/dfinity/ic-js/tree/main/packages/utils).

* [convertStringToE8s](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-convertstringtoe8s)
* [defaultAgent](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-defaultagent)
* [createAgent](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-createagent)
* [createServices](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-createservices)
* [assertNonNullish](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-assertnonnullish)
* [assertPercentageNumber](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-assertpercentagenumber)
* [uint8ArrayToBigInt](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-uint8arraytobigint)
* [bigIntToUint8Array](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-biginttouint8array)
* [numberToUint8Array](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-numbertouint8array)
* [arrayBufferToUint8Array](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-arraybuffertouint8array)
* [uint8ArrayToArrayOfNumber](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-uint8arraytoarrayofnumber)
* [arrayOfNumberToUint8Array](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-arrayofnumbertouint8array)
* [asciiStringToByteArray](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-asciistringtobytearray)
* [hexStringToUint8Array](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-hexstringtouint8array)
* [uint8ArrayToHexString](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-uint8arraytohexstring)
* [encodeBase32](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-encodebase32)
* [decodeBase32](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-decodebase32)
* [bigEndianCrc32](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-bigendiancrc32)
* [debounce](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-debounce)
* [isNullish](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-isnullish)
* [nonNullish](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-nonnullish)
* [notEmptyString](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-notemptystring)
* [toNullable](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-tonullable)
* [fromNullable](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-fromnullable)
* [fromDefinedNullable](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-fromdefinednullable)
* [jsonReplacer](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-jsonreplacer)
* [jsonReviver](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-jsonreviver)
* [principalToSubAccount](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-principaltosubaccount)
* [smallerVersion](https://github.com/dfinity/ic-js/tree/main/packages/utils#gear-smallerversion)

-------------------------

