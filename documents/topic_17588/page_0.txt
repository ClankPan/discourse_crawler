lastmjs | 2022-12-21 05:10:45 UTC | #1

Azle 0.9.0 and Kybra 0.2.0 both have support for the new timers API.

If you haven't heard of this API, it's meant to be an improvement over heartbeat, allowing you to set callbacks at arbitrary times in the future. The hope is that this will be much cheaper for time-based tasks when compared with the coarse heartbeat API that forced an update call every second or so.

Azle timers info: https://github.com/demergent-labs/azle#timer-apis

```typescript
import { Duration, ic, TimerId, Update } from 'azle';

export function set_timers(delay: Duration): Update<[TimerId, TimerId]> {
    const function_timer_id = ic.set_timer(delay, callback);

    const captured_value = 'ðŸš©';

    const closure_timer_id = ic.set_timer(delay, () => {
        console.log(`closure called and captured value ${captured_value}`);
    });

    return [function_timer_id, closure_timer_id];
}

function callback(): void {
    console.log('callback called');
}
```

Kybra timers info: https://github.com/demergent-labs/kybra#timer-apis

```python
from kybra import Duration, ic, TimerId, update


@update
def set_timers(delay: Duration) -> tuple[TimerId, TimerId]:
    function_timer_id = ic.set_timer(delay, callback)

    captured_value = "ðŸš©"

    closure_timer_id = ic.set_timer(
        delay,
        lambda: ic.print(f"closure called and captured value {captured_value}"),
    )

    return [function_timer_id, closure_timer_id]


def callback():
    ic.print("callback called")
```

-------------------------

Jessie | 2024-02-13 21:41:34 UTC | #2

Do these two examples both run immediately once a canister starts, or do they need to be called and executed first?

-------------------------

lastmjs | 2024-02-13 22:31:18 UTC | #3

These examples expose functions that would need to be called after deploying the canister, keep in mind that the Azle example is now very old and won't work with the latest versions of Azle.

You can see the updated Azle example here: https://github.com/demergent-labs/azle/blob/main/examples/timers/src/timers.ts

-------------------------

