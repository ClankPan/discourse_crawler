dieter.sommer | 2022-04-06 16:22:37 UTC | #1

Support for the Ethereum Virtual Machine (EVM) on the IC has been discussed already at different places. Let us use this topic to have those discussions.

In the DFINITY Global R&D this afternoon I have presented an analysis of what it would take to bring an EVM to the IC. The outcome of this is that DFINITY is not spending the resources for this feature as it would have too high of an opportunity cost in terms of missing out on other things we need our resources for, e.g., IC-native DeFi.

-------------------------

Zane | 2022-04-06 16:28:48 UTC | #2

Has the project been cancelled or put on the backburner?

-------------------------

kpeacock | 2022-04-06 16:34:29 UTC | #3

It could always be brought back, it's just a really heavy lift with hard-to-quantify return on investment for the ecosystem

-------------------------

lastmjs | 2022-04-06 16:36:29 UTC | #4

Also keep in mind that it may be possible for non-DFINITY teams to build an EVM on the IC. If you're interested in doing this please give it a shot, I am happy to help guide you.

-------------------------

Zane | 2022-04-06 16:38:04 UTC | #5

I see, well if it has been dropped in favour of IC DeFi then it was the right call, the community can always work on an EVM implementation on its own. What are the main tasks you're looking into to improve DeFi? Token standards, transaction atomicity?

-------------------------

dieter.sommer | 2022-04-06 17:11:06 UTC | #6

Here is the slide deck of the quarter-hour presentation in this afternoon's DFINITY Global R&D meeting in case you are interested.

https://drive.google.com/file/d/1fIu3yoDVtEsjedyJgu9EnGsuc4ZQtg1r/view

We are planning to hold a community conversation on this topic as well and reveal more of the design that we have evaluated for an EVM on the IC.

Maybe someone in the community is interested in picking this up with a small team? There would surely be grants available to support such a venture, as well as support from our side. We would love to see someone working on this feature.

-------------------------

Zane | 2022-04-06 17:16:15 UTC | #7

I have a question if you don't mind, on slide 10 it is stated a production ready implementation would have taken around 1 year if not more, if that's the case why was the feature slated for Q2 2022 on the roadmap?

-------------------------

skilesare | 2022-04-06 18:05:25 UTC | #8

The community can paid to get started here: https://forum.dfinity.org/t/icdevs-org-bounty-16-evm-witness-library-8-000/11346

Being able to calculate all the witnesses and prove the chain is a key first step.  After this, you'd need op codes done.  Then wiring it all together.  Can't wait to look at the deck as there are likely 10,000 things that haven't occurred to me.

-------------------------

skilesare | 2022-04-06 18:13:31 UTC | #9

![image|308x53](upload://1MYlA0166Cy9uyfaxvrE2kahOnC.png)

I'll just suggest that the answers to these two questions may be:

* A lack of evm support
* Create evm support so all existing solidty smart contracts could run on the IC without modification.

:upside_down_face:

-------------------------

dieter.sommer | 2022-04-06 18:24:23 UTC | #10

[quote="Zane, post:7, topic:11970, full:true"]
I have a question if you don’t mind, on slide 10 it is stated a production ready implementation would have taken around 1 year if not more, if that’s the case why was the feature slated for Q2 2022 on the roadmap?
[/quote]

We have only recently worked on a concrete system design and were way too optimistic before this. Now it is clear that the project likely is a multiple-PY project. Also, when looking at what we need as a minimum baseline, the cope became much larger as originally envisioned.

-------------------------

dieter.sommer | 2022-04-06 18:26:47 UTC | #11

[quote="skilesare, post:9, topic:11970"]
I’ll just suggest that the answers to these two questions may be:

* A lack of evm support
* Create evm support so all existing solidty smart contracts could run on the IC without modification.
[/quote]

Haha, let's see. ;-)

[quote="Zane, post:5, topic:11970"]
What are the main tasks you’re looking into to improve DeFi? Token standards, transaction atomicity?
[/quote]

Regarding a token standard, people are already working on it, there is a public meeting to discuss with the community next week if I am not mistaken.

-------------------------

skilesare | 2022-04-06 18:26:44 UTC | #12

Whatever happened to this: https://fxa77-fiaaa-aaaae-aaana-cai.raw.ic0.app/evm/. Was this actually running stuff on the IC? Or just hosting it there?

-------------------------

dieter.sommer | 2022-04-06 18:28:54 UTC | #13

This is a very early prototype, but it is a simple EVM environment running on the IC. But it implements only a small subset of the Yellow Paper, e.g., it does not create any of the artifacts like blocks, transaction receipts etc. It's essentially a core EVM implementing the opcodes.

-------------------------

dieter.sommer | 2022-04-06 19:16:59 UTC | #14

[quote="Zane, post:5, topic:11970"]
What are the main tasks you’re looking into to improve DeFi? Token standards, transaction atomicity?
[/quote]

Everything.

Token standards and atomicity are two important topics. We plan to broadly look at the challenges and involve the community in this because in the end we need to build features that the community wants and needs. Details to follow. :-)

-------------------------

skilesare | 2022-04-06 20:00:37 UTC | #15

Any idea where the source code is or who the author is? Having the op idea would be great.

-------------------------

paulyoung | 2022-04-06 20:06:41 UTC | #16

The author is Ben Lynn.

-------------------------

Ori | 2022-04-06 21:34:33 UTC | #17

[https://crypto.stanford.edu/~blynn/](https://crypto.stanford.edu/~blynn/)

-------------------------

Maxfinity | 2022-04-07 08:45:39 UTC | #18

[quote="dieter.sommer, post:1, topic:11970"]
In the DFINITY Global R&D this afternoon I have presented an analysis of what it would take to bring an EVM to the IC. The outcome of this is that DFINITY is not spending the resources for this feature as it would have too high of an opportunity cost in terms of missing out on other things we need our resources for, e.g., IC-native DeFi.
[/quote]

Good choice, Dfinity Foundation...

-------------------------

ildefons | 2022-04-07 10:15:45 UTC | #19

Hi @dieter.sommer ,

I have a question about slide 10. In particular one of the "cons" to undertake EVM project. You wrote "Substantial investment into a technology we intend to replace". What is that you intend to replace: EVM of ETH1.0 to EVM of ETH2.0? DEFI on IC to replace DEFI on ETH? something else?

-------------------------

dieter.sommer | 2022-04-08 07:33:42 UTC | #20

[quote="ildefons, post:19, topic:11970"]
I have a question about slide 10. In particular one of the “cons” to undertake EVM project. You wrote “Substantial investment into a technology we intend to replace”. What is that you intend to replace: EVM of ETH1.0 to EVM of ETH2.0? DEFI on IC to replace DEFI on ETH? something else?
[/quote]

"Replace" is maybe the wrong wording. What was meant is that Ethereum is a 2nd generation blockchin, and the IC is a 3rd (i.e., next) generation blockchain. We should rather put effort into improving the 3rd-generation stack instead of spending a huge amount of resources on a 2nd-generation stack. Does this answer your question?

-------------------------

ohsalmeron | 2022-04-11 19:19:08 UTC | #22

How about a Cross-chain system for "Proof of ownership"

In where you sign-in with your EVM wallet and then authenticate your assets ownership to link-in and authorize its use on the IC?

Is there anything like this already built up?

How does this idea sound?

Stone me hard!

-------------------------

rdobrik | 2022-04-11 20:52:29 UTC | #23

It would be interesting to have some concept of remote smart contract proxies in the IC. For example, wrap Ethereum smart contract with IC IDL, then add it to dfx.json as a special proxy canister. So from a developer perspective it will really look like any other canister, just runtime execution will be done remotely. Sure, the canister will need to have an associated wallet with ETH to pay for the gas.

-------------------------

anonymous | 2022-04-13 09:49:27 UTC | #24

Just as a user - would love to see EVM capability on the IC. Actually, I think this would drive a lot of people in.

-------------------------

dieter.sommer | 2022-04-19 07:19:33 UTC | #25

[quote="rdobrik, post:23, topic:11970, full:true"]
It would be interesting to have some concept of remote smart contract proxies in the IC. For example, wrap Ethereum smart contract with IC IDL, then add it to dfx.json as a special proxy canister. So from a developer perspective it will really look like any other canister, just runtime execution will be done remotely. Sure, the canister will need to have an associated wallet with ETH to pay for the gas.
[/quote]

If my understanding of what you have in mind is correct, this functionality is something that the Ethereum integration would bring: IC smart contracts can call Ethereum smart contracts (and also Ethereum smart contracts can call IC smart contracts). What you suggest would be one sleek way of exposing the Ethereum smart contracts to the IC.

-------------------------

dieter.sommer | 2022-04-19 07:29:55 UTC | #26

[quote="ohsalmeron, post:22, topic:11970"]
How about a Cross-chain system for “Proof of ownership”

In where you sign-in with your EVM wallet and then authenticate your assets ownership to link-in and authorize its use on the IC?
[/quote]

Could you elaborate a little more on this idea? From the current text, my understanding is that you would would "authorize" on Ethereum the use of Ethereum assets (tokens) on the IC and then use them on the IC.

In my view this could work as follows, for example: On Ethereum you would transfer some ERC-20 tokens to an IC proxy contract, i.e., authorize their use on the IC. Then, through the native Ethereum integration, we would get those tokens over to the IC, analogous to wrapped tokens, and can use them. At some point the current owner of the wrapped tokens can return them back to the Ethereum network. Is this what you have in mind?

-------------------------

dieter.sommer | 2022-04-19 07:34:03 UTC | #27

[quote="anonymous, post:24, topic:11970, full:true"]
Just as a user - would love to see EVM capability on the IC. Actually, I think this would drive a lot of people in.
[/quote]

Indeed, it was a tough decision to not pursue this feature from the side of the DFINITY Foundation due to focussing our resources on IC-native DeFi. It would be great if we would be able to find people in the community interested in building this and funding their work through grants.

Anybody here who things they (with a small team) would be interested in taking on a huge project on grants and help make the EVM on the IC a reality?

-------------------------

rdobrik | 2022-04-19 22:51:48 UTC | #28

Yes, I believe that usability from developer perspective will be critical. Interaction has to be familiar to development environment the developer is using. Just to say "It just works!" :)

-------------------------

Sormarler | 2022-04-20 05:36:35 UTC | #29

Couldn't Dfinity higher a contractor or group of devs to work specifically on the EVM? Is that tough to find devs that are capable of doing this work?

-------------------------

JaMarco | 2022-04-20 06:04:17 UTC | #30

[quote="Sormarler, post:29, topic:11970"]
Is that tough to find devs that are capable of doing this work?
[/quote]
I think the issue is finding devs that want to.

-------------------------

anonymous | 2022-04-20 06:07:19 UTC | #31

As bullish as I am with IC defi, the market is definitely showing a MASSIVE amount of interest for EVM chains. With the capabilities of the IC, it would be an absolute monster. I'd imagine more devs and more users coming in, so I really am bummed this is being ignored by Dfinity. Heck, this should be a proposal to let the community decide.

-------------------------

JaMarco | 2022-04-20 07:08:27 UTC | #32

[quote="anonymous, post:31, topic:11970"]
I’d imagine more devs and more users coming in, so I really am bummed this is being ignored by Dfinity. Heck, this should be a proposal to let the community decide.
[/quote]
Ehh, I don't think it's fair to expect Dfinity to do it when this is work that can be done by the community. For example Solana Labs isn't doing Solana's EVM, a third party studio is (Neon Labs).

-------------------------

anonymous | 2022-04-20 11:43:47 UTC | #33

That's far and at least Dfinity is offering a grant for this. On the other hand, seem as though it's something that could come sooner if done by Dfinity, but we'll see if a team takes on the challenge.

-------------------------

rdobrik | 2022-04-22 02:53:54 UTC | #34

Dfinity Grants are excellent way to kickstart the IC project, but I do not think they are long term solution for infrastructure projects like this. First, you need top-notch developers, EVM has to be extremely stable, efficient and secure. Second, long term cost of maintenance (support, patches, upgrades) is much higher than initial development. So now we should talk about business model behind EVM, is there any? It has to be open source, cannot charge for it. Maybe there is other potential source of revenue. I am just asking, because facing similar issue, working on Java Agent SDK. We received Dfinity grant and we are grateful for that, huge help. But looking for sustainable way how to maintain the project long term. I know, SDKs Adapters are not big money makers, nobody makes money on MySql JDBC adapter for example.

-------------------------

skilesare | 2022-04-22 04:34:05 UTC | #35

The Evm could use something like the ARAMAKME license and get cycles for every transaction that goes through contributed to a development dao. Once cycles get valuable it would be a decent form of capital for maintenance and improvement proposals. Some folks don’t like the idea,  but I think this is a perfect example of where it makes sense as long as we can make sure it is decentralized enough.

-------------------------

domwoe | 2022-04-22 07:25:03 UTC | #36

Interestingly, teams on other platform were able to raise quite some money, but I haven't dug deep on their model:

https://www.coindesk.com/tech/2021/10/14/nears-aurora-raises-12m-to-expand-ethereum-layer-two-network/

https://www.coindesk.com/business/2021/11/09/neon-labs-raises-40m-to-bring-evm-functionality-to-solana/

So, could be interesting for a team to take on this challenge ;)

Secondly, it might be possible to spread some of the maintenance work, e.g. Aurora uses SputnikVM, the Rust implementation of the EVM (mostly) maintained by ETH Classic. This might be a basis for ICEVM as well.

https://github.com/rust-blockchain/evm

-------------------------

dieter.sommer | 2022-07-04 12:55:15 UTC | #37

After a (too) long break from my side on this issue due to my attention having been focussed on other projects, let me announce a community conversation about the EVM on the IC.

The talk will take place this coming **Thursday, July 7, 18:00 - 19:00 CEST (UTC+2)**. Looking forward to many of you joining in the talk and discussions!

See the following link for the announcement: https://dfinity.org/conversations/#EVM-on-the-IC

-------------------------

dieter.sommer | 2022-07-07 13:11:26 UTC | #38

Due to sick leave on my side, the talk needs to be moved on short notice.
Apologies!

-------------------------

skilesare | 2022-07-10 23:20:23 UTC | #39

I’m sorry you were sick, but glad I’ll get to attend. :slight_smile: Can’t wait for this feature!

-------------------------

dieter.sommer | 2022-07-20 09:48:32 UTC | #40

The Community Conversation has been moved to **Wednesday, July 20, 18:30 - 19:30 CEST (UTC+2)**.

See here for the full announcement: https://internetcomputer.org/live-sessions/#Community-Conversation:-ICEVM-Towards-an-Ethereum-Virtual-Machine-on-the-Internet-Computer

-------------------------

Zane | 2022-07-20 21:42:37 UTC | #41

After giving it some thought I'm not completely sure an icEVM would provide significant benefits and attract devs from other ecosystems, don't get me wrong I'm very much interested in the possibility of having an EVM on IC, but I can't help having some skepticism, why is that:

* icEVM would be a huge endeavour, it's most likely a multi year project, time and money that could be spent working on other projects aimed at making the IC dev experience better instead of porting legacy tech, which might potentially fragment the ecosystem and damage interoperability by encouraging newcomers to rely on EVM instead of leveraging the new cutting edge stuff built by Dfinity. 

* icEVM will have many drawbacks, some fixable other not so much. Dieter explains all of them in the presentation, a brief summary: a single canister icEVM will obviously be limited in tps and scaling it will be complex, some easier solutions are possible (sharding) but at the cost of interoperability, running in a canister means there will be an overhead, tokens will have to be wrapped, etc...

* While the idea of having everything you need on 1 chain is compelling, there is always the risk of becoming a jack of all trades and master of none, in case of ICP why would devs want to use our icEVM instead of Polygon's zkEVM? It inherits ETH's security and decentralization, which is unmatched and largely superior to ICP's while providing the same level of scalability as icEVM if not greater.
You might say: ICP has more than that: on chain frontend, file hosting, II, reverse gas model, etc...
But what's stopping devs from using ETH's rollups to handle part of their business logic and rely on IC for everything else, effectively getting the best of both worlds? The only benefit of using icEVM might be reverse gas model, but ETH might also get something similar in the future with meta transactions, so I don't see it as enough to compromise on security.

-------------------------

skilesare | 2022-07-21 14:13:09 UTC | #42

[quote="Zane, post:41, topic:11970"]
icEVM would be a huge endeavour, it’s most likely a multi year project, time and money that could be spent working on other projects aimed at making the IC dev experience better instead of porting legacy tech, which might potentially fragment the ecosystem and damage interoperability by encouraging newcomers to rely on EVM instead of leveraging the new cutting edge stuff built by Dfinity.
[/quote]

I was a bit distracted during the presentation and had to drop due to another meeting, so I need to watch the replay.  Dieter did an amazing job of showing the whole ecosystem of things that *could* be done and he eventually distilled it down to the least common implementation, but I think that it would be easy to miss the forest for the trees if this was your first time thinking about the problems. 

I think there is a minimum viable implementation that gets you 80% of the way to a great solution and 100% to a 'good enough' solution.  And by good enough here I mean giving the thousands of available solidity contracts in the public domain a place to run on the IC and the attention of 100x developers.

What is missing from the following list:

1. Build the yellow paper opcodes into a canister. (it was mentioned that rust would be more performant, but I actually thought that motoko was faster for a number of things...I'd be interested in the comparison and performance concerns here).
2. Save the state into a canister (ICDevs is sponsoring a bounty to build some of the necessary tools https://icdevs.org/bounties/2022/02/24/EVM-Witness-Library.html) in eth format.
3. Build an archive scheme similar to the ledger canister that pushes old state to archive canisters. (This could get a bit chippy with the need to update Merkle trees across canisters, but not an impossible thing to do.
4. Add an endpoint to ICX proxy that will convert whatever the ETH rpc scheme is into canister calls.

I think the above gets you a deployable evm that can load and run existing smart contracts running on top of the IC security model instead of the PoW or upcoming PoS security model. It will be faster than Ethereum by a couple of orders of magnitude and really useful for a number of defi applications that interact with other evm chains.

I have been asked multiple times if projects could port their Solidity-based NFT project to the IC without making changes.  This would enable that...and while it doesn't use the full power of the IC it at least proves the use case.

To be blunt I was shocked that this functionality wasn't available on day 1 the network was released. It would have made quite a splash.

If the community needs a way to make this profitable and attractive to devs to work on I think that https://icdevs.org/bounties/2022/02/26/Bitcoin-on-the-IC-Reference-Implementation.html may have some potential strategies on how to do so.

-------------------------

Zane | 2022-07-21 14:57:09 UTC | #43

[quote="skilesare, post:42, topic:11970"]
I think there is a minimum viable implementation that gets you 80% of the way to a great solution and 100% to a ‘good enough’ solution
[/quote]

Even a MVP is a huge task and it'd take ~1 year according to previous Dfinity's estimates, the complexity, time and cost required to build it are just one of the reason i'm skeptic about it: incentivizing newcomers to stick with what they know or straight up port over existing code might seem compelling but imo it would only hinder interoperability and create more problems to be solved down the line, which based on who you ask might be worth the increased adoption, something I also have doubts about as explained in my 3rd point, Polygon's zkEVM  is *supposed* to have 2k tps, which is more than 2x the current capacity of a subnet, while still benefitting from ETH's decentralization and security.

-------------------------

Maxfinity | 2023-11-16 21:45:23 UTC | #44

IC EVM is here  with https://bitfinity.network

-------------------------

