ccyanxyz | 2022-02-09 09:40:03 UTC | #1

Hi, in motoko, if we perform a cross-canister call and don't want the await call to block execution, we can use `ignore`:
```
ignore canisterB.call(params);
```
Is there any method in Rust to achieve the same thing?

-------------------------

paulyoung | 2022-02-09 09:39:50 UTC | #2

In Rust or Motoko you can do `let _ = …;` to achieve the same thing.

I’m pretty sure all of these approaches, including `ignore`, just discard the result and don’t change anything about whether something is blocking or not.

-------------------------

ccyanxyz | 2022-02-09 10:01:40 UTC | #3

Oh sorry, I think I put it wrong. 
In motoko we can do cross-canister call without the `await` in front of the call, the request will be sent and the execution is not blocked: 
```
await canisterB.call(params); // wait for result
canisterB.call(params); // don't wait for result, the request is sent
```
in rust we have to add `.await`, if not, the request is not sent, but if we have `.await` then it blocks the execution. I was wondering if we can do the same in rust, send the request but do not wait for result. (correct me if I'm wrong :pray:)

-------------------------

paulyoung | 2022-02-09 17:14:22 UTC | #4

I think you’re looking for `ic_cdk::spawn`

-------------------------

ccyanxyz | 2022-02-10 03:18:28 UTC | #5

thank you! I'll have a try.

-------------------------

