ZhenyaUsenko | 2023-01-23 18:10:12 UTC | #1

Recently I've faced with an error 

`type error [M0139], inner actor classes are not supported yet; any actor class must come last in your program`

If I understand the description correctly, you can only go 1 level deep when importing actors. Meaning you can not import other actors in an actor that is being imported? Is that correct?

In my case, I am only accessing imported actor's type on the level 2.

What are the limitations for this? Are there any plans to allow it in the future (at least the ability to access actor's type without being able to instantiate it)?

-------------------------

claudio | 2023-01-24 15:15:01 UTC | #2

No, this should work provided each actor class is in a separate file, imported from its dependents. 

You can not have any recursion though, and each class increases the size of the final binary significantly.

If you can share an example that doesn't work I can hopefully fix it.

-------------------------

matthewhammer | 2023-01-24 14:18:11 UTC | #3

[quote="claudio, post:2, topic:18135"]
You can have any recursion though
[/quote]

To clarify: Recursion is *not* permitted.  (I think Claudio meant "cannot have" in place of "can have")

> If you can share an example that doesnâ€™t work I can hopefully fix it.

Yes, especially if you have trouble resolving mutual recursion among separate files.  There may be another way to structure the definitions to resolve it.

-------------------------

ZhenyaUsenko | 2023-01-24 14:39:58 UTC | #4

I have **actor A** that imports **actor B** and **actor C**

At the same time **actor B** imports **actor C**

As I understood it is is *not* permitted currently. Correct?

-------------------------

ZhenyaUsenko | 2023-01-24 14:50:06 UTC | #5

I am discussing with @skilesare how I can share an example.

-------------------------

claudio | 2023-01-24 15:17:30 UTC | #6

[quote="matthewhammer, post:3, topic:18135, full:true"]
[quote="claudio, post:2, topic:18135"]
You can have any recursion though
[/quote]

To clarify: Recursion is *not* permitted.  (I think Claudio meant "cannot have" in place of "can have")
[/quote]

Right - sorry about that. I have a nasty habit of omitting the crucial word sometimes.

-------------------------

claudio | 2023-01-24 15:20:02 UTC | #7

[quote="ZhenyaUsenko, post:4, topic:18135, full:true"]
I have **actor A** that imports **actor B** and **actor C**

At the same time **actor B** imports **actor C**

As I understood it is is *not* permitted currently. Correct?
[/quote]

That should actually be ok. A cut down example of your code might help. Easier would be to construct it in the Motoko playground and "share" a link.

https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/

The actor class example is close to what you were describing originally.

-------------------------

ZhenyaUsenko | 2023-01-24 15:21:35 UTC | #8

@claudio Austin should share the repo with you soon, so you can take a look.

-------------------------

claudio | 2023-01-24 15:35:23 UTC | #9

https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app/?tag=4047242076 is an example you can play with.

(I took the Map example and add a second actor class, Classes.Class)

-------------------------

ZhenyaUsenko | 2023-01-24 15:48:06 UTC | #10

Thanks. The repo https://github.com/ORIGYN-SA/events/tree/feat/PRD-11-distributed-events-processing was shared with you. Would be great if you could take a look when you have time.

-------------------------

ZhenyaUsenko | 2023-01-26 13:47:46 UTC | #11

@claudio I've found what caused the problem

![image|690x239](upload://yPCswHNnn0hGrIcDYXSR0geg0By.png)

the line `let Types = MigrationTypes.Types;` which I moved inside actor class declaration

I think the error message was a bit misleading

-------------------------

ZhenyaUsenko | 2023-01-26 16:25:07 UTC | #12

However I've ran into another one right after that

```
Stderr:
Ill-typed intermediate code after Async Lowering (use -v to see dumped IR):
/home/zhenya/Documents/events/src/actors/Main/modules/init.mo:119.11-119.73: IR type error [M0000], subtype violation:
  (BroadcastIdsResponse__44 -> (), Error -> ()) -> {#schedule : () -> (); #suspend}
  (() -> (), Error -> ()) -> {#schedule : () -> (); #suspend}

Raised at Ir_def__Check_ir.error.(fun) in file "ir_def/check_ir.ml", line 95, characters 30-92
Called from Ir_def__Check_ir.check_exp.(<:) in file "ir_def/check_ir.ml" (inlined), line 367, characters 19-45
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 697, characters 4-17
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 391, characters 4-32
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 706, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 391, characters 4-32
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 695, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_comp_unit in file "ir_def/check_ir.ml", line 1148, characters 4-23
Called from Ir_def__Check_ir.check_prog in file "ir_def/check_ir.ml", line 1167, characters 6-28
```

-------------------------

claudio | 2023-01-26 19:06:54 UTC | #13

Ouch, that's not good.

Is there a branch of the repo I can use to reproduce this?

And which version of moc or dfx are you using?

-------------------------

claudio | 2023-01-26 19:11:41 UTC | #14

> I think the error message was a bit misleading

Indeed. I'll file an issue.

https://github.com/dfinity/motoko/issues/3739

-------------------------

ZhenyaUsenko | 2023-01-26 19:55:09 UTC | #15

[quote="claudio, post:13, topic:18135"]
Is there a branch of the repo I can use to reproduce this?

And which version of moc or dfx are you using?
[/quote]

Here is a link to the branch

https://github.com/ORIGYN-SA/events/tree/feat/PRD-11-distributed-events-processing

I am using moc 7.5

-------------------------

claudio | 2023-01-26 19:58:29 UTC | #16

Yeah, I found it.

Does the bug disappear if you define:

actors/SubscribersStore/interface.mo
```
module {
  public type SubscribersStore = actor {
    addBroadcastIds: shared (params: Config.BroadcastIdsParams) -> async Config.BroadcastIdsResponse;
...
```

```
module {
  public type SubscribersStore = actor {
    addBroadcastIds: shared (params: Config.BroadcastIdsParams) -> async ();
    ...
```

I expect the problem is to do with the special case that the response type is `()`, but hidden under a type definition.

-------------------------

claudio | 2023-01-26 22:39:33 UTC | #17

Ok, I think I've got a small reproducible:

https://github.com/dfinity/motoko/issues/3740

Might take a while to fix. Can you avoid it by just inlining the `()` instead of using the type abbreviation for now?

-------------------------

ZhenyaUsenko | 2023-01-26 20:55:05 UTC | #18

Claudio, thanks for investigation and quick response! Will inline it as a temporary solution.

-------------------------

ZhenyaUsenko | 2023-02-14 17:47:30 UTC | #19

@claudio I've found another one
```
Stderr:
Ill-typed intermediate code after Async Lowering (use -v to see dumped IR):
(unknown location): IR type error [M0000], subtype violation:
  (() -> (), Error -> ())
  (None -> (), Error -> ())

Raised at Ir_def__Check_ir.error.(fun) in file "ir_def/check_ir.ml", line 95, characters 30-92
Called from Ir_def__Check_ir.check_exp.(<:) in file "ir_def/check_ir.ml" (inlined), line 367, characters 19-45
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 403, characters 10-27
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 706, characters 4-22
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 696, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 746, characters 4-23
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 391, characters 4-32
Called from Ir_def__Check_ir.check_exp in file "ir_def/check_ir.ml", line 778, characters 4-40
Called from Ir_def__Check_ir.check_dec in file "ir_def/check_ir.ml", line 1086, characters 4-21
Called from Stdlib__list.iter in file "list.ml", line 110, characters 12-15
Called from Ir_def__Check_ir.check_comp_unit in file "ir_def/check_ir.ml", line 1148, characters 4-23
Called from Ir_def__Check_ir.check_prog in file "ir_def/check_ir.ml", line 1167, characters 6-28
```
Reproduction code
```
import Debug "mo:base/Debug";

shared (deployer) actor class Test() {
  public shared (context) func test(): async () {
    await async {
      Debug.trap("");
    };
  };
};
```

-------------------------

claudio | 2023-02-18 10:55:11 UTC | #20

Ohoh. Will investigate.
https://github.com/dfinity/motoko/issues/3819

-------------------------

ZhenyaUsenko | 2023-02-18 17:50:58 UTC | #21

@claudio Thanks. Could you please also check this one. I am not sure if it's a bug or not

https://m7sm4-2iaaa-aaaab-qabra-cai.ic0.app/?tag=2410044827

It is impossible to call **testUnit** method in playground. If you deploy it locally you will be able to call this method with zero arguments from other canisters, but if you try to call it from command line, you will need to provide a single **null** argument

-------------------------

claudio | 2023-02-20 23:22:01 UTC | #22

@chenyan could this be a Motoko2Candid  issue? It there some special translation of the empty Motoko tuple to `null`?

-------------------------

chenyan | 2023-02-20 23:43:11 UTC | #23

Might be a Candid UI bug. You can call that method from dfx via `dfx canister call wmfrn-xyaaa-aaaab-qadea-cai testUnit '(null)' --network ic`. When calling from another canister, I think you still need to provide the `null` argument. Candid subtyping doesn't allow omitting the `null` type in arguments.

-------------------------

