AdamS | 2024-04-02 16:13:58 UTC | #1

## Dfx 0.19.0 is promoted. You can read the release notes [here](https://github.com/dfinity/sdk/releases/tag/0.19.0).

This release includes a new `--output json` flag to `dfx canister call`, removing the need to pipe to `idl2json`. JSON format is also used for `dfx ping`. Candid assist mode can now be set to always-on with `--always-assist`, where previously all-optional arguments would be set to `null`. 

This release also contains the first beta for the cycles ledger; this is still experimental, but you can enable it by setting the environment variable `DFX_CYCLES_LEDGER_SUPPORT_ENABLE`, which will affect any command that would normally use cycles. When fully supported, the cycles ledger enables users to hold cycles instead of using a cycles wallet.

Please let us know if you run into any problems.

-------------------------

borovan | 2024-04-02 16:59:04 UTC | #2

```
Apr 02 16:56:53.150 ERRO s:7wqzc-t5wup-ysni3-xmn7x-s7r6l-gvg6t-hjsy2-akfui-oid33-l7jqn-vqe/
n:ckc7s-mn4fb-l5pwv-wv6iu-py7os-sdqoc-uznwl-dtdaa-brgwr-cp56u-aqe/ic_query_stats/state_machine 
Received duplicate query stats for canister bnz7o-iuaaa-aaaaa-qaaaa-cai from same proposer ckc7s-mn4fb-l5pwv-wv6iu-py7os-sdqoc-uznwl-dtdaa-brgwr-cp56u-aqe.
This is a bug, possibly in the payload builder.
```

I think this may be a bug, possibly in the payload builder.

-------------------------

AdamS | 2024-04-02 17:00:09 UTC | #3

Was this with `dfx start --clean`, or just with `dfx start`?

-------------------------

borovan | 2024-04-02 17:07:06 UTC | #4

I thought I had done --clean, so I just stopped, deleted .dfx and did the whole process again, and it's not appearing.

So yeah, probably wasn't with --clean

EDIT: a minute later...

Apr 02 17:06:27.868 ERRO s:jufof-vrfpp-5kmqf-oaqhe-7uco6-pe3ap-mcyay-qz6eg-lfe56-5bwoi-pae/n:wtocv-4tcjc-tkf5a-akqnf-pvnx7-zcaz2-vrwzg-sj7eb-vyumr-qz2vi-4qe/ic_query_stats/state_machine Received duplicate query stats for canister bnz7o-iuaaa-aaaaa-qaaaa-cai from same proposer wtocv-4tcjc-tkf5a-akqnf-pvnx7-zcaz2-vrwzg-sj7eb-vyumr-qz2vi-4qe.This is a bug, possibly in the payload builder.

-------------------------

domwoe | 2024-04-02 19:31:47 UTC | #5

Has this issue with the Bitcon canister been addressed as well:

https://forum.dfinity.org/t/btc-integration-canister-endpoints-not-returning-expected-results/28395/2?u=domwoe

I assume that this is the reason the Bitcoin canister was downgraded in this release, but might be useful to make this explicit.

-------------------------

lwshang | 2024-04-02 23:21:30 UTC | #6

> I assume that this is the reason the Bitcoin canister was downgraded in this release, but might be useful to make this explicit.

That's correct. We downgraded the bundled bitcoin integration canister in dfx v0.19.0 to address the linked issue.

-------------------------

ilbert | 2024-04-03 07:56:12 UTC | #7

Same here: I'm getting this error message every ~5 minutes even if the deployed canister doesn't receive any method call.
I've started the replica with `dfx start --clean --host 0.0.0.0:4943`.

-------------------------

Severin | 2024-04-03 11:35:37 UTC | #8

Internal comment on the error message:

> Just FYI this bug has no adverse effects, it might just possibly waste some block space.

Still not nice to see it...

-------------------------

lastmjs | 2024-04-03 13:29:04 UTC | #9

[quote="borovan, post:4, topic:29268"]
This is a bug, possibly in the payload builder.
[/quote]

I also ran into this error as described here: https://forum.dfinity.org/t/embedding-wasm-dfx-0-17-0-crashing-where-previous-version-works/27916/13

-------------------------

