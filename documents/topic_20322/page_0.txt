saikatdas0790 | 2023-05-30 09:38:53 UTC | #1

We are trying to submit our wallet principal to get whitelisted to begin our SNS decentralization process.

However, we are struggling to figure out the exact step by step process on how to get this done.

We have managed to figure out some parts of our queries by looking at [this](https://github.com/dfinity/sns-testing/blob/e52799f2c4102d45df4a418d30eb9e561e7641a3/deploy_sns.sh#L18-L23)

But we have the following additional questions:
- Do we have to create a neuron first with the principal whose wallet principal ID is being whitelisted? How would the neuron creation work if the identity being used is from the CLI? We need some guidance. Till now, we’ve just used the NNS UI to create neurons if we needed one
- Is there any specifics of the neuron we should be aware of? Amount of ICP it needs to have staked? Stake dissolve delay?
- What is test-neuron-proposer?
- What is the exact value of nns-url that should be passed for mainnet?
- Do the proposal title and proposal summary support Markdown? Is that what we're supposed to use?

Appreciate any and all help provided.

Thoughts? @lara @domwoe @Severin

-------------------------

lara | 2023-05-30 09:47:42 UTC | #2

> Do we have to create a neuron first with the principal whose wallet principal ID is being whitelisted? 

The neuron does not need to have any connection to the wallet ID or the principal who owns the wallet. Any neuron can submit the proposal. 

> Is there any specifics of the neuron we should be aware of? Amount of ICP it needs to have staked? Stake dissolve delay?

The neuron needs at least 10 ICP to submit a proposal (this is the fee, which will be paid back if the proposal is adopted). The dissolve delay needs to be at least 6 months for the neuron to be eligible to vote.

-------------------------

mraszyk | 2023-05-30 10:01:25 UTC | #3

> What is test-neuron-proposer?

With this `ic-admin` flag, the NNS proposal is submitted on behalf of an NNS neuron with a fixed and publicly known ID and controller that always exists in test environments and has a majority of voting power by default (unless new big NNS neurons are created).

> What is the exact value of nns-url that should be passed for mainnet?

The IC url would do, e.g., `https://ic0.app`.

> Do the proposal title and proposal summary support Markdown? Is that what we’re supposed to use?

This is a matter of rendering the proposal in the respective frontend. From the NNS/SNS perspective, the proposal title and summary and just strings of UTF-8 characters. I'm not sure what encoding are nicely rendered in, e.g., nns-dapp or quill.

-------------------------

lara | 2023-05-30 10:06:12 UTC | #4

[quote="saikatdas0790, post:1, topic:20322"]
How would the neuron creation work if the identity being used is from the CLI?
[/quote]

For this you should be able to add your DFX identity as a hotkey for the neuron created in the NNS frontend dapp. A hotkey has the permission to send a proposal in the name of a neuron.
Then ic-admin could make a proposal when given the .pem key of your DFX principal.

-------------------------

megrogan | 2023-05-30 10:11:24 UTC | #5

Yes markdown will be fine. You can see the sns-w proposal for OpenChat rendered in OpenChat and the NNS dapp:

https://oc.app/labxu-baaaa-aaaaf-anb4q-cai/2166
https://dashboard.internetcomputer.org/proposal/108634

-------------------------

saikatdas0790 | 2023-05-30 14:38:05 UTC | #6

[quote="mraszyk, post:3, topic:20322"]
With this `ic-admin` flag, the NNS proposal is submitted on behalf of an NNS neuron with a fixed and publicly known ID and controller that always exists in test environments and has a majority of voting power by default (unless new big NNS neurons are created).
[/quote]

Confirming that this isn't required for the mainnet proposal submission, right?

-------------------------

saikatdas0790 | 2023-05-30 14:39:39 UTC | #7

[quote="lara, post:4, topic:20322"]
Then ic-admin could make a proposal when given the .pem key of your DFX principal.
[/quote]

The identity I'm looking to use to submit the proposal is stored with my OS keyring. I will have to export it as plaintext for this to work, right?

-------------------------

mraszyk | 2023-05-30 14:49:04 UTC | #8

> Confirming that this isn’t required for the mainnet proposal submission, right?

Indeed, --test-neuron-proposer is not supposed to work on mainnet.

-------------------------

msumme | 2023-05-30 18:20:41 UTC | #9

[quote="saikatdas0790, post:7, topic:20322"]
The identity I’m looking to use to submit the proposal is stored with my OS keyring. I will have to export it as plaintext for this to work, right?
[/quote]

Yes, if you want to use the `--pem` option, you will need to have a plaintext version of the key.  ic-admin also supports HSM keys as well.  I am not sure how to sign messages from a key on the OS keyring - I do not think that is currently supported with ic-admin at least.

A hotkey controller (one that can vote for the same neuron) can also submit proposals on that neuron's behalf.  You could register a hotkey for a different local PEM for the neuron in question, and then use that hotkey to submit the proposal using the neuron that is controlled by the key on the OS keyring.

If you use a hotkey to submit the proposal, it could solve your problem without needing to extract the controller pem into plaintext

-------------------------

curry | 2023-05-31 03:50:00 UTC | #10

[ICLighthouse](https://avjzx-pyaaa-aaaaj-aadmq-cai.raw.ic0.app/) support pem file login. You can [create neuron](https://avjzx-pyaaa-aaaaj-aadmq-cai.raw.ic0.app/nns/neuron) and make proposal.

-------------------------

saikatdas0790 | 2023-05-31 10:51:59 UTC | #11

Hi @lara @Severin @mraszyk 

Our final proposal looks like this:

```bash
ic-admin  \
   --nns-url "https://ic0.app" propose-to-update-sns-deploy-whitelist  \
   --secret-key-pem ./sns/identity.pem \
   --added-principals "pheyl-kaaaa-aaaap-aatga-cai"  \
   --proposer "15353467365037692422" \
   --proposal-title "Enable principal pheyl-kaaaa-aaaap-aatga-cai in SNS-W to initiate the generation of an SNS for OpenChat"  \
   --summary "The proposal offers the Hot or Not dApp to the NNS to be turned into a decentralized service by creation of an SNS to govern the Hot or Not dApp canisters.

## Who sent this proposal?

This proposal is sent by Hot or Not development team. Hot or Not is [**a fully featured short-video social media platform**](https://hotornot.wtf/) running on Internet Computer. The project is presents in [**this whitepaper**](https://www.notion.so/Hot-or-Not-Whitepaper-c539179e51f44867979f4372e4635f59).

## What is the purpose of this proposal?

The Hot or Not development team collaborates with the NNS to transform the Hot or Not app into a decentralized service through the establishment of [**a Service Nervous System (SNS) DAO**](https://internetcomputer.org/sns), which serves as the governing body for Hot or Not. The application comprises numerous canisters, and the SNS assumes direct control over the following Hot or Not canisters:

- Website asset canister (vyatz-hqaaa-aaaam-qauea-cai)
- Configuration canister (efsfj-sqaaa-aaaap-qatwa-cai)
- Data backup canister (jwktp-qyaaa-aaaag-abcfa-cai)
- Post Cache canister (y6yjf-jyaaa-aaaal-qbd6q-cai)
- User Index canister(rimrc-piaaa-aaaao-aaljq-cai)

All of the other canisters are in turn controlled by one of the above listed canisters and would thus also be indirectly controlled by the SNS.

If this proposal is approved, the NNS mandates that the necessary steps to create a [**Service Nervous System (SNS) DAO**](https://internetcomputer.org/sns) to govern Hot or Not are taken.

## What is the technical effect of this proposal?

Adoption of the proposal will enable and mandate installation of the required SNS canisters on the SNS subnet. These SNS canisters will be in a pre-decentralization-sale mode with limited capabilities and where tokens cannot be moved until the decentralization sale is completed. Technically, the proposal’s effect is that the cycles wallet with principal ID **pheyl-kaaaa-aaaap-aatga-cai**, which is controlled by Hot or Not, will get the ability to make a call to the SNS wasm modules canister (SNS-W) to install SNS canisters. This privilege is a one-time occurrence, as it will be revoked after the call is made.

## What is this proposal not about / what will be decided in a second, future proposal?

This proposal does not yet include any concrete parameter choices for the Hot or Not SNS. These parameters will be contained in an upcoming second NNS proposal to initiate the Hot or Not decentralization sale and SNS DAO creation and thus can be checked and voted on at that time together with the conditions for the decentralization sale.
"
```

Can you please clarify the following?
- Is the formatting on the proposal summary correct and as expected by `ic-admin`? Since this is an actual proposal there's significantly more content and formatting with newlines and spaces. Are there specific characters that need to be escaped?
- The heading that shows up on the NNS/Dashboard is the summary, right? We have assumed as such and created the above
- We have setup the principal of the local identity that will be submitting the proposal by adding it to to a neuron with the requisite ICP amount. How do we specify it as a parameter in the proposal? It's `--proposer`, right?

-------------------------

mraszyk | 2023-05-31 12:35:14 UTC | #12

> How do we specify it as a parameter in the proposal? It’s `--proposer`, right?

You need to pass the PEM file of the key associated with your identity using the flag `--secret-key-pem`.

And then specify the neuron using `--proposer`:

```
        --proposer <PROPOSER>
            The id of the neuron on behalf of which the proposal will be submitted
```

-------------------------

mraszyk | 2023-05-31 12:36:08 UTC | #13

Regarding proposal formatting: aren't you able to check it in the NNS frontend dapp in local testing?

-------------------------

saikatdas0790 | 2023-05-31 12:38:08 UTC | #14

[quote="saikatdas0790, post:11, topic:20322"]
```
--secret-key-pem ./sns/identity.pem \
   --added-principals "pheyl-kaaaa-aaaap-aatga-cai"  \
   --proposer "15353467365037692422" \
```
[/quote]

This is how we are doing it right now. Like this, right?

-------------------------

saikatdas0790 | 2023-05-31 12:42:03 UTC | #15

You mean by manually editing the scripts inside the docker container?

-------------------------

mraszyk | 2023-05-31 12:52:54 UTC | #16

> You mean by manually editing the scripts inside the docker container?

Indeed, if you adjust the title and summary in `ic-admin`'s invocation in the script `sns-testing/deploy_sns.sh`, then you'd see the proposal in the NNS frontend dapp (you need to browse "executed proposals" because it's gonna be executed immediately by default in local testing).

-------------------------

mraszyk | 2023-05-31 12:53:18 UTC | #17

[quote="saikatdas0790, post:11, topic:20322"]
```
--secret-key-pem ./sns/identity.pem \
   --added-principals "pheyl-kaaaa-aaaap-aatga-cai"  \
   --proposer "15353467365037692422" \
```
[/quote]

This looks good to me.

-------------------------

saikatdas0790 | 2023-05-31 14:00:05 UTC | #18

For anyone seeing this thread,

The `--secret-key-pem` option needs to be along with `--nns-url` parameter as it is a global parameter part of the ic-admin CLI and the rest of the parameters come after the `propose-to-update-sns-deploy-whitelist` for the above to work.

Thank you @lara @mraszyk @Severin for the help. We managed to submit our proposal and it is live [here](https://dashboard.internetcomputer.org/proposal/122654) :slight_smile:

-------------------------

bjoernek | 2023-06-01 08:16:50 UTC | #19

@saikatdas0790 As a suggestion: Could you kindly share the final command which we you used in this thread, so that subsequent SNS projects have an example ? Many thanks in advance

-------------------------

saikatdas0790 | 2023-06-01 12:41:14 UTC | #20

@bjoernek Sure. Our final submission looked like this:

```bash
ic-admin  \
   --nns-url "https://ic0.app" \
   --secret-key-pem ./sns/identity.pem \
   propose-to-update-sns-deploy-whitelist  \
   --added-principals "pheyl-kaaaa-aaaap-aatga-cai"  \
   --proposer "15353467365037692422" \
   --proposal-title "Enable principal pheyl-kaaaa-aaaap-aatga-cai in SNS-W to initiate the generation of an SNS for Hot or Not"  \
   --summary "The proposal offers the Hot or Not dApp to the NNS to be turned into a decentralized service by creation of an SNS to govern the Hot or Not dApp canisters.

## Who sent this proposal?

This proposal is sent by Hot or Not development team. Hot or Not is [**a fully featured short-video social media platform**](https://hotornot.wtf/) running on Internet Computer. The project is presents in [**this whitepaper**](https://www.notion.so/Hot-or-Not-Whitepaper-c539179e51f44867979f4372e4635f59).

## What is the purpose of this proposal?

The Hot or Not development team collaborates with the NNS to transform the Hot or Not app into a decentralized service through the establishment of [**a Service Nervous System (SNS) DAO**](https://internetcomputer.org/sns), which serves as the governing body for Hot or Not. The application comprises numerous canisters, and the SNS assumes direct control over the following Hot or Not canisters:

- Website asset canister (vyatz-hqaaa-aaaam-qauea-cai)
- Configuration canister (efsfj-sqaaa-aaaap-qatwa-cai)
- Data backup canister (jwktp-qyaaa-aaaag-abcfa-cai)
- Post Cache canister (y6yjf-jyaaa-aaaal-qbd6q-cai)
- User Index canister(rimrc-piaaa-aaaao-aaljq-cai)

All of the other canisters are in turn controlled by one of the above listed canisters and would thus also be indirectly controlled by the SNS.

If this proposal is approved, the NNS mandates that the necessary steps to create a [**Service Nervous System (SNS) DAO**](https://internetcomputer.org/sns) to govern Hot or Not are taken.

## What is the technical effect of this proposal?

Adoption of the proposal will enable and mandate installation of the required SNS canisters on the SNS subnet. These SNS canisters will be in a pre-decentralization-sale mode with limited capabilities and where tokens cannot be moved until the decentralization sale is completed. Technically, the proposal’s effect is that the cycles wallet with principal ID **pheyl-kaaaa-aaaap-aatga-cai**, which is controlled by Hot or Not, will get the ability to make a call to the SNS wasm modules canister (SNS-W) to install SNS canisters. This privilege is a one-time occurrence, as it will be revoked after the call is made.

## What is this proposal not about / what will be decided in a second, future proposal?

This proposal does not yet include any concrete parameter choices for the Hot or Not SNS. These parameters will be contained in an upcoming second NNS proposal to initiate the Hot or Not decentralization sale and SNS DAO creation and thus can be checked and voted on at that time together with the conditions for the decentralization sale.
```

-------------------------

modclub | 2023-07-25 02:28:39 UTC | #21

Does the principal provided to `--added-principals` need to be from a wallet canister? Can we provide the principal from an identity, as long as its part of the hotkey of the proposer neuron?

-------------------------

saikatdas0790 | 2023-07-25 03:07:49 UTC | #22

I believe so. Primarily because the SNS canisters need to be funded with a total amount of 200T cycles (as far as I can recall) for deployment to the SNS subnet and this comes from the wallet that's specified and hence this wallet becomes the controller that's allowed to then deploy to the SNS subnet..

-------------------------

modclub | 2023-07-25 03:16:59 UTC | #23

Thank you that makes sense.

-------------------------

modclub | 2023-07-25 03:25:38 UTC | #24

@saikatdas0790 if using the wallet address, which pem file do you use? Will any pem file work as long as the identity is a controller of the wallet?

-------------------------

saikatdas0790 | 2023-07-25 03:30:15 UTC | #25

Yeah, it needs to be a controller of the wallet.

Needless to say, the wallet needs to be a mainnet wallet holding at least 200T cycles (confirm this amount from the docs)

Also, the identity's pem file needs to be stored in plaintext. Export and import your dfx stored identity using `--storage-mode plaintext` if it's not stored as plaintext but using your keyring/keychain. `quill` chokes on those, you'll need plaintext for quill/ic-admin

-------------------------

