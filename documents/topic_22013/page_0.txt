famouscat8 | 2023-08-08 14:57:19 UTC | #1

I want to build a app where my users can natively use the same `Principal` as my website from `Internet Identity`. Can i do this?
I found some tutorial in google's Android website. It says that app can use that same webauthn credential in some situations.

[Sign in your user with Credential Manager | Android Developers](https://developer.android.com/training/sign-in/passkeys)

-------------------------

kpeacock | 2023-08-08 21:59:21 UTC | #2

In order for this to happen, you'll need two things:
* The same "target" identity in both your website and your app
* The ability to delegate to your website via the browser + webauthn, and then to pass that delegation back to your app.

By default, the auth client will generate an `ECDSAKeyIdentity` for your user if none is available. This won't serve your purposes, since that API makes it non-exportable. 

Instead, you will want to create your shared identity first (maybe using a seed phrase with `Secp256k1KeyIdentity`) and then pass that during `AuthClient.create({identity})`

-------------------------

frederikrothenberger | 2023-08-09 07:07:50 UTC | #3

Hi @famouscat8 

Yes, this is possible. You can take a look at the [example here](https://github.com/dfinity/examples/tree/master/motoko/ios-notifications), to see how to integrate a native iOS app with Internet Identity.

Since you need to delegate to the browser anyway for the authentication flow, you just need to make sure that you use the same domain in both instances (or make use of the [alternative origins feature](https://internetcomputer.org/docs/current/references/ii-spec#alternative-frontend-origins)).

Note that your service does _not_ interact with WebAuthn credentials directly, if it authenticates via II (in that case II owns the credentials).

-------------------------

