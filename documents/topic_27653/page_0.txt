q2333gh | 2024-02-18 04:57:47 UTC | #1

I tried the code below. but none of it works.
```rust 
#[pre_upgrade]
#[trace]
fn pre_upgrade() {

//method1:
  use tokio::runtime::Runtime;
  let rt = Runtime::new().unwrap();
  rt.block_on(async {
    save_payload_to_dropbox();
  });
//wasm doesnt support this code above yet.

//or method2:
  save_payload_to_dropbox_blocking(); 
//use   
//`use futures::executor::block_on;
// match block_on(http_request(request, cycles))`  
//inside save_payload_to_dropbox_blocking()

//returns:
//Failed during wasm installation call: The replica returned a replica error:
//reject code CanisterError, 
//reject message Canister bkyz2-fmaaa-aaaaa-qaaaq-cai 
//violated contract: "ic0_call_new" cannot be executed in pre upgrade mode, 
//error code None
}
```

-------------------------

Severin | 2024-02-19 08:49:28 UTC | #2

No, `await` is forbidden in `init`, `pre_upgrade`, and `post_upgrade`

-------------------------

princess_eth | 2024-02-20 03:48:51 UTC | #3

What is the technical limitation that does not allow for an async function?

-------------------------

Severin | 2024-02-20 09:07:56 UTC | #4

It would break a bunch of guarantees you have right now. For example now you 100% can be sure that `init` is run to completion before any other function ever runs. 

But you can emulate an async-allowed function in these function (except `pre_upgrade`). If you set a timer to run in 0 seconds it'll run very soon and in there you're allowed to do async calls

-------------------------

q2333gh | 2024-02-20 09:57:59 UTC | #5

by the way. suggestions for viewers of this post: 
ic doc dont recommend do any err prone code in pre_upgrade .
cause if it fail during canister upgrade process. Things may get bad .
I am one of the silly guy write buggy code on production canister.
Still strive to fix it yet.

-------------------------

