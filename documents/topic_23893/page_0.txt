Jessie | 2023-10-19 22:54:55 UTC | #1

Hello everyone,

Today, we're excited to launch the Internet Computer Developer Journey tutorial series. This series contains written documentation and corresponding video tutorials that are designed to give both new and existing developers a clear learning path to develop on the Internet Computer. 

Starting at level 0 with an introduction to the Internet Computer, terminology, and setting up a developer environment, to level 5 that details building complex dapps, the Developer Journey contains essential information for developers of all skill levels.

Please feel free to use this forum post as a place to provide feedback on the series, ask questions, and connect with other developers on their developer journey! 

- [Developer journey documentation.](https://internetcomputer.org/docs/current/tutorials/developer-journey/)
- [Developer journey first video: 0.1 Overview of the Internet Computer](https://youtu.be/oBUpJ4CqmN0?si=nPdW5hDhav3My_S3)

-------------------------

josephgranata | 2023-10-20 16:26:48 UTC | #2

@Jessie,

It is wonderful to see DFINITY build a unified set of learning resources to get a developer from newbie to expert, or at least comfortable writing software for the Internet Computer. Now the only way to learn is to go through the docs, blog posts and presentations such as the Motoko Bootcamp.

I did notice a major gap though, there is no coverage of Rust at all. Rust is the most loved computer language 8 years in a row in StackOverflow:
https://survey.stackoverflow.co/2023/#section-admired-and-desired-programming-scripting-and-markup-languages

Rust is also one of the most used languages, very close to the Go language on many surveys, and popular among people who want a C / C++ alternative, and it is also heavily used by the DFINITY developers who are building this blockchain.

Please do add a plan to cover Rust for the IC, many developers will come from that background. Rust also opens unique opportunities for DAPP developers, such as using stable storage similar to a small database by using Stable Structures.

I noticed you use Space Cadet, Explorer, Engineer, and Pilot for the Motoko / IC learning levels. I suggest you keep those, they sound cool and welcoming; just have two tracks one for Motoko and another for Rust.

Thanks for this good news for the developer community!

-------------------------

Jessie | 2023-10-20 16:33:02 UTC | #3

Hi @josephgranata ,

Thank you for your input! You'll be glad to know that there are plans to do a Rust 'track' in the future, as well as tracks for BTC developers, ETH developers, and other more focused variations.

-------------------------

josephgranata | 2023-10-20 16:41:02 UTC | #4

Great news @Jessie!

As a soft way to remind the team to do so, I would suggest adding a track for Rust on the plan you already did here:

https://internetcomputer.org/docs/current/tutorials/developer-journey/

That way anyone discovering the page will know Rust support is coming in the developer journey, it will also make it obvious where the Rust pages are not available, I noticed there is much more hand holding and help for Motoko than Rust as of today.

My personal journey as a developer started with Motoko, but I am increasingly going more and more to Rust because I find more tools there, and it is easier to build our DAPP in Rust, many key features need Rust. If there had been resources for Rust from day one our level of skill would be much higher ;-)

Still we are very grateful for all that wonderful Motoko content, it is a beautiful language too.

-------------------------

Jessie | 2023-10-20 16:46:38 UTC | #5

That's a great idea, I will add info about the future tracks, including the Rust track, to the overview. I'm the primary contributor to the Developer Journey series currently, so I'll go ahead and make those additions in my next update. 

Could you share some of the key features that your dApp needed that were better supported in Rust? I want to make sure that when I begin writing the Rust track I am covering these aspects of the Rust development workflow.

-------------------------

josephgranata | 2023-10-20 17:00:32 UTC | #6

Sure, there are two features that are easier in Rust:

* The ability to have stable data structures to build a small database, or API for our users. We are using this: https://github.com/dfinity/stable-structures. This allows us to have canisters that can hold over 90 Gigabytes of data, and also to be able to upgrade the code without the need for pre-upgrade, post upgrade serialization that Motoko needs.
* ckBTC support and libraries are in Rust, so are the main examples: https://github.com/dfinity/ic/tree/master/rs/bitcoin/ckbtc/minter and https://internetcomputer.org/docs/current/developer-docs/integrations/bitcoin/ckbtc/

Those are the main two for us.

-------------------------

memetics | 2023-11-13 08:46:32 UTC | #7

It would be nice to see more in depth guides on how to launch an icrc-1 token, including logo on the IC. Make a YouTube video for dummies, I'm surprised this hasn't been done yet, including a way to launch tokens easier ( a dapp for launching icrc-1 tokens )

-------------------------

Jessie | 2023-11-13 14:40:19 UTC | #8

Hi @memetics ! I'm happy to share that how to launch an ICRC-1 token is part of the Developer Journey in the Level 4 section [here](https://internetcomputer.org/docs/current/tutorials/developer-journey/level-4/4.2-icrc-tokens), which will have a corresponding Youtube video to walk you through everything :slight_smile: .

-------------------------

memetics | 2023-11-13 18:06:37 UTC | #9

Looking forward to the video content

-------------------------

PiotrStyla | 2023-11-18 07:45:32 UTC | #10

Hello :) While tryong to install the package on Debian 10 I have received this info:
root@v2202302190634220118:~# dfx --version
dfx: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by dfx)
dfx: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.29' not found (required by dfx)
dfx: /lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.26' not found (required by dfx)

Could you pls assist?
Thank you!

-------------------------

PiotrStyla | 2023-11-18 08:26:26 UTC | #11

Hi again, already solved - reinstalled Debian and now working :slight_smile:

-------------------------

bluenose10 | 2024-01-19 12:02:44 UTC | #12

Hi Jessie, looks like the video series stops at 1.2 is there any news when any new tutorials will be uploaded. I have found them fantastic to behonest and being Dyslexic its hard to move forward with just reading documentation.  

The video tutorials that where available are now not on the docs page just get error message  

**"This content is blocked. Contact the site owner to fix the issue."**

Thanks

-------------------------

Jessie | 2024-01-19 14:43:44 UTC | #13

Hi @bluenose10, I'm glad to hear the video tutorials have been helpful! The next video will be released today (Friday, Jan 19), and we strive for a weekly upload of every Friday, however sometimes that may get delayed as it did last week. 

As for the videos within the docs, we recently switched to using YouTube's embedded videos and it appears that something went wrong with that, so thanks for letting us know and I'll take a look into it now :) 

Thanks!

-------------------------

northman | 2024-02-23 10:59:50 UTC | #14

**Section 3.5 Internet Identity issue**.

Multiple users have reported setting up the Internet Identity canister in section 3.5 fails because of an issue with the step requiring **dfx dep init** generates an Error.  

Is there an estimated time to resolution?

Thank you.

-------------------------

Severin | 2024-02-23 11:45:01 UTC | #15

This is most likely resolved here: https://forum.dfinity.org/t/what-means-this-error/27713/15

-------------------------

northman | 2024-02-23 12:09:04 UTC | #16

Thank you for the prompt response.  Works fine.

-------------------------

Jessie | 2024-02-23 18:08:38 UTC | #17

The tutorial has been updated to reflect the current workflow :slight_smile:

-------------------------

wabrocker | 2024-03-06 13:27:41 UTC | #18

Just a heads-up, the example code for Developer journey 3.2 src/http_get_backend/main.mo has several extraneous lines at the end repeating part of the public query func transform code.

-------------------------

Jessie | 2024-02-29 20:21:36 UTC | #19

Hey @wabrocker , thanks for letting us know! An update has been applied to the docs to fix this. 

Thanks!

-------------------------

CodeBlocker52 | 2024-04-15 19:25:14 UTC | #20

hey, @Jessie  , I am currently working on level 1.3of Developer Journey  i.e Developing your first dapp.
But, on running the cmd : dfx deploy , I am getting the folllowing error.
```error
Deploying all canisters.
Creating canisters...
Creating canister motoko_level1_backend...
Creating a wallet canister on the local network.
The wallet canister on the "local" network for user "default" is "bnz7o-iuaaa-aaaaa-qaaaa-cai"
motoko_level1_backend canister created with canister id: bkyz2-fmaaa-aaaaa-qaaaq-cai
Creating canister motoko_level1_frontend...
motoko_level1_frontend canister created with canister id: bd3sg-teaaa-aaaaa-qaaba-cai
Building canisters...
Building frontend...
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed to build all canisters.
    Failed while trying to build all canisters.
      The post-build step failed for canister 'bd3sg-teaaa-aaaaa-qaaba-cai' (motoko_level1_frontend) with an embedded error: Failed to build frontend for network 'local'.: The command 'cd "/mnt/k/developer_journey/motoko_level1" && CANISTER_CANDID_PATH="/mnt/k/developer_journey/motoko_level1/.dfx/local/canisters/motoko_level1_frontend/assetstorage.did" CANISTER_CANDID_PATH_MOTOKO_LEVEL1_BACKEND="/mnt/k/developer_journey/motoko_level1/.dfx/local/canisters/motoko_level1_backend/motoko_level1_backend.did" CANISTER_ID="bd3sg-teaaa-aaaaa-qaaba-cai" CANISTER_ID_MOTOKO_LEVEL1_BACKEND="bkyz2-fmaaa-aaaaa-qaaaq-cai" CANISTER_ID_MOTOKO_LEVEL1_FRONTEND="bd3sg-teaaa-aaaaa-qaaba-cai" DFX_NETWORK="local" DFX_VERSION="0.19.0" "npm" "run" "build"' failed with exit status 'exit status: 1'.
Stdout:

> prebuild
> npm run prebuild --workspaces --if-present


Stderr:
npm ERR! No workspaces found!
```
Also, I am using dfx version 0.19.0 and I chose Motoko for backend canister , and vanilla Js for frontend canister.
Could you please help me resolve the issue.
```package.json
{
    "name": "hello",
    "type": "module",
    "scripts": {
        "start": "npm start --workspaces --if-present",
        "prebuild": "npm run prebuild --workspaces --if-present",
        "build": "npm run build --workspaces --if-present",
        "pretest": "npm run prebuild --workspaces --if-present",
        "test": "npm test --workspaces --if-present"
    },
    "engines": {
        "node": ">=16.0.0",
        "npm": ">=7.0.0"
    },
    "workspaces": [ ]
}
```
Also, In my project setup , there is no webpack.config.js file but only package.json file with above code.
Do, I need to configure the workspace object in the json file so, that it can identify the frontend path?

-------------------------

Jessie | 2024-04-15 20:03:58 UTC | #21

Hey @CodeBlocker52, 

In the latest version of `dfx`, the default frontend project template uses a workspace setup. It's possible that you accidentally deleted the workspace but left the workspace-level scripts. 

You can regenerate the necessary files with the commands `dfx generate` and `tsc && vite build`.

Let me know if this helps!

-------------------------

CodeBlocker52 | 2024-04-16 13:28:53 UTC | #22

@Jessie  

 Yeah, I fixed that error, it was due to  node.js not installed in my wsl , so it couldn't geneate the frontend  set up with vite +tsc . But , I installed node.js and created the app and it's working.   Thanks.

But, now since the app is working , I have a couple of doubts. Could you plz.  clarify the same.
1. The Frontend of working is working at : http://127.0.0.1:4943/?canisterId=be2us-64aaa-aaaaa-qaabq-cai  but not working at path:  http://be2us-64aaa-aaaaa-qaabq-cai.localhost:4943/ . Don't know Why ?
 2. On running dfx deploy , it's auto generate a declarations folder which have poll_backend and poll_frontend as sub -directories. What is actual purpose of these folders in my code. and Is it a good practice to do any changes in these directory at some point if needed ?

-------------------------

Jessie | 2024-04-16 13:49:31 UTC | #23

1. This is related to your networks.json file in your dfx configuration. You will need to specify a custom network for localhost:4943 to work in addition to 127.0.0.1:4943: https://internetcomputer.org/docs/current/developer-docs/developer-tools/cli-tools/advanced-dfx/networks-json#defining-a-custom-network

2. These are for your Candid interface declaration files. When developing in Motoko, these are automatically generated and it is not recommended to edit these manually since dfx will overwrite any changes you make when your code is built. Candid is covered in 2.4 of the Developer Journey: https://internetcomputer.org/docs/current/tutorials/developer-journey/level-2/2.4-intro-candid#the-did-file

-------------------------

CodeBlocker52 | 2024-04-16 14:12:58 UTC | #24

@Jessie, 
I have located the netrwork.json file on my local system , using dfx cmd: 
```
dfx info networks-json-path
```
It returns me the path as follows:  /home/kundan/.config/dfx/networks.json
But,  when I am running cat cmd to see the code:
```
cat  /home/kundan/.config/dfx/networks.json
``` 
getting an error: cat: /home/kundan/.config/dfx/networks.json: No such file or directory
How, can I see that file and configure it's code from  my Vs code ?

-------------------------

Jessie | 2024-04-16 14:25:44 UTC | #25

`dfx info networks-json-path` shows where dfx is looking for the file, but doesn't necessarily mean that it currently exists. If it doesn't exist, you'll need to create a new file in that location.

-------------------------

CodeBlocker52 | 2024-04-16 17:17:29 UTC | #26

I have configured the networks.json  as follows:
```code
{
    "local": {
        "replica": {
            "subnet_type": "application"
        }
    },
    "network_1": {
        "bind": "localhost:4943",
        "replica": {
          "subnet_type": "application"
        }
      }
}
```
After that, I try to redeploy my poll dapp  on that network us:
```
dfx deploy --network network_1
```
But, the dapp is showing up but not working as expected.

-------------------------

Jessie | 2024-04-16 18:48:05 UTC | #27

@Severin Could you assist?

-------------------------

Severin | 2024-04-17 07:22:25 UTC | #28

[quote="CodeBlocker52, post:22, topic:23893"]
The Frontend of working is working at : http://127.0.0.1:4943/?canisterId=be2us-64aaa-aaaaa-qaabq-cai but not working at path: http://be2us-64aaa-aaaaa-qaabq-cai.localhost:4943/ . Don’t know Why ?
[/quote]

Which browser are you on? Safari does not support localhost subdomains.

-------------------------

CodeBlocker52 | 2024-04-17 16:52:32 UTC | #29

I am using Brave  Browser.

-------------------------

CodeBlocker52 | 2024-04-18 06:48:12 UTC | #30

@Severin 
On deploying my dapp on mainnet , I am getting the following error using cmd:
```
dfx deploy --network ic 
```
Output :
```

Building canisters before generate for Motoko
WARN: .did file for canister 'poll_frontend' does not exist.
Generating type declarations for canister poll_frontend:
Error: Failed while trying to generate type declarations for 'poll_frontend'.
Caused by: Failed while trying to generate type declarations for 'poll_frontend'.
  Candid file: /mnt/k/developer_journey/poll/.dfx/local/canisters/poll_frontend/assetstorage.did doesn't exist.
npm ERR! Lifecycle script `build` failed with error: 
npm ERR! Error: command failed 
npm ERR!   in workspace: poll_frontend@0.0.0 
npm ERR!   at location: /mnt/k/developer_journey/poll/src/poll_frontend 
```
Could you help me resolve this issue?

-------------------------

Abundanzini | 2024-04-19 18:24:15 UTC | #31

Is this group still active? Is there another group that is actively a helpful source for aspiring ICP developers to help each other?

-------------------------

Abundanzini | 2024-04-19 18:26:04 UTC | #32

Never mind. It looks like it's happening right here. Glad I found this group.

-------------------------

CodeBlocker52 | 2024-04-24 15:50:00 UTC | #33

@Jessie 
On deploying my dapp on mainnet , I am getting the following error using cmd:

```
dfx deploy --network ic 
```

Output :

```
Building canisters before generate for Motoko
WARN: .did file for canister 'poll_frontend' does not exist.
Generating type declarations for canister poll_frontend:
Error: Failed while trying to generate type declarations for 'poll_frontend'.
Caused by: Failed while trying to generate type declarations for 'poll_frontend'.
  Candid file: /mnt/k/developer_journey/poll/.dfx/local/canisters/poll_frontend/assetstorage.did doesn't exist.
npm ERR! Lifecycle script `build` failed with error: 
npm ERR! Error: command failed 
npm ERR!   in workspace: poll_frontend@0.0.0 
npm ERR!   at location: /mnt/k/developer_journey/poll/src/poll_frontend 
```

Could you help me resolve this issue?

-------------------------

Jessie | 2024-04-24 16:46:53 UTC | #34

It looks like the Candid file isn't being generated. Have you run `dfx generate`?

-------------------------

Abundanzini | 2024-04-29 16:13:09 UTC | #35

Related to tutorial 1.3, Developing your first app, the voting results field is not updating:

*Could not find a canister id to forward to.*

-------------------------

peterkayhi | 2024-05-30 06:13:01 UTC | #36

Great job Jessie and big mahalo for all your work here! I finished the Motoko Bootcamp and this Journey is cool because it really starts at square 1 and helps one setup a local dev environment. Love it! 

I'm on 1.3 and backend works great.  It's the frontend that's a problem. It seems that the more recent version of node.js/dfx creates a different file structure on a dfx new and a vanilla JS when I compare my tree to yours in the video. 
```
% npm -v
10.7.0

%node -v
v22.2.0

```
this is what gets created in the frontend/src:
```
ls -RF
assets/		package.json	tsconfig.json
index.html	src/		vite.config.js

./assets:
favicon.ico

./src:
App.js		index.scss	logo2.svg	main.js		vite-env.d.ts
 % 
```
and if you strictly follow the tut, it definitely breaks. I can mess with it and get the index.html to render but the buttons don't work. 

It's got to be such a pain to keep updating based on new versions. IMO cleaner and easier to stick to backend only and use Candid to test - save the agony of Node.js etc. 

Anyway, if there's an update LMK otherwise I'll just keep going and essentially ignore the frontend stuff if it keeps breaking like this (which is fine by me - it's motoko and ICP I care about anyway - never been much of a frontend guy as it is).

-------------------------

Jessie | 2024-05-30 14:24:56 UTC | #37

Hi @peterkayhi ! I appreciate the kind feedback and I'm glad you're enjoying the series! 

To get the frontend working, you can clone the [Github repo for the 1.3 project](https://github.com/jessiemongeon1/dev-journey-poll-dapp) and use that, since the file structure should still work as expected in that code.

Thanks!

-------------------------

peterkayhi | 2024-05-30 19:27:55 UTC | #38

awesome - now I know where the cheat codes are ! :)

-------------------------

peterkayhi | 2024-05-31 04:44:20 UTC | #39

looks like this repo needs webpack which was not originally called for (in 0.3). Pardon me for flying blind here - so I installed webpack using brew.  Details below - I'm at a loss on what's next - is the brew-based install a bad idea? (I followed your use of brew to install node.js) what do you recommend?


Now when deploying I get tons of errors but I think the key one is this:
```
Failed to load '/Users/dad/developer_journey/dev-journey-poll-dapp/webpack.config.js' config
[webpack-cli] Error: Cannot find module 'dotenv'
```
In case you want to see the rest of the blood and gore that followed: 
```
webpack-cli] Error: Cannot find module 'dotenv'
Require stack:
- /Users/dad/developer_journey/dev-journey-poll-dapp/webpack.config.js
- /opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/lib/webpack-cli.js
- /opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/lib/bootstrap.js
- /opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/bin/cli.js
    at Module._resolveFilename (node:internal/modules/cjs/loader:1186:15)
    at Module._load (node:internal/modules/cjs/loader:1012:27)
    at Module.require (node:internal/modules/cjs/loader:1271:19)
    at require (node:internal/modules/helpers:123:16)
    at Object.<anonymous> (/Users/dad/developer_journey/dev-journey-poll-dapp/webpack.config.js:1:1)
    at Module._compile (node:internal/modules/cjs/loader:1434:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1518:10)
    at Module.load (node:internal/modules/cjs/loader:1249:32)
    at Module._load (node:internal/modules/cjs/loader:1065:12)
    at Module.require (node:internal/modules/cjs/loader:1271:19) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [
    '/Users/dad/developer_journey/dev-journey-poll-dapp/webpack.config.js',
    '/opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/lib/webpack-cli.js',
    '/opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/lib/bootstrap.js',
    '/opt/homebrew/Cellar/webpack/5.91.0/libexec/lib/node_modules/webpack-cli/bin/cli.js'
  ]
}

```

-------------------------

Jessie | 2024-05-31 14:49:26 UTC | #40

Thanks for letting me know @peterkayhi, I'll take a look and push some changes to that repo so it works out of the box.

-------------------------

peterkayhi | 2024-05-31 17:25:00 UTC | #41

awesome! looking forward to continuing the journey - cycles loaded & ready!

-------------------------

peterkayhi | 2024-06-03 20:57:11 UTC | #42

any ETA on this? I can't move fwd until this gets resolved - if you don't have time to push an update just point me in direction to resolve the deploy error above

-------------------------

Jessie | 2024-06-03 21:12:24 UTC | #43

I plan to take a look at this tomorrow. I was attending a conference last week, so I didn't get a chance to look at it then. 

Your error suggests you may need to install the dotenv package. Here's some resources on dotenv that may help:

- https://www.npmjs.com/package/dotenv
- https://forum.dfinity.org/t/solved-frontend-not-communicating-with-mokoto-backend/28539/9

-------------------------

peterkayhi | 2024-06-04 03:10:12 UTC | #44

Thanks for the quick reply. I don't mean to be pushy - I'm simply excited and motivated to keep the momentum. 

I installed dotenv, then got errors for missing webpack. Installed webpack, then npm audit fix (apparently a few vulnerabilities) and only to get this error:  (hope this helps reduce your debug/workload with this phase). 
```
Installing code for canister poll_frontend, with canister ID bd3sg-teaaa-aaaaa-qaaba-cai
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed while trying to install all canisters.
    Failed to install wasm module to canister 'poll_frontend'.
      Failed during wasm installation call: The replica returned a rejection error: reject code CanisterError, reject message Only controllers of canister bd3sg-teaaa-aaaaa-qaaba-cai can call ic00 method install_code, error code Some("IC0512")
```

-------------------------

Jessie | 2024-06-04 18:45:26 UTC | #45

Hey @peterkayhi , I was able to get it running following these commands:

```
git clone https://github.com/jessiemongeon1/dev-journey-poll-dapp.git
cd dev-journey-poll-dapp
npm install
dfx start --clean --background
dfx deploy
```

Let me know if this works for you. Thanks!

-------------------------

peterkayhi | 2024-06-05 01:04:47 UTC | #46

worked great!  looks like from the above that the npm install has to be done in the code directory, right? also (note to self) the --clean is important.

I'm excited to be moving on now. thanks so much!

p.s. I did get these while doing the npm install. I know they are only warnings but hope it helps shed more light:
```
npm warn EBADENGINE Unsupported engine {
npm warn EBADENGINE   package: 'poll_frontend@0.2.0',
npm warn EBADENGINE   required: { node: '^12 || ^14 || ^16 || ^18' },
npm warn EBADENGINE   current: { node: 'v22.2.0', npm: '10.7.0' }
npm warn EBADENGINE }
```

-------------------------

peterkayhi | 2024-06-11 07:06:35 UTC | #47

Hi (again!) Jessie and hope these questions aren’t a pain. I ran into a few problems others will run into with the journey..   I spent as much time as I needed to get all the details and document them as best I could - trying to demonstrate that I really tried to figure this out.   I put the questions first and then all the details below - hope you can help resolve them or point me where I can go to get answers.

# **Summary Questions:**

### Q1: I’m assuming that unless we don’t want to burn through the 10TC, these canisters should be immediately stopped or even perhaps deleted right after they are deployed, correct?

### Q2: somehow the id got separated from the frontend canister - how can those get reconnected? 

### Q3: The example delete canister command errors out on my end both for front and backend.- how do I delete those canisters and at least reclaim xTC?

### Q4:Does this using the cycles wallet vs cycles ledger misconfiguration affect the above issues and is there anything I need to change going forward? How do canisters know to pull from one vs the other?

## Q1 Details: 

It seems the core issue is that completing 1.5 will leave you exposed to burning through your cycles unless you do 1.6 immediately afterwards.  I finished 1.5 on June 6 (Thursday) and by the time I resumed on Monday June 10 I was getting “out of cycles” errors.   **So referring to my Q1:** I’m assuming that unless we don’t want to burn through the 10TC, these canisters should be immediately stopped or even perhaps deleted right after they are deployed, correct?


## Q2 Details: 
So the first odd thing is that the canister status for –all returns an error for frontend, yet backend shows on the status:
```
Error: Failed to get canister status for 'poll_frontend'.
Caused by: Failed to get canister status for 'poll_frontend'.

```
But it’s definitely there because I saved the id:
3nstc-cqaaa-aaaak-akuqq-cai

```
dev-journey-poll-dapp % dfx canister status 3nstc-cqaaa-aaaak-akuqq-cai --network ic
Canister status call result for 3nstc-cqaaa-aaaak-akuqq-cai.
Status: Stopped
Controllers: 7urla-oa5md-du3pu-536e7-oakhx-fm57x-xi4bu-7dvss-2rjgm-fsshm-jae
Memory allocation: 0
Compute allocation: 0
Freezing threshold: 0
Memory Size: Nat(3676424)
Balance: 2_984_938_658_843 Cycles
Reserved: 0 Cycles
Reserved Cycles Limit: 5_000_000_000_000 Cycles
Module hash: 0xc1290ad65e6c9f840928637ed7672b688216a9c1e919eacbacc22af8c904a5e3
Number of queries: 65
Instructions spent in queries: 84_141_304
Total query request paylod size (bytes): 31_499
Total query response payload size (bytes): 456_651

```
What could have happened here? **In reference to my Q2**: somehow the id got separated from the frontend canister - how can those get reconnected?

## Q3 Details: 
I kept going forward, now trying to delete backend and reclaim my cycles: 
```
dev-journey-poll-dapp % dfx canister status poll_backend --network ic
Canister status call result for poll_backend.
Status: Stopped
Controllers: 7urla-oa5md-du3pu-536e7-oakhx-fm57x-xi4bu-7dvss-2rjgm-fsshm-jae
Memory allocation: 0
Compute allocation: 0
Freezing threshold: 0
Memory Size: Nat(3676082)
Balance: 2_994_966_495_511 Cycles
Reserved: 0 Cycles
Reserved Cycles Limit: 5_000_000_000_000 Cycles
Module hash: 0xc1290ad65e6c9f840928637ed7672b688216a9c1e919eacbacc22af8c904a5e3
Number of queries: 0
Instructions spent in queries: 0
Total query request paylod size (bytes): 0
Total query response payload size (bytes): 0

```
However this attempt returns an error, saying that it’s out of cycles, but the earlier status indicated it’s got a 3TC balance:
```
dev-journey-poll-dapp % dfx canister delete poll_backend --network ic
Beginning withdrawal of cycles; on failure try --no-wallet --no-withdrawal.
Setting the controller to identity principal.
Installing temporary wallet in canister poll_backend to enable transfer of cycles.
Attempting to transfer 2974312933190 cycles to canister 6tylh-uyaaa-aaaak-afpfq-cai.
Error: Failed to delete canister 'poll_backend'.
Caused by: Failed to delete canister 'poll_backend'.
  Failed to deposit 2974312933190 cycles into 6tylh-uyaaa-aaaak-afpfq-cai.
    Failed to call update function 'deposit_cycles' regarding canister '6tylh-uyaaa-aaaak-afpfq-cai'.
      Update call using wallet failed.
        The replica returned a rejection error: reject code CanisterError, reject message Error from Canister ygefb-eiaaa-aaaak-aku2a-cai: Canister ygefb-eiaaa-aaaak-aku2a-cai is out of cycles, error code None

```
I confirmed the canister ID is the poll_backend and has the same balance.


Same error when attempting to delete the frontend canister (though I have to use its ID because the name is no longer connected): 

```
dfx canister delete 3nstc-cqaaa-aaaak-akuqq-cai  --network ic
Beginning withdrawal of cycles; on failure try --no-wallet --no-withdrawal.
Setting the controller to identity principal.
Installing temporary wallet in canister 3nstc-cqaaa-aaaak-akuqq-cai to enable transfer of cycles.
Attempting to transfer 2969309996491 cycles to canister 6tylh-uyaaa-aaaak-afpfq-cai.
Error: Failed to delete canister '3nstc-cqaaa-aaaak-akuqq-cai'.
Caused by: Failed to delete canister '3nstc-cqaaa-aaaak-akuqq-cai'.
  Failed to deposit 2969309996491 cycles into 6tylh-uyaaa-aaaak-afpfq-cai.
    Failed to call update function 'deposit_cycles' regarding canister '6tylh-uyaaa-aaaak-afpfq-cai'.
      Update call using wallet failed.
        The replica returned a rejection error: reject code CanisterError, reject message Error from Canister 3nstc-cqaaa-aaaak-akuqq-cai: Canister 3nstc-cqaaa-aaaak-akuqq-cai is out of cycles, error code None

```

So **referencing my Q3**: The example delete canister command errors out on my end both for front and backend.- how do I delete those canisters and at least reclaim xTC?

## Q4 Details: ##
Finally, I think there was a mixup in the instructions to claim the coupon. I looks like mine went to the cycles wallet vs the cycles ledger.   

```
dev-journey-poll-dapp % dfx wallet --network=ic balance
0.798 TC (trillion cycles).

% dfx cycles --network=ic balance
0.000 TC (trillion cycles).

```
Going forward, I can see why it’s easier to use the cycles ledger. In **reference to my Q4**: Does this using the cycles wallet vs cycles ledger misconfiguration affect the above issues? How do canisters know to pull from one vs the other?

-------------------------

Jessie | 2024-06-11 14:42:30 UTC | #48

Hey Peter, here are some resources for you for these questions:

Q1: You can learn more about what costs cycles and how a canister uses cycles here: https://internetcomputer.org/docs/current/developer-docs/gas-cost

Q2: You can specify a canister's ID in the `canister_ids.json` file. 

Q3: The 'deposit_cycles' feature was temporarily disabled last week for some work on the cycles ledger. I've confirmed that this has been re-enabled and should work as expected. Please try again and let us know if the behavior is the same. 

Q4: @Severin would be the best to answer this question and provide insight.

-------------------------

peterkayhi | 2024-06-12 03:13:45 UTC | #49

Very helpful, esp the canister_ids.json file.   I tried to delete the canister - got identical message.  It seems on one hand the backend canister (ygefb---) has a balance but when it attempts to transfer it suddenly has no cycles.   What can I try next?

```
 dfx canister delete poll_backend --network ic
Beginning withdrawal of cycles; on failure try --no-wallet --no-withdrawal.
Setting the controller to identity principal.
Installing temporary wallet in canister poll_backend to enable transfer of cycles.
Attempting to transfer 2969251105624 cycles to canister 6tylh-uyaaa-aaaak-afpfq-cai.
Error: Failed to delete canister 'poll_backend'.
Caused by: Failed to delete canister 'poll_backend'.
  Failed to deposit 2969251105624 cycles into 6tylh-uyaaa-aaaak-afpfq-cai.
    Failed to call update function 'deposit_cycles' regarding canister '6tylh-uyaaa-aaaak-afpfq-cai'.
      Update call using wallet failed.
        The replica returned a rejection error: reject code CanisterError, reject message Error from Canister ygefb-eiaaa-aaaak-aku2a-cai: Canister ygefb-eiaaa-aaaak-aku2a-cai is out of cycles, error code None
```

-------------------------

CodeBlocker52 | 2024-06-12 12:32:55 UTC | #50

Hi @Jessie , I have few doubts related to Motoko , 
Q1. Is it possible to implement /replicate any smart contract written in solidity into Motoko?
Q2. Just like we have send , transfer and call methods in solidity to send data and value, are this methods are also available in Motoko ?If Yes, kindly share me the resources for the same.
Q3. Can I assume that almost everything that can be written in solidity for smart contract like ERC721 contract , ICO token , contract for Uniswap V3 protocol is possible in motoko  bcoz I don't  see the concept of  contract accounts, message call that we have in solidity.

-------------------------

Jessie | 2024-06-12 17:58:20 UTC | #51

@Severin Could you help out here?

-------------------------

Jessie | 2024-06-12 18:01:20 UTC | #52

Hi @CodeBlocker52 , this would be a better conversation targeted at the Motoko team. They would be able to provide better insight than myself. I suggest asking in the Motoko Working Group Thread: https://forum.dfinity.org/t/motoko-developer-working-group/20488/10

-------------------------

dfx-json | 2024-06-12 18:37:22 UTC | #53

[quote="CodeBlocker52, post:50, topic:23893"]
Is it possible to implement /replicate any smart contract written in solidity into Motoko?
[/quote]

This is more a question of ICP vs Ethereum. There are some fundamental differences between Ethereum smart contracts and ICP smart contracts. In general, ICP smart contracts are much more capable, and so if a Solidity program's essence can be extracted without reliance on any Ethereum-exclusive capabilities, it can certainly be duplicated in an ICP canister smart contract.

> Just like we have send , transfer and call methods in solidity to send data and value, are this methods are also available in Motoko ?If Yes, kindly share me the resources for the same.

In a Motoko program, or any ICP smart contract for that matter, you define the endpoints and business logic that your canister executes.

> Can I assume that almost everything that can be written in solidity for smart contract like ERC721 contract , ICO token , contract for Uniswap V3 protocol is possible in motoko bcoz I don’t see the concept of contract accounts, message call that we have in solidity.

We have an [example](https://github.com/dfinity/examples/tree/master/motoko/dip721-nft-container) of a canister that implements a DIP-721 interface, which is the ICP equivalent of ERC721. I'd start there.

-------------------------

peterkayhi | 2024-06-12 19:22:17 UTC | #54

Thanks Jessie!  Looks like it's a problem still being worked on so Severin doesn't have to reply here (unless there's something special for me :) - I'll follow [this thread](https://forum.dfinity.org/t/why-is-dfx-canister-delete-failing-to-withdraw-the-leftover-cycles-to-my-wallet/31807) to see it to completion.

-------------------------

peterkayhi | 2024-06-12 20:54:08 UTC | #55

Jessie I resolved this situation by just requesting another 10TC which lets me move fwd until the delete canister bug gets resolved. I really really appreciate your attention to all of this.  I have (just) 2 things to share FWIW if you are going to make any revisions based on my experience in going up to 1.6 - keep in mind I generally take a ton of time to go through tutorials so that I feel I really understand what's happening (as opposed to just blindly following the keystroke). That said, my recommendations with humility are:

1. Add instructions to stop/start canisters at the tail end of 1.5 so that cycles don't get burned if several days pass before going to 1.6. 

2. Emphasize to not follow the coupon redemption step-by-step as it creates a cycles wallet vs your instructions which use a cycles ledger - this is where I went off the path the 1st time I redeemed the coupon - I followed their instructions, not yours.    Along w/ this is the direction/code to set the env variable in the .zshenv/.profile/.whatever so the next time the student logs in they'll have the right setting. 

If this is all I got - I'd say the course so far is pretty damn good and I'm resolved to go all the way through with it - so appreciate the (massive) time you must have spent to produce this and now to deal with PITA responses like mine.  Mahalo Nui!

-------------------------

Severin | 2024-06-13 09:54:57 UTC | #56

[quote="peterkayhi, post:47, topic:23893"]
Finally, I think there was a mixup in the instructions to claim the coupon. I looks like mine went to the cycles wallet vs the cycles ledger.

```
dev-journey-poll-dapp % dfx wallet --network=ic balance
0.798 TC (trillion cycles).

% dfx cycles --network=ic balance
0.000 TC (trillion cycles).

```

Going forward, I can see why it’s easier to use the cycles ledger. In **reference to my Q4**: Does this using the cycles wallet vs cycles ledger misconfiguration affect the above issues? How do canisters know to pull from one vs the other?
[/quote]

If you have a wallet (and claimed your coupon there) you will stay in the 'wallet universe', which is actually what I would suggest for at least another couple weeks. If a wallet is configured, dfx will always automatically prefer the wallet way over the cycles ledger way, e.g. while withdrawing cycles from a canister to be deleted

-------------------------

Jessie | 2024-06-13 14:53:11 UTC | #57

Thanks for the feedback, I really appreciate it! I'll apply your first suggestion to the docs, and I've already chatted with the team behind the coupon regarding updating those instructions once the cycles ledger is the default option :) Thanks again!

-------------------------

peterkayhi | 2024-06-13 22:31:25 UTC | #58

oh damn - successfully re-applied for 10TC and put them in my cycles ledger. Hopefully the delete canister bugfix will be in production soon (I saw the note about the beta dfx but I'll hold off for now). 

That said, what actually governs what wallet dfx picks when deploying a canister? I'm assuming it looks at the dfxCyclesLedgerSupportEnable env variable, which I've set to 1 in my .zshenv

-------------------------

peterkayhi | 2024-06-13 22:32:04 UTC | #59

It's really the least I could do to try and pay back for all your help & attention so far. Looking fwd to continuing the journey!

-------------------------

Severin | 2024-06-14 08:45:52 UTC | #60

[quote="peterkayhi, post:58, topic:23893"]
That said, what actually governs what wallet dfx picks when deploying a canister? I’m assuming it looks at the dfxCyclesLedgerSupportEnable env variable, which I’ve set to 1 in my .zshenv
[/quote]

Even if you set the env var if your identity has a wallet configured it will use the wallet. This is so we don't break anyone's existing setup. To default to the cycles ledger you'll need to unset the wallet in `~/.config/dfx/identity/<identity name>/wallets.json`

[quote="peterkayhi, post:58, topic:23893"]
Hopefully the delete canister bugfix will be in production soon
[/quote]

AFAIK the quick fix should get promoted to the latest release next week. The proper solution is quite a bit further away, but it's making progress

-------------------------

peterkayhi | 2024-06-19 03:51:06 UTC | #61

Jessie I noticed in 2.1 that I got the same "already installed" message when you did the upgrade as I did: 
```
dfx canister install counter_backend --mode upgrade
Upgrading code for canister counter_backend, with canister ID bkyz2-fmaaa-aaaaa-qaaaq-cai
Module hash 7020fa1900e17060a542586720a30c0fec19e87670e8a14e0f2891c6a0229e23 is already installed.
```
Clearly its not a fatal error, but I'm wondering if you could explain what it means.  The new code is not installed.  So what *is* already installed? (BTW I did search for this on the forums before posting here and did not find)

-------------------------

Jessie | 2024-06-20 14:34:12 UTC | #62

Hi @peterkayhi , the code from when you ran the `dfx deploy counter_backend` command is installed. The `dfx deploy` command does a few things in the background, such as generate the Candid interface files, compile the canister's code into a Wasm module, then install that module into the canister. 

In the video tutorial, I got this error because I only ran `dfx canister install`, which didn't rebuild the Wasm module with the new hash, resulting in that error. But once I ran `dfx deploy`, since that command includes building the Wasm module as part of the process, you see that the output indicates the canister was upgraded successfully. I could have explained this better in the video, my apologies!

-------------------------

peterkayhi | 2024-06-21 02:01:13 UTC | #63

nothing to apologize for!  I appreciate you taking the time to reply here.

-------------------------

peterkayhi | 2024-06-21 03:33:43 UTC | #64

Hi Jessie - hope my questions are worthy of your time. I’m going through what you’re doing in great detail as I want to completely understand every line of code.  I have completed the Motoko Bootcamp so I have some basic familiarity with Motoko and I’m seeing your work as going above and beyond that.  I’m really sensitive about wasting people’s time so know that when I’m coming to you it’s because I’ve spent a lot of time to understand every minute detail and exhausted every other avenue (searching, ICP AI, forums etc).

My question centers around understanding 3 lines of code from your 2.2 pub/pub examples (which I copied/pasted from the web page instead of the git versions which have no comments) 

# Questions on 3 lines of code from 2.2 Advanced canister calls. #

## Line 16 of pub/main.mo: ##
    callback : shared Counter -> ();  

In the video you said “it’s going to store the result of the shared Counter function”  (https://youtu.be/9BfDy3VNxu8?t=1084) but there is no Counter function, right?   I can guess this line is related to the intercanister call but I don’t understand exactly how. 

## Line 31 of pub/main.mo: ##
`subscriber.callback(counter);`

This looks like it’s calling a function but there is no such definition. I’m sure it’s related to line 16 but I don’t understand exactly how and what’s going on. 

I understand how Sub is importing Pub and using its subscribe function. It’s just those 2 above lines that I cannot fully explain. 

## Line 22 of sub/main.mo: ##
 `callback = updateCount;`

I think this one is trivial - it looks like you’re calling updateCount but what’s puzzling is why aren’t you passing a Counter value e.g. updateCount(<some value>)? how is it you’re able to call updateCount without the ()?

Can you please explain these in detail? I can’t figure out exactly what they are doing and I’ve spent nearly 2 hours and digging through this and articulating my questions (which I hope would have solved it but did not)

-------------------------

Jessie | 2024-06-21 13:18:41 UTC | #65

@peterkayhi I'm going to defer your questions to @claudio , he may be able to explain the Motoko logic better than I can.

-------------------------

claudio | 2024-06-21 18:06:53 UTC | #66

Line 16 is declaring the field 'callback' of a record. The field has a shared function type that receives a 'Counter' and returns nothing (a one- way or fire-and-forget function that can be called but whose result cannot be awaited).

(In Motoko, functions are first-class values that can be stored in fields, passed as arguments andreturned a results.)

Line 31 access the 'callback' field of a 'subscriber' record and calls it with an argument.

Line 22 uses the function value 'updateCount' as the value of a 'callback' field in some larger record.

Hope that helps!

-------------------------

peterkayhi | 2024-06-22 02:37:36 UTC | #67

Really appreciate you taking the time to reply - means a lot.  Detailed question below and if it's easier for you to point me to a page that further explains and save you the agony of replying please don't hesitate. 


on the line 22 example ([BTW here's the code](https://github.com/dfinity/examples/blob/master/motoko/pub-sub/src/sub/Main.mo) and in this version it's line 17): 

it's making an call to updateCount which is further down (line 21) defined as: 
```
  public func updateCount(counter : Counter) {
    count += counter.value;
  };
```

my question is why doesn't 
```
      callback = updateCount;
```
generate a compile time error? shouldn't it be 
```
callback = updateCount(someCounterValue);
```
how is it able to get away with this?

-------------------------

claudio | 2024-06-22 08:23:00 UTC | #68

It's because the type of the `callback` field is a function type, so it must contain a function value.

```
  type Subscriber = {
    topic : Text;
    callback : shared Counter -> ();
  };
```
(https://github.com/dfinity/examples/blob/73f624adfca169ed310879bcc88d60963003190f/motoko/pub-sub/src/pub/Main.mo#11)

Here, `shared Counter -> ();` is the type of a (shared) function that takes a `Counter` value and returns nothing (`()`).
 
Note that
```
  public func updateCount(counter : Counter) {
    count += counter.value;
  };
```
Is syntactic sugar for 

```
  public shared func updateCount(counter : Counter)   :  () {
    count += counter.value;
  };
```
(this is because public functions in actors are implicitly `shared` functions, and omitting the return type is the same as specifying : ())

Given this, `updateCount` has type `shared Counter -> ()` and can be used as the value of the `callback` field above.

The reason Motoko gets away with this is that functions are first-class values in Motoko and can be stored in data-structures, variables, fields etc. That's not a new idea and is present in many modern languages.


(https://en.wikipedia.org/wiki/First-class_function)

-------------------------

TDizzle | 2024-07-09 04:41:27 UTC | #69

RESOLVED
Hello,

I am going through the developer journey, and have encountered an issue on 1.5 Deploying Canisters. I have an old identity set up that has an active wallet through dfx wallet, but wanted to follow the tutorial on a fresh identity using the dfx ledger and dfx cycles commands. 

My issue: 
I've sent my own ICP to `dfx ledger account-id` to add ICP then converted to cycles by command 
`dfx cycles convert --amount AMOUNT --ic` 
seen below I call dfx deploy --ic to deploy the poll dapp on 1.5, and get error:
 `Caused by: No wallet configured for combination of identity 'develop' and network 'ic'` 

```
$ dfx deploy --ic 
Please enter the passphrase for your identity: [hidden]
Decryption complete.
Deploying all canisters.
Creating canisters...
Creating canister polling_example_backend...
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to register all canisters.
Caused by: Failed to create canister 'polling_example_backend'.
Caused by: No wallet configured for combination of identity 'develop' and network 'ic'
```

In the command below you can see that I have balance, but no wallet configured for ic network.

```
$ dfx cycles balance --ic
Please enter the passphrase for your identity: [hidden]
Decryption complete.
2.627 TC (trillion cycles).
```
I ran this command in bash before running the above `DFX_CYCLES_LEDGER_SUPPORT_ENABLE=1` 

Is there a way to use the cycles balance from dfx cycles when using the dfx deploy command? 

Sorry if this is somewhere I missed, thanks!

Resolved my issue.. was missing export in front of the ledger support command.

https://forum.dfinity.org/t/why-does-it-try-to-use-wallet-instead-of-ledger/32351/2?u=tdizzle

-------------------------

peterkayhi | 2024-07-11 00:35:00 UTC | #70

I've been out for a while and wanted still to thank you for taking the time to explain this to me. It's much appreciated.

-------------------------

TDizzle | 2024-07-13 02:04:28 UTC | #72

Hello,

I ran into an issue on the example project in [3.4: Introduction to Agents](https://internetcomputer.org/docs/current/tutorials/developer-journey/level-3/3.4-intro-to-agents#using-the-javascript-agent) 

I get this error when I run `dfx generate` in the [random_maze](https://github.com/dfinity/examples/tree/master/motoko/random_maze) project

```
Generating type declarations for canister random_maze_assets:
Error: Failed while trying to generate type declarations for 'random_maze_assets'.
Caused by: Candid file: ../examples/motoko/random_maze/.dfx/local/canisters/random_maze_assets/assetstorage.did doesn't exist.
```
Afterwards I ran `dfx deploy` that did not get any errors on the command line, but I do get this in the browser developer console when I press the Generate! button to get the maze
![image|504x53](upload://eMDkfmzfA74mEW38czLjWZ0UWUV.png)

I'm using version v16.20.2 of node

Any idea of what could be causing this issue?

Thank you!

-------------------------

Jessie | 2024-07-15 14:58:09 UTC | #73

Thanks @TDizzle , I was able to recreate both errors locally myself, and I've opened an issue in the Examples repo to let the team know this example needs to be looked at.

-------------------------

peterkayhi | 2024-07-24 21:49:10 UTC | #74

Hello again Jessie! I looked this over as careully as I could and I can't seem to resolve it. Can you point me in the right direction? 

I'm going through 4.2 and just before https://internetcomputer.org/docs/current/tutorials/developer-journey/level-4/4.2-icrc-tokens#using-icrc-2-endpoints

this command 
```
dfx canister call icrc1_ledger_canister icrc1_transfer "(record { to = record { owner = principal \"sckqo-e2vyl-4rqqu-5g4wf-pqskh-iynjm-46ixm-awluw-ucnqa-4sl6j-mqe\";};  amount = 10_000;})"
```

returns this message:

```

(variant { Err = variant { InsufficientFunds = record { balance = 0 : nat } } })
```
My $DEPLOY_ID is set correctly because this works fine and returns the correct balance:
```
dfx canister call icrc1_ledger_canister icrc1_balance_of "(record {owner = principal \"${DEPLOY_ID}\"; })"
```

The only thing I can think of is that it's not hitting the right Account but since there's no explicit Account in the command, I'm assuming it's being pulled from $DEPLOY_ID which is properly set. 

I looked at the Candid interface and it confirms that there's no "from" Account to be set. 

Where should I look next?

-------------------------

Jessie | 2024-07-29 17:23:27 UTC | #75

Hey @peterkayhi , have you followed the video form of the tutorial? https://www.youtube.com/watch?v=RDbt62tXXwk

-------------------------

peterkayhi | 2024-07-30 06:23:34 UTC | #76

Mahalo Jessie for the reply. I'm embarrassed (and probably a little ashamed too;) to admit that I did not watch the video tutorial and instead followed the text page itself. 

So I went through the video tutorial again this time, followed every command you gave on the video successfully and hit the same problem.

I'm at a loss for what to try next. I don't understand why i'd get an insufficient funds error when there's clearly a balance.

I'm assuming the TO owner principal is correct and should not be changed to reflect my local environment. 

```
sckqo-e2vyl-4rqqu-5g4wf-pqskh-iynjm-46ixm-awluw-ucnqa-4sl6j-mqe
```

-------------------------

Jessie | 2024-07-31 16:43:27 UTC | #77

Are you using the DEPLOY_ID identity as the current dfx identity, like:

`dfx identity use DEPLOY_ID_IDENTITY` ?

-------------------------

peterkayhi | 2024-08-01 03:27:01 UTC | #78

ah! That was it.  Recommend you add that in the web page. If you follow the page and your video, the "dfx identity use archive_controller" is the last one used on deployment.  Neither in your video nor in the docs is there a direction to switch back to the DevJourney identity (which is the one holding the DEPLOY_ID principal) to do the ``icrc1_transfer `` canister call.

Now that it works, it's obvious why my previous attempts failed. The token transfer comes from current identity, not the DEPLOY_ID env var. 

I don't understand why it works in your video - there doesn't seem to be an edit cut - and you too deploy under the ``archive_controller`` identity so you should have failed too - yet you did not.  Would be interesting to know why.

Regardless, it's working now for me and thanks so much for taking the time to help me resolve this!

-------------------------

tommccann | 2024-08-06 04:20:46 UTC | #79

@Jessie You should be aware that the example in 1.3 of the developer journey does not work. Myself and a colleague both (independently) ran into the same problem. I also see that another user @Abundanzini reported the same problem in April in this forum. On clicking the 'Vote' button it gives a new page with the error: "Could not find a canister id to forward to."

It appears that the code in index.js is not being invoked. I suspect that the instructions specify putting it in the wrong place.

The lesson concludes by directing students to a completed solution on GitHub, which works ok, however it is not a good first time user experience to complete the first dapp tutorial only for it not to work.

Can you ask someone to check this out please? Thank you.

-------------------------

Jessie | 2024-08-06 20:59:44 UTC | #80

Thanks @tommccann , I've pushed an update to this page to clarify the instructions. The problem was with the selection of the frontend template in the `dfx new` command - the one selected in the tutorial used TypeScript and Vite, while the tutorial code used JavaScript and React. The instructions are now correct for JavaScript and React.

-------------------------

