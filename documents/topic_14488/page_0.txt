mikhail-turilin | 2022-07-22 19:37:45 UTC | #1

Hey, community!

We are discussing the priorities of supporting various frontend platforms to build end-user apps connected to the Internet Computer. 

Do you have any feedback or a wish list for this area?

For example:
- Swift / iOS support
- Android / Java / Kotlin support
- Flutter support
- React Native support
- Better support for some Web / JS frameworks

Please, let me know what you think! 

Best regards,
Mikhail Turilin
Product Manager 
DFINITY foundation

-------------------------

icme | 2022-07-22 20:23:40 UTC | #2

Top 2 for me (in order) would be

1. React-Native
2. Swift


What do you mean by better support for web/js frameworks? I think the priority should be to make web & mobile development more approachable, which is why I listed react-native first.

Swift also has great [wasm compilation tooling](https://swiftwasm.org/), meaning that it could be a full stack language for the IC (frontend & backend). 

Iâ€™m curious if the DFINITY team considered Swift originally when building the IC.

@lastmjs Have you considered building Swift tooling for the IC?

-------------------------

lastmjs | 2022-07-22 20:25:23 UTC | #3

Most important to me is web frontend tooling that does not assume frameworks or build tools, but is native JS that can be consumed by any framework or tooling (like not being webpack-specific as a good example). @icme I don't do iOS development really

-------------------------

paulyoung | 2022-07-22 20:36:21 UTC | #4

For any supported languages I would like to see:
* Support for generating language bindings from Candid.
* Support for generating Candid from concrete syntax.
* Support for lowest common denominator but widely-supported features as opposed to trending frameworks.

-------------------------

mikhail-turilin | 2022-07-22 21:50:08 UTC | #5

I was thinking about this myself. Swift would make a great language for IC:
- Predictable memory management
- High efficiency code
- Easier to learn than Rust

-------------------------

paulyoung | 2022-07-22 22:21:56 UTC | #6

Swift also has first-class actors these days.

https://www.hackingwithswift.com/quick-start/concurrency/what-is-an-actor-and-why-does-swift-have-them

-------------------------

Tbd | 2022-07-24 00:24:44 UTC | #7

How about providing the community with lower level tools & APIs with more flexibility so we can build better support?

In my view dfx is the biggest obstacle. if we could call the APIs programmatically (dfx-js or ic-js for example) and have more control that would unlock a ton of potential and allow the community to innovate around tooling & framework support.

-------------------------

ovictor | 2022-07-25 01:05:23 UTC | #8

+1 for React native and Flutter, those have great marketshare

-------------------------

jzxchiang | 2022-10-03 03:12:15 UTC | #9

It seems like there is an official `ic-js` now. Not sure when that was published...

-------------------------

peterparker | 2022-10-03 06:39:13 UTC | #10

Yep, published for the first time few months ago. It started with the rewrite of NNS-dapp.

The [mono-repo](https://github.com/dfinity/ic-js/) now contains various libs:

- `@dfinity/nns` : interfacing with Nns ledger and governance
- `@dfinity/sns` : interfacing with Sns canisters
- `@dfinity/cmc` : interfacing with the cycle minting canister
- `@dfinity/utils` : few handy utils we use in these libs or in nns-dapp (still growing)

All these libs are published to npm and we also do so on a nightly basis to always get the last changes.

We did not publish yet examples of how to use these but that would be neat so it's the plan.

-------------------------

Tbd | 2022-10-03 11:52:43 UTC | #11

Yes but unfortunately it doesn't do what I'm asking for.

-------------------------

