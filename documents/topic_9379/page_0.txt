lastmjs | 2021-12-06 22:43:40 UTC | #1

Also on GitHub: https://github.com/dfinity/certified-assets/issues/11

I would like some clarification on `StreamingCallbackToken` and `http_request_streaming_callback`. I might need to modify the `StreamingCallbackToken` or implement a custom `http_request_streaming_callback`, but I am not sure if I am able to do that.

Is `http_request_streaming_callback` a special function? I assume I could name the function anything I want when creating `StreamingStrategy::Callback`, is that correct?

If that's the case, can I also change the `StreamingCallbackToken` parameter?

The problem I am trying to solve is that of `206 Partial Content` responses. I need to return very custom slices of content, because the client could request any range of bytes on an asset. The default `http_request_streaming_callback` does not quite offer the flexibility I need. I think I can hack it with the current `StreamingCallbackToken`, but is there a possibility of implementing my own?

-------------------------

lastmjs | 2021-12-06 22:52:50 UTC | #2

Maybe a simpler question is, can I implement custom streaming strategies? If so, how would I do that?

There is this `StreamingStrategy` enum:

```rust
enum StreamingStrategy {
    Callback {
        callback: Func,
        token: StreamingCallbackToken,
    },
}
```

I would like to somehow provide a custom `callback` and `token` to implement my special strategy.

-------------------------

jzxchiang | 2021-12-07 05:56:19 UTC | #3

I think you have to abide by this [interface](https://github.com/dfinity/agent-rs/blob/076051a601dc5080ad6baf6d6034a109cca3ab00/ic-utils/src/interfaces/http_request.rs#L39) (since it's what the Rust `icx-proxy` that's running on the boundary node will expect and parse).

So you can name the function anything you want (doesn't have to be `http_request_streaming_callback`) but you can't change the token parameter I don't think.

The code where the `icx-proxy` actually calls your asset canister is [here](https://github.com/dfinity/icx-proxy/blob/d2cd4d822be4fa8d0af2f27e4dcc635d2032fcfb/src/main.rs#L261).

-------------------------

jzxchiang | 2021-12-07 05:57:26 UTC | #4

[quote="lastmjs, post:1, topic:9379"]
I need to return very custom slices of content, because the client could request any range of bytes on an asset.
[/quote]

Based on my understanding of the `icx-proxy` code, I don't think range requests like this are supported.

-------------------------

lastmjs | 2021-12-07 06:15:09 UTC | #5

Yep, I'm implementing range requests. I might need to pull request into the icx-proxy code then. I can hack what I want with the current limitations, it just won't be pretty.

Thanks for confirming my suspicions.

-------------------------

lastmjs | 2021-12-07 06:17:45 UTC | #6

Do you know if the boundary nodes run icx-proxy? Is the boundary node software open source?

Basically, I might need to change the boundary node code, how do I do that? Pull requests might be necessary

-------------------------

jzxchiang | 2021-12-07 07:36:22 UTC | #7

Yeah the boundary nodes run icx-proxy. I believe it *may* have recently been open sourced, see [this](https://forum.dfinity.org/t/boundary-nodes-source-code/7203) for details.

The real question is are the boundary nodes decentralized, i.e. managed by the NNS and thus upgradable via NNS proposals. And I think the answer is no... hoping to get more clarity on this [here](https://forum.dfinity.org/t/long-term-r-d-boundary-nodes-proposal/9401).

-------------------------

