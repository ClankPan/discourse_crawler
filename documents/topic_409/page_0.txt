cryptoschindler | 2020-01-28 08:17:22 UTC | #1

If you have been struggling with Motoko Arrays and the examples provided in the documentation, you are not alone! I tried the following example from the [documentation](https://sdk.dfinity.org/language-guide/index.html#immutable-arrays):


```
let array1 : [Nat] = [1, 2, 3, 4, 6, 7, 8] ;
let array2 : [Nat] = Array_tabulate<Nat>(7, func(i:Nat) : Nat {
               if ( i == 2 or i == 5 ) { array1[i] * i } // change 3rd and 6th entries
               else { array1[i] } // no change to other entries
             }) ;
```


Calling the `Array _tabulate` function didnt't work for me, even though it was stated that it's in the [compiler Prelude](https://sdk.dfinity.org/language-guide/index.html#compiler-prelude) and doesn't need additional imports. 

What you need to do instead is the following:
```
import Array "mo:stdlib/array.mo";

let array1 : [Nat] = [1, 2, 3, 4, 6, 7, 8] ;
let array2 : [Nat] = Array.tabulate<Nat>(7, func(i:Nat) : Nat {
               if ( i == 2 or i == 5 ) { array1[i] * i } // change 3rd and 6th entries
               else { array1[i] } // no change to other entries
             }) ;
```

The same goes for `Array_init` which you would call the following way:

```
import Array "mo:stdlib/array.mo";

let x : [var Bool] = Array.init<Bool>(5,false);
```
This gives you an array the size of 5 holding the initial value `false` for each entry.

Looking at programs  implemented by the team is a big help, i can only recommend to check out [Linkedup](https://github.com/dfinity-lab/linkedup) and @enzo 's [GitHub](https://github.com/enzoh) together with [Sample Code](https://sdk.dfinity.org/developers-guide/sample-apps.html) from the documentation.

-------------------------

cryptoschindler | 2020-01-28 12:13:49 UTC | #2

@hansl @alexa.smith why canâ€™t i directly use Array_tabulate? Is this an error in the documentation or am I missing something?

-------------------------

claudio | 2020-01-28 17:30:41 UTC | #3

The standard library is being re-organized to provide more structure and the documentation is lagging behind. Sorry about the confusion!

-------------------------

cryptoschindler | 2020-01-28 17:51:02 UTC | #4

thanks for clearing things up :) and welcome to the community :smiley:

-------------------------

Comp_Sci | 2020-01-28 18:25:21 UTC | #5

Thank you for the update on the standard library @claudio

-------------------------

