ildefons | 2022-10-10 03:42:57 UTC | #1

I'm trying to retrieve ledger transactions from archive canister using the query method "get_blocks":

https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/?id=qjdve-lqaaa-aaaaa-aaaeq-cai

I tried many parameter combinations: 

For small values of "start" parameter (e.g. 100), I get an error: "Not an option type"
For very large values of "start" parameter (e.g. 10000000), I get "Ok" but empty blocks

How can we  query blocks using the archive canister interface?

-------------------------

ildefons | 2022-10-10 12:52:56 UTC | #2

I found out that using dfx it works, but the same call does not work using @dfinity\agent or the web service of my previous message:

This works:
dfx canister --network ic call qjdve-lqaaa-aaaaa-aaaeq-cai get_blocks '(record {start = 1:nat64; length = 2:nat64})'

This does not work:
https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/?id=qjdve-lqaaa-aaaaa-aaaeq-cai

This does not work:
`
...
const start2 = 10000000;
const length2= 2;
const GetBlocksArgsArchive = {
    start: start2,
    length: length2,
  };
const res_archive = await archive.get_blocks(GetBlocksArgsArchive);`

Why is dfx the only viable way to access the archive canister?

-------------------------

Severin | 2022-10-11 06:39:17 UTC | #3

[quote="ildefons, post:2, topic:15811"]
Why is dfx the only viable way to access the archive canister?
[/quote]
Definitively not intended - looks like a bug. I'll ping the relevant team(s)

-------------------------

NS01 | 2023-01-13 09:19:58 UTC | #4

Hi Severin,

Any update on this? 

Thanks, 

Nathan.

-------------------------

Severin | 2023-01-13 09:42:20 UTC | #5

No idea, I'll ask again.

-------------------------

roman-kashitsyn | 2023-01-13 10:37:56 UTC | #6

That might be because we return `operation : variant { ... }` where `op : opt variant { ... }` is expected. However, that shouldn't be a problem according to the [Candid spec](https://github.com/dfinity/candid/blob/master/spec/Candid.md#options-1). Decoders should treat `T` as a legitimate substitute for `opt T`.

```
not (null <: <datatype'>)
<datatype> <: <datatype'>
-----------------------------
<datatype> <: opt <datatype'>
```

That seems to be a bug in JS candid decoder.

-------------------------

