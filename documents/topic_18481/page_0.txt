gladguy | 2023-02-14 17:53:44 UTC | #1

Dear Dfinity Team members,

We are ICPBunny Team. We are diving into BTC Ordinals. We are exploring 
how we can exhibit the ICP Capabilities to our BTC community as the ordinal space 
is very early.

I would like to thank Mr. @ielashi for the detailed demo  of BTC <> ICP Integration
Wondering about the BTC <> ICP Integration ? I heard @ielashi talking about SegWit

Kindly clarify Nested or Native SegWit.

Legacy
Nested SegWit
Native SegWit
Taproot(P2TR)

How about Taproot integration for wallet generation ? Is there any future scope. Can we independently develop that ? 

Follow our BTC  Bunny Ordinal Discord channel 

[https://discord.gg/QdDRQjfH](https://discord.gg/QdDRQjfH)

[BitcoinBunny Island LAND Parcel in Bitcoin chain](https://ordinals.com/inscription/a0accc300d3a54c99a2aafe11720de85617a1a63146cb7c8166f7897fd68d191i0)

Need head up as well.
Thank you

-------------------------

ielashi | 2023-02-15 09:36:39 UTC | #2

Hi @gladguy, I'm not sure I understand your question.

The Bitcoin API provides UTXOs for the following addresses (see [docs](https://wiki.internetcomputer.org/wiki/Bitcoin_integration)):

* Pay to public key hash (P2PKH)
* Pay to script hash (P2SH)
* Pay to witness public key hash (P2WPKH)
* Pay to witness script hash (P2WSH)
* Pay to taproot (P2TR)

As for signing transactions, you can use any address type that relies on ECDSA, so that would be all of the address types above with the exception of P2TR. We don't offer libraries for signing Bitcoin transactions, so you'd have to rely on other libraries to do so or implement that yourself.

Does that answer your question?

-------------------------

gladguy | 2023-02-15 14:17:41 UTC | #3

[quote="ielashi, post:2, topic:18481"]
P2TR
[/quote]

Thanks a lot Islam. 
Would like to know who owns the Mnemonic or private of the wallet ?

Wondering, Libraries are written in rust ? 
Where i can read about it more to generate addresses in Pay to taproot (P2TR).

Thank you for your reply.

-------------------------

gladguy | 2023-02-15 14:28:51 UTC | #4

### IC method `bitcoin_get_utxos` [â€‹](https://internetcomputer.org/docs/current/references/ic-interface-spec#ic-bitcoin_get_utxos)

https://internetcomputer.org/docs/current/references/ic-interface-spec#ic-bitcoin_get_utxos

Mentions as below, it seems taproot is submitted or i misunderstood ? 

Given a `get_utxos_request`, which must specify a Bitcoin address and a Bitcoin network (`mainnet` or `testnet`), the function returns all unspent transaction outputs (UTXOs) associated with the provided address in the specified Bitcoin network based on the current view of the Bitcoin blockchain available to the Bitcoin component. The UTXOs are returned sorted by block height in descending order.

The following address formats are supported:

* Pay to public key hash (P2PKH)
* Pay to script hash (P2SH)
* Pay to witness public key hash (P2WPKH)
* Pay to witness script hash (P2WSH)
* Pay to taproot (P2TR)

If the address is malformed, the call is rejected

-------------------------

ielashi | 2023-02-16 16:41:49 UTC | #5

> Would like to know who owns the Mnemonic or private of the wallet ?

You mean, if you want to sign transactions on the Internet Computer, where would the private key/seed phrase be stored? You shouldn't generate private keys on the Internet Computer, as that isn't secure. Instead, you should be using the threshold ECDSA API. There are [Motoko](https://github.com/dfinity/examples/tree/master/motoko/basic_bitcoin) and [Rust](https://github.com/dfinity/examples/tree/master/rust/basic_bitcoin/) examples that show how this is done.

You can read more about threshold ECDSA [here](https://internetcomputer.org/docs/current/developer-docs/integrations/t-ecdsa/).

[quote="gladguy, post:3, topic:18481"]
Wondering, Libraries are written in rust ?
Where i can read about it more to generate addresses in Pay to taproot (P2TR).
[/quote]

I'm unaware of any library that you can use out of the box with the Internet Computer currently. I'd have a look at the example above, or the source code of ckBTC for inspiration on how to sign transactions. Additionally, for P2TR, while you can retrieve the UTXOs of a PT2R address, you cannot use sign P2TR transactions as it doesn't use ECDSA, so I'd suggest you go with a different address type for your project.

-------------------------

gladguy | 2023-02-17 01:36:01 UTC | #6

[quote="ielashi, post:5, topic:18481"]
You can read mo
[/quote]

Pay to taproot (P2TR) is the main address that supported by the data security on Bitcoin chain. How we can achieve P2TR signing in ICP?

-------------------------

