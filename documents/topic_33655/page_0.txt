Lorimer | 2024-07-28 15:42:03 UTC | #1

This topic is intended to capture Subnet Management activities over time for the [fuqsr](https://dashboard.internetcomputer.org/subnet/fuqsr-in2lc-zbcjj-ydmcw-pzq7h-4xm2z-pto4i-dcyee-5z4rz-x63ji-nae) subnet, providing a place to ask questions and make observations about the management of this subnet.

At the time of creating this topic the current subnet configuration is as follows:
<details>
  <summary>Expand</summary>

```json
{
  "version": 44319,
  "records": [
    {
      "key": "subnet_record_fuqsr-in2lc-zbcjj-ydmcw-pzq7h-4xm2z-pto4i-dcyee-5z4rz-x63ji-nae",
      "version": 44319,
      "value": {
        "membership": [
          "mcmqr-z4yrw-7wnwf-au7wv-5f7az-fco3a-vuxx3-7lol5-sigpc-jtnqq-aqe",
          "kydvk-tokwg-vqxwp-xszgh-5reys-aprlz-jpyjd-uwhlz-rnii4-pijvj-yae",
          "4kimr-mx6yo-ncuyf-temzj-lii2h-ex7ub-gvopk-iecxu-3kkt7-wogi3-hae",
          "u6e7b-mgtes-r5nay-mmrcn-p3rns-hj2fn-74dn7-cp2mu-kk24k-ljfnm-2ae",
          "kaoz3-4okcl-24amq-v5y4k-vim56-4njvo-fwvyk-v4grq-kuqum-7zm3p-4qe",
          "st4fx-z43wu-xzc3a-vnajq-ts2u6-v5ws5-q36gu-5amxb-665e4-bsq2a-gqe",
          "aytiw-nezzr-cc3yp-lwl6o-r35hi-hnxsz-nfb7e-3bmy4-er6tf-wrtgv-dae",
          "wbz2k-b6che-eckjw-vdwro-gyxhj-276mr-lxijv-wvk6b-kdmqn-s7zzh-6qe",
          "jamsd-hvypj-w56fb-4cwvt-tqbmo-6652c-eaw2u-3njxg-5nfe7-ae6ht-bae",
          "3zg5o-ieoil-rbw5g-2tsbz-f7xzv-yadzw-g3ivi-t5u37-de7nq-4qe77-2qe",
          "pud2o-rtmqx-ym5vr-3isia-wojnu-xwqmn-qcsxu-ktsva-udz72-m3pkg-zae",
          "foasq-jql3g-5njm3-75iv5-5zlx3-lbods-dnsbj-k7srs-3isgp-k4wlo-tqe",
          "5fpvj-plxyb-bsyji-b4pp5-j47gg-vlkor-q6bhy-5bhmp-kjtu6-fqkjh-iqe"
        ],
        "nodes": {},
        "max_ingress_bytes_per_message": 2097152,
        "max_ingress_messages_per_block": 1000,
        "max_block_payload_size": 4194304,
        "unit_delay_millis": 1000,
        "initial_notary_delay_millis": 600,
        "replica_version_id": "a3831c87440df4821b435050c8a8fcb3745d86f6",
        "dkg_interval_length": 499,
        "start_as_nns": false,
        "subnet_type": "application",
        "features": {
          "canister_sandboxing": false,
          "http_requests": true,
          "sev_enabled": false
        },
        "max_number_of_canisters": 120000,
        "ssh_readonly_access": [
          ""
        ],
        "ssh_backup_access": [],
        "ecdsa_config": {
          "quadruples_to_create_in_advance": 1,
          "key_ids": [
            {
              "curve": "secp256k1",
              "name": "test_key_1"
            }
          ],
          "max_queue_size": 20,
          "signature_request_timeout_ns": null,
          "idkg_key_rotation_period_ms": 604800000
        },
        "chain_key_config": {
          "key_configs": [
            {
              "key_id": {
                "Ecdsa": {
                  "curve": "secp256k1",
                  "name": "test_key_1"
                }
              },
              "pre_signatures_to_create_in_advance": 1,
              "max_queue_size": 20
            },
            {
              "key_id": {
                "Schnorr": {
                  "algorithm": "bip340secp256k1",
                  "name": "test_key_1"
                }
              },
              "pre_signatures_to_create_in_advance": 1,
              "max_queue_size": 20
            }
          ],
          "signature_request_timeout_ns": 1800000000000,
          "idkg_key_rotation_period_ms": 604800000
        }
      }
    }
  ]
}
```

</details>

-------------------------

Lorimer | 2024-07-28 19:26:53 UTC | #2

There's an open proposal for changing subnet membership - [Proposal: 131408 - ICP Dashboard (internetcomputer.org)](https://dashboard.internetcomputer.org/proposal/131408). This information is presented below:
- red marker represents a removed node
- green marker represents an added node
- highlighted patches represent the country a node sits within

![image|690x371](upload://eaMNve3RwXkEaRVqunGUmgfzIZX.jpeg)

<details>
<summary>Table</summary>

|   |Country|Data Center|Owner|Node Provider|Node|
|---|-------|-----------|-----|-------------|----|
|`---`|~~Germany~~|[~~Munich (mu1)~~](https://dashboard.internetcomputer.org/center/mu1)|~~q.beyond~~|[~~Staking Facilities~~](https://dashboard.internetcomputer.org/provider/niw4y-easue-l3qvz-sozsi-tfkvb-cxcx6-pzslg-5dqld-ooudp-hsuui-xae)|[~~3zg5o-ieoil-rbw5g-2tsbz-f7xzv-yadzw-g3ivi-t5u37-de7nq-4qe77-2qe~~](https://dashboard.internetcomputer.org/node/3zg5o-ieoil-rbw5g-2tsbz-f7xzv-yadzw-g3ivi-t5u37-de7nq-4qe77-2qe)|
|`+++`|Germany|[Frankfurt 2 (fr2)](https://dashboard.internetcomputer.org/center/fr2)|Equinix|[Virtual Hive Ltd](https://dashboard.internetcomputer.org/provider/wdnqm-clqti-im5yf-iapio-avjom-kyppl-xuiza-oaz6z-smmts-52wyg-5ae)|[nu5cn-l6rgt-kqeyj-daqss-hfdzc-hduqr-vqio6-j2mwl-4hhto-gw3po-mqe](https://dashboard.internetcomputer.org/node/nu5cn-l6rgt-kqeyj-daqss-hfdzc-hduqr-vqio6-j2mwl-4hhto-gw3po-mqe)|
|     |Canada|[Toronto 2 (to2)](https://dashboard.internetcomputer.org/center/to2)|Cyxtera|[Blockchain Development Labs](https://dashboard.internetcomputer.org/provider/7at4h-nhtvt-a4s55-jigss-wr2ha-ysxkn-e6w7x-7ggnm-qd3d5-ry66r-cae)|[4kimr-mx6yo-ncuyf-temzj-lii2h-ex7ub-gvopk-iecxu-3kkt7-wogi3-hae](https://dashboard.internetcomputer.org/node/4kimr-mx6yo-ncuyf-temzj-lii2h-ex7ub-gvopk-iecxu-3kkt7-wogi3-hae)|
|     |Switzerland|[Geneva (ge1)](https://dashboard.internetcomputer.org/center/ge1)|HighDC|[Archery Blockchain SCSp](https://dashboard.internetcomputer.org/provider/7ryes-jnj73-bsyu4-lo6h7-lbxk5-x4ien-lylws-5qwzl-hxd5f-xjh3w-mqe)|[foasq-jql3g-5njm3-75iv5-5zlx3-lbods-dnsbj-k7srs-3isgp-k4wlo-tqe](https://dashboard.internetcomputer.org/node/foasq-jql3g-5njm3-75iv5-5zlx3-lbods-dnsbj-k7srs-3isgp-k4wlo-tqe)|
|     |Switzerland|[Zurich 4 (zh4)](https://dashboard.internetcomputer.org/center/zh4)|Nine.Ch|[Tomahawk.vc](https://dashboard.internetcomputer.org/provider/ucjqj-jmbj3-rs4aq-ekzpw-ltjs3-zrcma-t6r3t-m5wxc-j5yrj-unwoj-mae)|[wbz2k-b6che-eckjw-vdwro-gyxhj-276mr-lxijv-wvk6b-kdmqn-s7zzh-6qe](https://dashboard.internetcomputer.org/node/wbz2k-b6che-eckjw-vdwro-gyxhj-276mr-lxijv-wvk6b-kdmqn-s7zzh-6qe)|
|     |China|[HongKong 1 (hk1)](https://dashboard.internetcomputer.org/center/hk1)|Unicom|[Pindar Technology Limited](https://dashboard.internetcomputer.org/provider/r3yjn-kthmg-pfgmb-2fngg-5c7d7-t6kqg-wi37r-j7gy6-iee64-kjdja-jae)|[kydvk-tokwg-vqxwp-xszgh-5reys-aprlz-jpyjd-uwhlz-rnii4-pijvj-yae](https://dashboard.internetcomputer.org/node/kydvk-tokwg-vqxwp-xszgh-5reys-aprlz-jpyjd-uwhlz-rnii4-pijvj-yae)|
|     |Romania|[Bucharest (bu1)](https://dashboard.internetcomputer.org/center/bu1)|M247 |[Iancu Aurel](https://dashboard.internetcomputer.org/provider/i7dto-bgkj2-xo5dx-cyrb7-zkk5y-q46eh-gz6iq-qkgyc-w4qte-scgtb-6ae)|[5fpvj-plxyb-bsyji-b4pp5-j47gg-vlkor-q6bhy-5bhmp-kjtu6-fqkjh-iqe](https://dashboard.internetcomputer.org/node/5fpvj-plxyb-bsyji-b4pp5-j47gg-vlkor-q6bhy-5bhmp-kjtu6-fqkjh-iqe)|
|     |Singapore|[Singapore (sg1)](https://dashboard.internetcomputer.org/center/sg1)|Telin|[OneSixtyTwo Digital Capital](https://dashboard.internetcomputer.org/provider/6nbcy-kprg6-ax3db-kh3cz-7jllk-oceyh-jznhs-riguq-fvk6z-6tsds-rqe)|[pud2o-rtmqx-ym5vr-3isia-wojnu-xwqmn-qcsxu-ktsva-udz72-m3pkg-zae](https://dashboard.internetcomputer.org/node/pud2o-rtmqx-ym5vr-3isia-wojnu-xwqmn-qcsxu-ktsva-udz72-m3pkg-zae)|
|     |Slovenia|[Ljubljana 2 (lj2)](https://dashboard.internetcomputer.org/center/lj2)|Anonstake|[Anonstake](https://dashboard.internetcomputer.org/provider/kos24-5xact-6aror-uofg2-tnvt6-dq3bk-c2c5z-jtptt-jbqvc-lmegy-qae)|[u6e7b-mgtes-r5nay-mmrcn-p3rns-hj2fn-74dn7-cp2mu-kk24k-ljfnm-2ae](https://dashboard.internetcomputer.org/node/u6e7b-mgtes-r5nay-mmrcn-p3rns-hj2fn-74dn7-cp2mu-kk24k-ljfnm-2ae)|
|     |Slovenia|[Maribor (mb1)](https://dashboard.internetcomputer.org/center/mb1)|Posita.si|[Fractal Labs AG](https://dashboard.internetcomputer.org/provider/wdjjk-blh44-lxm74-ojj43-rvgf4-j5rie-nm6xs-xvnuv-j3ptn-25t4v-6ae)|[jamsd-hvypj-w56fb-4cwvt-tqbmo-6652c-eaw2u-3njxg-5nfe7-ae6ht-bae](https://dashboard.internetcomputer.org/node/jamsd-hvypj-w56fb-4cwvt-tqbmo-6652c-eaw2u-3njxg-5nfe7-ae6ht-bae)|
|     |Sweden|[Stockholm 1 (sh1)](https://dashboard.internetcomputer.org/center/sh1)|Digital Realty|[DFINITY Operations SA](https://dashboard.internetcomputer.org/provider/bvcsg-3od6r-jnydw-eysln-aql7w-td5zn-ay5m6-sibd2-jzojt-anwag-mqe)|[kaoz3-4okcl-24amq-v5y4k-vim56-4njvo-fwvyk-v4grq-kuqum-7zm3p-4qe](https://dashboard.internetcomputer.org/node/kaoz3-4okcl-24amq-v5y4k-vim56-4njvo-fwvyk-v4grq-kuqum-7zm3p-4qe)|
|     |United States of America (the)|[San Jose (sj1)](https://dashboard.internetcomputer.org/center/sj1)|INAP|[Moon Block Ventures](https://dashboard.internetcomputer.org/provider/sdal5-w2c3d-p3buy-zieck-2wyuj-eu5bn-rkfe6-uuspi-o4n2b-gpei7-iae)|[aytiw-nezzr-cc3yp-lwl6o-r35hi-hnxsz-nfb7e-3bmy4-er6tf-wrtgv-dae](https://dashboard.internetcomputer.org/node/aytiw-nezzr-cc3yp-lwl6o-r35hi-hnxsz-nfb7e-3bmy4-er6tf-wrtgv-dae)|
|     |United States of America (the)|[Tampa (tp1)](https://dashboard.internetcomputer.org/center/tp1)|Flexential|[Richard Ma](https://dashboard.internetcomputer.org/provider/egb3e-rzi2e-vpsmm-akysp-l2owk-4dgst-b5hmg-xrkwa-cr3uk-zlzds-mae)|[st4fx-z43wu-xzc3a-vnajq-ts2u6-v5ws5-q36gu-5amxb-665e4-bsq2a-gqe](https://dashboard.internetcomputer.org/node/st4fx-z43wu-xzc3a-vnajq-ts2u6-v5ws5-q36gu-5amxb-665e4-bsq2a-gqe)|
|     |South Africa|[Gauteng 2 (jb2)](https://dashboard.internetcomputer.org/center/jb2)|Africa Data Centres|[Karel Frank](https://dashboard.internetcomputer.org/provider/unqqg-no4b2-vbyad-ytik2-t3vly-3e57q-aje2t-sjb5l-bd4ke-chggn-uqe)|[mcmqr-z4yrw-7wnwf-au7wv-5f7az-fco3a-vuxx3-7lol5-sigpc-jtnqq-aqe](https://dashboard.internetcomputer.org/node/mcmqr-z4yrw-7wnwf-au7wv-5f7az-fco3a-vuxx3-7lol5-sigpc-jtnqq-aqe)|

</details>

The removed node is replaced with another node that's also based in Germany. I've verified that this node is currently unassigned.

The proposal mentions that his change is needed due to the [Munich (mu1)](https://dashboard.internetcomputer.org/center/mu1) data centre being due for decommissioning. I have some questions about this @DRE-Team (please let me know if I should address this questions elsewhere in the future).
- This data centre appears to provide nodes for  21 subnets, but there's currently only a proposal for 9 subnets (one each). Are the other proposals due to follow? Can I ask why they're not all submitted together?
- Is there publicly accessible information anywhere that announces the planned decommissioning of this data centre?

Thanks in advance 🙏

-------------------------

timk11 | 2024-07-31 00:55:20 UTC | #3

Hi @Lorimer . Not sure if you saw, but there's an answer to a related question about this set of proposals in [this post](https://forum.dfinity.org/t/new-node-provider-proposals/16643/455). I'm not sure who is best to tag for questions of this type.

-------------------------

timk11 | 2024-07-31 01:17:41 UTC | #4

I've also asked a question [here](https://forum.dfinity.org/t/threshold-schnorr-facilitating-brc-20-trading-solana-integration-certificate-signing-and-more/28993/15?u=timk11) about other current proposals for this subnet.

-------------------------

Lorimer | 2024-07-31 08:00:29 UTC | #5

Thanks @timk11, that clears up the mu1 data centre query :) 

I responded to your other question, copied here for reference - 

[quote="Lorimer, post:16, topic:28993, full:true"]
My interpretation of this is that…

* `2fq7c` is the signing test key subnet
* `fuqsr` is the backup test key subnet
* `2fq7c` generated a new key under 131391, and had it enabled for signing under 131392
* Sharing the new key with the backup subnet came next using a catchup package (131433, 131437, 131438), which exercises the mechanism I expect would be employed if the backup was ever needed (disaster recovery)
* The last two proposals (131449, 131450) switch the subnet roles so that the backup subnet (`fuqsr`) becomes the signing subnet. I expect this is to test the fidelity of the backup

This is my interpretation though, which could be wrong. I think these proposals could really do with elaborating the situation a little more in the summary (to explain the **why** and not just the **what**). @andrea, is there any chance of this? Would it also be possible to provide a notice of these sorts of proposals on a dedicated topic for each subnet in the future e.g. [Subnet Management - 2fq7c (Application) - Developers - Internet Computer Developer Forum (dfinity.org)](https://forum.dfinity.org/t/subnet-management-2fq7c-application/33665) (similarly to how IC-OS proposals are announced)?
[/quote]

-------------------------

Lorimer | 2024-08-02 13:57:22 UTC | #6

[quote="andrea, post:17, topic:28993"]
@Lorimer is correct in his assessment above. Here some additional context to these type of proposals:

**Key generation**
Key generation in a subnet happens with a single proposal, like [131391](https://dashboard.internetcomputer.org/proposal/131391). When this proposal is executed, the registry canister adds the new key ID in the subnet record. Once the node see the new record, they engage in the key generation protocol.

**Key Resharing**
Key resharing between subnets is a bit more involved as the key material is delivered via catchup packages (CUP). Currently the only way to deliver a CUP to a subnet is by using the recovery proposal, which involves 3 steps:

* The subnet receiving the key is halted at a CUP height, like in [131433](https://dashboard.internetcomputer.org/proposal/131433). This means that the subnet will continue until the next CUP is created and then it will stop.
* In the second step the registry is updated with a recovery CUP. If the proposal contains key IDs, like [131437](https://dashboard.internetcomputer.org/proposal/131437), the registry will request the specified subnet to reshare the keys, and these shares are then included in the CUP. If the height of the CUP is larger than the height of the local CUP, then the nodes of the subnet will fetch it from the registry and store it locally.
* The subnet is then restarted, like in proposal [131438](https://dashboard.internetcomputer.org/proposal/131438). The nodes will restart from the CUP with larger height. Once the subnet is operational again, the nodes will complete the key resharing protocol initiated by the other subnet and obtain a share of the key.

Regarding the current proposals (131449, 131450), the idea is to enable signing on the backup subnet to test that things work correctly there as well. This is the last test we planned, after which we could propose to generate (and backup) the production key. As a side note, switching subnets for the test key seems also a good idea in general because subnet `2fq7c` is has a lot of canisters and thus may be better to offload the signing to subnet `fuqsr` for the foreseeable future.
[/quote]

Thanks for providing further context @andrea. I have some questions about CUP proposals:
- How should a community member go about verifying that the proposed CUP is valid? This is particularly relevant for manually created CUPs during subnet recovery.
- Why does key resharing require a catchup package? Is this simply to ensure that in a worst case scenario the subnet does not *recover* to an earlier state prior to acquring the key (thereby loosing the key)?
- Subnets create a CUP every epoch without halting and restarting. Why does the subnet need to be halted and restarted when resharing keys?

[quote="andrea, post:17, topic:28993"]
I was not aware of these threads, but it sounds like a good idea in general.
[/quote]

Thanks @andrea, I'm looking forward to these sorts of proposals being announced on these threads in the future if that's feasible :slight_smile:

-------------------------

andrea | 2024-08-06 12:07:43 UTC | #7

All very good questions!

[quote="Lorimer, post:6, topic:33655"]
How should a community member go about verifying that the proposed CUP is valid? This is particularly relevant for manually created CUPs during subnet recovery.
[/quote]

Yes, that's indeed tricky right now. I believe people are looking into improving the entire recovery process, but I am not the most up to date person on this. Let me ping some other team member.

> * Why does key resharing require a catchup package? Is this simply to ensure that in a worst case scenario the subnet does not *recover* to an earlier state prior to acquiring the key (thereby loosing the key)?

Currently the only mechanism in place to deliver threshold keys to a subnet is via the registry in a catch-up package. This is the mechanism used during subnet creation and recovery, where the NIDKG keys are delivered to the subnet while it is not operating, as these are needed by the consensus protocol. The same mechanism is reused by ECDSA/Schnorr. The main reason for reusing this is that it is convenient and it does not introduce extra complexity. E.g. CUPs reference an height, which makes it easy for the nodes of a subnet to determine if the CUP in the registry is more recent than the local one and decide which one they should be using. If the keys are included, e.g., as separate records in the registry, the nodes would need to monitor this record for changes across multiple registry versions to decide whether they should use it or not. 

In principle you could deliver the keys to a running subnet in other ways, e.g. using XNet communication. This is appealing but it adds some difficulties:
* Key resharing may fail: the source subnet may initiate the key resharing (e.g. as a result of a proposal or a subnet record update), but only deliver the key at a later time. In the meantime the subnet may have changed topology, and the delivered key may be unusable on the target subnet. These failures would need to be handled in some way.
* The registry should reflect whether a key resharing failed, e.g. by not including the key ID in the subnet record. If the registry is used to deliver the keys, it is possible to perform certain checks before updating the subnet record. If the keys are delivered in other ways, it becomes more difficult to reflect the result in the registry, or it may cause the registry to have long running open call contexts with multiple subnets, which may not be desirable.

> * Subnets create a CUP every epoch without halting and restarting. Why does the subnet need to be halted and restarted when resharing keys?

In normal operation the subnet has all the information to create and agree on a CUP. In this case the key is on a different subnet, and it needs to be delivered to the backup subnet before this can be included in a normal CUP. The subnet has to be stalled, because the recovery CUP includes the last reported state hash from the subnet and the new key, but most importantly has a larger height than the last CUP of the subnet. If the recovery CUP was not executed with a stalled subnet, then either some subnet state will be lost, or the recovery CUP will be ignored by the subnet if it had already moved past that height. 


Anyway, having the possibility of resharing to a running subnet sounds definitely like a good idea. So far these proposals have been very rare, so it did not seem very critical to support this given the extra complexity. As more keys are added to the IC and more dapps depend on them, this may change in the future.

-------------------------

Lorimer | 2024-08-06 20:58:30 UTC | #8

Thanks for the detailed explanation @andrea! This is very helpful and much appreciated.

[quote="andrea, post:7, topic:33655"]
Yes, that’s indeed tricky right now. I believe people are looking into improving the entire recovery process, but I am not the most up to date person on this. Let me ping some other team member.
[/quote]

If there's practically no means for the community to inspect and verify a catch up package, it seems the only prudent way to handle these proposals is to abstain or reject them (not with the intention of blocking the proposal, but to highlight the inability to cast a confident vote that doesn't require trust). Does this sound like a reasonable way of looking at this?

-------------------------

Manu | 2024-08-07 12:30:59 UTC | #9

One potential path to make progress on this front would be along the lines of
1. let replicas somehow expose the checkpoint hashes that they have 
2. in case of an incident that requires recovery, introduce a proposal that lets replicas on a subnet create a special checkpoint at a certain height and stop there

With that, in case of some stall or crash loop or so, we could submit a proposal that lets replicas take a checkpoint at the latest computable state, which users can then see because the checkpoint hashes are exposed, and then finally a proposal can set a new recovery CUP with that state hash.

-------------------------

Lorimer | 2024-08-08 19:48:53 UTC | #10

This sounds great 👍 I think until something like this is implemented I'll plan to reject these sorts of proposals (just to keep some visibility on the need for this feature).

As a separate but related question, it's often critical for these proposals to be accepted promptly to minimise disruption - in a theoretical future where governance power is significantly more decentralised than it is now, what mechanisms would be employed to encourage these sorts of proposals to be reviewed promptly by the community (or is this too far away to be a concern right now)?

-------------------------

Manu | 2024-08-08 07:29:48 UTC | #11

Yeah I thought about it a bit. With the following mechanism and plans to incentivize being followed, I expect that in the near future, a handful of voting neurons have significant voting power and be required to reach >50% VP. Those neurons would have a lot of responsibility, and I think one part of that responsibility would be that they can somehow be contacted in case of emergency and help with quick verification and voting on urgent proposals (which should be extremely rare). 

With periodic confirmation, hopefully neuron holders once in a while carefully think about who they follow and whether the neuron they follow is doing a good job handling that responsibility or not. If the neuron I follow does not actually help vote quickly in case of emergency, I would consider delegating my voting power to someone else.

-------------------------

bitdivine | 2024-08-15 09:15:16 UTC | #12

Quickly and accurately.  A quick automatic yes or no is of course also not cool. :sweat_smile:

-------------------------

