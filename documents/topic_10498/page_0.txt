ueyamamasashi | 2022-01-26 10:29:18 UTC | #1

[How do I send a Blob from JS frontend to Motoko backend?](https://forum.dfinity.org/t/how-do-i-send-a-blob-from-js-frontend-to-motoko-backend/9148) was not settled for me.So I want to continue.

I use [ext-token: erc721.mo](https://github.com/Toniq-Labs/extendable-token/blob/main/examples/erc721.mo), but error.
My thought for this error is directly `metadata` type because there is 
```
if (!t.covariant(x)) {throw new Error.....} //at Module.encode (index.js:4522:75)
```
I have tried way that match Blob type in motoko in [link](https://forum.dfinity.org/t/how-do-i-send-a-blob-from-js-frontend-to-motoko-backend/9148) like a using `new Unit8Array`.
But may be different points. I don't know.... I want to do without this error!!
```
index.js:4524 Uncaught (in promise) Error: Invalid record {to:variant {principal:principal; address:text}; metadata:opt vec nat8} argument: {"to":{"principal":{"_arr":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1},"_isPrincipal":true},"address":"test"},"metadeta":[97,98,99,100]}  //metadata is changed from string of "abcd" in input form
    at index.js:4524:19
    at index.js:3435:29
    at Array.map (<anonymous>)
    at zipWith (index.js:3435:15)
    at Module.encode (index.js:4522:75)
    at caller (index.js:199:74)
    at CanisterActor.handler [as mintNFT] (index.js:221:34)
    at HTMLButtonElement.<anonymous> (index.js:17799:99)
```
My front-end code(index.js)
```
import { dfinity_nft_ext } from "../../declarations/dfinity_nft_ext";
document.getElementById("mintNftBtn").addEventListener("click", async () => {

  const nft = document.getElementById("nft").value.toString();
  const blob = new Blob([nft], {type: 'text/html'});
  const arrayBuffer = [...new Uint8Array(await blob.arrayBuffer())];
  const minter = await dfinity_nft_ext.getMinter();
  console.log("miner::::"+minter);
  const mintReq = {
    to: { principal: minter, address: "test" }, //minter is owner of mint, address is properness
    metadeta: arrayBuffer
  };
  const minted = await dfinity_nft_ext.mintNFT(mintReq);  // mint
  console.log("minted::::"+minted);  //Maybe return minted number
});
```

-------------------------

bytesun | 2022-01-26 15:43:53 UTC | #2

[quote="ueyamamasashi, post:1, topic:10498"]
` to: { principal: minter, address: "test" },`
[/quote]

I don't think this is right. to is variant, which means it should be either principal or address, can't be both.
so you might to try:

to: { principal: minter},

-------------------------

ueyamamasashi | 2022-01-26 23:13:55 UTC | #3

Thank you for reply.
Unfortunally, come up next error.
```
Uncaught (in promise) Error: Record is missing key "metadata".
```
My thought is deleting `address` in `to` key cause Object style's wrong, or `metadata` key lost something happen.

It would be very helpful if you could let me know.Tnank you in advance.


`mintNFT` argument  'MintRequest' is here.

```
public type MintRequest = {
    to : ExtCore.User;
    metadata : ?Blob;
  };
```
`ExtCore.User` is
```
public type User = {
    #address : AccountIdentifier; //No notification
    #principal : Principal; //defaults to sub account 0
  };
```

-------------------------

bytesun | 2022-01-27 01:30:26 UTC | #4

[quote="ueyamamasashi, post:1, topic:10498"]
```
const mintReq = {
    to: { principal: minter, address: "test" }, //minter is owner of mint, address is properness
    metadeta: arrayBuffer
  };
```
[/quote]

I guess it's typo :grinning:  metadata , not metad**e**ta

-------------------------

ueyamamasashi | 2022-01-27 10:29:58 UTC | #5



Oh, that is shame! :smiley:

Unfortunally, an error at first came back after changing typo.I don't want to take your time.But,I want to know why.I will write article in Japanese if I can get through.So I need to help.At first, what I did is for an error of `Error: Invalid record`

**change principal type**
Variant `minter` have two "_arr" and "_isPrincipal" in Object, so chaged `minter` to "rrkah-fqaaa-aaaaa-aaaaq-cai" hard code.
**Result**
doesnt change, same error.
**confirmation**
`metadate type` is Blob in backend. *Corresponding JavaScript values => [ 1, 2, 3, 4, ... ]* in [Type Blob in Document](https://smartcontracts.org/docs/candid-guide/candid-types.html). 
`metadate` type seems OK as long as I see front-end's input value.


Then, what point is it in this error of `covariant(x) {throw new Error}`?Covariant means "match" simply saying?
My thought is front-end type doesn't match back-end's. But,I feel this is clear.What should I check next?
Thank you in advance.

-------------------------

paulyoung | 2022-01-27 14:05:38 UTC | #6

はじめまして、@ueyamamasashi さん。

Please forgive me if my greeting is incorrect. This is my first time trying to use Japanese in an online context.

The `covariant` error suggests that you are providing a value of the wrong type somewhere.

https://github.com/dfinity/agent-js/blob/2fe3dd99cddfcf45c6d9d5b7a199a86285ce9740/packages/candid/src/idl.ts#L194-L198

Please could you share your updated code with the typos fixed, and the latest error along with the stack trace?

-------------------------

bytesun | 2022-01-27 14:36:16 UTC | #7

If you want hardcore, need wrap it to Principal type :  Principal.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai")


and it looks like this is a canister id, not sure if there is a validate for it, so you might use a real "user" principal for test first.

-------------------------

ueyamamasashi | 2022-01-28 06:26:30 UTC | #8

Thank you for your kindness.It is very helpful for beginner like me.
But, hurdle is very high as you say that **wrap to Principal type**.I tried, but I feel I shouldn't do that.
Yes, this is `canister id`. I confuse principal id and canister id because both of types is same Principal.I try hard to learn more.
I keep going forward I will close this question.
Thank you again!!

-------------------------

ueyamamasashi | 2022-01-28 07:01:25 UTC | #9

はじめまして :innocent: yes, correct!

Thank you for reply. I am so glad to get reply, you and your team are so kind. I am one of Japanese Dfinity team.We will make open source code for NFT etc. But, my skill is not enough for this.
This time, my error is coming from wrong type as you teach me, but I don't know where I bring principal id from.
Here is stack trace. I don't know well so I put images not only concole but source.
**console**(chrome validation)
![ScShot 2022-01-28 15.50.38|690x115](upload://58kUGAVsGSSL8vynbZcXczntqMR.png)
** source**(chrome validation)
![ScShot 2022-01-28 15.53.02|690x197](upload://s0gXRCgfFVWwym2RqicvyZ1ket8.png)
**my code**(index.js)
```
const mintReq = {
    to: {
      principal: "iuj24-a5hic-jrod4-5oq3e-artpl-6khow-3sly6-4nonf-d2pjr-emp2g-kqe" }, 
      metadata: arrayBuffer
  };
  const minted = await dfinity_nft_ext.mintNFT(mintReq);  // mint
```
`Principal Id` is result of command `dfx identity get-principal`(I think type is matched)

-------------------------

paulyoung | 2022-01-28 07:17:22 UTC | #10

Please give this a try:

```
const mintReq = {
  to: {
    principal: Principal.fromText("iuj24-a5hic-jrod4-5oq3e-artpl-6khow-3sly6-4nonf-d2pjr-emp2g-kqe")
  },
  metadata: arrayBuffer
};
const minted = await dfinity_nft_ext.mintNFT(mintReq);  // mint

-------------------------

ueyamamasashi | 2022-01-28 12:55:02 UTC | #11

[quote="paulyoung, post:10, topic:10498"]
`Principal.fromText("iuj24-a5hic-jrod4-5oq3e-artpl-6khow-3sly6-4nonf-d2pjr-emp2g-kqe")`
[/quote]

Thank you very much. But I got `not a function` error.
![ScShot 2022-01-28 21.43.58|690x53](upload://dPQuSGNjAGBiNaddtaVIMMDNkgM.png)


No typo this time. -> did manytime
Made sure `Principal.fromText` is function. -> func fromText(t : Text) : [Principal](https://smartcontracts.org/docs/base-libraries/Principal.html#type.Principal)

Did I make sure module of "@dfinity/candid/lib/cjs/idl", didn't I?

What should I do next?

-------------------------

ClankPan | 2022-01-28 13:42:47 UTC | #12

metadata needs optional type.
https://github.com/Toniq-Labs/extendable-token/blob/main/motoko/ext/NonFungible.mo#L9

-------------------------

coin_master | 2022-01-28 15:51:11 UTC | #13

I think you need to import from `@dfinity/principal`

-------------------------

MCLYang | 2022-06-11 08:02:21 UTC | #14

Still does not work here is my code


```
let mintNFT = async (_minter, _metadata) => {
  const mintReq = {
    to: { principal: _minter },
    metadata: _metadata,
  };
  res = await actor.mintNFT(mintReq).catch((e) => {
    return "Error" + e;
  });
  return res;
};

let text = "asdcxzvuioashnuid";
let arr = [...new Uint8Array(Buffer.from(text, "utf-8"))];
mintNFT(Principal.fromText("2vxsx-fae"), arr).then((res) => {
  console.log(res);
});
```
the error result is like 
`ErrorError: Invalid record {to:variant {principal:principal; address:text}; metadata:opt vec nat8} argument: {"to":{"principal":{"_arr":{"0":4},"_isPrincipal":true}},"metadata":[97,115,100,99,120,122,118,117,105,111,97,115,104,110,117,105,100]}`

btw this works
```
  const mintReq = {
    to: { principal: _minter },
    metadata: [],
  };
```
So I guess is the problem of nat8?

-------------------------

MCLYang | 2022-06-11 16:37:25 UTC | #15

Problem resolved. Since the require ?Blob rather than Blob.  the metadata should be `metadata: [[...new Uint8Array(Buffer.from("asdcxzvuioashnuid", "utf-8"))]]`

https://internetcomputer.org/docs/current/references/candid-ref/#type-opt

```
Type opt t

Corresponding JavaScript values
null translates to [].

opt 8 translates to [8].

opt opt "test" translates to [["test"]].
```

-------------------------

ueyamamasashi | 2022-06-11 22:59:40 UTC | #16

[quote="MCLYang, post:15, topic:10498"]
https://internetcomputer.org/docs/current/references/candid-ref/#type-opt
[/quote]


I was stuck with it, unable to resolve it.
Thanks. :pray:

-------------------------

