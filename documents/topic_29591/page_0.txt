elija6266 | 2024-04-11 14:15:49 UTC | #1

Hello there,

As I am relatively new to DFINITY and I am eager to learn more about the Canister SDK and Motoko programming language. I've been exploring the official documentation, but I'm looking for some guidance on getting started with these tools.

I would appreciate some pointers on setting up the Canister SDK for local development. What are the recommended tools and IDEs for working with the Canister SDK? Are there any best practices or common pitfalls I should be aware of?

As I delve into Motoko, I'm curious about its features and advantages compared to other languages for smart contract development. Are there any specific resources or tutorials that you would recommend for learning Motoko from scratch?

To those who have been using DFINITY for a while, what advice would you give to beginners like me? Are there any tips or tricks that could make the learning curve smoother?

I'm excited to be part of this community and I look forward to your insights and recommendations. 

Thank you in advance for your help and assistance.

-------------------------

kpeacock | 2024-04-11 18:06:40 UTC | #2

I personally use `dfx`, along with VSCode and the `Motoko` extension. 

If you're interested in learning Motoko as a language, definitely check out https://www.motokobootcamp.com/

I'd also say to start using https://mops.one/ as a package manager from the start, since they have very helpful libraries to make your journey easier

-------------------------

CLP | 2024-04-12 01:55:39 UTC | #3

What a coincidence, we just shared the development tools on Twitter and saw your post. 

The CLP development team uses VS Code as the IDE and installed Dfinity Foundation's Motoko plug-in and Baidu's Comate plug-in.
Motoko is mainly used to speed up writing code and check basic errors.
comate is very powerful and we highly recommend it. The key is that comate supports the motoko language (in fact, it supports all common development languages). It can help you generate large amounts of code and can help read code you copied from elsewhere.
Therefore, our development scenario is: tell comate the functions we need, comate automatically generates code including comments, we make necessary modifications and additions based on the product, and use the Motoko plug-in to do basic checks.
For the subsequent deployment steps, please follow the instructions in the official documentation.

We would love to meet more developers, learn from and help each other.

Twitter post:  https://twitter.com/CLPFinance721/status/1778588385289892243 
baidu comate: https://comate.baidu.com/
![image|615x500](upload://sIRgytjyaVDAO4zfXcoVs6Iz5no.png)

-------------------------

CLP | 2024-04-12 02:04:01 UTC | #4

Add another very effective tool: the "ICP.AI" button in the upper right corner of the developer document interface. This is a real AI, not a function of querying documents. You can ask it any questions about development in natural language.

![image|690x357](upload://rcLz5qVYgJOJNly7hbkH8PXRe9P.png)

-------------------------

elija6266 | 2024-04-12 04:40:48 UTC | #5

Hello there,

Thanks for sparing a time first of all mate as I really found this helpful and informative.

Regards.

-------------------------

