CJentzsch | 2021-03-30 17:58:49 UTC | #1

Short question. I am new here and wanted to understand how private is the data stored in the state of a canister?
In the FAQ I did read " The Internet Computer supports both open and private canisters, ...".
What are the features of private canisters? Can anyone point me to documentation or examples using private canisters?

I am used to Ethereum, where anything that is not encrypted is completely public, state, transactions, and code. How does Dfinity compare to this?

-------------------------

ililic | 2021-04-01 01:38:48 UTC | #2

Hi @CJentzsch, welcome to the Dfinity forum - great to see your name here!

We'll update the FAQ question to further clarify; at the present there is no system-level feature for private canisters. 

At Genesis, the [system API](https://sdk.dfinity.org/docs/interface-spec/index.html) provides entry points to canisters via public methods. Consumers of your canisters will only be able to access state marked as public. However, node operators could theoretically inspect the state of canisters on the physical machines they are hosting. 

Of course, any data encrypted prior to ingress by a canister remains encrypted.

The team has ideas around privacy enabling canisters and subnets but those are on the post-Genesis roadmap. 

Is there any particular feature that you are hoping to see?

-------------------------

CJentzsch | 2021-04-01 09:05:52 UTC | #4

Thanks for your response.
I understand that features such as homomorphic encryption are not there yet.
But is non-public data, such as the state of a canister which is not readable through public functions, private? In the same way as my data on AWS nodes are private? 
I am not talking about the level of privacy where even the admin of a datacenter has no access to the data, I just mean the level of privacy that the general public has no access to it (compared to smart contracts on Ethereum).

-------------------------

dpdp | 2021-04-01 09:46:46 UTC | #5

I invite you to read https://sdk.dfinity.org/docs/developers-guide/tutorials/access-control.html

-------------------------

Ori | 2021-04-01 09:48:09 UTC | #6

Yes it is in that regard, you have full control over who can query your data at the point of entry into your canisters, you can check the caller and make decisions in your code on whether or not to return data.

-------------------------

