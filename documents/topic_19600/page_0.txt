skilesare | 2023-04-24 22:27:26 UTC | #1

A few updates on Candy Library!

A few weeks ago we proposed ICRC-16 - https://forum.dfinity.org/t/icrc-16-candyshared-standardizing-unstructured-data-interoperability/18893

Since then we've had some communication with the community and made a few adjustments.

I'm happy to announce that we've updated Candy Library for Motoko to the 0.2.0 version that is compliant with ICRC-16.  This is a breaking change that has some quality-of-life improvements including

* getting rid of the #frozen and #thawed syntax for arrays
* Stable Hashes
* Equality
* An upgrade function to move from 0.1.12 to 0.2.0
* A Map and Set structure that map to v7.0.0 of @ZhenyaUsenko's map which should make storing CandyLibrary objects in stable heap variables much easier in motoko
* Improved Documentation - Should start compiling as soon as we get the CI file fixed.

The latest branch can be found at https://github.com/icdevs/candy_library/tree/0.2.0.  Special thanks to @darkdrag00n and @ZhenyaUsenko for the help.  We'll publish a final release once the community has had eyes on it.

We also have a Rust version thanks to @DunkanMcLoud at https://github.com/IT-Union-DAO/candy-rs.  This should help interop between Rust and Motoko canisters.

Our hope is that the format will become the canonical way to move dynamic, unstructured data from one canister to another.

We should soon have updates to CandyPath and CandySchema that will help with parsing, searching, and making sure that data is formatted correctly.

-------------------------

