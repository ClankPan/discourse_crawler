toysrtommy | 2021-05-21 13:51:26 UTC | #1

Hi! I'm trying to code sth. that could programmatically create new neurons through either dfx or endpoints.  From playing with the NNS webapp, it seems that creating new neuron somehow involves sending ICP to Governance canister (send_pb call and notify_pb call)?  

Could someone explain in details? thanks!

-------------------------

cryptoschindler | 2021-05-21 15:12:30 UTC | #2

Hey there, welcome to the community :slight_smile: 
> <strong>Create neuron</strong>
When the principal is a public key holder, they may lock a portion of their balance inside a new neuron. Technically, creating the neuron is done in two stages. First transfer the ICP to be staked to an account of the governance canister (which corresponds to a new neuron â€” the details of the association are omitted here). Then notify the governance canister of the incoming transfer which updates its internal neuron bookkeeping. If the entire balance is locked inside a new neuron, the account ceases to exist (i.e., is deleted from the ledger). To move these ICP to a different account, such as back to the original account, where they can once again be controlled like a normal balance, the associated neuron must be fully dissolved and disbursed (destroyed). The new neuron that has been created is controlled by the private key of the principal that created it.

[[source]](https://medium.com/dfinity/understanding-the-internet-computers-network-nervous-system-neurons-and-icp-utility-tokens-730dab65cae8)

Does this help?

-------------------------

toysrtommy | 2021-05-21 15:16:40 UTC | #3

Yes I've read this part.  Thank you.

It seems like I need to send from a subaccount to a subaccount of governance canister. 

How do you do that through dfx or protobuf exactly? What would be the command / params to do that?  How do you find out the receiving accounts of the governance canister for staking purpose?

-------------------------

toysrtommy | 2021-05-22 04:18:42 UTC | #4

cc @prithvi @paulyoung @PaulLiu

-------------------------

PaulLiu | 2021-05-26 21:48:24 UTC | #5

I also wanted to do this, but I've not figured this out myself yet. @wang has collected the set of Candid interface files in his [IC Tools repository](https://github.com/ic-cubes/ic-tools/tree/main/public/interfaces/nns), which can be helpful. But setting up those did file to use with dfx is still a bit awkward.

There is now a [icx command](https://github.com/dfinity/agent-rs/tree/next/icx) that is simpler than dfx, and can communicate with the IC directly. But still, you'll need go through some Candid encoding/decoding in order to talk to the governance and other canisters.

-------------------------

toysrtommy | 2021-05-26 23:03:31 UTC | #6

thanks Paul. I'll try ic-tools

I've found how to create neurons, with some clue from Norton's ic tools. 
here's the python code: 
https://gist.github.com/toysrtommy/75ac3d0ecf314942681c0a0fbdfabfa5

-------------------------

cryptoschindler | 2021-06-06 07:59:21 UTC | #7

Also summarized here for the command line:
https://ic.associates/nns-command-line-guide/#create-neuron

-------------------------

