jamesbeadle | 2024-08-04 19:01:19 UTC | #1

So I usually get the ledger balance for a user using the backend but I want to use the frontend libraries available for me since they have a lot more features. 

When getting a user's account balance in motoko, I'd do this:

```

    public func getAccountBalance(principalId : Principal) : async Nat {
      let balance = await ledger.icrc1_balance_of({owner = principalId; subaccount = null});
      return balance;
    };
```

Giving me their account balance. I get an error when I try to replicate this on the frontend using the IcrcLedgerCanister type from the @dfinity/ledger-icrc library:

![image|690x290](upload://6aks1MqvHJoLoumHn9EoJfCzEpw.png)

Specifically:

Canister called `ic0.trap` with message: failed to decode call arguments: Custom(Fail to decode argument 0 from table2 to record { owner : principal; subaccount : opt blob }\n\nCaused by:\n    Deserialize error: invalid length 0, expected an array of length 32)

Now again on the backend I have a function that pads the 29 byte array to make it 32 bytes, just wondering if there is an example anywhere of how to do this on the frontend?




```

-------------------------

peterparker | 2024-08-05 04:33:45 UTC | #2

[quote="jamesbeadle, post:1, topic:33863"]
if there is an example anywhere of how to do this on the frontend?
[/quote]

Not exactly sure what you are looking for nor if its relates but, you can maybe have a look to the [neuronSubaccount](https://github.com/dfinity/ic-js/blob/2cb316fbcd90e8c588528ebdce41f75bae6cb5d5/packages/sns/src/utils/governance.utils.ts#L18) or [AccountIdentifier](https://github.com/dfinity/ic-js/blob/2cb316fbcd90e8c588528ebdce41f75bae6cb5d5/packages/ledger-icp/src/account_identifier.ts#L28) implementation.

-------------------------

baolongt | 2024-08-05 06:32:06 UTC | #3

You can read my implement [here](https://github.com/Alpaca-Labs-ICP/token-adapter/blob/master/src/icrc1.ts#L85) 
or use this [lib](https://www.npmjs.com/package/@alpaca-icp/token-adapter) the same source above but as a package :smiley:

-------------------------

jamesbeadle | 2024-08-05 17:09:04 UTC | #4

Someone deposited FPL to their OpenFPL principal ID, which is fine, it's where the winnings will go too. 

I want to show the balance, usually I do this by getting from the backend and sending a DTO to the frontend. But I'd like to try just getting the balance directly in the frontend to save the round trip.

-------------------------

peterparker | 2024-08-05 17:27:28 UTC | #5

Your original question is about left padding, so I answered your original question. ü§∑‚Äç‚ôÇÔ∏è

If it's another question, please share a code snippet and some details about the values, not sure what's your issue.

-------------------------

jamesbeadle | 2024-08-05 18:34:58 UTC | #6

My original question and the second comment are both about getting the FPL balance using some kind of frontend library. It‚Äôs fine I‚Äôll just use the backend.

-------------------------

peterparker | 2024-08-05 18:50:50 UTC | #7

Ok, as you wish. Feel free to provide a snippet in which you get the issue and some data. Happy to have a look.

-------------------------

jamesbeadle | 2024-08-06 02:05:48 UTC | #8

```

async function getFPLBalance(): Promise<bigint> {
let identity: OptionIdentity;

authStore.subscribe(async (auth) => {
identity = auth.identity;
});

if (!identity) {
return 0n;
}

let principalId = identity.getPrincipal();

console.log(principalId);

const agent = await createAgent({
identity: identity,
host: import.meta.env.VITE_AUTH_PROVIDER_URL,
fetchRootKey: process.env.DFX_NETWORK === "local",
});

console.log(principalId);
const { balance } = IcrcLedgerCanister.create({
agent,
canisterId:
process.env.DFX_NETWORK === "ic"
? Principal.fromText("ddsp7-7iaaa-aaaaq-aacqq-cai")
: Principal.fromText("avqkn-guaaa-aaaaa-qaaea-cai"),
});

if (principalId) {
try {
let result = await balance({
owner: principalId,
subaccount: [],
certified: false,
});
console.log(result)
return result;
} catch (err: any) {
console.error(err);
}
}

return 0n;
} ``` this was what was giving me the error

-------------------------

peterparker | 2024-08-06 04:21:43 UTC | #9

[quote="jamesbeadle, post:8, topic:33863"]
```
let result = await balance({
owner: principalId,
subaccount: [],
certified: false,
});
```
[/quote]

Thanks for the snippet.

Not sure exactly if your extracted few parts or if it's one to one your implementation. If the latest, their might be a race condition regarding the `identity`, therefore, I would add a `console.log(principalId.toText()` just before the call to `balance` and do a manual test to observe if indeed the `owner` is correctly set.

As a second try, I would try to not provide the `subaccount` if it is not used.

```
console.log('Is there a race condition?', principalId.toText());

let result = await balance({
   owner: principalId,
   certified: false,
});
```

-------------------------

jamesbeadle | 2024-08-06 18:52:49 UTC | #10

Hi David,

You were spot on, the way to get it working was to remove the subaccount: [] and just have the owner propery in the params. 

Thanks for the help.
James

-------------------------

