NS01 | 2023-03-06 20:59:57 UTC | #1

Hello Folks, 

I've been banging my head against a wall trying to get the sub-accounts of a principal in NodeJS using the agent-js lib. I feel like I'm missing something silly as this seems like it should be basic functionality. 

I can get the account ID from a principal quite easy using

```
import { Principal } from "@dfinity/principal";
import { AccountIdentifier } from "@dfinity/nns";

let ID = "XXXXX-XXXXX-..." 
const principal = Principal.from(ID);
const AI = AccountIdentifier.fromPrincipal({ principal });
const AC = AI.toHex();
console.log(AC);
```

I'm led to believe that you can add a sub-account parameter to .fromPrincipal({principal, subAccount})  I've tried every kind of data type for the subAccount parameter however keep getting the error "TypeError: r.toUint8Array is not a function or its return value is not iterable" 

Does anyone have working JS code for getting the sub accounts from a principal? 

Thanks in advance! 

Nathan.

-------------------------

mariop | 2023-03-07 09:16:03 UTC | #2

You can look at [how it is done in the nns-dapp](https://sourcegraph.com/github.com/dfinity/nns-dapp@026b08f9e9c8a569c12b85bdcc852e130e4a7860/-/blob/frontend/src/lib/utils/sns.utils.ts?L182):

```
const principalSubaccount = SubAccount.fromPrincipal(controller);
const accountIdentifier = AccountIdentifier.fromPrincipal({
  principal: swapCanisterId,
  subAccount: principalSubaccount,
});
```

-------------------------

peterparker | 2023-03-07 11:11:50 UTC | #3

From `npm i @dfinity/nns` -> [https://github.com/dfinity/ic-js/tree/main/packages/nns](https://github.com/dfinity/ic-js/tree/main/packages/nns)

-------------------------

NS01 | 2023-03-07 11:13:49 UTC | #4

To clarify I'm looking to know what type of data is required for subAccount - is it a blob, byte array etc?

-------------------------

peterparker | 2023-03-07 11:35:46 UTC | #5

[quote="NS01, post:4, topic:18849"]
To clarify I‚Äôm looking to know what type of data is required for subAccount - is it a blob, byte array etc?
[/quote]


- ICP pre ICRC-1, Subaccount is an object in our code: [https://github.com/dfinity/ic-js/blob/86d0fafd012fb3c3b3ef31c8aa4000cb6ff87c28/packages/nns/src/account_identifier.ts#L67](https://github.com/dfinity/ic-js/blob/86d0fafd012fb3c3b3ef31c8aa4000cb6ff87c28/packages/nns/src/account_identifier.ts#L67)

- ICRC-1 ledger, , Subaccount is an array: [https://github.com/dfinity/ic-js/blob/86d0fafd012fb3c3b3ef31c8aa4000cb6ff87c28/packages/ledger/candid/icrc1_ledger.d.ts#L26](https://github.com/dfinity/ic-js/blob/86d0fafd012fb3c3b3ef31c8aa4000cb6ff87c28/packages/ledger/candid/icrc1_ledger.d.ts#L26)

-------------------------

NS01 | 2023-03-07 20:55:42 UTC | #6

Thank you @peterparker .. now can you transfer all that rust knowledge you have to me? that would be fab ;)

-------------------------

peterparker | 2023-03-07 21:21:05 UTC | #7

Haha you won't go a long way with my noob Rust knowledges üòÅ. Happy to hear these links helped.

-------------------------

iamenochchirima | 2024-02-10 19:18:16 UTC | #8

Hi guys, I'm facing a typescript error trying to use the Subaccount and AccountIdentifier classes imports in my react project:

`import { AccountIdentifier, SubAccount } from "@dfinity/nns";`

After trying to use them like this:


```
const principalSubaccount = SubAccount.fromPrincipal(controller)
      const accountIdentifier = AccountIdentifier.fromPrincipal({
        principal: principalId,
        subAccount: principalSubaccount
      })
```
I am getting these ts errors:

`'SubAccount' only refers to a type, but is being used as a value here.ts(2693)`

Same for AccountIdentifier as well, my typescript skills are still weak, how can I fix this?

-------------------------

iamenochchirima | 2024-02-10 19:44:25 UTC | #9

So it turns they are now really just types, maybe a latest change? Now how can I get the actual classes?

-------------------------

peterparker | 2024-02-10 19:47:32 UTC | #10

[quote="iamenochchirima, post:8, topic:18849"]
import { AccountIdentifier, SubAccount } from "@dfinity/nns";
[/quote]

Which version of `@dfinity/nns` are you using? Those classes have been moved to `@dfinity/ledger-icp` for some time now.

Correct import would be:

```
import { AccountIdentifier, SubAccount } from "@dfinity/ledger-icp";
```

-------------------------

peterparker | 2024-02-10 19:49:50 UTC | #11

Ah I see it's because `@dfinity/nns` also export those with the same name as type, that's dumb. Legacy inheritance. We should clean that, good catch!

-------------------------

iamenochchirima | 2024-02-10 19:50:38 UTC | #12

Oh okay, thanks, I was just following this thread, I had installed the latest one, but have just switched to `@dfinity/ledger-icp` and it's fixed now. Thank you!

-------------------------

peterparker | 2024-02-10 19:51:41 UTC | #13

Great to hear it works out now!

I've taken note that I should have a look at cleaning up those types.

-------------------------

peterparker | 2024-02-12 06:15:52 UTC | #14

I provided a PR [#539](https://github.com/dfinity/ic-js/pull/539) this early morning to clean-up those types.

-------------------------

