saikatdas0790 | 2022-11-25 05:24:04 UTC | #1

If I have a list of canisters created dynamically, why do I need to have a dfx project configured to be able to delete them. This is an additional manual overhead and restriction which makes no sense.

If I am the controller principal of the canister, I should just be allowed to stop or delete the canister just as I can query the status of the canister.

This additional step is not really stopping anyone from being able to stop or delete the canister. They can easily create a mock dfx project and inject those canister ids in. But it is unnecessary and pointless.

[These restrictions](https://internetcomputer.org/docs/current/references/cli-reference/dfx-canister#dfx-canister-delete) should just be removed.

Thoughts?

-------------------------

saikatdas0790 | 2022-11-25 05:36:06 UTC | #2

After annoyedly (ðŸ¥²) having setup the project and deleted the canister, I have my answer.

To retrieve the remaining cycle balance to the controller's wallet, it installs a new wallet to the canister to delete, transfers it to the controller's wallet and then removes the canister. So, basically, to transfer out the cycle balance before removing the canister.

Having understood the mechanism, it is a HACK. The management canister should be handling the cycle transfer and doing it appropriately and not relying on the user's canister to do all the wallet canister installation shenanigans.

Thoughts?

-------------------------

Severin | 2022-11-25 08:36:25 UTC | #3

[quote="saikatdas0790, post:1, topic:16858"]
why do I need to have a dfx project configured to be able to delete them
[/quote]

There's no technical reason for that. I agree, this should be possible outside of a dfx project. You wouldn't be able to use canister names (since those are configured on a per-project basis), but that's no big deal. I added it to our list of annoyances that we want to fix at some point.

[quote="saikatdas0790, post:2, topic:16858"]
The management canister should be handling the cycle transfer and doing it appropriately and not relying on the userâ€™s canister to do all the wallet canister installation shenanigans.
[/quote]

I agree, this would make our (dfx developers') life easier. I'll try to bring it up, but I suspect it won't get changed because the current way is 'good enough'

-------------------------

saikatdas0790 | 2022-11-25 09:32:36 UTC | #4

Thank you for fighting for a better developer experience, Severin :slight_smile:

-------------------------

