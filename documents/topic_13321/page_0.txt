sat | 2022-05-27 13:33:49 UTC | #1

Hello there!

we are happy to announce that voting is now open for [a new IC release](https://github.com/dfinity/ic/tree/rc--2022-05-25_18-31).
The NNS proposal is here: [IC NNS Proposal 62143](https://dashboard.internetcomputer.org/proposal/62143).

There are lots of exciting new features and bugfixes. Here is a more complete list of changes:

```
* Consensus: Cross-platform compatibility fixes
* Crypto: Execute async jobs in tarpc CSP vault server on a thread pool
* Crypto: Improve clib error handling when complaints must be issued
* Crypto: Use a long-term stable serialization of PolynomialCommitment for generating the KeyId
* Execution: Add a metric to track total canister balance
* Execution: Add an optional offset for range queries in StableBTreeMap
* Execution: Bitcoin: Add extra verification check to ensure address is valid
* Execution: Bitcoin: Add support for taproot addresses.
* Execution: Bitcoin: Script for exploring a UTXO set
* Execution: Bitcoin: Use BTreeSet instead of HashSet in AddressUtxos
* Execution: Don't panic if get_utxos pagination request is received
* Execution: Make idle_cycles_burned_per_second a fixed point value
* Execution: Temporarily disable invariant check for incoming versus outgoing cycles in a round
* Execution: "bitcoin_get_balance" should return a nat64, and not a nat
* Message Routing: Enforce stream message and signal count limits
* Message Routing: Include reject signals in payload size estimate
* Message Routing: Reject messages addressed to inbound migrating canisters
* Networking: Add 'Canceled' and 'Unavailable' return types to bitcoin adapter client
* Networking: Bitcoin adapter should not use socks proxy for ipv6 btc nodes
* Networking: Create the ingress ingestion service buffering inside the HttpHandler
* Networking: Directly instantiate the LocalStore from the orchestrator and replay processes
* Networking: Move validator to executor
* Networking: Only sync bitcoin block after header chain passed final checkpoint
* Node: More SELinux fixes for journalbeat
* Node: SELinux Journalbeat fixes
* Node: SELinux fixes for LVM/cryptsetup
* Node: SELinux: allow pcscd to read system overcommit state
* Node: Various fixes to SELinux policy
* Orchestrator: removes the image caching
* Runtime: Implement performance counter
* Runtime: create RegistryExecutionSettings
* Runtime: Move IC00 routing out of System API
* Runtime: Move heap delta clearing logic to execution layer
* Runtime: Update refactor (hypervisor part)
* Various bug fixes and test updates
```

And a complete list of changes can of course be found on github.
Please reply to this message if you have any questions or comments.

-------------------------

808mafia | 2022-05-28 02:50:46 UTC | #2

great :money_mouth_face: can we unlock seed neurons in the next release?

-------------------------

