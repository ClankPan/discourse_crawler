pdutra145 | 2024-07-14 15:59:46 UTC | #1

**Is it possible to develop canisters that are able to use pandas dataframes that have the values fetched through some API and make some computations with the dataframe values (even though the canister public shared functions does not return or receives dataframes as arguments) ?**

**General Simple Example**
Fetch financial data with yfinance package and perform some operations on a query function that returns a float.

-------------------------

Severin | 2024-07-15 07:11:35 UTC | #2

Pinging @lastmjs for this

-------------------------

lastmjs | 2024-07-15 12:16:54 UTC | #3

Using Kybra just try them out. Only pude Python packages will work and only those that don't use unsupported APIs. We don't have a comprehensive list of these.

So the best thing to do is just get it.

-------------------------

pdutra145 | 2024-07-16 23:09:29 UTC | #4

I tried compiling the code with a simple hello world python canister and it failed to compile numpy. I guess kybra cannot compile C based python packages (at least not yet). Either way, thanks you guys for the support.

-------------------------

lastmjs | 2024-07-17 12:55:02 UTC | #5

Correct, no C extension support yet. I'm hoping sometime in 2025 this will be possible as CPython's Wasi support may include the Wasm component model by that time.

-------------------------

jennifertran | 2024-07-17 20:36:18 UTC | #6

Unfortunately, a lot of alternatives to Pandas such as Vaex and Polars are not compatible due to their dependencies. 

There are very lightweight pure Python pandas-like implementations out there that are quite old but might be able to do the job. For example, [pambdas](https://github.com/danhitchcock/pambdas) is a dependency-free pure Python dataframe.

Here is an example: https://github.com/jennifertrin/kybra-dataframes. 

You can certainly update the code to fetch data using HTTPS Outcalls, do some computation, and return a float. 

How much data are you looking at? I am suggesting that do you need a dataframe?

Please let me know what you end up doing.

-------------------------

