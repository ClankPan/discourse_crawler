Safik | 2023-06-05 12:45:11 UTC | #1

I am creating and assembling a web solution via react-scripts build.
I am creating a fully working instance of the site.
When building (dfx deploy), a lot of errors are thrown. It looks like dfx wants to build via webpack
**Question:**
How to build a website into a wasm file if I don't use webpack, but let's say I build it separately via react-scripts build.?

I did a similar thing in dfx version 0.12.1, I managed to build the web in wasm. I poured it into a web canister. I also have a demo version that works fine through the created via (dfx new) But the peculiarity is that I have an application react, with .ts

-------------------------

Severin | 2023-06-05 12:31:37 UTC | #2

@NathanosDev just added the ability to run custom build commands for asset canisters: [PR](https://github.com/dfinity/sdk/pull/3140). If you run the latest dfx beta release (0.14.1-beta.1) you should already have access to that feature

-------------------------

Safik | 2023-06-05 12:39:14 UTC | #3

Thanks! No I don't use beta versions :). I'll try it now.

-------------------------

Safik | 2023-06-05 12:58:41 UTC | #4

It doesn't work. Here are the errors.

![1|690x475](upload://kM0aLw2E6tnDsaAzRNo3VY3d7wH.png)

He wants to do something with webpack again. How to tell him: just make wasm it already works.?

-------------------------

Safik | 2023-06-05 13:15:50 UTC | #5

It worked. He does the build with errors. But it loads successfully!

-------------------------

Safik | 2023-06-05 14:30:42 UTC | #6

What could this error be related to?

![2|690x217](upload://qBsc3VHFEf5k0qwbKtVe5IpAmcB.png)

Ok, Tomorrow or a little later I will downgrade the dfx version to 12 and try to re-upload again

-------------------------

Severin | 2023-06-05 14:53:03 UTC | #7

That looks like a service worker issue. Do you have any errors in the console?

-------------------------

kpeacock | 2023-06-05 17:54:48 UTC | #8

you've cropped out potentially useful information. Are you visiting at `ic0.app`, or `icp0.io`?

-------------------------

Safik | 2023-06-06 04:56:28 UTC | #9

Yes, there are errors when building the project.
Console error:
dfx deploy
```
Building frontend...
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed to build all canisters.
    Failed while trying to build all canisters.
      The post-build step failed for canister 'bd3sg-teaaa-aaaaa-qaaba-cai' (web_admin) with an embedded error: Failed to build frontend for network 'local'.: The command '"npm" "run" "build"' failed with exit status 'exit status: 1'.
Stdout:

> rbac_frontend@0.2.0 prebuild
> dfx generate


> rbac_frontend@0.2.0 build
> webpack

dfx deploy
Deploying all canisters.
All canisters have already been created.
Building canisters...
Building frontend...
Error: Failed while trying to deploy canisters.
Caused by: Failed while trying to deploy canisters.
  Failed to build all canisters.
    Failed while trying to build all canisters.
      The post-build step failed for canister 'bd3sg-teaaa-aaaaa-qaaba-cai' (web_admin) with an embedded error: Failed to build frontend for network 'local'.: The command '"npm" "run" "build"' failed with exit status 'exit status: 1'.
Stdout:

> rbac@0.2.0 prebuild
> dfx generate


> rbac@0.2.0 build
> webpack

asset index.html 2.56 KiB [compared for emit]
asset index.js 99 bytes [compared for emit] (name: index)

ERROR in index
Module not found: Error: Can't resolve 'ts-loader' in '/home/fury02/Projects_4/rbac'

ERROR in unable to locate '/home/fury02/Projects_4/rbac/src/public/assets' glob

ERROR in Error: Child compilation failed:
  Module not found: Error: Can't resolve 'ts-loader' in '/home/fury02/Projects_4  /rbac'
  ModuleNotFoundError: Module not found: Error: Can't resolve 'ts-loader' in '/h  ome/fury02/Projects_4/rbac'
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/Compilation.js:20  16:28
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/NormalModuleFacto  ry.js:817:13
      at eval (eval at create (/home/fury02/Projects_4/rbac/node_modules/tapable  /lib/HookCodeFactory.js:33:10), <anonymous>:10:1)
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/NormalModuleFacto  ry.js:275:22
      at eval (eval at create (/home/fury02/Projects_4/rbac/node_modules/tapable  /lib/HookCodeFactory.js:33:10), <anonymous>:9:1)
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/NormalModuleFacto  ry.js:560:15
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/NormalModuleFacto  ry.js:118:11
      at /home/fury02/Projects_4/rbac/node_modules/webpack/lib/NormalModuleFacto  ry.js:631:8
      at /home/fury02/Projects_4/rbac/node_modules/neo-async/async.js:2830:7
      at done (/home/fury02/Projects_4/rbac/node_modules/neo-async/async.js:2925  :13)
  
  - Compilation.js:2016 
    [rbac]/[webpack]/lib/Compilation.js:2016:28
  
  - NormalModuleFactory.js:817 
    [rbac]/[webpack]/lib/NormalModuleFactory.js:817:13
  
  
  - NormalModuleFactory.js:275 
    [rbac]/[webpack]/lib/NormalModuleFactory.js:275:22
  
  
  - NormalModuleFactory.js:560 
    [rbac]/[webpack]/lib/NormalModuleFactory.js:560:15
  
  - NormalModuleFactory.js:118 
    [rbac]/[webpack]/lib/NormalModuleFactory.js:118:11
  
  - NormalModuleFactory.js:631 
    [rbac]/[webpack]/lib/NormalModuleFactory.js:631:8
  
  - async.js:2830 
    [rbac]/[neo-async]/async.js:2830:7
  
  - async.js:2925 done
    [rbac]/[neo-async]/async.js:2925:13
  
  - child-compiler.js:169 
    [rbac]/[html-webpack-plugin]/lib/child-compiler.js:169:18
  
  - Compiler.js:551 finalCallback
    [rbac]/[webpack]/lib/Compiler.js:551:5
  
  - Compiler.js:577 
    [rbac]/[webpack]/lib/Compiler.js:577:11
  
  - Compiler.js:1199 
    [rbac]/[webpack]/lib/Compiler.js:1199:17
  
  
  - Hook.js:18 Hook.CALL_ASYNC_DELEGATE [as _callAsync]
    [rbac]/[tapable]/lib/Hook.js:18:14
  
  - Compiler.js:1195 
    [rbac]/[webpack]/lib/Compiler.js:1195:33
  
  - Compilation.js:2787 finalCallback
    [rbac]/[webpack]/lib/Compilation.js:2787:11
  
  - Compilation.js:3092 
    [rbac]/[webpack]/lib/Compilation.js:3092:11

1 ERROR in child compilations (Use 'stats.children: true' resp. '--stats-children' for more details)

1 error has detailed information that is not shown.
Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.

webpack 5.81.0 compiled with 4 errors in 194 ms

Stderr:
Building canisters before generate for Motoko
Generating type declarations for canister web_admin:
  src/declarations/web_admin/web_admin.did.d.ts
  src/declarations/web_admin/web_admin.did.js
  src/declarations/web_admin/web_admin.did
Generating type declarations for canister rbac:
  src/declarations/rbac/rbac.did.d.ts
  src/declarations/rbac/rbac.did.js
  src/declarations/rbac/rbac.did

```

nex steps:
- copy files .dfx/local/canisters in .dfx/ic/canisters
- dfx canister --network ic install web_admin --mode reinstall
not errors


dfx version 0.14.1

-------------------------

Safik | 2023-06-06 04:50:22 UTC | #10

My web:
[https://gyuwx-hqaaa-aaaan-qdw2a-cai.icp0.io/](https://gyuwx-hqaaa-aaaan-qdw2a-cai.icp0.io/)

-------------------------

Safik | 2023-06-07 08:56:06 UTC | #11

Hi!
I have not yet understood the essence of the problem.

1)Next step(failed): 
I uploaded via fleek by choosing IC as the hosting.
https://cmco3-qaaaa-aaaad-qfmnq-cai.ic.fleek.co
Error: *Bad gateway Error code 502*
2)Next step(success): 
I also uploaded via fleek but used IPFS hosting
[delicate-mode-7341.on.fleek.co
](https://delicate-mode-7341.on.fleek.co/)



Sending files via the console to my web canister also leads to errors
https://gyuwx-hqaaa-aaaan-qdw2a-cai.icp0.io

-------------------------

NathanosDev | 2023-06-07 09:50:27 UTC | #12

Is it possible to share your project?

If not, could you please share your full `dfx.json` and `package.json` and the commands that you are running in your terminal to build your project?

-------------------------

Safik | 2023-06-07 10:40:05 UTC | #13

This : https://github.com/fury02/rbac-dev
Web : https://github.com/fury02/rbac-dev/tree/main/src/web_admin

I also changed configs and did something similar. Considering upgrades to dfx 0.14.1
> "web_admin": {
>       "frontend": {
>         "entrypoint": "src/web_admin/src/index.tsx"
>       },
>       "source": [
>         "src/web_admin/src"
>       ],
>       "type": "assets",
>       "build": ["react-scripts build"]
>     }

-------------------------

NathanosDev | 2023-06-07 12:04:06 UTC | #14

Thanks for sharing your project. So it seems that support for custom build commands for asset canisters has not been included in the `0.14.1` release of DFX, even though the release notes include it. But you can fix your project without using this custom build command.

One issue on your project comes from having multiple `package.json` files. The `package.json` at the root of your project is the one that DFX is using to build your project, but the correct build configuration for your project is in `src/web_admin/package.json`.

Another issues comes from using CRA, which will not work out of the box. I would recommend that you try one of the projects listed here to get started with less issues: https://github.com/dfinity/awesome-internet-computer#starters

-------------------------

Safik | 2023-06-07 12:31:29 UTC | #15

Thanks,
If using Vite+React taking into account your comments, will this pass assembly in the current version of dfx?

-------------------------

NathanosDev | 2023-06-07 12:37:35 UTC | #16

Yes it should work with these starter projects üëç if you have further troubles feel free to reach out again and I can take a look.

-------------------------

kpeacock | 2023-06-08 17:37:30 UTC | #17

I'm seeing an error from the frontend. It seems that you're pointing the `host` directly at `icp0.io` which is throwing a cors error. 

I don't think that behavior is correct, and I'll raise it with the boundary node team, but in the meantime, I recommend setting `host` to `undefined` or pointing it to `https://icp-api.io`

-------------------------

Safik | 2023-06-08 18:52:18 UTC | #18

Hi!
I'm rebuilding from CRA (it's outdated) to Vite - React. So far everything is correct out of the box. There is one more detail in the Chrome browser error 

```
Failed to create a secure connection with the Internet Computer.
Please try clearing your browser cache and refreshing the page to try again.
```
 
It loads correctly in other browsers.

-------------------------

Safik | 2023-06-15 12:11:34 UTC | #19

Part of the functionality on the site does not work
- Everything works fine in the local environment.
- Everything works fine in the [https://delicate-mode-7341.on.fleek.co/](https://delicate-mode-7341.on.fleek.co/)  (IPFS) Moreover, I did not change the host settings in the configurations
- Not working in Web IC canister https://gyuwx-hqaaa-aaaan-qdw2a-cai.icp0.io/
Not working: Plug authentication

Perhaps this is a limitation in the nginx server settings?

Source code https://github.com/fury02/rbac-motoko

-------------------------

kpeacock | 2023-06-15 18:29:46 UTC | #20

![image|690x269](upload://84GB14b6YiBBfWkGPHMPi4l6jT4.png)

![image|689x257](upload://s4rDdClvF1mNwjYzUvBl5OKOeIT.png)

Based on this error, it looks like there's an issue with the boundary nodes failing to handle the `status` call during fetchRootKey. Either that, or the serviceworker is failing to catch it, but either way

-------------------------

Safik | 2023-06-15 18:53:51 UTC | #21

Thanks, [kpeacock](https://forum.dfinity.org/t/creating-a-web-canister/20460/20)  Can you give recommendations for correction, excluding the removal of Plug auth from the functionality :slightly_smiling_face:

-------------------------

kpeacock | 2023-06-15 18:56:02 UTC | #22

okay, it's hacky since plug is creating the agent for you, but you should be able to access [_identity](https://agent-js.icp.xyz/agent/classes/HttpAgent.html#_identity) from the agent, and then re-create a new one using `https://icp-api.io` as the `host`

-------------------------

Safik | 2023-06-15 19:06:25 UTC | #23

This is not an option. My attempts failed to get Identity from Plug. That's why I used the Actor Plug. In Stoi—Å, by the way, I get the identity directly and recreate the HttpAgent.

There is very little documentation from Plug, but I realized that they hide identity behind closed fields

-------------------------

kpeacock | 2023-06-15 19:06:52 UTC | #24

Gotcha. I've raised the issue though with boundary nodes - I don't think that Plug is technically doing anything wrong here

-------------------------

Safik | 2023-06-15 19:23:42 UTC | #25

[quote="kpeacock, post:24, topic:20460"]
I‚Äôve raised the issue though with boundary nodes
[/quote]
That is, it will be fixed?

-------------------------

NathanosDev | 2023-06-17 00:10:27 UTC | #26

Hey @Safik, could you please disable these lines of code when you deploy to mainnet and try again?
- https://github.com/fury02/rbac-motoko/blob/main/src/components/login/auth/AuthComponent.tsx#L59
- https://github.com/fury02/rbac-motoko/blob/main/src/components/login/auth/AuthComponent.tsx#L79

You can wrap them in a call similar to this:
```typescript
  if (process.env.DFX_NETWORK !== "ic") {
    agent.fetchRootKey();
  }
```

Calling `fetchRootKey` on mainnet is a _big_ security risk because it would allow a potentially malicious replica to give agent-js the wrong public key for verifying responses from the IC, which would be very dangerous.

The issue you're seeing comes from the Service Worker not forwarding the `fetchRootKey` API call properly, but since we shouldn't ever make that call on mainnet, this is not something that we'll fix. We could add a more helpful debugging message if this call is made though, I think that would help developers that fall into this situation.

-------------------------

Safik | 2023-06-17 11:55:16 UTC | #27

Okay, I know. These are functions for local deployment. I did not think that they would interfere with "production" Because it is not used in "production". I will now remove them from the module completely and try.

Update:

The error remained.
I have completely cleaned up the local development call functions. And commented them out. That is, even hypothetically *agent.fetchRootKey()* cannot be called.

And one more thing: in the final version there will only be a "Production" version. (without agent.fetchRootKey()) So that this vulnerability is not exploited.

![error|690x358](upload://qeMxs6wLGk8cTHnxw8dektDyjkW.png)

Update 2
Another mistake. Refers to Vite. And most likely to the Plug button. Related to HttpAgent

![4|690x356](upload://vJ65Yqc05xDBeP79lIsC9iDSoMa.png)

I will freeze this error. There's something else to do. With this problem, it can be a long time

-------------------------

NathanosDev | 2023-06-17 18:12:16 UTC | #28

> The error remained.

There's one more place where this is called: https://github.com/fury02/rbac-motoko/blob/main/src/declarations/rbac/index.js#L26-L33

The problem here is that `DFX_NETWORK` is not defined through Vite, so the `process.env.DFX_NETWORK !== "ic"` condition is always true and so `fetchRootKey` is still called on mainnet. You need to define `DFX_NETWORK` in `vite.config.ts`. You can see example of this here: https://github.com/dfinity/examples/blob/master/svelte/sveltekit-starter/vite.config.ts

> That is, even hypothetically *agent.fetchRootKey()* cannot be called

This will break your application when it's running locally.

-------------------------

Safik | 2023-06-18 08:43:52 UTC | #29

I changed the configs. The problems remained.
![5|690x352](upload://rqCZt5r2f2VeWoZObiXaBMvW7l2.png)
I think I'll come back to the problem later
Thanks, 
[NathanosDev](https://forum.dfinity.org/t/creating-a-web-canister/20460/28) !

-------------------------

NathanosDev | 2023-06-18 09:18:53 UTC | #30

Okay sure. When you come back to this, the problem still lies in the `vite.config.ts`. If you debug the code through the browser you can see this:
```
    {}.DFX_NETWORK !== "ic" && et.fetchRootKey().catch(tt=>{
        console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),
        console.error(tt)
    }
```

`{}.DFX_NETWORK` will always be `undefined` so the condition will always be true.

-------------------------

Safik | 2023-06-18 10:42:14 UTC | #31

Maybe the problem is what parameters I pass during the build?

> npm ci && dfx canister create rbac && dfx generate rbac && dfx deploy

so these commands give an indefinite interpretation?

In vite.config.ts and .env fixed on "ic"

```
export default defineConfig({
    plugins: [react()],
    define: {
        DFX_NETWORK: 'ic',
        ...Object.fromEntries(
            Object.entries(canisterIds).map(([name, ids]) => [
                `process.env.${name.toUpperCase()}_CANISTER_ID`,
                JSON.stringify(ids[network] || ids[localNetwork]),
            ]),
        ),
    },
});
```


*Update*


I tried to manually fix

![6|690x239](upload://a6XZ16yPQAsrNoHohfuqSI5vqwI.png)

dfx canister --network=ic install --mode=reinstall frontend

The error remained:

async fetchRootKey() is still being called

![7|690x339](upload://yYxzWBtg4363rlam7fuwItg0ihm.png)

-------------------------

icaten | 2023-06-18 12:12:45 UTC | #32

Instead of relying on define, you can use `EnvironmentPlugin from 'vite-plugin-environment'`:

https://github.com/atengberg/another_internet_computer_starter_template/blob/main/src/frontend/vite.config.js

You probably don't need the the two entries that include the `defineOn` option, I had to do that because of the way env vars get shared with webworkers. Anyways, if you do use:

`EnvironmentPlugin("all", { prefix: "DFX_" }),` 
`EnvironmentPlugin("all", { prefix: "CANISTER_" }),` 

(given that you have a `.env` and it does include `DFX_NETWORK` and the CANISTER_* ids, see below)

will make it so `process.env.DFX_NETWORK` is defined (as if you had manually set it in the `define: { ... }`). 

I got this plugin from Kyle's auth client project.

(see below here:) 
Note that this requires that you also have `dfx.json` such that: 

`  "output_env_file": ".env",`

is included and points to the same directory where your vite config is.

Also, the way `.env` is generated it will add all the canister ids (and network) of the last deployed canister (and any of its dependencies).

In other words, if you have canisters A and B and C and your script to deploy is

`dfx deploy A && dfx deploy B && dfx deploy C` the final `.env` will only include the ids of canister c (and whatever dependencies it has). To get around this you can add A and B as dependencies to C (I'm not sure if there is a penalty for doing this if they are not actually need, but doing this guarantees they'll be included in the .env ?).

-------------------------

icaten | 2023-06-18 12:15:47 UTC | #33

On a related note, to polyfill global, I found this to work the best: 

   ```html
<!--Script polyfills global.-->
    <script>window.global ||= window</script>
```

in your `index.html`: 
```html
  <body>
    <div id="root"></div>
    <script type="module" src="main.jsx"></script>
    <!--Script polyfills global.-->
    <script>window.global ||= window</script>
  </body>
```

In the project I linked, the config file also had: 

```javascript
  optimizeDeps: {
    esbuildOptions: {
        // Node.js global to browser globalThis.
        // (Makes it possible for WebWorker to use imports.) 
        define: {
            global: 'globalThis'
        },
    }
  },
```

but, as the comment states, this was again because of that project requiring webworkers.

---

Also you might check out https://github.com/rvanasa/vite-react-motoko which is Typescript based (and what I originally based the project I originally linked on).

-------------------------

Safik | 2023-06-20 06:23:28 UTC | #34

Thanks!
I saw that the Vite-React template was changed.
In the near future:
I will create a project from scratch and try the Plug button taking into account your recommendations. If it works, I will transfer all the rest of the functionality.

-------------------------

