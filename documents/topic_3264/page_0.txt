gminorcoles | 2021-05-11 19:20:33 UTC | #1

Hi a friend told me about this project. I like the idea of a decentralized internet kind of a thing for distributed computation and communication. 

If blockchain didn't already exist, would the architects need to invent it for this project? I am not very knowledgeable but I think not? 

If users wanted to use their home currency, would this be supported? I worry about what the seemingly infinite proliferation of utility tokens with only a single use means for the world economy. It feels like a regression to the 19th century. There seems to be a perhaps antagonistic interplay between the desires of many companies in the world to settle on just a few currencies, which has measured and to some extent understood benefits, and the desire to fragment the world into smaller and smaller economic zones served by overlapping and competing currencies. 

I think I understand that tokenization might be a natural, organic result of local greed on the part of platform architects hoping to generate interest in their projects/tokens, I don't yet have a good feeling for whether this bottom up greediness is "healthy" or not. I think any economic activity tends to be good, maybe, but there is something weird about the current fad for tokens. I am not smart enough to grok this fully. 

Is there some kind of adversarial process whereby interested parties can test the premises of this project? White papers in the crypto often seem to take the premises as given and obvious, but I need hand-holding and I think falsification is desirable. 

Naively, when I heard about this project I expected metering, discovery and security to be at the core of the featureset. Then maybe some provisioning protocols, some identity stuff, payments, all layered on top, as value-adds. 

Is there a first-principles introduction that justifies why the current concept is the ineluctable and necessary solution to the problems posed? Again, I ask because I am not very quick to understand things, not because I think I have figured it out. I am skeptical because I lack imagination, but I have been writing code for a long time, on public and private distributed systems. In the 90s there were seemingly convincing version of all this that of course never dawned, and there was of course what became our current internet. So I need to learn how this fits into the ontology.

-------------------------

kpeacock | 2021-05-11 19:30:48 UTC | #2

Hi George, welcome to the forum!

There are some more philosophical aspects to your question, but I'm brain-foggy and due for a vacation soon, so I'll just try to answer the pragmatic parts.

**Why use blockchain?**

Fundamentally, anytime that a computer needs to send a message that is supposed to transfer real-world value, you have two strategies for making sure that message is meaningful. You can either trust some third-party to enforce the value, which is how state-backed financial systems handle it, or you need to use cryptography and blockchain to make it impossible to lie and send fake messages.

The IC needs blockchain because financial transactions are necessary to compensate people for running the hardware of the network. I'm not the expert in tokens though, so I won't speak to much further beyond that.

-------------------------

gminorcoles | 2021-05-21 19:46:03 UTC | #3

 I am worried about concrete things, nothing philosophical. I worry about economic lock-in wielded as a relatively new tool for making customer and supplier relationships sticky. I worry about my corporate treasury holding 30 different utility tokens, and marking them to market. Maybe a middleman will crop up who offers to automate my crypto treasury needs? At this time, the frictional costs associated with the explosion of crypto tokens is mostly hypothetical but it is right around the corner, and it is a world of increased costs and increased risk. 

The technical risks of being siloed into Rust / WASM on your proprietary container are super, ultra worrisome to me. These don't need to be elaborated upon. My naive, not very smart first guess at a global distributed cloud would be a federation of servers where you can upload your Docker image to some CDN, and pay for it's deployment using ANY mainstream currency, just like AWS Azure, GCP. And sure let's add all the exotic currencies to that list, why not. 

Then computation would be billed using some cool metering software written let's say in Rust or C++, doesnt matter. The price for computation would be via some auction mechanism. I do see an opportunity for crypto and defi to creep in here as a candidate solution for the auction, there is no a priori expectation on my part as a medium IQ person that crypto or other trustless, decentralized auctions would in fact be better, faster, cheaper, for the ecosystem of market participants. 

Governance? How have we governed things? I refer you to precedent. We have a number of archaic governance models, some of which have worked reasonably well for managing things like open source software, this thing called the internet. I am no blind adherent to past models, but not all of these use special tokens that reward earliness on the world timeline. 

The attempt to create a stablecoin on top of this new cloud model is interesting but I am not sure I want to be held captive so that non-natural traders can use my cloud infrastructure as a stablecoin to allow other people to borrow USD to buy BTC which will only ever go up. It's not that I actively dont want this, it's just that I worry about mixing so many roles and concerns together. 

Separation of concerns used to be a touchstone of systems design. I just smell a lack of this old 20th century design ethos in this project.

I also worry that the relatively high margins enjoyed currently by cloud computing will be captured by the cartel of ICP holders, who if I understand correctly are not necessarily also the operators of the physical infastructure? I am simply not well versed enough to understand this relationship yet. But I worry that the cartel is hoping to somehow take pricing power out of the hands of node operators, please correct me if I am wrong. I feel that I must be wrong about this, because otherwise you would end up losing marketshare as people decide to use their computers to host some other cloud network that lets them set their own price ( weird idea)

I almost apologized for being lazy in not doing enough homework, but I changed my mind. I want to be sold on Dfinity from the point of view of the node operator and I feel that the website should shout simple short sentences to me - earn X percent yield hosting cloud computations! financing available! click here to get get your cloud computers approved and being your on-boarding. Start earning our coin now! 

I understand that marketing to developers is equally important, and I also don't yet understand as a programmer how much this service will cost vs AWS. It should be front and center on your site?

-------------------------

