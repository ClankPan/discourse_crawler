Tbd | 2021-09-14 13:27:56 UTC | #1

https://github.com/MioQuispe/ic-starter-templates

Its based on ViteJS so you get hot module reloading etc. out of the box and its not very opinionated. It uses a regular dev server while you're developing (for speed) and when you are finished you can deploy the frontend to the IC. Comes with an example Counter canister.

At the moment React, Vue & Svelte are supported.  Lemme know if there's any issues or question marks.

![](upload://9cd1ATIRGi2D2jkSqwbPBZVb3KO.png)

-------------------------

Tbd | 2021-04-26 12:42:09 UTC | #3

There's a CLI tool now.

With NPM:
```
npx create-ic-app
```

![](upload://eWAyGEfzjq05BIXZKtrr5PEmR92.png)

Just make your selections and follow the instructions.

-------------------------

nop33 | 2021-04-28 06:00:53 UTC | #4

Seems quite interesting! You might wanna submit it to the https://github.com/dfinity/awesome-dfinity project ;)

-------------------------

anthonymq | 2021-04-30 13:32:55 UTC | #5

Hi @Tbd ! Great work ! 
I just have an issue while deploying to the local node, when I go to http://localhost:8000/?canisterId=ASSET_CANISTER_ID
I got an error : 
````
Uncaught ReferenceError: require is not defined
    at vendor.7a6e7b4a.js:10
````
Have you encountered the problem ?
Otherwise it works great on the local Devserver

-------------------------

Tbd | 2021-04-30 14:54:09 UTC | #6

Hey, thanks for using & report it! I must have forgotten about this issue, will see if I can find a solution.

-------------------------

Tbd | 2021-04-30 16:30:18 UTC | #7

There seem to be require statements in the esm version of @dfinity/agent which are causing this issue... for some reason they get compiled away in the react version (so react-ts version doesn't have this problem) but they shouldn't be there in the first place. Would be great if that could be fixed for future versions. I'll see if I can get a workaround for it in the meantime.

-------------------------

kpeacock | 2021-04-30 16:35:34 UTC | #8

Yeah, please do call out issues like that and provide specific tracing back to the part of the codebase responsible!

-------------------------

Tbd | 2021-04-30 16:43:04 UTC | #9

![bug|690x291](upload://7O3x708R98xngAUsbAxniPwoQBX.png) 

Luckily its only this one. It's in the esm dir.

Another thing that was causing an issue was the use of "global". So I had to add this line:

```javascript
/**
 * @dfinity/agent requires this. Can be removed once it's fixed
 */
(window as any).global = window
```


Thanks for the quick response!

-------------------------

Tbd | 2021-05-01 10:50:21 UTC | #10

I added a temporary fix which patches @dfinity/agent automatically after running npm install.
This is done automatically for new projects, but since you already have one:

See here:
https://github.com/MioQuispe/ic-starter-templates/tree/main/template-vue

* Move the patches dir and its contents to your project root
* Change package.json to add patch-package in devDependencies and add the scripts > "postinstall", it should be run automatically when you do npm i

-------------------------

anthonymq | 2021-04-30 18:36:45 UTC | #11

That was quick ! Will try it asap ! Thanks

-------------------------

anthonymq | 2021-04-30 19:38:59 UTC | #12

It worked ! Thanks 
@kpeacock let us know when the fix is deployed.

-------------------------

kpeacock | 2021-04-30 19:40:51 UTC | #13

Pr's open! Expect the next patch today or early next week

-------------------------

Tbd | 2021-04-30 20:55:20 UTC | #14

Small update

* Added support for Vanilla templates. Slightly more basic now but should get you started
* Added Instructions on how to deploy to README.md.

-------------------------

Tbd | 2021-05-03 20:02:02 UTC | #15

An update:

## [Experimental] Watch mode for canisters
This will auto build and install your canisters whenever you make a change to them
```
npm run watch
```

![](upload://qw29e10BlD9Mq76JGWW3W57JQHh.gif)


This is also available as a standalone package ```ic-dfx-utils``` which can be added as an npm script to any projects ```package.json``` as follows:
```
  "scripts": {
    "watch": "ic-dfx-watch"
  },

```

But I can't promise you it works :grinning_face_with_smiling_eyes: Please try it and report issues. It requires ```dfx canister create --all``` to be run in beforehand.

-------------------------

Tbd | 2021-05-13 10:38:14 UTC | #16

Ive updated all the versions since there was a problem on some machines.
Make sure you get the latest SDK version if you use this
```
DFX_VERSION=0.7.0-beta.8 sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)" 
```
Also removed the unnecessary patch since its not required anymore.

As always, let me know if you run into issues or find something confusing (I don't bite).
The repo is also open for PRs if you want to contribute your own templates or find something that could be improved!

-------------------------

Tbd | 2021-05-18 19:54:31 UTC | #18

Alright, we have a React JS + Tailwind template now. Thanks @ferMartz for the contribution!

![image|377x145](upload://oME11UdkngEw5TgclFgICirvZqh.png)

-------------------------

ferMartz | 2021-05-18 20:24:50 UTC | #19

Thank you @Tbd for putting this awesome  [create-ic-app](https://github.com/MioQuispe/create-ic-app) starter together. I'm happy to help!!!

-------------------------

ansleydsouza | 2021-05-22 10:19:18 UTC | #20

Hi @Tbd

I am using the Vue option.

I have a question on accessing the built project using the canister id. When I npm run dev and use the localhost:3000 to access the site. I am able to see the page and access the counter method.

However, when I access the site using the canister id. I get the following error:

Details: ReplicaError { reject_code: 3, reject_message: "IC0302: Canister ryjl3-tyaaa-aaaaa-aaaba-cai has no query method \'http_request\'" }

Is there anything I can do to correct this?

-------------------------

Tbd | 2021-05-22 10:28:28 UTC | #21

Hey that's strange, I haven't encountered that. Let me see if I get the same problem. Also can you tell me what version of @dfinity/agent your package version says.

-------------------------

Tbd | 2021-05-22 10:36:01 UTC | #22

It works fine for me. Either try setting the @dfinity/agent: "0.8.7"   explicitly in package.json.
or clean npx cache:

```rm -rf ~/.npm/_npx``` 

and create a new project. it might be caching an old version.

-------------------------

ansleydsouza | 2021-05-23 08:21:23 UTC | #23

@Tbd

Thanks a lot for your help. Changing the @dfinity/agent to 0.8.7 did the trick along with cleaning the npx cache.

I was previously on 0.8.6.

Thanks!

-------------------------

amaralc | 2021-06-05 05:03:26 UTC | #24

Great project @Tbd! I managed to run a React+TS template on my local network (after upgrading node to v16+ and dfx to 0.7+) and it was seamless! Thank you very much!

-------------------------

Tbd | 2021-06-05 23:23:06 UTC | #25

Glad to hear that! Keeps me motivated to work on it.

-------------------------

ajerni | 2021-06-06 13:58:26 UTC | #26

Amazing work! I tried the comand line tool and selected svelte. Works just out of the box.

Now I just neet do learn svelte as well :slight_smile: 

Will you include support for IC Mainnet deployment as well as soon as it opens to the public?

-------------------------

Tbd | 2021-06-06 14:37:24 UTC | #27

Oh yeah, ofc! Tbh it should just work out of the box since it can already run fine on your local replica, but I could definitely add instructions to the readme for convenience.

-------------------------

Tbd | 2021-06-13 14:42:05 UTC | #28

Upgraded dfx to 0.7.0 and added instructions on deploying the asset canister through fleek (super easy!)

Got my own projects site up and running with this :slight_smile: 
https://3ve4r-liaaa-aaaad-qaena-cai.raw.ic0.app/

-------------------------

ferMartz | 2021-07-06 19:49:03 UTC | #29

I created a small playground with your vite template. I followed your instructions on the github repo but I'm getting an error. Take a look below:

Deploy started at 2021-07-06T19:39:53.723Z

2021-07-06T19:39:56.386Z: Deploy started
2021-07-06T19:40:00.975Z: Docker image: 'fleek/create-react-app'
2021-07-06T19:40:00.975Z: Build command: 'npm install && npm run build'
2021-07-06T19:40:00.975Z: Triggering build execution...
2021-07-06T19:41:24.236Z: added 205 packages, and audited 205 packages in 7s
2021-07-06T19:41:24.236Z: 21 packages are looking for funding
2021-07-06T19:41:24.236Z: run `npm fund` for details
2021-07-06T19:41:24.252Z: 4 moderate severity vulnerabilities
2021-07-06T19:41:24.252Z: To address all issues, run:
2021-07-06T19:41:24.252Z: npm audit fix
2021-07-06T19:41:24.252Z: Run `npm audit` for details.
2021-07-06T19:41:24.253Z: npm notice
2021-07-06T19:41:24.253Z: npm notice New minor version of npm available! 7.0.8 -> 7.19.1
2021-07-06T19:41:24.253Z: npm notice Changelog: <https://github.com/npm/cli/releases/tag/v7.19.1>
2021-07-06T19:41:24.253Z: npm notice Run `npm install -g npm@7.19.1` to update!
2021-07-06T19:41:24.253Z: npm notice
2021-07-06T19:41:24.523Z: > ic-rewind@0.0.0 build
2021-07-06T19:41:24.523Z: > vite build
2021-07-06T19:41:24.836Z: vite v2.3.3 building for production...
2021-07-06T19:41:24.901Z: transforming...
2021-07-06T19:41:29.184Z: âœ“ 74 modules transformed.
2021-07-06T19:41:29.184Z: Could not load /workspace/.dfx/local/canisters/playground/playground.js (imported by src/agent.js): ENOENT: no such file or directory, open '/workspace/.dfx/local/canisters/playground/playground.js'
2021-07-06T19:41:29.184Z: error during build:
2021-07-06T19:41:29.184Z: Error: Could not load /workspace/.dfx/local/canisters/playground/playground.js (imported by src/agent.js): ENOENT: no such file or directory, open '/workspace/.dfx/local/canisters/playground/playground.js'
2021-07-06T19:41:29.202Z: npm ERR! code 1
2021-07-06T19:41:29.202Z: npm ERR! path /workspace
2021-07-06T19:41:29.204Z: npm ERR! command failed
2021-07-06T19:41:29.205Z: npm ERR! command sh -c vite build
2021-07-06T19:41:29.224Z: npm ERR! A complete log of this run can be found in:
2021-07-06T19:41:29.224Z: npm ERR!     /root/.npm/_logs/2021-07-06T19_41_29_205Z-debug.log
2021-07-06T19:41:54.789Z: Error occured during the build.

Any idea what is going on?

Thanks in advance!!!

-------------------------

Tbd | 2021-07-06 20:19:13 UTC | #30

Hey @ferMartz I haven't actually tried deploying a frontend with canister calls yet :thinking: (only static one)
it seems `.dfx` directory js isnt being included in the bundle maybe? What does the `dist` directory look like for you?

-------------------------

ferMartz | 2021-07-06 20:36:34 UTC | #31

@Tbd you are right, no .dfx directory and the dist has only assets although it has an agent.xxxx.js. Do you know if there is a setting on fleek for deploying the canister?

I just found this tutorial from one of your peers I guess.
[https://kyle-peacock.com/blog/dfinity/your-first-canister](https://kyle-peacock.com/blog/dfinity/your-first-canister)


BTW: I posted a question on Fleek's slack channel about deploying a canister. Let's see if they respond.

Any idea if there is another option for deploying canisters?

Thanks again!!

-------------------------

Tbd | 2021-07-06 22:12:27 UTC | #32

Strange. I tried locally with a frontend + canister call. there's no dependencies to `.dfx` so bundling is working as it should.

Something in the fleek settings? 

Here's what I put in mine:

![image|690x269](upload://1v3iFY6Vaui0Y9FjPfn7Hb7ZxY9.png)

-------------------------

ferMartz | 2021-07-07 00:55:44 UTC | #33

@Tbd  those are the exact same settings I have. 

Iâ€™ll keep trying and see if I can figure it out

-------------------------

Tbd | 2021-07-07 01:05:37 UTC | #34

Can you try committing the `.dfx` folder to see if it works?
Just occurred to me that fleek/create-react-app isn't doing anything with dfx. will have to get that set up later. See if that works as a temporary solution

-------------------------

ferMartz | 2021-07-07 13:00:38 UTC | #35

Your idea of committing .dfx works :raised_hands:

Take a look here :point_right: [https://wlyw6-viaaa-aaaad-qajia-cai.ic.fleek.co/](https://wlyw6-viaaa-aaaad-qajia-cai.ic.fleek.co)

Now the problem is that the queries and calls in production environment are directed to localhost:8000.
I think there must be a tweak in vite.config.js or somewhere in the project. I'm looking into it.
See shot below:
[https://snipboard.io/cPqDWG.jpg](https://snipboard.io/cPqDWG.jpg)

-------------------------

ferMartz | 2021-07-07 13:44:45 UTC | #36

Do you know the best practice to get the window.location.origin in the vite config file for production?

I tried few tweaks but none worked :sweat_smile:

I read Vite's docs about environment variables but I'm still confused.

I'm guessing I need to define DFX_NETWORK in the production environment variable but is not working.

This is the line that is grabbing the root url in the vite config.

const networkName = process.env["DFX_NETWORK"] || "local";

Thanks for help as always!!!

-------------------------

Tbd | 2021-07-07 13:48:06 UTC | #37

I found an example here, look in `src/agent.js` in your project

https://github.com/dfinity/cancan/blob/main/src/utils/canister/actor.ts

Sorry I'm working night and day on my own project at the moment, otherwise I would have tried this already. Can you try taking the relevant bits from there and then continue via DMs if you run into trouble. Then we can post the final solution here.

-------------------------

ferMartz | 2021-07-07 13:50:04 UTC | #38

Totally understand, I appreciate the help. I'll try it and post the solution here.

Thanks again!!!

-------------------------

ferMartz | 2021-07-07 16:40:18 UTC | #39

Just to report that I was able to pass the previous error by adding the following code:

```
// Get environment from Vite env object
const ENV = import.meta.env.MODE;

// If is prod get the window location at port 8000 otherwise is local
const agentOptions = {
  host:
    ENV === "production"
      ? `${window.location.protocol}${window.location.host}:8000`
      : "http://localhost:8000",
};

const agent = new HttpAgent(agentOptions);
```

Now the problem is that the query/call never returns, it timeouts. I'm debugging the issue. Let me know if you have any idea.

You can take a look in the link I posted before.

-------------------------

Tbd | 2021-07-08 17:11:42 UTC | #40

Have you deployed the canisters to main net?

Also, remove the port 8000. This is what the request url says:
https://wlyw6-viaaa-aaaad-qajia-cai.raw.ic0.app:8000/api/v2/canister/rkp4c-7iaaa-aaaaa-aaaca-cai/call

-------------------------

kpeacock | 2021-07-16 17:37:14 UTC | #41

I'll see if I can solve for Vite and open up a PR to the create-ic-app repo for `dfx` `0.7.7` and the latest `@dfinity/agent` versions. Probably sometime next week

-------------------------

skilesare | 2021-07-20 02:06:35 UTC | #42

Any luck upgrading to dfx 0.7.7 for anyone?  Vite is suddenly complaining that it can't load files from dfx_generated.

import { idlFactory as mycanister_idl, canisterId as mycanister_id } from 'dfx-generated/mycanister';

I noticed that new projects generated with dfx 0.7.7 end up with a /src/declarations folder.  Not sure why I'm not getting that except that perhaps since vite never completes because of the error that the folder isn't created?  Do I need to swap out the webpack.configs with the new version? Vite should take care of that right?

Looks like I've gotten the error down to 'default' is not exported by .dfx/local/canisters/mycanister/mycanister.did.js, imported by .dfx/local/canisters/mycanister/mycanister.js

-------------------------

kpeacock | 2021-07-20 02:09:58 UTC | #43

I'm still finishing up my blog post, but here's a draft of my explanation of the 0.7.7 changes and their rationale: https://60f63001c5ed532caaec5274--wizardly-joliot-2cf3a4.netlify.app/blog/dfinity/dfx-0_7_7-changes/

-------------------------

skilesare | 2021-07-20 04:12:38 UTC | #44

That was super helpful! Looking forward to seeing all of it.  I ran the copy task and got my folder. 

Basically, it looks like the idl_factory isn't exposed from index.js any more, which was the issue.  I was able to deduce how to use the exposed createActor method to pass in the options that I wanted.

-------------------------

skilesare | 2021-07-20 05:18:35 UTC | #45

The environment variables are throwing me for a bit of a loop.  Does dfx deploy --network ic flip the environment behind the scenes to production?  Things worked before, but I'm not sure how. I think i just had my local and ic defined for each canister in .dfx/local/canister_ids.json and things 'just worked'.  Now I'm at a bit of a loss. I see in webpack you have the initiateCanisterIds, but when I try to copy that over to my vite.config.js I always seem to get production values.

When I try to serve the dev version It seems to get the right values, but the app fails on export const canisterId = process.env.MY_CANISTER_ID; because the process doesn't exist.

I guess I'll hard code them for now. :frowning:

-------------------------

skilesare | 2021-07-20 05:57:53 UTC | #46

Any reason you can't expose the agent and idlFactory from index.js?  I'd like to call fetchroot manually if I need to(I check window for localhost and call it if necessary since I can't bend the environment variables to my will due to my inexperience with vite).

-------------------------

kpeacock | 2021-07-20 06:14:48 UTC | #47

The idlfactory is still available in the .did file, but we could export it from the index as well

-------------------------

Tbd | 2021-07-20 15:31:26 UTC | #48

Hey, Im gonna put some time on this today to see if I can get it working with the latest version.

-------------------------

skilesare | 2021-07-20 18:55:57 UTC | #49

I have it working with a few modifications...feel free to ping me if you get stuck.  I basically just manually edited the index.js to expose the IDL and kept the method I was using to fetch the root for the agent and use a hard-coded set of canister IDs if I'm browsing localhost.

-------------------------

kpeacock | 2021-07-20 19:08:03 UTC | #50

Checking back in - @skilesare I think you'd be interested in the [Minimal Update](https://kyle-peacock.com/blog/dfinity/dfx-0_7_7-changes#minimal-update) section I added to my blog post

-------------------------

Tbd | 2021-07-22 15:53:38 UTC | #51

I got it working for dev. Just need to spend some time on the env settings & making sure it works in prod seemlessly. But expect an update within next few days.

-------------------------

anthonymq | 2021-07-29 08:20:42 UTC | #52

Hi @Tbd, thanks for the awesome template. 
I'm using Vue + vite and getting some trouble upgrading to 0.8.0, did you manage to do it ? 
I keep getting errors on the agent.fetchrootKey() call

-------------------------

Tbd | 2021-09-27 19:34:07 UTC | #54

Update is out! Check it out.

TLDR;
* Flattened dir structure
* Added auth example
* Updated look + consistent for all frameworks
* Upgraded to dfx 0.8.1
* Upgraded to all latest @dfinity/* packages

https://github.com/MioQuispe/create-ic-app


![](upload://hAdCOWubiJxW4efEVkZ6HM3U4YS.png)

-------------------------

knkp | 2022-03-28 14:23:16 UTC | #55

@ferMartz @Tbd 

Hey you guys thank you very much for your hard work on this tool.
I'm just getting started with the IC and decided to try out the tailwindcss template for my first project. Which is a simple wordgame loosely inspired by wurdle. Local development went fine but after I deployed to the IC all of the formatting seems to have disappeared.

Here's what the frontend looks like on localhost:
![image|690x477](upload://75Jjy4XT1PbpjYVNnQY8YTGKD7a.png)


Here's what it looks like after deploying to the IC:
![image|432x500](upload://wbJ3MDG2zDNl0aVtH3fJkQlrpTw.png)

My instinct's tell me that `tailwind.config.js` is not being built into the canister when deployed to production. But I'm not certain.

Any advice is appreciated!

-------------------------

peterparker | 2022-03-28 15:06:44 UTC | #56

If you build your app locally (`npm run build` I guess) and try to serve locally (without IC) your bundle (I guess your `www`, or `dist` or `build` with `npx serve ...` for example), do you get your styling?

-------------------------

ferMartz | 2022-03-28 19:36:23 UTC | #57

I have not updated the tailwind template lately. If you are not set with tailwind this one works in prod like charm. It has Material UI. You can also upgrade to the latest Material UI if you like as well as latest DFX version.

Just clone this repo:
https://github.com/ferMartz/ic-firestarter

![image|690x343](upload://xlIO4i2J7zOc715HDGohkqkYjBd.png)

-------------------------

Tbd | 2022-03-28 20:37:19 UTC | #58

Hey! Yeah as @ferMartz mentioned its a bit outdated. I would suggest either use his project or take the default ones and add tailwind to them, it should be quite straightforward. 

I'm cooking something new at the moment so hope to update these in the coming month or two if everything goes well.

-------------------------

knkp | 2022-03-31 04:36:35 UTC | #61

[quote="peterparker, post:56, topic:2589"]
do you get your styling?
[/quote]
Thanks for the insight, running `npm run serve` resulted in the same loss of formatting. Typically I use `npm run dev`. Now just gotta figure out why.

[quote="ferMartz, post:57, topic:2589"]
I have not updated the tailwind template lately. If you are not set with tailwind this one works in prod like charm. It has Material UI. You can also upgrade to the latest Material UI if you like as well as latest DFX version.
[/quote]

Good to know - I'm starting a new one after this is live so I'll look into it.

[quote="Tbd, post:58, topic:2589"]
Iâ€™m cooking something new at the moment so hope to update these in the coming month or two if everything goes well.
[/quote]

Nice, looking forward too it

-------------------------

peterparker | 2022-03-31 05:59:25 UTC | #62

[quote="knkp, post:61, topic:2589"]
Thanks for the insight, running `npm run serve` resulted in the same loss of formatting. Typically I use `npm run dev` . Now just gotta figure out why.
[/quote]

Alright so indeed looks like you loose your styling when you do a productive build - i.e. the error does not sound related to the IC itself. Something with the tailwind or bundler configuration. I hope the sample repo that have been provided will help you track down the issue.

-------------------------

Tbd | 2022-06-28 16:48:41 UTC | #63

New create-ic-app version 0.2.0 is out! 

Now supports all major wallets out of the box and takes care of authenticated canister calls (thanks to connect2ic). 

![image|690x349, 50%](upload://7Q3a1JgZvkquSw41nYvOc2euvu1.png)


Try it out with: `npm init ic-app@latest`

See demo video here:
[https://twitter.com/miamaruq/status/1541822713064464385](https://twitter.com/miamaruq/status/1541822713064464385)

-------------------------

