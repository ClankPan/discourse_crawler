kristofer | 2024-04-02 13:23:18 UTC | #1

Hi! I am happy to announce a follow up project to IC-SIWE: IC-SIWS.

IC-SIWS allows you to easily add Solana as an authentication method to you ICP project. 

https://twitter.com/kristoferlund/status/1775140919177621717

# 1. 

Just as Internet Identity, IC-SIWS validates the authentication payload in an identity provider canister and then generates a delegate identity for the user. This provider canister comes pre built and can be added to your project `dfx.json` like this: 

```json
{
  "canisters": {
    "ic_siws_provider": {
      "type": "custom",
      "candid": "https://github.com/kristoferlund/ic-siws/releases/download/v0.0.1/ic_siws_provider.did",
      "wasm": "https://github.com/kristoferlund/ic-siws/releases/download/v0.0.1/ic_siws_provider.wasm.gz"
    },
    ...
  },
  ...
}
```

# 2. 

Configure the canister with project specific settings during deployment:

```makefile
dfx deploy ic_siws_provider --argument "( \
    record { \
        domain = \"127.0.0.1\"; \
        uri = \"http://127.0.0.1:5173\"; \
        salt = \"salt\"; \
        chain_id = opt \"mainnet\"; \
        scheme = opt \"http\"; \
        statement = opt \"Login to the app\"; \
        sign_in_expires_in = opt 300000000000; /* 5 minutes */ \
        session_expires_in = opt 604800000000000; /* 1 week */ \
        targets = opt vec { \
            \"$$(dfx canister id ic_siws_provider)\"; \
            \"$$(dfx canister id backend)\"; \
        }; \
    } \
)"
```

# 3. 

Hook the support hook up to your React based frontend to interact with the provider canister to generate identities, etc.

```jsx
import { useSiwsIdentity } from "ic-use-siws-identity";

function LoginButton() {
  const { login, clear, identity, ... } = useSiwsIdentity();
  // ...
}
```

Provider canister, Rust library and Reaxt hook: https://github.com/kristoferlund/ic-siws

Rust template and demo app: https://github.com/kristoferlund/ic-siws-react-demo-rust

Live demo: https://guidq-3qaaa-aaaal-qiteq-cai.icp0.io/

-------------------------

