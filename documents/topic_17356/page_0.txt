lastmjs | 2022-12-12 17:57:27 UTC | #1

Related: https://forum.dfinity.org/t/disable-blocktime/12249

There used to be a `--no-artificial-delay` flag on `dfx start`. This was very nice for integration tests, where you want to run your tests against the canister locally to emulate production as closely as possible.

Without that flag, running 100s or 1000s of tests will be infeasible in short amounts of time. At Demergent Labs we're about to start in-depth property tests for the Azle and Kybra CDKs, where we generate arbitraries that create many many inputs, possibly 100s, 1000s, or even more. Having to wait for update calls to finish locally I foresee being a major source of unnecessary latency in our tests.

And I know about other testing paradigms where you might separate code from your canister to test it separately. That may be sufficient for some use cases, but I also want the ability to test my code directly from within a canister, as this mimics the production environment much more closely.

@Seb @paulyoung @quint you may have experienced the need for this before as well, I would love to know if you still want this functionality.

-------------------------

bob11 | 2022-12-12 17:58:09 UTC | #2

+1 to this. I'm writing some unit tests right now and it isn't feasible to do this locally right now because it takes so long. --no-artificial-delay feels extremely important for anyone doing testing locally.

-------------------------

Tbd | 2022-12-12 18:02:49 UTC | #3

+1 Bring it back or make the value configurable. Makes zero sense to restrict us here

-------------------------

paulyoung | 2022-12-12 21:52:47 UTC | #4

Related PR:

https://github.com/dfinity/sdk/pull/1859

It seems that over a year ago the flag was removed but the net result is that the default changed to 600ms vs 500ms when using the flag.

The comment says the 600ms is the value used in the production network.

-------------------------

Severin | 2022-12-13 07:23:16 UTC | #5

I personally also would like to see this. I'll bring it up with the team

-------------------------

Severin | 2022-12-13 18:36:31 UTC | #6

We decided that we'd be happy to re-introduce the --no-artificial-delay flag. We'd get to it soon-ish (whenever someone feels they have the time), but I'd also be happy to approve a PR _wink wink nudge nudge_

-------------------------

paulyoung | 2022-12-13 22:00:39 UTC | #7

What would it do though? It used to set the delay to 500ms. The delay is currently 600ms. Are you proposing it set the delay to 0ms?

-------------------------

neeboo | 2022-12-14 03:13:08 UTC | #8

How about provide an interface saying "dfx config set --global <file.json>"

And replace "~/.dfx/config/xxx.config"

-------------------------

Severin | 2022-12-14 07:45:49 UTC | #9

[quote="paulyoung, post:7, topic:17356"]
Are you proposing it set the delay to 0ms?
[/quote]

I think for extensive test suites that would be perfect. I also wouldn't mind being able to set arbitrary values so people would type e.g. `--artificial-delay 17`, and it would have a default value of the current 500ms

[quote="neeboo, post:8, topic:17356"]
How about provide an interface saying “dfx config set --global <file.json>”
[/quote]
We were thinking of a global settings file already for some customisation. Sounds like a good idea to me.

-------------------------

Seb | 2022-12-14 08:41:05 UTC | #10

I still want this functionality.

-------------------------

lastmjs | 2022-12-14 16:39:08 UTC | #11

Yes let us set it to 0

-------------------------

icme | 2023-03-06 16:57:20 UTC | #12

In case this hasn't been solved yet (I wasn't able to find a solution), I created an discussion in the sdk repo for this.

https://github.com/dfinity/sdk/discussions/3005


I know the SDK team is prioritizing some developer quality of life improvements in Q2, so feel free to upvote this issue if it affects you.

-------------------------

Severin | 2023-03-09 14:35:53 UTC | #13

(Still) not solved yet, but currently planned to be completed until the end of the month.

Note to self: [internal ticket](https://dfinity.atlassian.net/browse/SDK-894)

-------------------------

AdamS | 2023-03-28 22:13:50 UTC | #14

The feature has been added in [#3047](https://github.com/dfinity/sdk/pull/3047) and will be included in the next release of dfx.

-------------------------

lastmjs | 2023-03-28 22:15:58 UTC | #15

Thank you very much!

-------------------------

Severin | 2023-03-29 08:24:14 UTC | #16

And for the impatient ones, you can use it already now:

``` bash
git checkout git@github.com:dfinity/sdk.git
cd sdk
cargo build
alias dfx=$(pwd)/target/debug/dfx
```

-------------------------

