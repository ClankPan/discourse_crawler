ovictor | 2022-07-11 19:00:11 UTC | #1

I'm building an APP that accept external requests from web 2.0 that needs to be verified, if I use some secret in a variable using Rust, after compile someone can revert the data and get the secret in some way?
In other works it is safe keeping secrets in a canister?

-------------------------

AdamS | 2022-07-11 17:39:23 UTC | #2

Nodes can see the code they are running, and by design nodes are meant to be run by untrusted third-parties. So no. Ingress messages can be verified by the user principal system; the threshold ECDSA signing feature will enable the secure secret signing of data going the other way.

-------------------------

ovictor | 2022-07-11 19:58:44 UTC | #3

[quote="AdamS, post:2, topic:14272"]
the threshold ECDSA signing feature will enable the secure secret signing of data going the other way.
[/quote]

Thanks for the reply! Do you know if there is a estimation date for ECDSA signing?

-------------------------

Zane | 2022-07-11 20:04:30 UTC | #4

Is that the case even with security sandboxing and enclaves? Is data unencrypted in memory? Is it encrypted when sent over the network?

-------------------------

dymayday | 2022-07-11 21:34:13 UTC | #5

Unencrypted in memory. Encrypted over the network using https.

-------------------------

Zane | 2022-07-11 21:45:57 UTC | #6

Even for inter canister, Xnet calls?

-------------------------

jzxchiang | 2022-07-12 06:21:07 UTC | #7

This is part of the long-term [roadmap](https://forum.dfinity.org/t/long-term-r-d-tee-enhanced-ic-proposal/9384/20), but I don't know if there have been any updates on this front.

-------------------------

Zane | 2022-07-12 15:12:10 UTC | #8

Afaik they recently published the new node specs which have TEE capabilities.

-------------------------

