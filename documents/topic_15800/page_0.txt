saikatdas0790 | 2022-10-08 10:51:11 UTC | #1

Is there a changelog somewhere for the ic_cdk crate?

I noticed there's a new release [version 0.6](https://crates.io/crates/ic-cdk/0.6.0) that bumps the minor version. I tried adding it to my project but it seems to be breaking `#[derive(CandidType)]` when paired with the [candid crate v0.8.2](https://crates.io/crates/candid/0.8.2)

Wondering if anyone knows?

Tagging @lwshang since he's the publisher

-------------------------

lwshang | 2022-10-09 19:58:48 UTC | #2

Hi @saikatdas0790,

The changelog is here: https://github.com/dfinity/cdk-rs/blob/main/src/ic-cdk/CHANGELOG.md

Recent `ic-cdk v0.6` was mainly for `candid v0.8`. I just checked their compatibility by running cdk-rs examples with `ic-cdk v0.6.0` and `candid v0.8.2`. Everything works on my machine.

Could you share more about your project if the issue is still there?

-------------------------

saikatdas0790 | 2022-10-10 05:26:30 UTC | #3

Sure, let me see if I can create a minimal reproduction

-------------------------

saikatdas0790 | 2022-10-10 05:26:44 UTC | #4

I think it might be due to incompatibility with [ic-stable-memory](https://github.com/seniorjoinu/ic-stable-memory) custom type `SPrincipal`. I'll keep this updated in case it's the cdk or candid crates. 

I created an issue with that library [here](https://github.com/seniorjoinu/ic-stable-memory/issues/10)

Basically trying to derive `CandidType` on a struct that had one of its fields as an `SPrincipal` was breaking compilation. Wasn't sure what it was

-------------------------

lwshang | 2022-10-12 01:54:58 UTC | #5

`ic-stable-memory` still depends on `candid v0.7` and `ic-cdk v0.5`. That indeed causes the problem.
You may have to wait for that crate updating dependencies.

Recent `candid v0.8` and `ic-cdk v0.6` releases were mainly for dependency graph simplification while no  feature was added. It's okay to still use the older version.

-------------------------

