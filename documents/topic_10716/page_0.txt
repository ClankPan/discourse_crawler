Jesse | 2022-02-05 16:16:05 UTC | #1

I'm trying to retrieve the principal of an actor class from within the actor class. Below is the code that I wrote... and below that is the error that I'm getting when trying to compile this code: 

```
func userAccountId() : Account.AccountIdentifier {
        let canisterId =  Principal.fromActor(This);
        Account.accountIdentifier(canisterId, Account.defaultSubaccount())
    };
```

Error message:
```
type error [M0057], unbound variable This
```

I've tried making `This` and `this` as the argument for `Principal.fromActor()` and both are throwing the same error.

-------------------------

inBlockit | 2022-02-05 17:10:59 UTC | #2

I believe that you have to bind `this` during instantiation of that actor. Check out how this is done in WhoAmI example in motoko playground. [MotokoPlayground link](https://m7sm4-2iaaa-aaaab-qabra-cai.raw.ic0.app)

```
shared (install) actor class WhoAmI(someone : Principal) = 
  this { // Bind the optional `this` argument (any name will do)

  public func idQuick() : async Principal {
    return Principal.fromActor(this);
  };
}
```

-------------------------

kpeacock | 2022-02-05 17:32:53 UTC | #3

It's actually a bit easier - you can just do 

```
Principal.fromActor(WhoAmI)
```

-------------------------

Jesse | 2022-02-05 17:36:24 UTC | #4

When I try it the way you suggested @kpeacock , I'm getting the following error message:

```
type error [M0056], variable WhoAmI is in scope but not available in compiled code
```

I think this way would work with an actor, but not for an actor class, I guess?

-------------------------

kpeacock | 2022-02-05 17:54:24 UTC | #5

It's available at runtime, so you can query it during your public function calls

-------------------------

chenyan | 2022-02-05 18:30:51 UTC | #6

This only works for `actor WhoAmI`, not `actor class WhoAmI()`. For actor class, you need to bind the whole class, e.g. `actor class WhoAmI() = WhoAmI { ... }`

-------------------------

