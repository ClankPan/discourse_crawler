Ashley | 2021-10-08 17:28:32 UTC | #1

Hi everyone - I'm building a decentralised version of YouTube. I'm stuck and need help.

My users will be uploading full-res very large videos, my current solution is to use IPFS. But all the pinning providers out there, frankly suck. So my only option is to host my own IPFS node, that seems kinda centralised haha.

I looked at the CanCan repo, it's literally storing chunks of videos in memory in canisters. This can work for small video but not large video, which most video is these days.

Is there any plans to provide a solution of BLOB data / large media. Or is there another solution I'm not considering?

The media will either be an large single H264 MP4 or an m3u3 format for adaptive streaming (many files, still relatively large). All our metadata in currently on the ICP.

Looking for a friend 🙏

Thanks!

-------------------------

Ashley | 2021-10-10 15:21:50 UTC | #2

Is there anyone on this forum that can help me? Seems a bit quiet...

@nomeata, @kpeacock

-------------------------

LowFreeKey | 2021-10-10 21:45:06 UTC | #3

Hello there,

In a previous thread Diego stated that for canisters  "Storing a 6 GB video - very possible"
I doubt any video for your MVP should exceed that amount.
At worst you may have to generate new cannisters for every upload but I could see that being very cycle intensive. 
Lastly, if your files are > 8GB, split them up and perhaps you can build  (or there already is) a tool which "seamlessly" transitions from canister to canister within your Dapp. 
Maybe the opportunity for an ad break or query the user for some feedback on the video. 
Similar to Netflix's "Are you still watching?"

I understand it's not the solution you're looking for but hopefully it helped shed a bit of light ^^

-------------------------

Ashley | 2021-10-11 13:32:40 UTC | #4

Thanks for the reply. But this doesn't provide a solution. I'm currently uploading to IPFS, but the limit is 100MB, which sucks :slight_smile:

-------------------------

Ashley | 2021-10-22 07:42:18 UTC | #5

I went with ARWeave in the end. Complicated but best solution.

-------------------------

kpeacock | 2021-10-22 17:39:38 UTC | #6

You caught me on my vacation - sorry for missing this. Our certified asset canister / serviceworker solution kind of sucks at this right now, but you can upload the file using `dfx` and it can stream on raw.ic0.app fairly well.

[https://rdbii-uiaaa-aaaab-qadva-cai.raw.ic0.app/canvas-timelapse.mp4](https://rdbii-uiaaa-aaaab-qadva-cai.raw.ic0.app/canvas-timelapse.mp4)

https://rdbii-uiaaa-aaaab-qadva-cai.raw.ic0.app/canvas-timelapse.mp4

-------------------------

kpeacock | 2021-10-22 17:42:32 UTC | #7

We still don't support scrubbing, progressive enhancement, or a bunch of other nice-to-have features for a professional video streaming service though. Someone will need to invest in that before a full youtube-quality experience is possible

-------------------------

