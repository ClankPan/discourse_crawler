skilesare | 2023-01-06 19:02:44 UTC | #1

# React-Native IC Agent Bounty - #0

## Current Status: Discussion

* **Discussion (10/18/2021)** <- We are here

* Ratification

* Open for application

* Assigned

* In Review

* Closed

## Bounty Details

* Current Bounty Amount: 20 ICP

* ICDevs.org Match Available: 20 ICP - (For every ICP sent to e156fe180f0f6deffa87344390dc45b2e6d4483d4007f6ea8f3f4d89e56fa5d2, ICDevs.org will add one more ICP to the bounty, up to 20 ICP, After 20 ICP, Donations to the above address will add .25 ICP to this issue and .75 ICP to fund other ICDevs.org initiatives)

* Time Left: Expires 12/31/2022

* Project Type: Single Contributor

* Opened: 10/18/2021

* Time Commitment: Days

* Project Type: Traditional

* Experience Type: Intermediate

* Issue Type: Improvement

## Description

The js agent provided by DFINITY works well for web applications. It has issues when trying to use it from Android and iOS. There has already been a good bit of discussion on the issue here: https://forum.dfinity.org/t/making-http-calls-from-mobile-apps/5192/25

This bounty will be awarded to the developer who delivers an open source solution that react-native developers can use in their react-native projects. We would prefer that these template projects become part of https://github.com/MioQuispe/create-ic-app.

The repos can be delivered as either one or two project templates. If two are needed, one should be for iOS and one should be for android. Developers should target the OS version that would be relevant to at least 50% of OS users(currently iOS 12, Android 10).

Repos should follow the same module signature as other react-native projects and any new components or shims should be easily accessible from npm and yarn.

If specific configuration is necessary then the configuration should be well documented in the readme file.

If a custom js engine is necessary, specific instructions should be provided for how to download, compile, and include the custom js engine in the project. This should consist of both a description of the changes to the js engine and a script to set up a project properly so that it 'just works' like other create-ic-app templates

## To apply for this bounty you should:

* Include links to previous work with react-native and project templating and any other open source contributions(ie. your github).

* Include a brief overview of how you will complete the task. This can include things like which dependencies you will use, how you will make it self contained, the sacrifices you would have to make to achieve that, or how you will make it simple. Anything that can convince us you are taking a thoughtful and expert approach to this design.

* Give an estimated timeline on completing the task.

* Post your application text to the Bounty Thread

## Selection Process

The ICDevs.org developer's advisors will propose a vote to award the bounty and the Developer Advisors will vote.

## Bounty Completion

Please keep your ongoing code in a public repository(fork or branch is ok). Please provide regular (at least weekly) updates. Code commits count as updates if you link to your branch/fork from the bounty thread. We just need to be able to see that you are making progress.

Once you have finished, please alert the dev forum thread that you have completed work and where we can find that work. We will review and award the bounty reward if the terms have been met. If there is any coordination work(like a pull request) or additional documentation needed we will inform you of what is needed before we can award the reward.

## Bounty Abandonment and Re-awarding

If you cease work on the bounty for a prolonged(at the Developer Advisory Board's discretion) or if the quality of work degrades to the point that we think someone else should be working on the bounty we may re-award it. We will be transparent about this and try to work with you to push through and complete the project, but sometimes, it may be necessary to move on or to augment your contribution with another resource which would result in a split bounty.

## Funding

The bounty was generously funded by the community. If you would like to turbocharge this bounty you can seed additional donations of ICP to e156fe180f0f6deffa87344390dc45b2e6d4483d4007f6ea8f3f4d89e56fa5d2. ICDevs will match the bounty 1:1 for the first 20 ICP and then 0.25:1 after that. All donations will be tax deductible for US Citizens and Corporations. If you send a donation and need a donation receipt, please email the hash of your donation transaction, physical address, and name to donations@icdevs.org. More information about how you can contribute can be found at our [donations page](https://icdevs.org/donations.html).

## General Bounty Process

### Discussion

The draft bounty is posted to the DFINITY developer's forum for discussion

### Ratification

The developer advisor's board will propose a bounty be ratified and a vote will take place to ratify the bounty. Until a bounty is ratified by the Dev it hasn't been officially adopted. Please take this into consideration if you are considering starting early.

### Open for application

Developers can submit applications to the Dev Forum post. The council will consider these as they come in and propose a vote to award the bounty to one of the applicants.

### Assigned

A developer is currently working on this bounty, you are free to contribute, but any splitting of the award will need to be discussed with the currently assigned developer.

### In Review

The Dev Council is reviewing the submission

### Awarded

The award has be been given and the bounty is closed.

[Other ICDevs.org Bounties](https://icdevs.org/bounties.html)

-------------------------

skilesare | 2021-10-18 13:44:10 UTC | #2

If you have any questions/concerns/comments about how this is set up or if this should be posted here, etc, please log them over at https://forum.dfinity.org/t/icdevs-org-voting-and-discussing-bounties/7954. I'd love your input on making this process as efficient and effective as possible. Try to keep the discussion in this thread about the actual task at hand. Thanks!

-------------------------

dpdp | 2021-10-18 13:46:02 UTC | #3

At ORIGYN, we already open-sourced a react-native TODOs application: https://github.com/ORIGYN-SA/todos-react-native-dfinity

Hint for whoever interested by the bounty: You can check the patches applied in order to have that working.

Main bottleneck are around BLS verification that takes time.

-------------------------

skilesare | 2021-10-18 13:49:00 UTC | #4

Awesome.  Between what Origyn has and what @jzxchiang has done, someone should be able to put this into the https://github.com/MioQuispe/create-ic-app framework fairly easily.  Hopefully this will be a quick win for the community.

-------------------------

Safik | 2021-10-18 16:58:25 UTC | #5

I spent several days porting agent-rs, tried to compile it on Android(cradle.plugin.com.github.william.rust:plugin:0.3.4). Nothing has come out yet. This works with the demo code on rust. I think the problem will be solved quickly when google officially integrates rust into Android Studio

-------------------------

skilesare | 2021-10-18 21:13:39 UTC | #6

We've had our first match donation.  The Bounty is now 21 ICP Thanks to Deepsea (Jeremy K).

I won't post all of these, but I will let everyone know when we've hit the match.

-------------------------

neeboo | 2021-10-18 23:47:14 UTC | #7

Take jniLIbs https://github.com/AstroxNetwork/agent_dart/tree/main/android/src/main/jniLibs

and .a
https://github.com/AstroxNetwork/agent_dart/tree/main/ios

They are BLS compiled from rust.

And just experiment to see if they work. Then I will try ripping the compiling project out of agent dart

-------------------------

skilesare | 2021-10-19 14:27:21 UTC | #8

We've initiated the vote to approve this bounty. https://axon.ooo/axon/180/proposal/3
You could be voting if you join the developer advisory council.  Details are here: https://icdevs.org/developer_advisory_committee.html

-------------------------

LowFreeKey | 2021-10-20 12:22:48 UTC | #9

Exciting. Wishing the best to those already on the hunt! 
Will finish the Dfinity/Encode hackathon first and if this is still running later might give it a go.

-------------------------

skilesare | 2021-10-20 13:55:34 UTC | #10

The bounty has been ratified and is open for applications. I'm trying to work with DFINITY to fix the message board code that won't let me edit my original post....if we can't get it resolved we may need to pick a different venue.

This step is pretty straightforward. In an effort to keep people from duplicating the effort, someone needs to step up and 'apply' for the bounty. The bounty is now 21 ICP.

If you'd like to apply in a less public way you are welcome to send me a DM on the forum software or at Austin at icdevs dot org.

-------------------------

diegop | 2021-10-20 19:38:52 UTC | #11

@skilesare 

I saw the NNS Motion proposal which I *assumed* created: https://dashboard.internetcomputer.org/proposal/25770

Maybe I am missing something, but I am not sure what the proposal is asking the community, to be honest. Since the proposal is sent, can you help update in the thread to clarify what the community is voting on?

(its possible I am the one missing something very obvious)

-------------------------

skilesare | 2021-10-20 21:10:45 UTC | #12

Oh man... I guess I screwed that up. I was using axon: https://axon.ooo/axon/180/proposal/3 and I thought that "motions" just stayed on the system and had no action. I guess we approved the neuron to propose a motion to the NNS.  Oops.  Well....I guess the community can ratify it also!

This was not meant to go to the NNS.  I guess we need to add a top-level "motion" to axon to use it the way we want to.

-------------------------

Safik | 2021-11-05 07:17:35 UTC | #13

Hello. How relevant is this task for porting Android Kotlin/Java?

-------------------------

skilesare | 2021-11-05 12:28:25 UTC | #14

Probably only tangentially related. I’d imagine that some of the code that would work for Java/kotlin would be on the back end of the Android libraries that react native has to talk to to communicate with the Android OS. If your interested in that side we could carve out that portion of it, but this bounty does require wiring it all up in react native template project.

-------------------------

jzxchiang | 2021-11-23 19:55:21 UTC | #15

I have fantastic news to share.

Thanks to the [work](https://github.com/Kudo/react-native-v8/issues/89) of the maintainer of `react-native-v8`, the latest version of that library now supports WebAssembly.

That means BLS signature verification now works on both iOS and Android without needing to write any custom Rust or C++ native code.

Caveats:

* Must be at least iOS 14 and can't use Hermes
* Android must use `react-native-v8` v0.65.2-patch.1 or v0.66.3-patch.1. That means you must be running React Native v0.65 or v0.66 (for now). Hermes and JSC (for Android) are not yet supported

-------------------------

skilesare | 2021-11-23 20:47:19 UTC | #16

This is great news!  Does this mean that setting up a project is as easy as npm install with the right config?

-------------------------

jzxchiang | 2021-11-24 06:07:36 UTC | #17

Hmm that would be part of it, but the tricky thing with mobile is that every RN + IC project would still need to make some changes to their Android and iOS native code to properly install some of the npm dependencies, such as `react-native-v8`.

For example, they will need to update their `build.gradle` files. There might need to be a custom script (kinda like `create-react-app` or `dfx new`) that can auto-generate a skeleton RN + IC git repo.

-------------------------

skilesare | 2021-11-24 15:08:59 UTC | #18

Ok cool...so it sounds like this bounty has been reduced to writing up some basic instructions and integrating the configurations with those instructions into https://github.com/MioQuispe/create-ic-app.

There are 21 ICP in this bounty right now....maybe we should reward the maintainer of react-native-v8 with some of this?  And the have the rest for the person willing to put the instructions together?

This is a great opportunity for someone to get their feet wet with the IC and make ~$800 in the process.

-------------------------

jzxchiang | 2021-11-25 00:48:51 UTC | #19

Yeah, that'd be awesome if we could reward the `react-native-v8` maintainer with a part of the bounty. I'm sure he would be happy about that.

-------------------------

skilesare | 2021-11-25 12:18:47 UTC | #20

Do you have a github username?  I can reach out.

-------------------------

jzxchiang | 2021-11-25 23:33:34 UTC | #21

This is his profile: https://github.com/Kudo

-------------------------

skilesare | 2022-01-06 17:30:32 UTC | #22

We've accelerated this bounty with 10 more ICP from the DFINITY Acceleration Grant.  

We are going to set aside 5 ICP for the dec that added the wasm stuff to the android build. This is now a 26 ICP bounty for basically setting up some config files.  If you want to get involved in building for the IC, this is a great spot to do it!

-------------------------

Ashley | 2022-01-18 07:04:12 UTC | #23

Thank you to the moon and back. This unblocked me after months. I'm the founder of DSocial, we are YouTube on the IC.

Mobile app is back in development now :) Thank you!

-------------------------

Ashley | 2022-04-28 13:46:21 UTC | #24

Working on iOS but not Android: https://github.com/decentralised-social/expo-rn-dfinity-icp-example#known-issue-on-android

-------------------------

skilesare | 2022-04-28 14:05:19 UTC | #25

> Expo (React Native) JS Engine when running in Debug

>Shake phone, and tap Debug Remote JS, you'll notice the app now works on Android. This is because the JS Engine on Android in Debug mode supports BigInt 🤦‍♂️

>But that means normal mode and native builds do not #FunTimes 😉

This is amazing :rofl: 

I wonder why a polyfill does not work?

-------------------------

Ashley | 2022-04-28 14:23:30 UTC | #26

LOL

Basically the `*` `/` `**` `===` `&` `|` etc etc ops, don't work reliably via the polyfill. These seem to give unexpected results and as such the `while` loops runs forever.

This only happens is the `typeof` of a bigint is `object`, thus not native support. If `typeof` is `bigint` it works.

iOS device/simulator: debugger on/off: `bigint`
Android simulator/device, debugger on: `bigint`
Android simulator/device, debugger off: `object`

-------------------------

kpeacock | 2022-09-07 18:55:40 UTC | #27

@dpdp - did you pull the bls verification code that you're patching in from an existing package, or did you write it yourself? If it is from Origyn, do we have your permission to add it to agent-js? I've just merged support to polyfill BLS verification without patching https://github.com/dfinity/agent-js/pull/626, and I'd like to make this process simple by shipping the polyfill as an additional package on NPM as `@dfinity/bls-verify`, so that we don't have to ask people to copy a large file around

-------------------------

kpeacock | 2022-09-07 21:28:23 UTC | #28

Oh wait, I see that it was auto-generated from the wasm

-------------------------

dpdp | 2022-09-08 06:52:21 UTC | #29

@kuchmenko did work on this and can explain a bit more; I think we just converted the wasm to js; but there is some caveats;

@kuchmenko mentioned Plug has another solution which is to run the Rust code via FFI;

-------------------------

domwoe | 2022-09-08 09:28:23 UTC | #30

[quote="dpdp, post:29, topic:8007"]
@kuchmenko mentioned Plug has another solution which is to run the Rust code via FFI;
[/quote]

Do you have a link to the code? I just had a look and couldn't find anything in the [Plug repo](https://github.com/Psychedelic/plug).

-------------------------

dpdp | 2022-09-08 09:31:33 UTC | #31

Ha it seems they just use the whole agent-rs via ffi... https://github.com/Psychedelic/plug-mobile/tree/develop/rust/.cargo/mobile_app

-------------------------

domwoe | 2022-09-08 09:46:28 UTC | #32

Thanks! Wrong repo :sweat_smile:

Seems only the verify function is exposed though, but I can't find a place where it's actually called.

-------------------------

dpdp | 2022-09-08 10:09:05 UTC | #33

https://github.com/Psychedelic/plug-mobile/blob/develop/customPatches/ios/@dfinity+agent+0.9.3.patch#L75

https://github.com/Psychedelic/plug-mobile/blob/develop/customPatches/android/%40dfinity%2Bagent%2B0.9.3.patch#L79

-------------------------

jzxchiang | 2022-09-08 10:12:57 UTC | #34

FWIW I also went down the Rust FFI route. It works and is really fast, but it requires a lot of platform-specific setup and code, which makes it less like a library and more like a framework.

-------------------------

domwoe | 2022-09-08 10:22:23 UTC | #35

Thanks. I saw this as well, but I still don't understand how this is actually getting called.

Update: Ah, it patches agent-js to use the verify function form agent-rs/ic-agent via FFI

-------------------------

kpeacock | 2022-09-08 16:32:50 UTC | #36

At the very least, going forward you'll be able to pass a `blsVerify` option to an `Actor` and polyfill it however you choose without needing to patch `node_modules`. I'm also going to provide a pure JS package for it, but it is very slow. I'll see if I can optimize it by stripping out overhead in the `miracl` implementation

-------------------------

adrian-d-hidalgo | 2024-03-14 20:59:20 UTC | #37

I don't know if this discussion is still open, but here I have my solution for this:

https://github.com/bundlydev/motoko-nextjs-react-native.

-------------------------

kpeacock | 2024-06-10 20:45:13 UTC | #38

I still have to publish official docs, but this is my MVP example using `Expo` https://github.com/krpeacock/ic-expo-counter

There's no more need for a dedicated React Native agent now that we've removed the wasm import for bls verification

-------------------------

