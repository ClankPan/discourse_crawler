ohsalmeron | 2024-05-20 21:08:27 UTC | #1

Hi everyone,

I've been doing some testing following up the README, using Linux and Bootstrapping a testing environment via Docker.

So, everything good if following up instructions for example when starting a local replica instance it prints the dashboard URL: http://localhost:8000/_/dashboard

Even running the setup locally seems to finish with no problem running:
docker exec -it $SNS_TESTING_INSTANCE bash setup_locally.sh

The first problem I'm facing is that after this you can access the NNS frontend dapp locally in here:
http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080/

But for some reason, it comes with some errors.

The first one is this
There was an unexpected error while loading the summaries of all deployed projects. Error converting data from aggregator canister
![image|690x71](upload://uWIWzvgo73R3qgMHbinBlsgcJo3.png)

This just comes out of the box without signing in with Internet Identity, but then later I get more errors:
There was an unexpected error while loading the summaries of all deployed projects. Error converting data from aggregator canister
![image|690x430](upload://xfuTz35q9SuUdnZXdQo3FKr4oIY.png)

I was wondering if this is normal, even after following instructions and deploying the docker without any errors on console.

I also did try with the special instructions for Apple silicon users, but having the same result.

Other steps on the README might work, but I'm getting stuck at the NNS frontend dapp to be able to test the process.

Any help is much appreciated! 
Thanks

-------------------------

ohsalmeron | 2024-05-20 21:20:36 UTC | #2

Additionally I get some warning when running the basic scenario, although in the end it says it finished successfully

```
warning: virtual workspace defaulting to `resolver = "1"` despite one or more workspace members being on edition 2021 which implies `resolver = "2"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2021 resolver, specify `workspace.resolver = "2"` in the workspace root's manifest
note: for more details see https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
OK
```

![image|690x289](upload://lwzdJ28tWD4G8vsKdIW0ehFPIOO.png)

-------------------------

jennifertran | 2024-05-20 22:26:05 UTC | #3

[quote="ohsalmeron, post:1, topic:30978"]
There was an unexpected error while loading the summaries of all deployed projects. Error converting data from aggregator canister
[/quote]

This error usually comes because the Aggregator is taking a few minutes to fetch all required data from the backend. 

1. You can wait for 20 minutes or so.
2. Or you can run the following command to speed things up (but will require a higher resource consumption): 

`dfx canister call sns_aggregator reconfigure '(opt record { update_interval_ms = 100; fast_interval_ms = 1_000_000_000; })'`

Please let us know if this helps!

-------------------------

ohsalmeron | 2024-05-21 03:03:48 UTC | #4

Interesting, I waited about half an hour and even restarted the docker but still didn't get to make it work.
![image|690x333](upload://pSvzTkBQHoDmnVRouCRYFpEXMHH.png)
i

I also tried the command to reconfigure the sns_aggregator but the update call failed
![image|690x400](upload://oZCsjPgPasuPb2BdulgmrKRYo0H.png)


I was reading at the end of the HACKING.md this 
![image|690x134](upload://5oAsXBWuAkNpAN5Ir894Fd1takD.png)

I tried it up but same errors on the NNS frontend

Could it be that the dfx commands won't work because the way scripts set it up? I was thinking it might be the docker but also trying to compile from source on Mac have the same errors.

-------------------------

jennifertran | 2024-05-21 03:37:07 UTC | #5

Thank you for letting me know! We will have our team take a closer look and get back to you.

-------------------------

mraszyk | 2024-05-21 05:50:38 UTC | #6

> There was an unexpected error while loading the summaries of all deployed projects. Error converting data from aggregator canister

This error will keep popping up until the first SNS is created. So it is expected that you see it until the create SNS proposal is successful.

-------------------------

mraszyk | 2024-05-21 06:07:34 UTC | #7

I could successfully execute

```
~/sns-testing$ dfx canister call sns_aggregator reconfigure '(opt record { update_interval_ms = 100; fast_interval_ms = 1_000_000_000; })'
()
```

from the root of the `sns-testing` directory in a Linux environment. From your error, it seems that you made the call before `setup_locally.sh` successfully finished (the reject message says that the canister contains no wasm module).

-------------------------

ohsalmeron | 2024-05-21 17:19:51 UTC | #8

Hi Martin,

I started from scratch again, here's the process I followed:

-First I'm using dfxvm locally on Linux with the latest version of dfx (0.20.0)
![image|472x66](upload://maBoNmsKKZgKE3IS68YMSWwqe5u.png)

-I deleted the old sns-testing folder and cloned it again from source so we have a clean start

```
sudo rm -R sns-testing
git clone https://github.com/dfinity/sns-testing.git
cd sns-testing
```
- Started the docker service (since it doesn't start automatically after rebooting the OS)
`systemctl start docker`

and then started the local replica instance through the docker

```
SNS_TESTING_INSTANCE=$(
   docker run -p 8000:8000 -p 8080:8080 -v "`pwd`":/dapp -d ghcr.io/dfinity/sns-testing:main dfx start --clean
)
while ! docker logs $SNS_TESTING_INSTANCE 2>&1 | grep -m 1 'Dashboard:'
do
   echo "Awaiting local replica ..."
   sleep 3
done
```

All good so far
![image|613x151](upload://iMdxYw0MbeT4V1n8f6eVqPkFqNt.png)

- Then I ran the setup script
`docker exec -it $SNS_TESTING_INSTANCE bash setup_locally.sh`

Reading the log everything seems to be fine and executed correctly, here's the full log
https://gist.github.com/ohsalmeron/5cd684018c103e5389654bb3d1b172f3

Now after this step as suggested on the README, I can access the NNS frontend dapp but the first error I get is this:
```
There was an unexpected error while loading the summaries of all deployed projects. Error converting data from aggregator canister
```
![image|690x71](upload://mJVFpTWL5ul8WbDqvzuoOj96wM7.png)

Which makes sense after trying to execute the call to reconfigure the sns_aggregator, as suggested I did it from the root of the sns-testing from the Linux environment (not from the bash inside the docker)
![image|690x80](upload://p1k06ywSEWMstLO1PfFzulSj8IH.png)

Somehow dfx can't find the sns_aggregator canister locally, which I don't understand why because reading the **setup_locally.sh**  execution log it clearly states that it was created.

Please let me know what am I missing in here, it might be something easy but I'm just following the steps on the readme as best as I understand.

-------------------------

ohsalmeron | 2024-05-21 18:30:36 UTC | #9

Following up with the instructions I ran the basic scenario script
```
docker exec $SNS_TESTING_INSTANCE bash run_basic_scenario.sh
```
Got this huge log but I can't find any errors, only the **workspace.resolver** warning at the end
Here's the full log:
https://gist.github.com/ohsalmeron/acd75581696efe348d6dfb5fab34cf89

Also, locally dfx still can't find the sns_agregator canister
![image|690x59](upload://in9wSIoOshzz6LSXQF1ncDiNdzJ.png)
which makes no sense to me since the scripts have executed fine.

Then I entered the bash inside the docker
```
docker exec -it $SNS_TESTING_INSTANCE bash
```

But from the docker bash, I was able to execute the dfx command
![image|690x87](upload://3diq4H9sW83D1hznw00nHlQqcbU.png)

At this point I still get the following errors browsing the local nns frontend dashboard
![image|690x334](upload://i3LsK7bh5OD1eh6wkvgwzWS3Gf1.png)

Now, I understand the error will keep popping until the first SNS is created, so I followed the instructions for the **SNS Lifecycle**

from the docker's bash:
```
./cleanup.sh
```
![image|446x58](upload://8rJ8CrLmXZKuwNidyRWqbxvrxkc.png)

since I don't want to over complicate things at this point, I'll use the test_canister
```
./deploy_test_canister.sh
```
![image|690x271](upload://96RMicmsa3IDmyyMupsqtouX1kN.png)
But the script failed when trying to install the wasm module, I thought it could be that the rust environment could not be set properly, but reading the logs from the setup and basic setup it should've been fine.

But then I tried again with the same script and it worked
![image|690x292](upload://qvFy4mlY8scg9EZryMeacnZKNqX.png)

gave control of the dapp to the NNS
```
./let_nns_control_dapp.sh
```
![image|690x146](upload://886icTkKDjplyhAGrmdTPmXnWz6.png)

submitted the NNS proposal to create the SNS for the test dapp
```
./propose_sns.sh
```
![image|690x183](upload://nFkNcVbukSeOLrTZE5z3h385Lrs.png)

As suggested, I waited around 30 minutes the for SNS instance in the [Launchpad] (http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080/launchpad) section of the NNS dapp.

But still getting errors
![image|690x335](upload://oq62IJp2uZS0pfr6iYw4B1gsy9Y.png)

At this point, I'm clueless on what to do next

-------------------------

mraszyk | 2024-05-21 18:50:17 UTC | #10

[quote="ohsalmeron, post:8, topic:30978"]
suggested I did it from the root of the sns-testing from the Linux environment (not from the bash inside the docker)
[/quote]

If you're using docker for sns-testing, then please execute calls to the SNS aggregator canister from within the docker.

-------------------------

mraszyk | 2024-05-21 18:57:09 UTC | #11

[quote="ohsalmeron, post:9, topic:30978"]
At this point, Iâ€™m clueless on what to do next
[/quote]

What I'd try to do is to hard refresh your browser and check the replica logs (`docker logs $SNS_TESTING_INSTANCE`) to see if the SNS aggregator is experiencing any difficulties - normally it should periodically log that it could successfully fetch SNSs and that it commits them to a json file (that the NNS-dapp tries to fetch).

-------------------------

ohsalmeron | 2024-05-21 19:07:21 UTC | #12

I did everything from within the docker bash, as shown in the screenshots and log

Here's the docker log
https://gist.github.com/ohsalmeron/46f48c28b3b5690841a5bd690b802dc5

it seems the replica crashed from start but somehow it executed the scripts just fine on the terminal

-------------------------

ohsalmeron | 2024-05-21 19:28:43 UTC | #13

Is there a way to run the sns-testing from source in Linux instead of the docker?

I'll start from scratch on Mac following the readme steps and post them here, but last try I got the same results

-------------------------

mraszyk | 2024-05-21 19:31:15 UTC | #14

[quote="ohsalmeron, post:12, topic:30978"]
Hereâ€™s the docker log
[/quote]

I don't see the NNS proposal to create SNS in the logs. Did you make the NNS proposal to create SNS?

-------------------------

mraszyk | 2024-05-21 19:32:29 UTC | #15

[quote="ohsalmeron, post:13, topic:30978"]
Is there a way to run the sns-testing from source in Linux instead of the docker?
[/quote]

Sure, you can clone the repository, run `./install.sh`, start `./bin/dfx start --clean`, run `./setup_locally.sh`, and then `./run_basic_scenario.sh`. On Linux, this should all work natively.

-------------------------

ohsalmeron | 2024-05-21 19:38:26 UTC | #16

getting same replica errors in mac, but the replica still initialises with the dashboard
https://gist.github.com/ohsalmeron/04a1bcc32c8b9fe5560396bd4d9f97b6

-------------------------

ohsalmeron | 2024-05-21 19:47:40 UTC | #18

Same on Linux, it crashes from start on a new cloned folder

```

[bizkit@archlinux sns-testing]$ ./bin/dfx start --clean
Running dfx start for version 0.19.0
Using shared network 'local' defined in /home/bizkit/.config/dfx/networks.json
2024-05-21T19:44:18.292994Z ERROR icx_proxy_dev: Runtime crashed
Error: Runtime crashed

Caused by:
    0: fail to fetch root key for http://localhost:8000/
    1: An error happened during communication with the replica: error trying to connect: tcp connect error: Connection refused (os error 111)
2024-05-21T19:44:20.458618Z ERROR icx_proxy_dev: Runtime crashed
Error: Runtime crashed

Caused by:
    0: fail to fetch root key for http://localhost:8000/
    1: An error happened during communication with the replica: error trying to connect: tcp connect error: Connection refused (os error 111)
Initialized replica.
Dashboard: http://localhost:8000/_/dashboard
```

There's something about the neworks.json that isn't working on the sns-testing setup, but I can use dfx locally without any problem with other dfx projects/canisters

-------------------------

ohsalmeron | 2024-05-21 19:58:51 UTC | #19

my networks.json
![image|690x182](upload://etgyNK34XjUyzkzPIqOYWUyxxXV.png)
![image|690x315](upload://5vTUtnVTeDcX9nd9wEinBj5JnUg.png)

-------------------------

ohsalmeron | 2024-05-21 20:14:35 UTC | #20

actually there's something wrong with dfx networks.json since I installed dfxvm

I was using 0.16.1 before and it was all fine

but now I can't even use that version
![image|690x297](upload://xn7OJOToAItMuSPG3FiHg5TOziH.png)

-------------------------

mraszyk | 2024-05-22 05:21:52 UTC | #21

I'm successfully using this networks.json with dfxvm on a Linux machine:
```
{
  "local": {
    "bind": "127.0.0.1:8080",
    "type": "ephemeral",
    "replica": {
      "subnet_type": "system"
    }
  }
}
````

-------------------------

mraszyk | 2024-05-22 05:23:28 UTC | #22

I could reproduce your issue if I add `"port": 8000` to my json config. So you should be good to go if you omit that.

-------------------------

ohsalmeron | 2024-05-22 08:06:03 UTC | #23

nice, that networks.json config worked! after running the ./install.sh
![image|690x103](upload://ipFTJ76Xb1UDYQSw3d3xKn9gif3.png)

I followed up on another terminal window:

I ran the  ./setup_locally.sh script
got initial errors 
![image|622x66](upload://o4rOoRS5zROpTHmJfXZKjwQdcOg.png)
Here's the full log:
https://gist.github.com/ohsalmeron/44358f976e9a765c321f532163e02269

Then going back to the other window where dfx is running I get  these logs:
![image|690x319](upload://p5Ej96kUFH8GFrrkRfW5XyBc07e.png)
Sample
`2024-05-22 07:57:49.265844431 UTC: [Canister rrkah-fqaaa-aaaaa-aaaaq-cai] [Governance] Error when refreshing XDR rate in run_periodic_tasks: External: Error calling 'get_average_icp_xdr_conversion_rate': code: Some(5), message: IC0503: Canister rkp4c-7iaaa-aaaaa-aaaca-cai trapped explicitly: Panicked at 'average_icp_xdr_conversion_rate is not set', rs/nns/cmc/src/main.rs:908:14`

This error keeps cycling constantly, it doesn't stop

Are you getting the same error after running ./setup_locally.sh ?

-------------------------

ohsalmeron | 2024-05-22 08:19:02 UTC | #24

same on mac
![image|690x435](upload://l29IDdCoCktdm3ESu3b5iy46dJa.png)
nns and sns already installed
and console shows same xdr error
![image|690x313](upload://vmAb4OlaFTRmpIGqJ33Kl9cS6dA.png)

-------------------------

ohsalmeron | 2024-05-22 08:28:54 UTC | #25

Because the readme instructions state that the networks.json should have this config
![image|633x500](upload://pDFXf9GTKhHMu2kGdYzcRH2jbIO.png)

But it isn't working

-------------------------

mraszyk | 2024-05-22 11:25:42 UTC | #26

The error that the `nns` and `sns` extensions are already installed is expected and harmless. Same applies to the error concerning XDR rate which should disappear if you `./run_basic_scenario.sh` as setting the XDR rate is one of the first steps in running a basic scenario.

-------------------------

mraszyk | 2024-05-22 11:28:38 UTC | #27

The port option from the README has been tested with the dfx version (v0.19.0) pinned in the Dockerfile and without using dfxvm (the `install.sh` script downloads `dfx` binary of the respective version directly). You should keep using it inside the Docker container, but you don't need it if you run dfx natively (i.e., not inside the Docker container).

-------------------------

ohsalmeron | 2024-05-22 15:35:50 UTC | #28

makes sense, now after running the basic scenario script I get this

Not all dapp canisters are controlled by the NNS root canister.
Use `sns prepare-canisters add-nns-root` to make the necessary changes.
Defective canisters (1 out of 1):
  - bkyz2-fmaaa-aaaaa-qaaaq-cai

Here's the full log
https://gist.github.com/ohsalmeron/e8ed09a82ab6014ae215cc17df5e0161

I'm using the dfx 0.19.0 binary file from the sns-testing folder 
![image|690x103](upload://cITzhgtvcTRJonO3gUj5OyFOfzS.png)
Please note that the Dashboard has a different port from what the docker or mac instructions should have, not sure if that affects (since I updated the networks.json like the one you provided)
![image|690x305](upload://BSiKemGlI6Ke46ULIo243d9Pbg.png)

-------------------------

mraszyk | 2024-05-22 19:50:05 UTC | #29

The issue is this
```
jq: parse error: Invalid numeric literal at line 1, column 6
```
thrown by the script `./let_nns_control_dapp.sh`. Could you please share you `sns_init.yaml` file? If in doubt, you can add `dfx sns prepare-canisters add-nns-root <canister-id>` to `run_basic_scenario.sh` right after `./let_nns_control_dapp.sh`.

-------------------------

ohsalmeron | 2024-05-22 20:59:14 UTC | #30

Yes, I'm using the default sns_init.yaml from the folder
https://github.com/dfinity/sns-testing/blob/main/sns_tokenomics_analyzer/sns_init.yaml

Also using, and following instructions for the test canister on the readme (instead of our own canisters)

-------------------------

mraszyk | 2024-05-23 05:08:33 UTC | #31

If you're running the scripts natively without docker, you might need to install `yq`:
```
# Install yq. We use it to read YAML file(s).
YQ_VERSION=v4.34.1
curl \
    --location \
    https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_386 \
    --output /usr/bin/yq \
    && chmod +x /usr/bin/yq
```

-------------------------

mraszyk | 2024-05-23 05:10:08 UTC | #32

[quote="ohsalmeron, post:13, topic:30978"]
Is there a way to run the sns-testing from source in Linux instead of the docker?
[/quote]

What's the reason you're trying to run sns-testing directly instead of via docker?

-------------------------

ohsalmeron | 2024-05-23 16:56:26 UTC | #33

Our canisters use vessel, mops and other libraries that might conflict with a docker instance to begin with, although I haven't even tried for now I just want to be able to explore the sns-testing and catch up with how we are going to make proposals and upgrade canisters

Here's the open source code for the canisters
https://github.com/worldofunreal/cosmicrafts-motoko-backend

-------------------------

ohsalmeron | 2024-05-23 16:58:57 UTC | #34

![image|667x319](upload://wWRWGLeqtL4ra6W5TyvD1PpOFTO.png)
Already had yq installed and scripts are running but somehow I get into random errors
what distro of linux are you using for testing? I'll give it a try

-------------------------

mraszyk | 2024-05-23 17:22:13 UTC | #35

[quote="ohsalmeron, post:34, topic:30978"]
what distro of linux are you using for testing
[/quote]

I'm using ubuntu 22.04.4 LTS

-------------------------

ohsalmeron | 2024-05-24 03:59:51 UTC | #36

I'm still getting this jq error also on the  ./run_basic_scenario.sh
```
jq: parse error: Invalid numeric literal at line 1, column 6

```
I was checking the script what jq was doing
![image|684x135](upload://8Z3JxMjDEdKuzg7sGXnsikQD51X.png)

And I couldn't find any sns_canister_ids.json on the project folder, is this supposed to come with the sns-testing or how is this file created before executing the ./run_basic_scenario.sh?

Could this error be related to the resolver workspace warning beforehand?
![image|690x196](upload://2oD5pbVjRThHnS2Olw8fizJr8no.png)


Additionally just for the record, on Ubuntu I get an error about the Payload being too large, probably because I'm running a virtual machine, probably I would need to have it physically installed.
![image|690x411](upload://oST9aTLp5CIV6bFUT4W0wjgvTnP.jpeg)

-------------------------

ohsalmeron | 2024-05-24 05:22:47 UTC | #37

Quick update, the sns-testing docker image has been updated yesterday and it runs smooth all the bootstrapping steps

-Starts a local replica instance
-Runs setup_locally.sh
-Runs run_basic_scenario.sh
![image|690x147](upload://qsE72odzoc6pKyliQ3CDVNg5zxP.png)

But the problem with the nns frontend app persists even after running the basic scenario and waited for the info to update
Even after running
```
dfx canister call sns_aggregator reconfigure '(opt record { update_interval_ms = 100; fast_interval_ms = 1_000_000_000; })'
```
So when I try to test the local nns, I'm still getting these errors
`http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080/`
![image|690x353](upload://fK3p6MnoQpSkjeUkFkvmozFmBQo.png)

-------------------------

mraszyk | 2024-05-24 08:15:12 UTC | #38

> And I couldnâ€™t find any sns_canister_ids.json on the project folder, is this supposed to come with the sns-testing or how is this file created before executing the ./run_basic_scenario.sh?

The `sns_canister_ids.json` file is created by `propose_sns.sh`.

> Could this error be related to the resolver workspace warning beforehand?

No, the resolver workspace warning is harmless.

> Additionally just for the record, on Ubuntu I get an error about the Payload being too large

This is because you're targetting an application subnet. Your `networks.json` file should look like this

```
$ cat ~/.config/dfx/networks.json 
{ 
  "local": { 
    "bind": "127.0.0.1:8080", 
    "type": "ephemeral", 
    "replica": { 
      "subnet_type": "system"
    } 
  } 
}
```

to avoid the too large payload error.

> But the problem with the nns frontend app persists even after running the basic scenario and waited for the info to update

I could reproduce the error and I've created an [MR](https://github.com/dfinity/sns-testing/pull/71) that bumps the sns aggregator version and reconfigures the sns aggregator as part of the sns-testing setup and successfully tested that.

-------------------------

mraszyk | 2024-05-24 08:16:01 UTC | #39

Note that the reconfiguration argument should be `'(opt record { update_interval_ms = 1000:nat64; fast_interval_ms = 100:nat64; })'` with explicit types (otherwise, the integer literals might not be interpreted as `nat64`).

-------------------------

ohsalmeron | 2024-05-24 19:25:50 UTC | #40

Thanks for the update,

Now, I'm still getting the jq error, if you could please help me fix it.

Here's the log until the error
(Note that this script has been run after ./install.sh, sns-testing]$ ./bin/dfx start --clean, and ./setup_locally.sh on Linux local environment

Also I added the yq and jq packages and even quill to the environment.

```
[bizkit@archlinux sns-testing]$ ./run_basic_scenario.sh
Using identity: "default".
Setting ICP/XDR conversion rate to 10000 ...
Using NNS URLs: ["http://localhost:44975/"]
Title: Updating Xdr/Icp conversion rate to 10000

Summary: Set ICP/XDR conversion rate to 10000

Payload: UpdateIcpXdrConversionRatePayload {
    data_source: "IC admin",
    timestamp_seconds: 1716577813,
    xdr_permyriad_per_icp: 10000,
    reason: None,
}
submit_proposal for Updating Xdr/Icp conversion rate to 10000 response: Ok(proposal 9)
proposal 9
Using identity: "default".
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  645k  100  645k    0     0   416k      0  0:00:01  0:00:01 --:--:-- 1028k
Using identity: "default".
Creating canister test...
test canister created with canister id: bkyz2-fmaaa-aaaaa-qaaaq-cai
Installing code for canister test, with canister ID bkyz2-fmaaa-aaaaa-qaaaq-cai
warning: virtual workspace defaulting to `resolver = "1"` despite one or more workspace members being on edition 2021 which implies `resolver = "2"`
note: to keep the current resolver, specify `workspace.resolver = "1"` in the workspace root's manifest
note: to use the edition 2021 resolver, specify `workspace.resolver = "2"` in the workspace root's manifest
note: for more details see https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
OK
Using identity: "default".
Using identity: "default".
jq: parse error: Invalid numeric literal at line 1, column 6
```

and then it ends up like this

```
Importing /home/bizkit/sns-testing/candid/sns_root.did from https://raw.githubusercontent.com/dfinity/ic/fda260e972c03a580be1119d6c2868e30171be02/rs/sns/root/canister/root.did
sns_root has no canister id for network 'ic'
Importing canister 'sns_swap' as 'sns_swap'
Importing /home/bizkit/sns-testing/candid/sns_swap.did from https://raw.githubusercontent.com/dfinity/ic/fda260e972c03a580be1119d6c2868e30171be02/rs/sns/swap/canister/swap.did
sns_swap has no canister id for network 'ic'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 25845  100 25845    0     0   207k      0 --:--:-- --:--:-- --:--:--  208k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 17373  100 17373    0     0   149k      0 --:--:-- --:--:-- --:--:--  150k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    14  100    14    0     0     71      0 --:--:-- --:--:-- --:--:--    71
Not all dapp canisters are controlled by the NNS root canister.
Use `sns prepare-canisters add-nns-root` to make the necessary changes.
Defective canisters (1 out of 1):
  - bkyz2-fmaaa-aaaaa-qaaaq-cai
[bizkit@archlinux sns-testing]$ 
```

For what I understand on your previous response `propose_sns.sh` . creates the sns_canister_ids.json but for some reason, it is not creating it or maybe not on time, but at the same time when running the basic scenario on docker it works.

My guesses are

1- My Linux environment doesn't have all the required packages for the scripts to run properly (maybe there's something about my rust installation because on the docker it downloads libraries instead of the jq error)
2- The time execution of the script runs different on the github project than the docker
3- the Docker version of the sns-testing folder is different than the github project

-------------------------

ohsalmeron | 2024-05-24 20:07:33 UTC | #41

I tried the **docker** setup again with a basic scenario successfully finished, and still getting errors on the nns frontend app
![image|690x353](upload://5o5YP011KDzGJcIeeFeBlhYN41d.png)

Even after calling 

`dfx canister call sns_aggregator reconfigure '(opt record { update_interval_ms = 1000:nat64; fast_interval_ms = 100:nat64; })'`

![image|690x467](upload://3lsiBAgUQSm6Rbs1YqzfLJQOQrO.png)

-------------------------

ohsalmeron | 2024-05-24 20:11:26 UTC | #42

same on mac 
![image|690x431](upload://84t59JYOnXYM7EJxMSaPiZI6EWU.jpeg)

-------------------------

mraszyk | 2024-05-24 20:56:28 UTC | #43

Are you using the latest master commit (cf5ea71ff179db1d26f3a354e34abf9c3b25072d) of sns-testing and the latest docker container for that commit?

Regarding the jq error, it might also be coming from `let_nns_control_dapp.sh`. Could you please a fresh checkout of the repository to make sure your experiments are not affected by files lying around from past runs?

-------------------------

ohsalmeron | 2024-05-24 22:16:33 UTC | #44

for local testing (a few hours ago) I used  the following command, which should've downloaded the last master commit right?
git clone https://github.com/dfinity/sns-testing.git

And for the docker image, I'm still using the command on the README
```
SNS_TESTING_INSTANCE=$(
   docker run -p 8000:8000 -p 8080:8080 -v "`pwd`":/dapp -d ghcr.io/dfinity/sns-testing:main dfx start --clean
)
while ! docker logs $SNS_TESTING_INSTANCE 2>&1 | grep -m 1 'Dashboard:'
do
   echo "Awaiting local replica ..."
   sleep 3
done
```

Which I think should have the latest commit as well
![image|690x341](upload://hU9QJrZDRTh3s9TKWKxpIIcbmhm.png)


So overall, with the newer versions everything seem to be working except for the errors on the local NNS frontend dapp mentioned above.
`http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080`

Not sure why, I just can't get the local nns functional

-------------------------

mraszyk | 2024-05-25 06:03:27 UTC | #45

[quote="ohsalmeron, post:44, topic:30978"]
everything seem to be working
[/quote]

Could you please check if you see an NNS proposal to create an SNS in the "Voting" tab of the NNS dapp. If you see the SNS aggregator errors, then I suspect the NNS proposal to create an SNS was not submitted.

-------------------------

ohsalmeron | 2024-05-25 22:25:09 UTC | #46

Sure, I was checking again the local NNS and there's nothing I can really do, it throws errors on every section.
![image|690x352](upload://bBTUWDhvTzuE4ZUKzlnX8lSKl2Q.png)

I don't see any aggregator errors when running the scripts but I did a full log of all the process.

- First I used this command to log the docker instance
```
SNS_TESTING_INSTANCE=$(
   docker run -p 8000:8000 -p 8080:8080 -v "$(pwd)":/dapp -d ghcr.io/dfinity/sns-testing:main dfx start --clean --verbose
)

echo "Started SNS testing instance with ID: $SNS_TESTING_INSTANCE"
echo "Waiting for local replica to be ready..."

while ! docker logs $SNS_TESTING_INSTANCE 2>&1 | grep -m 1 'Dashboard:'
do
   echo "Awaiting local replica ..."
   sleep 3
done

echo "Local replica is ready!"

# Continue displaying logs
docker logs -f $SNS_TESTING_INSTANCE
```

It seems that the icx_proxy_dev crashes after starting the replica
![image|690x95](upload://a9cxudIO8DwudhmTpPpndPEKUEw.png)

The error message `fail to fetch root key for http://localhost:8000/` and `tcp connect error: Connection refused (os error 111)` indicates that the `icx-proxy` is having trouble connecting to the replica, which suggests that the replica might not be starting correctly or is not listening on the expected port.

But checking the logs the icx_proxy_dev works but forwards to different ports on each command

Here's the full log of the docker instance / dfx
`https://gist.github.com/ohsalmeron/75d8ee10e5bd5533a18453a10955d8f2`

And here's the full log of the scripts executing:
`https://gist.github.com/ohsalmeron/87e0722a3ddaa4cd305852c39c4c477d`

It seems that the ic instance is working because scripts run and neurons can vote, but somehow the local nns frontend is not working

Let me know what you see in the logs that can be fixed to make the local nns frontend to work

-------------------------

jamesbeadle | 2024-05-25 22:30:47 UTC | #47

Hey man,

I've been where you are.

Not sure if it helps but I run the local NNS for OpenFPL. I couldn't really get it to work with docker so I do it all outside but still using the sns-testing repo. But I do have instructions on my readme of how to setup OpenFPL using the sns-testing repo, you could maybe take a look:

https://github.com/jamesbeadle/OpenFPL

It's long, but it works.

-------------------------

mraszyk | 2024-05-26 06:45:17 UTC | #48

I've just executed the following:
```
$ SNS_TESTING_INSTANCE=$(
   docker run -p 8000:8000 -p 8080:8080 -v "$(pwd)":/dapp -d ghcr.io/dfinity/sns-testing:main dfx start --clean --verbose
)

echo "Started SNS testing instance with ID: $SNS_TESTING_INSTANCE"
echo "Waiting for local replica to be ready..."

while ! docker logs $SNS_TESTING_INSTANCE 2>&1 | grep -m 1 'Dashboard:'
do
   echo "Awaiting local replica ..."
   sleep 3
done

echo "Local replica is ready!"
Unable to find image 'ghcr.io/dfinity/sns-testing:main' locally
main: Pulling from dfinity/sns-testing
4a023cab5400: Pull complete 
650cd2eb3230: Pull complete 
566d09eb7cc4: Pull complete 
0feb542f1cf5: Pull complete 
d341a0aaa85f: Pull complete 
417ed1df798f: Pull complete 
c37c72253b43: Pull complete 
21ad99d2938d: Pull complete 
2dd3f30db8e6: Pull complete 
c4d85035a03c: Pull complete 
bf4955bfde3e: Pull complete 
Digest: sha256:8386a75c1df880d467289d4349f4a3fa10111d183e752a725a3665395889fced
Status: Downloaded newer image for ghcr.io/dfinity/sns-testing:main
Started SNS testing instance with ID: aca4e0ea01f7a6ff9be35d17132444d6ab160efcd1e10b41844c1c1a441164d3
Waiting for local replica to be ready...
Awaiting local replica ...
Awaiting local replica ...
Dashboard: http://localhost:8000/_/dashboard
Local replica is ready!
```
and then
```
$ docker exec -it $SNS_TESTING_INSTANCE bash setup_locally.sh
...
$ docker exec $SNS_TESTING_INSTANCE bash run_basic_scenario.sh
...
```
Once I saw
```
ðŸš€ Success!
Message from NNS governance: "The proposal has been created successfully."
Proposal ID: 10
```
in the output, I refreshed `http://qsgjb-riaaa-aaaaa-aaaga-cai.localhost:8080/launchpad/` a few times until I saw (within a few seconds):
![Screenshot from 2024-05-26 08-40-05|690x346](upload://bGt4sHlKcHxl6dJxRe69rYvu4J7.png)

That's the (latest) docker image I'm using:
```
$ docker images
REPOSITORY                    TAG       IMAGE ID       CREATED        SIZE
ghcr.io/dfinity/sns-testing   main      2cff1d861536   42 hours ago   3.22GB
```
I'm using
```
$ docker --version
Docker version 26.1.3, build b72abbb
```
on `Ubuntu 22.04.4 LTS`.

-------------------------

mraszyk | 2024-05-26 06:48:07 UTC | #49

> I do it all outside but still using the sns-testing repo

I could successfully run sns-testing without docker, too, but it is more involved as, e.g., this
```
echo '{
   "local": {
      "bind": "0.0.0.0:8080",
      "type": "ephemeral",
      "replica": {
         "subnet_type": "system",
         "port": 8000
      }
   }
}' > "${DX_NET_JSON}"
```
in the file `run_local_setup.sh` won't really work with the latest `dfx`. In general, the advantage of the docker solution is that all dependencies are uniquely pinned.

-------------------------

mraszyk | 2024-05-26 06:51:27 UTC | #50

[quote="ohsalmeron, post:46, topic:30978"]
Let me know what you see in the logs that can be fixed to make the local nns frontend to work
[/quote]

I don't see anything suspicious in the logs - the icx-proxy errors are fine since it takes some time for the replica to come up and you could see errors in the meantime.

-------------------------

ohsalmeron | 2024-05-26 20:01:28 UTC | #51

Hey James,

Yeah you know that feeling too lol,

It does help, I was trying OpenFPL repo a few weeks ago when I started running into errors with the sns-testing, but I messed up my networks.json and I couldn't make it work, I'll give it a another try asap.

Thanks bud, I'll be posting my progress around here

-------------------------

ohsalmeron | 2024-05-26 20:35:47 UTC | #52

Oh well, I found the problem, its me using Brave Browser

![image|690x370](upload://gbEfNnQ1ZqrTSJLovApMu5bvJus.png)

Tested and working on Chrome, Firefox, Chromium, Edge, Opera, Vivaldi

To make it work on Brave you have to turn the shields down on the lion icon
![image|690x352](upload://bV8ciV679rJ1klmuD39V8uEqQto.png)

-------------------------

ohsalmeron | 2024-05-27 19:06:14 UTC | #53

Another finding is that yq version of Archlinux won't work with the scripts, instead I had to use the go-yq version in order to be able export sns_canister_ids.json

Also bc (basic calculator is required to run ./participate_sns_swap.sh)
Some dependencies are included on the core-utils for mac but not all linux distros come with it

-------------------------

ohsalmeron | 2024-05-28 10:18:44 UTC | #54

I tried OpenFPL and it works, the only problem I ran into was that after the sns sale it didn't show up on the nns, it was crazy because I could see the project on the nns frontend while the neurons were contributing but then after finished it disappeared.

I can even mint FPL tokens to the local internet identity principal, but then I have no way to create an FPL neuron on the NNS to vote on the proposals

Have you had the same issue?

-------------------------

jamesbeadle | 2024-05-28 12:15:46 UTC | #55

Yeah man try updating the sns init to be only 10 participants, not 100, could be that.

-------------------------

jamesbeadle | 2024-05-28 12:16:42 UTC | #56

I'll update the github, but the sale was 100 but I use 10 now just for speed as watching 100 people participate is long

-------------------------

