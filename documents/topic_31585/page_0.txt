peterparker | 2024-06-06 04:54:10 UTC | #1

I'm not sure about mainnet, but locally, the latest version of the replica trap message includes the text: "Canister called `ic0.trap` with message:".

For example:

```
actor.js:204 Uncaught (in promise) Error: Call failed:
  Canister: by6od-j4aaa-aaaaa-qaadq-cai
  Method: list_docs (query)
  "Status": "rejected"
  "Code": "CanisterError"
  "Message": "IC0503: Error from Canister by6od-j4aaa-aaaaa-qaadq-cai: Canister called `ic0.trap` with message: Collection not found: notes"
```

Why's that?

I mean my canister is not named "ic0.trap", why does the trap message newly mention a canister called "ic0.trap"?

-------------------------

jasonzhu | 2024-06-06 06:55:24 UTC | #2

Itâ€™s likely that the ic0.trap refers to the system api: https://internetcomputer.org/docs/current/references/ic-interface-spec#system-api-imports, not a canister

-------------------------

peterparker | 2024-06-06 07:02:10 UTC | #3

In that case, maybe the message should be rephrased as it is a bit misleading if it's not a canister?

Or perhaps this new message should just be removed? I'm not sure what additional value this message provides for developers, at least from my perspective.

-------------------------

peterparker | 2024-06-06 09:30:21 UTC | #4

Or, maybe the message comes from agent-js?

One way or another, unless there is a good reason, this message feels like something that needs to be improved.

-------------------------

dsarlis | 2024-06-06 11:22:29 UTC | #5

Canisters call system API calls too, not only other canisters. The error message is indeed trying to tell you that your canister called the `ic0.trap` system API (I think it's super clear, there's no other set of APIs namespaced by `ic0` and no canisters like that afaik), which means that your canister trapped explicitly by calling the respective system API.

There's some work to improve the error messages in general which would also add some doc links. Probably with that it would be even clearer because I'd imagine we'd link to the interface spec where the `ic0.trap` call is defined.

-------------------------

peterparker | 2024-06-06 11:35:44 UTC | #6

Thanks for the feedback. Even if it were clear and included a link, I think such a message, which was not there in the past, actually adds noise.

As a developer building my own project on the IC, I was looking to make an update call through agent-js to a particular endpoint of my own canister. The error happened because my own function trapped, meaning the `trap` function I implemented trapped as expected. In this context, receiving an error message stating that the `ic0.trap` system API trapped felt totally unrelated to me.

My JS function, my canister, my endpoint, my trap, but a third-party error message.

Note that I'm not arguing, just trying to explain why I was surprised. At the end of the day, I don't really care about it, and I guess I'm probably the only one who noticed it, so be it.

-------------------------

dsarlis | 2024-06-06 11:38:53 UTC | #7

[quote="peterparker, post:6, topic:31585"]
Even if it were clear and included a link, I think such a message, which was not there in the past, actually adds noise.
[/quote]

Pretty sure it's always been there :) We haven't changed this in a veryyyy long time.

> My JS function, my canister, my endpoint, my trap, but a third-party error message.

I'm confused. What's the third party here? The message is telling you the precise reason your call failed: the canister called the trap system API. If that's the expected behaviour (because as you said you wrote the function/canister), then even better right? The error message confirms what you would expect to happen if you expect your canister to trap for the given input.

-------------------------

peterparker | 2024-06-06 11:39:57 UTC | #8

Not worth discussing further Dimitris. Thanks for your feedback.

-------------------------

